var __wxAppData = {};
var __wxRoute;
var __wxRouteBegin;
var __wxAppCode__ = {};
var global = {};
var __wxAppCurrentFile__;
if(typeof __WXML_GLOBAL__ !== 'undefined'){
  delete __WXML_GLOBAL__.ops_cached//remove ops_cached(v8 下会有 cache)
}
// var Component = Component || function() {};
// var definePlugin = definePlugin || function() {};
// var requirePlugin = requirePlugin || function() {};
// var Behavior = Behavior || function() {};
var $gwx;
  
/*v0.5vv_20190703_syb_scopedata*/global.__wcc_version__='v0.5vv_20190703_syb_scopedata';global.__wcc_version_info__={"customComponents":true,"fixZeroRpx":true,"propValueDeepCopy":false};
var $gwxc
var $gaic={}
$gwx=function(path,global){
if(typeof global === 'undefined') global={};if(typeof __WXML_GLOBAL__ === 'undefined') {__WXML_GLOBAL__={};
}__WXML_GLOBAL__.modules = __WXML_GLOBAL__.modules || {};
function _(a,b){if(typeof(b)!='undefined')a.children.push(b);}
function _v(k){if(typeof(k)!='undefined')return {tag:'virtual','wxKey':k,children:[]};return {tag:'virtual',children:[]};}
function _n(tag){$gwxc++;if($gwxc>=16000){throw 'Dom limit exceeded, please check if there\'s any mistake you\'ve made.'};return {tag:'wx-'+tag,attr:{},children:[],n:[],raw:{},generics:{}}}
function _p(a,b){b&&a.properities.push(b);}
function _s(scope,env,key){return typeof(scope[key])!='undefined'?scope[key]:env[key]}
function _wp(m){console.warn("WXMLRT_$gwx:"+m)}
function _wl(tname,prefix){_wp(prefix+':-1:-1:-1: Template `' + tname + '` is being called recursively, will be stop.')}
$gwn=console.warn;
$gwl=console.log;
function $gwh()
{
function x()
{
}
x.prototype = 
{
hn: function( obj, all )
{
if( typeof(obj) == 'object' )
{
var cnt=0;
var any1=false,any2=false;
for(var x in obj)
{
any1=any1|x==='__value__';
any2=any2|x==='__wxspec__';
cnt++;
if(cnt>2)break;
}
return cnt == 2 && any1 && any2 && ( all || obj.__wxspec__ !== 'm' || this.hn(obj.__value__) === 'h' ) ? "h" : "n";
}
return "n";
},
nh: function( obj, special )
{
return { __value__: obj, __wxspec__: special ? special : true }
},
rv: function( obj )
{
return this.hn(obj,true)==='n'?obj:this.rv(obj.__value__);
},
hm: function( obj )
{
if( typeof(obj) == 'object' )
{
var cnt=0;
var any1=false,any2=false;
for(var x in obj)
{
any1=any1|x==='__value__';
any2=any2|x==='__wxspec__';
cnt++;
if(cnt>2)break;
}
return cnt == 2 && any1 && any2 && (obj.__wxspec__ === 'm' || this.hm(obj.__value__) );
}
return false;
}
}
return new x;
}
wh=$gwh();
function $gstack(s){
var tmp=s.split('\n '+' '+' '+' ');
for(var i=0;i<tmp.length;++i){
if(0==i) continue;
if(")"===tmp[i][tmp[i].length-1])
tmp[i]=tmp[i].replace(/\s\(.*\)$/,"");
else
tmp[i]="at anonymous function";
}
return tmp.join('\n '+' '+' '+' ');
}
function $gwrt( should_pass_type_info )
{
function ArithmeticEv( ops, e, s, g, o )
{
var _f = false;
var rop = ops[0][1];
var _a,_b,_c,_d, _aa, _bb;
switch( rop )
{
case '?:':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && ( wh.hn(_a) === 'h' );
_d = wh.rv( _a ) ? rev( ops[2], e, s, g, o, _f ) : rev( ops[3], e, s, g, o, _f );
_d = _c && wh.hn( _d ) === 'n' ? wh.nh( _d, 'c' ) : _d;
return _d;
break;
case '&&':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && ( wh.hn(_a) === 'h' );
_d = wh.rv( _a ) ? rev( ops[2], e, s, g, o, _f ) : wh.rv( _a );
_d = _c && wh.hn( _d ) === 'n' ? wh.nh( _d, 'c' ) : _d;
return _d;
break;
case '||':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && ( wh.hn(_a) === 'h' );
_d = wh.rv( _a ) ? wh.rv(_a) : rev( ops[2], e, s, g, o, _f );
_d = _c && wh.hn( _d ) === 'n' ? wh.nh( _d, 'c' ) : _d;
return _d;
break;
case '+':
case '*':
case '/':
case '%':
case '|':
case '^':
case '&':
case '===':
case '==':
case '!=':
case '!==':
case '>=':
case '<=':
case '>':
case '<':
case '<<':
case '>>':
_a = rev( ops[1], e, s, g, o, _f );
_b = rev( ops[2], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) === 'h' || wh.hn( _b ) === 'h');
switch( rop )
{
case '+':
_d = wh.rv( _a ) + wh.rv( _b );
break;
case '*':
_d = wh.rv( _a ) * wh.rv( _b );
break;
case '/':
_d = wh.rv( _a ) / wh.rv( _b );
break;
case '%':
_d = wh.rv( _a ) % wh.rv( _b );
break;
case '|':
_d = wh.rv( _a ) | wh.rv( _b );
break;
case '^':
_d = wh.rv( _a ) ^ wh.rv( _b );
break;
case '&':
_d = wh.rv( _a ) & wh.rv( _b );
break;
case '===':
_d = wh.rv( _a ) === wh.rv( _b );
break;
case '==':
_d = wh.rv( _a ) == wh.rv( _b );
break;
case '!=':
_d = wh.rv( _a ) != wh.rv( _b );
break;
case '!==':
_d = wh.rv( _a ) !== wh.rv( _b );
break;
case '>=':
_d = wh.rv( _a ) >= wh.rv( _b );
break;
case '<=':
_d = wh.rv( _a ) <= wh.rv( _b );
break;
case '>':
_d = wh.rv( _a ) > wh.rv( _b );
break;
case '<':
_d = wh.rv( _a ) < wh.rv( _b );
break;
case '<<':
_d = wh.rv( _a ) << wh.rv( _b );
break;
case '>>':
_d = wh.rv( _a ) >> wh.rv( _b );
break;
default:
break;
}
return _c ? wh.nh( _d, "c" ) : _d;
break;
case '-':
_a = ops.length === 3 ? rev( ops[1], e, s, g, o, _f ) : 0;
_b = ops.length === 3 ? rev( ops[2], e, s, g, o, _f ) : rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) === 'h' || wh.hn( _b ) === 'h');
_d = _c ? wh.rv( _a ) - wh.rv( _b ) : _a - _b;
return _c ? wh.nh( _d, "c" ) : _d;
break;
case '!':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) == 'h');
_d = !wh.rv(_a);
return _c ? wh.nh( _d, "c" ) : _d;
case '~':
_a = rev( ops[1], e, s, g, o, _f );
_c = should_pass_type_info && (wh.hn( _a ) == 'h');
_d = ~wh.rv(_a);
return _c ? wh.nh( _d, "c" ) : _d;
default:
$gwn('unrecognized op' + rop );
}
}
function rev( ops, e, s, g, o, newap )
{
var op = ops[0];
var _f = false;
if ( typeof newap !== "undefined" ) o.ap = newap;
if( typeof(op)==='object' )
{
var vop=op[0];
var _a, _aa, _b, _bb, _c, _d, _s, _e, _ta, _tb, _td;
switch(vop)
{
case 2:
return ArithmeticEv(ops,e,s,g,o);
break;
case 4: 
return rev( ops[1], e, s, g, o, _f );
break;
case 5: 
switch( ops.length )
{
case 2: 
_a = rev( ops[1],e,s,g,o,_f );
return should_pass_type_info?[_a]:[wh.rv(_a)];
return [_a];
break;
case 1: 
return [];
break;
default:
_a = rev( ops[1],e,s,g,o,_f );
_b = rev( ops[2],e,s,g,o,_f );
_a.push( 
should_pass_type_info ?
_b :
wh.rv( _b )
);
return _a;
break;
}
break;
case 6:
_a = rev(ops[1],e,s,g,o);
var ap = o.ap;
_ta = wh.hn(_a)==='h';
_aa = _ta ? wh.rv(_a) : _a;
o.is_affected |= _ta;
if( should_pass_type_info )
{
if( _aa===null || typeof(_aa) === 'undefined' )
{
return _ta ? wh.nh(undefined, 'e') : undefined;
}
_b = rev(ops[2],e,s,g,o,_f);
_tb = wh.hn(_b) === 'h';
_bb = _tb ? wh.rv(_b) : _b;
o.ap = ap;
o.is_affected |= _tb;
if( _bb===null || typeof(_bb) === 'undefined' || 
_bb === "__proto__" || _bb === "prototype" || _bb === "caller" ) 
{
return (_ta || _tb) ? wh.nh(undefined, 'e') : undefined;
}
_d = _aa[_bb];
if ( typeof _d === 'function' && !ap ) _d = undefined;
_td = wh.hn(_d)==='h';
o.is_affected |= _td;
return (_ta || _tb) ? (_td ? _d : wh.nh(_d, 'e')) : _d;
}
else
{
if( _aa===null || typeof(_aa) === 'undefined' )
{
return undefined;
}
_b = rev(ops[2],e,s,g,o,_f);
_tb = wh.hn(_b) === 'h';
_bb = _tb ? wh.rv(_b) : _b;
o.ap = ap;
o.is_affected |= _tb;
if( _bb===null || typeof(_bb) === 'undefined' || 
_bb === "__proto__" || _bb === "prototype" || _bb === "caller" ) 
{
return undefined;
}
_d = _aa[_bb];
if ( typeof _d === 'function' && !ap ) _d = undefined;
_td = wh.hn(_d)==='h';
o.is_affected |= _td;
return _td ? wh.rv(_d) : _d;
}
case 7: 
switch(ops[1][0])
{
case 11:
o.is_affected |= wh.hn(g)==='h';
return g;
case 3:
_s = wh.rv( s );
_e = wh.rv( e );
_b = ops[1][1];
if (g && g.f && g.f.hasOwnProperty(_b) )
{
_a = g.f;
o.ap = true;
}
else
{
_a = _s && _s.hasOwnProperty(_b) ? 
s : (_e && _e.hasOwnProperty(_b) ? e : undefined );
}
if( should_pass_type_info )
{
if( _a )
{
_ta = wh.hn(_a) === 'h';
_aa = _ta ? wh.rv( _a ) : _a;
_d = _aa[_b];
_td = wh.hn(_d) === 'h';
o.is_affected |= _ta || _td;
_d = _ta && !_td ? wh.nh(_d,'e') : _d;
return _d;
}
}
else
{
if( _a )
{
_ta = wh.hn(_a) === 'h';
_aa = _ta ? wh.rv( _a ) : _a;
_d = _aa[_b];
_td = wh.hn(_d) === 'h';
o.is_affected |= _ta || _td;
return wh.rv(_d);
}
}
return undefined;
}
break;
case 8: 
_a = {};
_a[ops[1]] = rev(ops[2],e,s,g,o,_f);
return _a;
break;
case 9: 
_a = rev(ops[1],e,s,g,o,_f);
_b = rev(ops[2],e,s,g,o,_f);
function merge( _a, _b, _ow )
{
var ka, _bbk;
_ta = wh.hn(_a)==='h';
_tb = wh.hn(_b)==='h';
_aa = wh.rv(_a);
_bb = wh.rv(_b);
for(var k in _bb)
{
if ( _ow || !_aa.hasOwnProperty(k) )
{
_aa[k] = should_pass_type_info ? (_tb ? wh.nh(_bb[k],'e') : _bb[k]) : wh.rv(_bb[k]);
}
}
return _a;
}
var _c = _a
var _ow = true
if ( typeof(ops[1][0]) === "object" && ops[1][0][0] === 10 ) {
_a = _b
_b = _c
_ow = false
}
if ( typeof(ops[1][0]) === "object" && ops[1][0][0] === 10 ) {
var _r = {}
return merge( merge( _r, _a, _ow ), _b, _ow );
}
else
return merge( _a, _b, _ow );
break;
case 10:
_a = rev(ops[1],e,s,g,o,_f);
_a = should_pass_type_info ? _a : wh.rv( _a );
return _a ;
break;
case 12:
var _r;
_a = rev(ops[1],e,s,g,o);
if ( !o.ap )
{
return should_pass_type_info && wh.hn(_a)==='h' ? wh.nh( _r, 'f' ) : _r;
}
var ap = o.ap;
_b = rev(ops[2],e,s,g,o,_f);
o.ap = ap;
_ta = wh.hn(_a)==='h';
_tb = _ca(_b);
_aa = wh.rv(_a);	
_bb = wh.rv(_b); snap_bb=$gdc(_bb,"nv_");
try{
_r = typeof _aa === "function" ? $gdc(_aa.apply(null, snap_bb)) : undefined;
} catch (e){
e.message = e.message.replace(/nv_/g,"");
e.stack = e.stack.substring(0,e.stack.indexOf("\n", e.stack.lastIndexOf("at nv_")));
e.stack = e.stack.replace(/\snv_/g," "); 
e.stack = $gstack(e.stack);	
if(g.debugInfo)
{
e.stack += "\n "+" "+" "+" at "+g.debugInfo[0]+":"+g.debugInfo[1]+":"+g.debugInfo[2];
console.error(e);
}
_r = undefined;
}
return should_pass_type_info && (_tb || _ta) ? wh.nh( _r, 'f' ) : _r;
}
}
else
{
if( op === 3 || op === 1) return ops[1];
else if( op === 11 ) 
{
var _a='';
for( var i = 1 ; i < ops.length ; i++ )
{
var xp = wh.rv(rev(ops[i],e,s,g,o,_f));
_a += typeof(xp) === 'undefined' ? '' : xp;
}
return _a;
}
}
}
function wrapper( ops, e, s, g, o, newap )
{
if( ops[0] == '11182016' )
{
g.debugInfo = ops[2];
return rev( ops[1], e, s, g, o, newap );
}
else
{
g.debugInfo = null;
return rev( ops, e, s, g, o, newap );
}
}
return wrapper;
}
gra=$gwrt(true); 
grb=$gwrt(false); 
function TestTest( expr, ops, e,s,g, expect_a, expect_b, expect_affected )
{
{
var o = {is_affected:false};
var a = gra( ops, e,s,g, o );
if( JSON.stringify(a) != JSON.stringify( expect_a )
|| o.is_affected != expect_affected )
{
console.warn( "A. " + expr + " get result " + JSON.stringify(a) + ", " + o.is_affected + ", but " + JSON.stringify( expect_a ) + ", " + expect_affected + " is expected" );
}
}
{
var o = {is_affected:false};
var a = grb( ops, e,s,g, o );
if( JSON.stringify(a) != JSON.stringify( expect_b )
|| o.is_affected != expect_affected )
{
console.warn( "B. " + expr + " get result " + JSON.stringify(a) + ", " + o.is_affected + ", but " + JSON.stringify( expect_b ) + ", " + expect_affected + " is expected" );
}
}
}

function wfor( to_iter, func, env, _s, global, father, itemname, indexname, keyname )
{
var _n = wh.hn( to_iter ) === 'n'; 
var scope = wh.rv( _s ); 
var has_old_item = scope.hasOwnProperty(itemname);
var has_old_index = scope.hasOwnProperty(indexname);
var old_item = scope[itemname];
var old_index = scope[indexname];
var full = Object.prototype.toString.call(wh.rv(to_iter));
var type = full[8]; 
if( type === 'N' && full[10] === 'l' ) type = 'X'; 
var _y;
if( _n )
{
if( type === 'A' ) 
{
var r_iter_item;
for( var i = 0 ; i < to_iter.length ; i++ )
{
scope[itemname] = to_iter[i];
scope[indexname] = _n ? i : wh.nh(i, 'h');
r_iter_item = wh.rv(to_iter[i]);
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y = _v(key);
_(father,_y);
func( env, scope, _y, global );
}
}
else if( type === 'O' ) 
{
var i = 0;
var r_iter_item;
for( var k in to_iter )
{
scope[itemname] = to_iter[k];
scope[indexname] = _n ? k : wh.nh(k, 'h');
r_iter_item = wh.rv(to_iter[k]);
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y = _v(key);
_(father,_y);
func( env,scope,_y,global );
i++;
}
}
else if( type === 'S' ) 
{
for( var i = 0 ; i < to_iter.length ; i++ )
{
scope[itemname] = to_iter[i];
scope[indexname] = _n ? i : wh.nh(i, 'h');
_y = _v( to_iter[i] + i );
_(father,_y);
func( env,scope,_y,global );
}
}
else if( type === 'N' ) 
{
for( var i = 0 ; i < to_iter ; i++ )
{
scope[itemname] = i;
scope[indexname] = _n ? i : wh.nh(i, 'h');
_y = _v( i );
_(father,_y);
func(env,scope,_y,global);
}
}
else
{
}
}
else
{
var r_to_iter = wh.rv(to_iter);
var r_iter_item, iter_item;
if( type === 'A' ) 
{
for( var i = 0 ; i < r_to_iter.length ; i++ )
{
iter_item = r_to_iter[i];
iter_item = wh.hn(iter_item)==='n' ? wh.nh(iter_item,'h') : iter_item;
r_iter_item = wh.rv( iter_item );
scope[itemname] = iter_item
scope[indexname] = _n ? i : wh.nh(i, 'h');
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y = _v(key);
_(father,_y);
func( env, scope, _y, global );
}
}
else if( type === 'O' ) 
{
var i=0;
for( var k in r_to_iter )
{
iter_item = r_to_iter[k];
iter_item = wh.hn(iter_item)==='n'? wh.nh(iter_item,'h') : iter_item;
r_iter_item = wh.rv( iter_item );
scope[itemname] = iter_item;
scope[indexname] = _n ? k : wh.nh(k, 'h');
var key = keyname && r_iter_item ? (keyname==="*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
_y=_v(key);
_(father,_y);
func( env, scope, _y, global );
i++
}
}
else if( type === 'S' ) 
{
for( var i = 0 ; i < r_to_iter.length ; i++ )
{
iter_item = wh.nh(r_to_iter[i],'h');
scope[itemname] = iter_item;
scope[indexname] = _n ? i : wh.nh(i, 'h');
_y = _v( to_iter[i] + i );
_(father,_y);
func( env, scope, _y, global );
}
}
else if( type === 'N' ) 
{
for( var i = 0 ; i < r_to_iter ; i++ )
{
iter_item = wh.nh(i,'h');
scope[itemname] = iter_item;
scope[indexname]= _n ? i : wh.nh(i,'h');
_y = _v( i );
_(father,_y);
func(env,scope,_y,global);
}
}
else
{
}
}
if(has_old_item)
{
scope[itemname]=old_item;
}
else
{
delete scope[itemname];
}
if(has_old_index)
{
scope[indexname]=old_index;
}
else
{
delete scope[indexname];
}
}

function _ca(o)
{ 
if ( wh.hn(o) == 'h' ) return true;
if ( typeof o !== "object" ) return false;
for(var i in o){ 
if ( o.hasOwnProperty(i) ){
if (_ca(o[i])) return true;
}
}
return false;
}
function _da( node, attrname, opindex, raw, o )
{
var isaffected = false;
var value = $gdc( raw, "", 2 );
if ( o.ap && value && value.constructor===Function ) 
{
attrname = "$wxs:" + attrname; 
node.attr["$gdc"] = $gdc;
}
if ( o.is_affected || _ca(raw) ) 
{
node.n.push( attrname );
node.raw[attrname] = raw;
}
node.attr[attrname] = value;
}
function _r( node, attrname, opindex, env, scope, global ) 
{
global.opindex=opindex;
var o = {}, _env;
var a = grb( z[opindex], env, scope, global, o );
_da( node, attrname, opindex, a, o );
}
function _rz( z, node, attrname, opindex, env, scope, global ) 
{
global.opindex=opindex;
var o = {}, _env;
var a = grb( z[opindex], env, scope, global, o );
_da( node, attrname, opindex, a, o );
}
function _o( opindex, env, scope, global )
{
global.opindex=opindex;
var nothing = {};
var r = grb( z[opindex], env, scope, global, nothing );
return (r&&r.constructor===Function) ? undefined : r;
}
function _oz( z, opindex, env, scope, global )
{
global.opindex=opindex;
var nothing = {};
var r = grb( z[opindex], env, scope, global, nothing );
return (r&&r.constructor===Function) ? undefined : r;
}
function _1( opindex, env, scope, global, o )
{
var o = o || {};
global.opindex=opindex;
return gra( z[opindex], env, scope, global, o );
}
function _1z( z, opindex, env, scope, global, o )
{
var o = o || {};
global.opindex=opindex;
return gra( z[opindex], env, scope, global, o );
}
function _2( opindex, func, env, scope, global, father, itemname, indexname, keyname )
{
var o = {};
var to_iter = _1( opindex, env, scope, global );
wfor( to_iter, func, env, scope, global, father, itemname, indexname, keyname );
}
function _2z( z, opindex, func, env, scope, global, father, itemname, indexname, keyname )
{
var o = {};
var to_iter = _1z( z, opindex, env, scope, global );
wfor( to_iter, func, env, scope, global, father, itemname, indexname, keyname );
}


function _m(tag,attrs,generics,env,scope,global)
{
var tmp=_n(tag);
var base=0;
for(var i = 0 ; i < attrs.length ; i+=2 )
{
if(base+attrs[i+1]<0)
{
tmp.attr[attrs[i]]=true;
}
else
{
_r(tmp,attrs[i],base+attrs[i+1],env,scope,global);
if(base===0)base=attrs[i+1];
}
}
for(var i=0;i<generics.length;i+=2)
{
if(base+generics[i+1]<0)
{
tmp.generics[generics[i]]="";
}
else
{
var $t=grb(z[base+generics[i+1]],env,scope,global);
if ($t!="") $t="wx-"+$t;
tmp.generics[generics[i]]=$t;
if(base===0)base=generics[i+1];
}
}
return tmp;
}
function _mz(z,tag,attrs,generics,env,scope,global)
{
var tmp=_n(tag);
var base=0;
for(var i = 0 ; i < attrs.length ; i+=2 )
{
if(base+attrs[i+1]<0)
{
tmp.attr[attrs[i]]=true;
}
else
{
_rz(z, tmp,attrs[i],base+attrs[i+1],env,scope,global);
if(base===0)base=attrs[i+1];
}
}
for(var i=0;i<generics.length;i+=2)
{
if(base+generics[i+1]<0)
{
tmp.generics[generics[i]]="";
}
else
{
var $t=grb(z[base+generics[i+1]],env,scope,global);
if ($t!="") $t="wx-"+$t;
tmp.generics[generics[i]]=$t;
if(base===0)base=generics[i+1];
}
}
return tmp;
}

var nf_init=function(){
if(typeof __WXML_GLOBAL__==="undefined"||undefined===__WXML_GLOBAL__.wxs_nf_init){
nf_init_Object();nf_init_Function();nf_init_Array();nf_init_String();nf_init_Boolean();nf_init_Number();nf_init_Math();nf_init_Date();nf_init_RegExp();
}
if(typeof __WXML_GLOBAL__!=="undefined") __WXML_GLOBAL__.wxs_nf_init=true;
};
var nf_init_Object=function(){
Object.defineProperty(Object.prototype,"nv_constructor",{writable:true,value:"Object"})
Object.defineProperty(Object.prototype,"nv_toString",{writable:true,value:function(){return "[object Object]"}})
}
var nf_init_Function=function(){
Object.defineProperty(Function.prototype,"nv_constructor",{writable:true,value:"Function"})
Object.defineProperty(Function.prototype,"nv_length",{get:function(){return this.length;},set:function(){}});
Object.defineProperty(Function.prototype,"nv_toString",{writable:true,value:function(){return "[function Function]"}})
}
var nf_init_Array=function(){
Object.defineProperty(Array.prototype,"nv_toString",{writable:true,value:function(){return this.nv_join();}})
Object.defineProperty(Array.prototype,"nv_join",{writable:true,value:function(s){
s=undefined==s?',':s;
var r="";
for(var i=0;i<this.length;++i){
if(0!=i) r+=s;
if(null==this[i]||undefined==this[i]) r+='';	
else if(typeof this[i]=='function') r+=this[i].nv_toString();
else if(typeof this[i]=='object'&&this[i].nv_constructor==="Array") r+=this[i].nv_join();
else r+=this[i].toString();
}
return r;
}})
Object.defineProperty(Array.prototype,"nv_constructor",{writable:true,value:"Array"})
Object.defineProperty(Array.prototype,"nv_concat",{writable:true,value:Array.prototype.concat})
Object.defineProperty(Array.prototype,"nv_pop",{writable:true,value:Array.prototype.pop})
Object.defineProperty(Array.prototype,"nv_push",{writable:true,value:Array.prototype.push})
Object.defineProperty(Array.prototype,"nv_reverse",{writable:true,value:Array.prototype.reverse})
Object.defineProperty(Array.prototype,"nv_shift",{writable:true,value:Array.prototype.shift})
Object.defineProperty(Array.prototype,"nv_slice",{writable:true,value:Array.prototype.slice})
Object.defineProperty(Array.prototype,"nv_sort",{writable:true,value:Array.prototype.sort})
Object.defineProperty(Array.prototype,"nv_splice",{writable:true,value:Array.prototype.splice})
Object.defineProperty(Array.prototype,"nv_unshift",{writable:true,value:Array.prototype.unshift})
Object.defineProperty(Array.prototype,"nv_indexOf",{writable:true,value:Array.prototype.indexOf})
Object.defineProperty(Array.prototype,"nv_lastIndexOf",{writable:true,value:Array.prototype.lastIndexOf})
Object.defineProperty(Array.prototype,"nv_every",{writable:true,value:Array.prototype.every})
Object.defineProperty(Array.prototype,"nv_some",{writable:true,value:Array.prototype.some})
Object.defineProperty(Array.prototype,"nv_forEach",{writable:true,value:Array.prototype.forEach})
Object.defineProperty(Array.prototype,"nv_map",{writable:true,value:Array.prototype.map})
Object.defineProperty(Array.prototype,"nv_filter",{writable:true,value:Array.prototype.filter})
Object.defineProperty(Array.prototype,"nv_reduce",{writable:true,value:Array.prototype.reduce})
Object.defineProperty(Array.prototype,"nv_reduceRight",{writable:true,value:Array.prototype.reduceRight})
Object.defineProperty(Array.prototype,"nv_length",{get:function(){return this.length;},set:function(value){this.length=value;}});
}
var nf_init_String=function(){
Object.defineProperty(String.prototype,"nv_constructor",{writable:true,value:"String"})
Object.defineProperty(String.prototype,"nv_toString",{writable:true,value:String.prototype.toString})
Object.defineProperty(String.prototype,"nv_valueOf",{writable:true,value:String.prototype.valueOf})
Object.defineProperty(String.prototype,"nv_charAt",{writable:true,value:String.prototype.charAt})
Object.defineProperty(String.prototype,"nv_charCodeAt",{writable:true,value:String.prototype.charCodeAt})
Object.defineProperty(String.prototype,"nv_concat",{writable:true,value:String.prototype.concat})
Object.defineProperty(String.prototype,"nv_indexOf",{writable:true,value:String.prototype.indexOf})
Object.defineProperty(String.prototype,"nv_lastIndexOf",{writable:true,value:String.prototype.lastIndexOf})
Object.defineProperty(String.prototype,"nv_localeCompare",{writable:true,value:String.prototype.localeCompare})
Object.defineProperty(String.prototype,"nv_match",{writable:true,value:String.prototype.match})
Object.defineProperty(String.prototype,"nv_replace",{writable:true,value:String.prototype.replace})
Object.defineProperty(String.prototype,"nv_search",{writable:true,value:String.prototype.search})
Object.defineProperty(String.prototype,"nv_slice",{writable:true,value:String.prototype.slice})
Object.defineProperty(String.prototype,"nv_split",{writable:true,value:String.prototype.split})
Object.defineProperty(String.prototype,"nv_substring",{writable:true,value:String.prototype.substring})
Object.defineProperty(String.prototype,"nv_toLowerCase",{writable:true,value:String.prototype.toLowerCase})
Object.defineProperty(String.prototype,"nv_toLocaleLowerCase",{writable:true,value:String.prototype.toLocaleLowerCase})
Object.defineProperty(String.prototype,"nv_toUpperCase",{writable:true,value:String.prototype.toUpperCase})
Object.defineProperty(String.prototype,"nv_toLocaleUpperCase",{writable:true,value:String.prototype.toLocaleUpperCase})
Object.defineProperty(String.prototype,"nv_trim",{writable:true,value:String.prototype.trim})
Object.defineProperty(String.prototype,"nv_length",{get:function(){return this.length;},set:function(value){this.length=value;}});
}
var nf_init_Boolean=function(){
Object.defineProperty(Boolean.prototype,"nv_constructor",{writable:true,value:"Boolean"})
Object.defineProperty(Boolean.prototype,"nv_toString",{writable:true,value:Boolean.prototype.toString})
Object.defineProperty(Boolean.prototype,"nv_valueOf",{writable:true,value:Boolean.prototype.valueOf})
}
var nf_init_Number=function(){
Object.defineProperty(Number,"nv_MAX_VALUE",{writable:false,value:Number.MAX_VALUE})
Object.defineProperty(Number,"nv_MIN_VALUE",{writable:false,value:Number.MIN_VALUE})
Object.defineProperty(Number,"nv_NEGATIVE_INFINITY",{writable:false,value:Number.NEGATIVE_INFINITY})
Object.defineProperty(Number,"nv_POSITIVE_INFINITY",{writable:false,value:Number.POSITIVE_INFINITY})
Object.defineProperty(Number.prototype,"nv_constructor",{writable:true,value:"Number"})
Object.defineProperty(Number.prototype,"nv_toString",{writable:true,value:Number.prototype.toString})
Object.defineProperty(Number.prototype,"nv_toLocaleString",{writable:true,value:Number.prototype.toLocaleString})
Object.defineProperty(Number.prototype,"nv_valueOf",{writable:true,value:Number.prototype.valueOf})
Object.defineProperty(Number.prototype,"nv_toFixed",{writable:true,value:Number.prototype.toFixed})
Object.defineProperty(Number.prototype,"nv_toExponential",{writable:true,value:Number.prototype.toExponential})
Object.defineProperty(Number.prototype,"nv_toPrecision",{writable:true,value:Number.prototype.toPrecision})
}
var nf_init_Math=function(){
Object.defineProperty(Math,"nv_E",{writable:false,value:Math.E})
Object.defineProperty(Math,"nv_LN10",{writable:false,value:Math.LN10})
Object.defineProperty(Math,"nv_LN2",{writable:false,value:Math.LN2})
Object.defineProperty(Math,"nv_LOG2E",{writable:false,value:Math.LOG2E})
Object.defineProperty(Math,"nv_LOG10E",{writable:false,value:Math.LOG10E})
Object.defineProperty(Math,"nv_PI",{writable:false,value:Math.PI})
Object.defineProperty(Math,"nv_SQRT1_2",{writable:false,value:Math.SQRT1_2})
Object.defineProperty(Math,"nv_SQRT2",{writable:false,value:Math.SQRT2})
Object.defineProperty(Math,"nv_abs",{writable:false,value:Math.abs})
Object.defineProperty(Math,"nv_acos",{writable:false,value:Math.acos})
Object.defineProperty(Math,"nv_asin",{writable:false,value:Math.asin})
Object.defineProperty(Math,"nv_atan",{writable:false,value:Math.atan})
Object.defineProperty(Math,"nv_atan2",{writable:false,value:Math.atan2})
Object.defineProperty(Math,"nv_ceil",{writable:false,value:Math.ceil})
Object.defineProperty(Math,"nv_cos",{writable:false,value:Math.cos})
Object.defineProperty(Math,"nv_exp",{writable:false,value:Math.exp})
Object.defineProperty(Math,"nv_floor",{writable:false,value:Math.floor})
Object.defineProperty(Math,"nv_log",{writable:false,value:Math.log})
Object.defineProperty(Math,"nv_max",{writable:false,value:Math.max})
Object.defineProperty(Math,"nv_min",{writable:false,value:Math.min})
Object.defineProperty(Math,"nv_pow",{writable:false,value:Math.pow})
Object.defineProperty(Math,"nv_random",{writable:false,value:Math.random})
Object.defineProperty(Math,"nv_round",{writable:false,value:Math.round})
Object.defineProperty(Math,"nv_sin",{writable:false,value:Math.sin})
Object.defineProperty(Math,"nv_sqrt",{writable:false,value:Math.sqrt})
Object.defineProperty(Math,"nv_tan",{writable:false,value:Math.tan})
}
var nf_init_Date=function(){
Object.defineProperty(Date.prototype,"nv_constructor",{writable:true,value:"Date"})
Object.defineProperty(Date,"nv_parse",{writable:true,value:Date.parse})
Object.defineProperty(Date,"nv_UTC",{writable:true,value:Date.UTC})
Object.defineProperty(Date,"nv_now",{writable:true,value:Date.now})
Object.defineProperty(Date.prototype,"nv_toString",{writable:true,value:Date.prototype.toString})
Object.defineProperty(Date.prototype,"nv_toDateString",{writable:true,value:Date.prototype.toDateString})
Object.defineProperty(Date.prototype,"nv_toTimeString",{writable:true,value:Date.prototype.toTimeString})
Object.defineProperty(Date.prototype,"nv_toLocaleString",{writable:true,value:Date.prototype.toLocaleString})
Object.defineProperty(Date.prototype,"nv_toLocaleDateString",{writable:true,value:Date.prototype.toLocaleDateString})
Object.defineProperty(Date.prototype,"nv_toLocaleTimeString",{writable:true,value:Date.prototype.toLocaleTimeString})
Object.defineProperty(Date.prototype,"nv_valueOf",{writable:true,value:Date.prototype.valueOf})
Object.defineProperty(Date.prototype,"nv_getTime",{writable:true,value:Date.prototype.getTime})
Object.defineProperty(Date.prototype,"nv_getFullYear",{writable:true,value:Date.prototype.getFullYear})
Object.defineProperty(Date.prototype,"nv_getUTCFullYear",{writable:true,value:Date.prototype.getUTCFullYear})
Object.defineProperty(Date.prototype,"nv_getMonth",{writable:true,value:Date.prototype.getMonth})
Object.defineProperty(Date.prototype,"nv_getUTCMonth",{writable:true,value:Date.prototype.getUTCMonth})
Object.defineProperty(Date.prototype,"nv_getDate",{writable:true,value:Date.prototype.getDate})
Object.defineProperty(Date.prototype,"nv_getUTCDate",{writable:true,value:Date.prototype.getUTCDate})
Object.defineProperty(Date.prototype,"nv_getDay",{writable:true,value:Date.prototype.getDay})
Object.defineProperty(Date.prototype,"nv_getUTCDay",{writable:true,value:Date.prototype.getUTCDay})
Object.defineProperty(Date.prototype,"nv_getHours",{writable:true,value:Date.prototype.getHours})
Object.defineProperty(Date.prototype,"nv_getUTCHours",{writable:true,value:Date.prototype.getUTCHours})
Object.defineProperty(Date.prototype,"nv_getMinutes",{writable:true,value:Date.prototype.getMinutes})
Object.defineProperty(Date.prototype,"nv_getUTCMinutes",{writable:true,value:Date.prototype.getUTCMinutes})
Object.defineProperty(Date.prototype,"nv_getSeconds",{writable:true,value:Date.prototype.getSeconds})
Object.defineProperty(Date.prototype,"nv_getUTCSeconds",{writable:true,value:Date.prototype.getUTCSeconds})
Object.defineProperty(Date.prototype,"nv_getMilliseconds",{writable:true,value:Date.prototype.getMilliseconds})
Object.defineProperty(Date.prototype,"nv_getUTCMilliseconds",{writable:true,value:Date.prototype.getUTCMilliseconds})
Object.defineProperty(Date.prototype,"nv_getTimezoneOffset",{writable:true,value:Date.prototype.getTimezoneOffset})
Object.defineProperty(Date.prototype,"nv_setTime",{writable:true,value:Date.prototype.setTime})
Object.defineProperty(Date.prototype,"nv_setMilliseconds",{writable:true,value:Date.prototype.setMilliseconds})
Object.defineProperty(Date.prototype,"nv_setUTCMilliseconds",{writable:true,value:Date.prototype.setUTCMilliseconds})
Object.defineProperty(Date.prototype,"nv_setSeconds",{writable:true,value:Date.prototype.setSeconds})
Object.defineProperty(Date.prototype,"nv_setUTCSeconds",{writable:true,value:Date.prototype.setUTCSeconds})
Object.defineProperty(Date.prototype,"nv_setMinutes",{writable:true,value:Date.prototype.setMinutes})
Object.defineProperty(Date.prototype,"nv_setUTCMinutes",{writable:true,value:Date.prototype.setUTCMinutes})
Object.defineProperty(Date.prototype,"nv_setHours",{writable:true,value:Date.prototype.setHours})
Object.defineProperty(Date.prototype,"nv_setUTCHours",{writable:true,value:Date.prototype.setUTCHours})
Object.defineProperty(Date.prototype,"nv_setDate",{writable:true,value:Date.prototype.setDate})
Object.defineProperty(Date.prototype,"nv_setUTCDate",{writable:true,value:Date.prototype.setUTCDate})
Object.defineProperty(Date.prototype,"nv_setMonth",{writable:true,value:Date.prototype.setMonth})
Object.defineProperty(Date.prototype,"nv_setUTCMonth",{writable:true,value:Date.prototype.setUTCMonth})
Object.defineProperty(Date.prototype,"nv_setFullYear",{writable:true,value:Date.prototype.setFullYear})
Object.defineProperty(Date.prototype,"nv_setUTCFullYear",{writable:true,value:Date.prototype.setUTCFullYear})
Object.defineProperty(Date.prototype,"nv_toUTCString",{writable:true,value:Date.prototype.toUTCString})
Object.defineProperty(Date.prototype,"nv_toISOString",{writable:true,value:Date.prototype.toISOString})
Object.defineProperty(Date.prototype,"nv_toJSON",{writable:true,value:Date.prototype.toJSON})
}
var nf_init_RegExp=function(){
Object.defineProperty(RegExp.prototype,"nv_constructor",{writable:true,value:"RegExp"})
Object.defineProperty(RegExp.prototype,"nv_exec",{writable:true,value:RegExp.prototype.exec})
Object.defineProperty(RegExp.prototype,"nv_test",{writable:true,value:RegExp.prototype.test})
Object.defineProperty(RegExp.prototype,"nv_toString",{writable:true,value:RegExp.prototype.toString})
Object.defineProperty(RegExp.prototype,"nv_source",{get:function(){return this.source;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_global",{get:function(){return this.global;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_ignoreCase",{get:function(){return this.ignoreCase;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_multiline",{get:function(){return this.multiline;},set:function(){}});
Object.defineProperty(RegExp.prototype,"nv_lastIndex",{get:function(){return this.lastIndex;},set:function(v){this.lastIndex=v;}});
}
nf_init();
var nv_getDate=function(){var args=Array.prototype.slice.call(arguments);args.unshift(Date);return new(Function.prototype.bind.apply(Date, args));}
var nv_getRegExp=function(){var args=Array.prototype.slice.call(arguments);args.unshift(RegExp);return new(Function.prototype.bind.apply(RegExp, args));}
var nv_console={}
nv_console.nv_log=function(){var res="WXSRT:";for(var i=0;i<arguments.length;++i)res+=arguments[i]+" ";console.log(res);}
var nv_parseInt = parseInt, nv_parseFloat = parseFloat, nv_isNaN = isNaN, nv_isFinite = isFinite, nv_decodeURI = decodeURI, nv_decodeURIComponent = decodeURIComponent, nv_encodeURI = encodeURI, nv_encodeURIComponent = encodeURIComponent;
function $gdc(o,p,r) {
o=wh.rv(o);
if(o===null||o===undefined) return o;
if(o.constructor===String||o.constructor===Boolean||o.constructor===Number) return o;
if(o.constructor===Object){
var copy={};
for(var k in o)
if(o.hasOwnProperty(k))
if(undefined===p) copy[k.substring(3)]=$gdc(o[k],p,r);
else copy[p+k]=$gdc(o[k],p,r);
return copy;
}
if(o.constructor===Array){
var copy=[];
for(var i=0;i<o.length;i++) copy.push($gdc(o[i],p,r));
return copy;
}
if(o.constructor===Date){
var copy=new Date();
copy.setTime(o.getTime());
return copy;
}
if(o.constructor===RegExp){
var f="";
if(o.global) f+="g";
if(o.ignoreCase) f+="i";
if(o.multiline) f+="m";
return (new RegExp(o.source,f));
}
if(r&&o.constructor===Function){
if ( r == 1 ) return $gdc(o(),undefined, 2);
if ( r == 2 ) return o;
}
return null;
}
var nv_JSON={}
nv_JSON.nv_stringify=function(o){
JSON.stringify(o);
return JSON.stringify($gdc(o));
}
nv_JSON.nv_parse=function(o){
if(o===undefined) return undefined;
var t=JSON.parse(o);
return $gdc(t,'nv_');
}

function _af(p, a, r, c){
p.extraAttr = {"t_action": a, "t_rawid": r };
if ( typeof(c) != 'undefined' ) p.extraAttr.t_cid = c;
}

function _ai(i,p,e,me,r,c){var x=_grp(p,e,me);if(x)i.push(x);else{i.push('');_wp(me+':import:'+r+':'+c+': Path `'+p+'` not found from `'+me+'`.')}}
function _grp(p,e,me){if(p[0]!='/'){var mepart=me.split('/');mepart.pop();var ppart=p.split('/');for(var i=0;i<ppart.length;i++){if( ppart[i]=='..')mepart.pop();else if(!ppart[i]||ppart[i]=='.')continue;else mepart.push(ppart[i]);}p=mepart.join('/');}if(me[0]=='.'&&p[0]=='/')p='.'+p;if(e[p])return p;if(e[p+'.wxml'])return p+'.wxml';}
function _gd(p,c,e,d){if(!c)return;if(d[p][c])return d[p][c];for(var x=e[p].i.length-1;x>=0;x--){if(e[p].i[x]&&d[e[p].i[x]][c])return d[e[p].i[x]][c]};for(var x=e[p].ti.length-1;x>=0;x--){var q=_grp(e[p].ti[x],e,p);if(q&&d[q][c])return d[q][c]}var ii=_gapi(e,p);for(var x=0;x<ii.length;x++){if(ii[x]&&d[ii[x]][c])return d[ii[x]][c]}for(var k=e[p].j.length-1;k>=0;k--)if(e[p].j[k]){for(var q=e[e[p].j[k]].ti.length-1;q>=0;q--){var pp=_grp(e[e[p].j[k]].ti[q],e,p);if(pp&&d[pp][c]){return d[pp][c]}}}}
function _gapi(e,p){if(!p)return [];if($gaic[p]){return $gaic[p]};var ret=[],q=[],h=0,t=0,put={},visited={};q.push(p);visited[p]=true;t++;while(h<t){var a=q[h++];for(var i=0;i<e[a].ic.length;i++){var nd=e[a].ic[i];var np=_grp(nd,e,a);if(np&&!visited[np]){visited[np]=true;q.push(np);t++;}}for(var i=0;a!=p&&i<e[a].ti.length;i++){var ni=e[a].ti[i];var nm=_grp(ni,e,a);if(nm&&!put[nm]){put[nm]=true;ret.push(nm);}}}$gaic[p]=ret;return ret;}
var $ixc={};function _ic(p,ent,me,e,s,r,gg){var x=_grp(p,ent,me);ent[me].j.push(x);if(x){if($ixc[x]){_wp('-1:include:-1:-1: `'+p+'` is being included in a loop, will be stop.');return;}$ixc[x]=true;try{ent[x].f(e,s,r,gg)}catch(e){}$ixc[x]=false;}else{_wp(me+':include:-1:-1: Included path `'+p+'` not found from `'+me+'`.')}}
function _w(tn,f,line,c){_wp(f+':template:'+line+':'+c+': Template `'+tn+'` not found.');}function _ev(dom){var changed=false;delete dom.properities;delete dom.n;if(dom.children){do{changed=false;var newch = [];for(var i=0;i<dom.children.length;i++){var ch=dom.children[i];if( ch.tag=='virtual'){changed=true;for(var j=0;ch.children&&j<ch.children.length;j++){newch.push(ch.children[j]);}}else { newch.push(ch); } } dom.children = newch; }while(changed);for(var i=0;i<dom.children.length;i++){_ev(dom.children[i]);}} return dom; }
function _tsd( root )
{
if( root.tag == "wx-wx-scope" ) 
{
root.tag = "virtual";
root.wxCkey = "11";
root['wxScopeData'] = root.attr['wx:scope-data'];
delete root.n;
delete root.raw;
delete root.generics;
delete root.attr;
}
for( var i = 0 ; root.children && i < root.children.length ; i++ )
{
_tsd( root.children[i] );
}
return root;
}

var e_={}
if(typeof(global.entrys)==='undefined')global.entrys={};e_=global.entrys;
var d_={}
if(typeof(global.defines)==='undefined')global.defines={};d_=global.defines;
var f_={}
if(typeof(global.modules)==='undefined')global.modules={};f_=global.modules || {};
var p_={}
__WXML_GLOBAL__.ops_cached = __WXML_GLOBAL__.ops_cached || {}
__WXML_GLOBAL__.ops_set = __WXML_GLOBAL__.ops_set || {};
__WXML_GLOBAL__.ops_init = __WXML_GLOBAL__.ops_init || {};
var z=__WXML_GLOBAL__.ops_set.$gwx || [];
function gz$gwx_1(){
if( __WXML_GLOBAL__.ops_cached.$gwx_1)return __WXML_GLOBAL__.ops_cached.$gwx_1
__WXML_GLOBAL__.ops_cached.$gwx_1=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
Z([[7],[3,'width']])
Z([3,'__e'])
Z([[4],[[5],[[5],[[5],[[5],[1,'uni-grid-item__box data-v-4f7e3dce']],[[2,'?:'],[[7],[3,'showBorder']],[1,'uni-grid-item--border'],[1,'']]],[[2,'?:'],[[2,'&&'],[[7],[3,'showBorder']],[[2,'<'],[[7],[3,'index']],[[7],[3,'column']]]],[1,'uni-grid-item--border-top'],[1,'']]],[[2,'?:'],[[7],[3,'highlight']],[1,'uni-highlight'],[1,'']]]])
Z([[4],[[5],[[4],[[5],[[5],[1,'tap']],[[4],[[5],[[4],[[5],[[5],[1,'_onClick']],[[4],[[5],[1,'$event']]]]]]]]]]])
Z([[2,'+'],[[2,'+'],[[2,'+'],[[2,'+'],[1,'border-right-color:'],[[7],[3,'borderColor']]],[1,';']],[[2,'+'],[[2,'+'],[1,'border-bottom-color:'],[[7],[3,'borderColor']]],[1,';']]],[[2,'+'],[[2,'+'],[1,'border-top-color:'],[[7],[3,'borderColor']]],[1,';']]])
})(__WXML_GLOBAL__.ops_cached.$gwx_1);return __WXML_GLOBAL__.ops_cached.$gwx_1
}
function gz$gwx_2(){
if( __WXML_GLOBAL__.ops_cached.$gwx_2)return __WXML_GLOBAL__.ops_cached.$gwx_2
__WXML_GLOBAL__.ops_cached.$gwx_2=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
})(__WXML_GLOBAL__.ops_cached.$gwx_2);return __WXML_GLOBAL__.ops_cached.$gwx_2
}
function gz$gwx_3(){
if( __WXML_GLOBAL__.ops_cached.$gwx_3)return __WXML_GLOBAL__.ops_cached.$gwx_3
__WXML_GLOBAL__.ops_cached.$gwx_3=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
Z([3,'uni-section data-v-09f3a024'])
Z([[7],[3,'type']])
Z([[7],[3,'subTitle']])
})(__WXML_GLOBAL__.ops_cached.$gwx_3);return __WXML_GLOBAL__.ops_cached.$gwx_3
}
function gz$gwx_4(){
if( __WXML_GLOBAL__.ops_cached.$gwx_4)return __WXML_GLOBAL__.ops_cached.$gwx_4
__WXML_GLOBAL__.ops_cached.$gwx_4=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
Z([3,'__l'])
Z([[7],[3,'column']])
Z([1,true])
Z([1,false])
Z([3,'1'])
Z([[4],[[5],[1,'default']]])
Z([3,'index'])
Z([3,'item'])
Z([[7],[3,'list']])
Z(z[6])
Z(z[0])
Z([[7],[3,'index']])
Z([[2,'+'],[[2,'+'],[[2,'+'],[1,'2-'],[[7],[3,'index']]],[1,',']],[1,'1']])
Z(z[5])
})(__WXML_GLOBAL__.ops_cached.$gwx_4);return __WXML_GLOBAL__.ops_cached.$gwx_4
}
function gz$gwx_5(){
if( __WXML_GLOBAL__.ops_cached.$gwx_5)return __WXML_GLOBAL__.ops_cached.$gwx_5
__WXML_GLOBAL__.ops_cached.$gwx_5=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
})(__WXML_GLOBAL__.ops_cached.$gwx_5);return __WXML_GLOBAL__.ops_cached.$gwx_5
}
function gz$gwx_6(){
if( __WXML_GLOBAL__.ops_cached.$gwx_6)return __WXML_GLOBAL__.ops_cached.$gwx_6
__WXML_GLOBAL__.ops_cached.$gwx_6=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
})(__WXML_GLOBAL__.ops_cached.$gwx_6);return __WXML_GLOBAL__.ops_cached.$gwx_6
}
function gz$gwx_7(){
if( __WXML_GLOBAL__.ops_cached.$gwx_7)return __WXML_GLOBAL__.ops_cached.$gwx_7
__WXML_GLOBAL__.ops_cached.$gwx_7=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
})(__WXML_GLOBAL__.ops_cached.$gwx_7);return __WXML_GLOBAL__.ops_cached.$gwx_7
}
function gz$gwx_8(){
if( __WXML_GLOBAL__.ops_cached.$gwx_8)return __WXML_GLOBAL__.ops_cached.$gwx_8
__WXML_GLOBAL__.ops_cached.$gwx_8=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
})(__WXML_GLOBAL__.ops_cached.$gwx_8);return __WXML_GLOBAL__.ops_cached.$gwx_8
}
function gz$gwx_9(){
if( __WXML_GLOBAL__.ops_cached.$gwx_9)return __WXML_GLOBAL__.ops_cached.$gwx_9
__WXML_GLOBAL__.ops_cached.$gwx_9=[];
(function(z){var a=11;function Z(ops){z.push(ops)}
})(__WXML_GLOBAL__.ops_cached.$gwx_9);return __WXML_GLOBAL__.ops_cached.$gwx_9
}
__WXML_GLOBAL__.ops_set.$gwx=z;
__WXML_GLOBAL__.ops_init.$gwx=true;
var nv_require=function(){var nnm={};var nom={};return function(n){return function(){if(!nnm[n]) return undefined;try{if(!nom[n])nom[n]=nnm[n]();return nom[n];}catch(e){e.message=e.message.replace(/nv_/g,'');var tmp = e.stack.substring(0,e.stack.lastIndexOf(n));e.stack = tmp.substring(0,tmp.lastIndexOf('\n'));e.stack = e.stack.replace(/\snv_/g,' ');e.stack = $gstack(e.stack);e.stack += '\n    at ' + n.substring(2);console.error(e);}
}}}()
var x=['./components/uni-grid-item/uni-grid-item.wxml','./components/uni-grid/uni-grid.wxml','./components/uni-section/uni-section.wxml','./pages/booth/booth.wxml','./pages/count/count.wxml','./pages/environment/environment.wxml','./pages/member/member.wxml','./pages/other/detail.wxml','./pages/other/memberdetail.wxml'];d_[x[0]]={}
var m0=function(e,s,r,gg){
var z=gz$gwx_1()
var oB=_v()
_(r,oB)
if(_oz(z,0,e,s,gg)){oB.wxVkey=1
var xC=_mz(z,'view',['bindtap',1,'class',1,'data-event-opts',2,'style',3],[],e,s,gg)
var oD=_n('slot')
_(xC,oD)
_(oB,xC)
}
oB.wxXCkey=1
return r
}
e_[x[0]]={f:m0,j:[],i:[],ti:[],ic:[]}
d_[x[1]]={}
var m1=function(e,s,r,gg){
var z=gz$gwx_2()
var cF=_n('slot')
_(r,cF)
return r
}
e_[x[1]]={f:m1,j:[],i:[],ti:[],ic:[]}
d_[x[2]]={}
var m2=function(e,s,r,gg){
var z=gz$gwx_3()
var oH=_n('view')
_rz(z,oH,'class',0,e,s,gg)
var cI=_v()
_(oH,cI)
if(_oz(z,1,e,s,gg)){cI.wxVkey=1
}
var oJ=_v()
_(oH,oJ)
if(_oz(z,2,e,s,gg)){oJ.wxVkey=1
}
var lK=_n('slot')
_(oH,lK)
cI.wxXCkey=1
oJ.wxXCkey=1
_(r,oH)
return r
}
e_[x[2]]={f:m2,j:[],i:[],ti:[],ic:[]}
d_[x[3]]={}
var m3=function(e,s,r,gg){
var z=gz$gwx_4()
var tM=_mz(z,'uni-grid',['bind:__l',0,'column',1,'highlight',1,'showBorder',2,'vueId',3,'vueSlots',4],[],e,s,gg)
var eN=_v()
_(tM,eN)
var bO=function(xQ,oP,oR,gg){
var cT=_mz(z,'uni-grid-item',['bind:__l',10,'index',1,'vueId',2,'vueSlots',3],[],xQ,oP,gg)
_(oR,cT)
return oR
}
eN.wxXCkey=4
_2z(z,8,bO,e,s,gg,eN,'item','index','index')
_(r,tM)
return r
}
e_[x[3]]={f:m3,j:[],i:[],ti:[],ic:[]}
d_[x[4]]={}
var m4=function(e,s,r,gg){
var z=gz$gwx_5()
return r
}
e_[x[4]]={f:m4,j:[],i:[],ti:[],ic:[]}
d_[x[5]]={}
var m5=function(e,s,r,gg){
var z=gz$gwx_6()
return r
}
e_[x[5]]={f:m5,j:[],i:[],ti:[],ic:[]}
d_[x[6]]={}
var m6=function(e,s,r,gg){
var z=gz$gwx_7()
return r
}
e_[x[6]]={f:m6,j:[],i:[],ti:[],ic:[]}
d_[x[7]]={}
var m7=function(e,s,r,gg){
var z=gz$gwx_8()
return r
}
e_[x[7]]={f:m7,j:[],i:[],ti:[],ic:[]}
d_[x[8]]={}
var m8=function(e,s,r,gg){
var z=gz$gwx_9()
return r
}
e_[x[8]]={f:m8,j:[],i:[],ti:[],ic:[]}
if(path&&e_[path]){
return function(env,dd,global){$gwxc=0;var root={"tag":"wx-page"};root.children=[]
var main=e_[path].f
if (typeof global==="undefined")global={};global.f=$gdc(f_[path],"",1);
try{
main(env,{},root,global);
_tsd(root)
}catch(err){
console.log(err)
}
return root;
}
}
}



__wxAppCode__['app.json']={"pages":["pages/booth/booth","pages/environment/environment","pages/member/member","pages/count/count","pages/other/detail","pages/other/memberdetail"],"window":{"navigationBarTextStyle":"black","navigationBarTitleText":"毕业设计-智能鲜奶贩卖机","navigationBarBackgroundColor":"#F8F8F8","backgroundColor":"#F8F8F8"},"tabBar":{"color":"#bbbbbb","borderStyle":"white","selectedColor":"#4191ea","backgroundColor":"#FFFFFF","position":"bottom","list":[{"pagePath":"pages/booth/booth","iconPath":"static/tab/booth_n.png","selectedIconPath":"static/tab/booth_h.png","text":"奶位监控"},{"pagePath":"pages/environment/environment","iconPath":"static/tab/environment_n.png","selectedIconPath":"static/tab/environment_h.png","text":"环境监控"},{"pagePath":"pages/member/member","iconPath":"static/tab/member_n.png","selectedIconPath":"static/tab/member_h.png","text":"会员管理"},{"pagePath":"pages/count/count","iconPath":"static/tab/count_n.png","selectedIconPath":"static/tab/count_h.png","text":"销售管理"}]},"nvueCompiler":"uni-app","renderer":"auto","splashscreen":{"alwaysShowBeforeRender":true,"autoclose":false},"appname":"智能鲜奶机商家端","compilerVersion":"2.4.6","usingComponents":{}};
__wxAppCode__['app.wxml']=$gwx('./app.wxml');

__wxAppCode__['components/uni-grid-item/uni-grid-item.json']={"usingComponents":{},"component":true};
__wxAppCode__['components/uni-grid-item/uni-grid-item.wxml']=$gwx('./components/uni-grid-item/uni-grid-item.wxml');

__wxAppCode__['components/uni-grid/uni-grid.json']={"usingComponents":{},"component":true};
__wxAppCode__['components/uni-grid/uni-grid.wxml']=$gwx('./components/uni-grid/uni-grid.wxml');

__wxAppCode__['components/uni-section/uni-section.json']={"usingComponents":{},"component":true};
__wxAppCode__['components/uni-section/uni-section.wxml']=$gwx('./components/uni-section/uni-section.wxml');

__wxAppCode__['pages/booth/booth.json']={"navigationBarTitleText":"奶位监控","titleNView":{"buttons":[{"text":"","fontSrc":"/static/iconfont.ttf","fontSize":"22px"}]},"usingComponents":{"uni-section":"/components/uni-section/uni-section","uni-grid":"/components/uni-grid/uni-grid","uni-grid-item":"/components/uni-grid-item/uni-grid-item"}};
__wxAppCode__['pages/booth/booth.wxml']=$gwx('./pages/booth/booth.wxml');

__wxAppCode__['pages/count/count.json']={"navigationBarTitleText":"账单管理","titleNView":{"buttons":[{"text":"","fontSrc":"/static/iconfont.ttf","fontSize":"22px"}]},"usingComponents":{}};
__wxAppCode__['pages/count/count.wxml']=$gwx('./pages/count/count.wxml');

__wxAppCode__['pages/environment/environment.json']={"navigationBarTitleText":"环境监控","titleNView":{"buttons":[{"text":"","fontSrc":"/static/iconfont.ttf","fontSize":"22px"}]},"usingComponents":{}};
__wxAppCode__['pages/environment/environment.wxml']=$gwx('./pages/environment/environment.wxml');

__wxAppCode__['pages/member/member.json']={"navigationBarTitleText":"会员管理","titleNView":{"buttons":[{"text":"","fontSrc":"/static/iconfont.ttf","fontSize":"22px"}]},"usingComponents":{}};
__wxAppCode__['pages/member/member.wxml']=$gwx('./pages/member/member.wxml');

__wxAppCode__['pages/other/detail.json']={"usingComponents":{}};
__wxAppCode__['pages/other/detail.wxml']=$gwx('./pages/other/detail.wxml');

__wxAppCode__['pages/other/memberdetail.json']={"usingComponents":{}};
__wxAppCode__['pages/other/memberdetail.wxml']=$gwx('./pages/other/memberdetail.wxml');



define('common/main.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/main"],[
/* 0 */
/*!************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createApp) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _App = _interopRequireDefault(__webpack_require__(/*! ./App */ 9));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n//Vue.prototype.$url = 'http://localhost/'; \n_vue.default.prototype.$url = 'http://106.54.76.24';\n//Vue.prototype.$url = 'http://www.lesvay.fun'; \n_vue.default.config.productionTip = false;\n\n_App.default.mpType = 'app';\n\nvar app = new _vue.default(_objectSpread({},\n_App.default));\n\ncreateApp(app).$mount();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createApp\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbIlZ1ZSIsInByb3RvdHlwZSIsIiR1cmwiLCJjb25maWciLCJwcm9kdWN0aW9uVGlwIiwiQXBwIiwibXBUeXBlIiwiYXBwIiwiJG1vdW50Il0sIm1hcHBpbmdzIjoiaURBQUEsd0NBQW1CO0FBQ25CO0FBQ0EsdUU7O0FBRUE7QUFDQUEsYUFBSUMsU0FBSixDQUFjQyxJQUFkLEdBQXFCLHFCQUFyQjtBQUNBO0FBQ0FGLGFBQUlHLE1BQUosQ0FBV0MsYUFBWCxHQUEyQixLQUEzQjs7QUFFQUMsYUFBSUMsTUFBSixHQUFhLEtBQWI7O0FBRUEsSUFBTUMsR0FBRyxHQUFHLElBQUlQLFlBQUo7QUFDTEssWUFESyxFQUFaOztBQUdBLFVBQUFFLEdBQUcsRUFBQ0MsTUFBSixHIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7aW1wb3J0ICdAZGNsb3VkaW8vdW5pLXN0YXQnO1xyXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCdcclxuXHJcbi8vVnVlLnByb3RvdHlwZS4kdXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3QvJzsgXHJcblZ1ZS5wcm90b3R5cGUuJHVybCA9ICdodHRwOi8vMTA2LjU0Ljc2LjI0JzsgXHJcbi8vVnVlLnByb3RvdHlwZS4kdXJsID0gJ2h0dHA6Ly93d3cubGVzdmF5LmZ1bic7IFxyXG5WdWUuY29uZmlnLnByb2R1Y3Rpb25UaXAgPSBmYWxzZVxyXG5cclxuQXBwLm1wVHlwZSA9ICdhcHAnXHJcblxyXG5jb25zdCBhcHAgPSBuZXcgVnVlKHtcclxuICAgIC4uLkFwcFxyXG59KVxyXG5hcHAuJG1vdW50KCkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */
/*!************************************!*\
  !*** X:/毕业设计/MilkBusiness/App.vue ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ 10);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.vue?vue&type=style&index=0&lang=css& */ 13);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\nvar render, staticRenderFns\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/App.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN1RDtBQUNMO0FBQ2E7OztBQUcvRDtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSx5RUFBTTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBWWY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9BcHAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnMzIwYTA1OTUnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnMzIwYTA1OTUnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiWDov5q+V5Lia6K6+6K6hL01pbGtCdXNpbmVzcy9BcHAudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/*!*************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/App.vue?vue&type=script&lang=js& ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./App.vue?vue&type=script&lang=js& */ 11);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStyQixDQUFnQixndEJBQUcsRUFBQyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9BcHAudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTEyLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc2NyaXB0LmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/App.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default =\n{\n  onLaunch: function onLaunch() {\n    console.log(__f__('App Launch', \" at App.vue:4\"));\n  },\n  onShow: function onShow() {\n    console.log(__f__('App Show', \" at App.vue:7\"));\n  },\n  onHide: function onHide() {\n    console.log(__f__('App Hide', \" at App.vue:10\"));\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vQXBwLnZ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FIQTtBQUlBO0FBQ0E7QUFDQSxHQU5BO0FBT0E7QUFDQTtBQUNBLEdBVEEsRSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcblx0ZXhwb3J0IGRlZmF1bHQge1xyXG5cdFx0b25MYXVuY2g6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRjb25zb2xlLmxvZygnQXBwIExhdW5jaCcpXHJcblx0XHR9LFxyXG5cdFx0b25TaG93OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0Y29uc29sZS5sb2coJ0FwcCBTaG93JylcclxuXHRcdH0sXHJcblx0XHRvbkhpZGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRjb25zb2xlLmxvZygnQXBwIEhpZGUnKVxyXG5cdFx0fVxyXG5cdH1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGU+XHJcblx0Lyrmr4/kuKrpobXpnaLlhazlhbFjc3MgKi9cclxuPC9zdHlsZT5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */,
/* 13 */
/*!*********************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/App.vue?vue&type=style&index=0&lang=css& ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./App.vue?vue&type=style&index=0&lang=css& */ 14);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW82QixDQUFnQixpNkJBQUcsRUFBQyIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vQXBwLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxjc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0yIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL0FwcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPWNzcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/App.vue?vue&type=style&index=0&lang=css& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n");

/***/ })
],[[0,"common/runtime","common/vendor"]]]);
});
define('common/runtime.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict"; /******/(function (modules) {// webpackBootstrap
  /******/ // install a JSONP callback for chunk loading
  /******/function webpackJsonpCallback(data) {
    /******/var chunkIds = data[0];
    /******/var moreModules = data[1];
    /******/var executeModules = data[2];
    /******/
    /******/ // add "moreModules" to the modules object,
    /******/ // then flag all "chunkIds" as loaded and fire callback
    /******/var moduleId,chunkId,i = 0,resolves = [];
    /******/for (; i < chunkIds.length; i++) {
      /******/chunkId = chunkIds[i];
      /******/if (installedChunks[chunkId]) {
        /******/resolves.push(installedChunks[chunkId][0]);
        /******/}
      /******/installedChunks[chunkId] = 0;
      /******/}
    /******/for (moduleId in moreModules) {
      /******/if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
        /******/modules[moduleId] = moreModules[moduleId];
        /******/}
      /******/}
    /******/if (parentJsonpFunction) parentJsonpFunction(data);
    /******/
    /******/while (resolves.length) {
      /******/resolves.shift()();
      /******/}
    /******/
    /******/ // add entry modules from loaded chunk to deferred list
    /******/deferredModules.push.apply(deferredModules, executeModules || []);
    /******/
    /******/ // run deferred modules when all chunks ready
    /******/return checkDeferredModules();
    /******/};
  /******/function checkDeferredModules() {
    /******/var result;
    /******/for (var i = 0; i < deferredModules.length; i++) {
      /******/var deferredModule = deferredModules[i];
      /******/var fulfilled = true;
      /******/for (var j = 1; j < deferredModule.length; j++) {
        /******/var depId = deferredModule[j];
        /******/if (installedChunks[depId] !== 0) fulfilled = false;
        /******/}
      /******/if (fulfilled) {
        /******/deferredModules.splice(i--, 1);
        /******/result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
        /******/}
      /******/}
    /******/return result;
    /******/}
  /******/
  /******/ // The module cache
  /******/var installedModules = {};
  /******/
  /******/ // object to store loaded CSS chunks
  /******/var installedCssChunks = {
    /******/"common/runtime": 0
    /******/
    /******/
    /******/ // object to store loaded and loading chunks
    /******/ // undefined = chunk not loaded, null = chunk preloaded/prefetched
    /******/ // Promise = chunk loading, 0 = chunk loaded
    /******/ };var installedChunks = {
    /******/"common/runtime": 0
    /******/ };
  /******/
  /******/var deferredModules = [];
  /******/
  /******/ // script path function
  /******/function jsonpScriptSrc(chunkId) {
    /******/return __webpack_require__.p + "" + chunkId + ".js";
    /******/}
  /******/
  /******/ // The require function
  /******/function __webpack_require__(moduleId) {
    /******/
    /******/ // Check if module is in cache
    /******/if (installedModules[moduleId]) {
      /******/return installedModules[moduleId].exports;
      /******/}
    /******/ // Create a new module (and put it into the cache)
    /******/var module = installedModules[moduleId] = {
      /******/i: moduleId,
      /******/l: false,
      /******/exports: {}
      /******/ };
    /******/
    /******/ // Execute the module function
    /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    /******/
    /******/ // Flag the module as loaded
    /******/module.l = true;
    /******/
    /******/ // Return the exports of the module
    /******/return module.exports;
    /******/}
  /******/
  /******/ // This file contains only the entry chunk.
  /******/ // The chunk loading function for additional chunks
  /******/__webpack_require__.e = function requireEnsure(chunkId) {
    /******/var promises = [];
    /******/
    /******/
    /******/ // mini-css-extract-plugin CSS loading
    /******/var cssChunks = { "components/uni-grid-item/uni-grid-item": 1, "components/uni-grid/uni-grid": 1, "components/uni-section/uni-section": 1 };
    /******/if (installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);
    /******/else if (installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {
        /******/promises.push(installedCssChunks[chunkId] = new Promise(function (resolve, reject) {
          /******/var href = "" + ({ "components/uni-grid-item/uni-grid-item": "components/uni-grid-item/uni-grid-item", "components/uni-grid/uni-grid": "components/uni-grid/uni-grid", "components/uni-section/uni-section": "components/uni-section/uni-section" }[chunkId] || chunkId) + ".wxss";
          /******/var fullhref = __webpack_require__.p + href;
          /******/var existingLinkTags = document.getElementsByTagName("link");
          /******/for (var i = 0; i < existingLinkTags.length; i++) {
            /******/var tag = existingLinkTags[i];
            /******/var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
            /******/if (tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return resolve();
            /******/}
          /******/var existingStyleTags = document.getElementsByTagName("style");
          /******/for (var i = 0; i < existingStyleTags.length; i++) {
            /******/var tag = existingStyleTags[i];
            /******/var dataHref = tag.getAttribute("data-href");
            /******/if (dataHref === href || dataHref === fullhref) return resolve();
            /******/}
          /******/var linkTag = document.createElement("link");
          /******/linkTag.rel = "stylesheet";
          /******/linkTag.type = "text/css";
          /******/linkTag.onload = resolve;
          /******/linkTag.onerror = function (event) {
            /******/var request = event && event.target && event.target.src || fullhref;
            /******/var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + request + ")");
            /******/err.request = request;
            /******/delete installedCssChunks[chunkId];
            /******/linkTag.parentNode.removeChild(linkTag);
            /******/reject(err);
            /******/};
          /******/linkTag.href = fullhref;
          /******/
          /******/var head = document.getElementsByTagName("head")[0];
          /******/head.appendChild(linkTag);
          /******/}).then(function () {
          /******/installedCssChunks[chunkId] = 0;
          /******/}));
        /******/}
    /******/
    /******/ // JSONP chunk loading for javascript
    /******/
    /******/var installedChunkData = installedChunks[chunkId];
    /******/if (installedChunkData !== 0) {// 0 means "already installed".
      /******/
      /******/ // a Promise means "currently loading".
      /******/if (installedChunkData) {
        /******/promises.push(installedChunkData[2]);
        /******/} else {
        /******/ // setup Promise in chunk cache
        /******/var promise = new Promise(function (resolve, reject) {
          /******/installedChunkData = installedChunks[chunkId] = [resolve, reject];
          /******/});
        /******/promises.push(installedChunkData[2] = promise);
        /******/
        /******/ // start chunk loading
        /******/var script = document.createElement('script');
        /******/var onScriptComplete;
        /******/
        /******/script.charset = 'utf-8';
        /******/script.timeout = 120;
        /******/if (__webpack_require__.nc) {
          /******/script.setAttribute("nonce", __webpack_require__.nc);
          /******/}
        /******/script.src = jsonpScriptSrc(chunkId);
        /******/
        /******/onScriptComplete = function onScriptComplete(event) {
          /******/ // avoid mem leaks in IE.
          /******/script.onerror = script.onload = null;
          /******/clearTimeout(timeout);
          /******/var chunk = installedChunks[chunkId];
          /******/if (chunk !== 0) {
            /******/if (chunk) {
              /******/var errorType = event && (event.type === 'load' ? 'missing' : event.type);
              /******/var realSrc = event && event.target && event.target.src;
              /******/var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
              /******/error.type = errorType;
              /******/error.request = realSrc;
              /******/chunk[1](error);
              /******/}
            /******/installedChunks[chunkId] = undefined;
            /******/}
          /******/};
        /******/var timeout = setTimeout(function () {
          /******/onScriptComplete({ type: 'timeout', target: script });
          /******/}, 120000);
        /******/script.onerror = script.onload = onScriptComplete;
        /******/document.head.appendChild(script);
        /******/}
      /******/}
    /******/return Promise.all(promises);
    /******/};
  /******/
  /******/ // expose the modules object (__webpack_modules__)
  /******/__webpack_require__.m = modules;
  /******/
  /******/ // expose the module cache
  /******/__webpack_require__.c = installedModules;
  /******/
  /******/ // define getter function for harmony exports
  /******/__webpack_require__.d = function (exports, name, getter) {
    /******/if (!__webpack_require__.o(exports, name)) {
      /******/Object.defineProperty(exports, name, { enumerable: true, get: getter });
      /******/}
    /******/};
  /******/
  /******/ // define __esModule on exports
  /******/__webpack_require__.r = function (exports) {
    /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
      /******/Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
      /******/}
    /******/Object.defineProperty(exports, '__esModule', { value: true });
    /******/};
  /******/
  /******/ // create a fake namespace object
  /******/ // mode & 1: value is a module id, require it
  /******/ // mode & 2: merge all properties of value into the ns
  /******/ // mode & 4: return value when already ns object
  /******/ // mode & 8|1: behave like require
  /******/__webpack_require__.t = function (value, mode) {
    /******/if (mode & 1) value = __webpack_require__(value);
    /******/if (mode & 8) return value;
    /******/if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;
    /******/var ns = Object.create(null);
    /******/__webpack_require__.r(ns);
    /******/Object.defineProperty(ns, 'default', { enumerable: true, value: value });
    /******/if (mode & 2 && typeof value != 'string') for (var key in value) {__webpack_require__.d(ns, key, function (key) {return value[key];}.bind(null, key));}
    /******/return ns;
    /******/};
  /******/
  /******/ // getDefaultExport function for compatibility with non-harmony modules
  /******/__webpack_require__.n = function (module) {
    /******/var getter = module && module.__esModule ?
    /******/function getDefault() {return module['default'];} :
    /******/function getModuleExports() {return module;};
    /******/__webpack_require__.d(getter, 'a', getter);
    /******/return getter;
    /******/};
  /******/
  /******/ // Object.prototype.hasOwnProperty.call
  /******/__webpack_require__.o = function (object, property) {return Object.prototype.hasOwnProperty.call(object, property);};
  /******/
  /******/ // __webpack_public_path__
  /******/__webpack_require__.p = "/";
  /******/
  /******/ // on error function for async loading
  /******/__webpack_require__.oe = function (err) {console.error(err);throw err;};
  /******/
  /******/var jsonpArray = global["webpackJsonp"] = global["webpackJsonp"] || [];
  /******/var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
  /******/jsonpArray.push = webpackJsonpCallback;
  /******/jsonpArray = jsonpArray.slice();
  /******/for (var i = 0; i < jsonpArray.length; i++) {webpackJsonpCallback(jsonpArray[i]);}
  /******/var parentJsonpFunction = oldJsonpFunction;
  /******/
  /******/
  /******/ // run deferred modules from other chunks
  /******/checkDeferredModules();
  /******/})(
/************************************************************************/
/******/[]);
});
define('common/vendor.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}\n\nvar _toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isStr(str) {\n  return typeof str === 'string';\n}\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction noop() {}\n\n/**\r\n                    * Create a cached version of a pure function.\r\n                    */\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\n/**\r\n   * Camelize a hyphen-delimited string.\r\n   */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});\n});\n\nvar HOOKS = [\n'invoke',\n'success',\n'fail',\n'complete',\n'returnValue'];\n\n\nvar globalInterceptors = {};\nvar scopedInterceptors = {};\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ?\n  parentVal ?\n  parentVal.concat(childVal) :\n  Array.isArray(childVal) ?\n  childVal : [childVal] :\n  parentVal;\n  return res ?\n  dedupeHooks(res) :\n  res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res;\n}\n\nfunction removeHook(hooks, hook) {\n  var index = hooks.indexOf(hook);\n  if (index !== -1) {\n    hooks.splice(index, 1);\n  }\n}\n\nfunction mergeInterceptorHook(interceptor, option) {\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction removeInterceptorHook(interceptor, option) {\n  if (!interceptor || !option) {\n    return;\n  }\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      removeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction addInterceptor(method, option) {\n  if (typeof method === 'string' && isPlainObject(option)) {\n    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);\n  } else if (isPlainObject(method)) {\n    mergeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction removeInterceptor(method, option) {\n  if (typeof method === 'string') {\n    if (isPlainObject(option)) {\n      removeInterceptorHook(scopedInterceptors[method], option);\n    } else {\n      delete scopedInterceptors[method];\n    }\n  } else if (isPlainObject(method)) {\n    removeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction wrapperHook(hook) {\n  return function (data) {\n    return hook(data) || data;\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\nfunction queue(hooks, data) {\n  var promise = false;\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    if (promise) {\n      promise = Promise.then(wrapperHook(hook));\n    } else {\n      var res = hook(data);\n      if (isPromise(res)) {\n        promise = Promise.resolve(res);\n      }\n      if (res === false) {\n        return {\n          then: function then() {} };\n\n      }\n    }\n  }\n  return promise || {\n    then: function then(callback) {\n      return callback(data);\n    } };\n\n}\n\nfunction wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ['success', 'fail', 'complete'].forEach(function (name) {\n    if (Array.isArray(interceptor[name])) {\n      var oldCallback = options[name];\n      options[name] = function callbackInterceptor(res) {\n        queue(interceptor[name], res).then(function (res) {\n          /* eslint-disable no-mixed-operators */\n          return isFn(oldCallback) && oldCallback(res) || res;\n        });\n      };\n    }\n  });\n  return options;\n}\n\nfunction wrapperReturnValue(method, returnValue) {\n  var returnValueHooks = [];\n  if (Array.isArray(globalInterceptors.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));\n  }\n  var interceptor = scopedInterceptors[method];\n  if (interceptor && Array.isArray(interceptor.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));\n  }\n  returnValueHooks.forEach(function (hook) {\n    returnValue = hook(returnValue) || returnValue;\n  });\n  return returnValue;\n}\n\nfunction getApiInterceptorHooks(method) {\n  var interceptor = Object.create(null);\n  Object.keys(globalInterceptors).forEach(function (hook) {\n    if (hook !== 'returnValue') {\n      interceptor[hook] = globalInterceptors[hook].slice();\n    }\n  });\n  var scopedInterceptor = scopedInterceptors[method];\n  if (scopedInterceptor) {\n    Object.keys(scopedInterceptor).forEach(function (hook) {\n      if (hook !== 'returnValue') {\n        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);\n      }\n    });\n  }\n  return interceptor;\n}\n\nfunction invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}\n  var interceptor = getApiInterceptorHooks(method);\n  if (interceptor && Object.keys(interceptor).length) {\n    if (Array.isArray(interceptor.invoke)) {\n      var res = queue(interceptor.invoke, options);\n      return res.then(function (options) {\n        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n      });\n    } else {\n      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n    }\n  }\n  return api.apply(void 0, [options].concat(params));\n}\n\nvar promiseInterceptor = {\n  returnValue: function returnValue(res) {\n    if (!isPromise(res)) {\n      return res;\n    }\n    return res.then(function (res) {\n      return res[1];\n    }).catch(function (res) {\n      return res[0];\n    });\n  } };\n\n\nvar SYNC_API_RE =\n/^\\$|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;\n\nvar CONTEXT_API_RE = /^create|Manager$/;\n\nvar CALLBACK_API_RE = /^on/;\n\nfunction isContextApi(name) {\n  return CONTEXT_API_RE.test(name);\n}\nfunction isSyncApi(name) {\n  return SYNC_API_RE.test(name);\n}\n\nfunction isCallbackApi(name) {\n  return CALLBACK_API_RE.test(name) && name !== 'onPush';\n}\n\nfunction handlePromise(promise) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).\n  catch(function (err) {return [err];});\n}\n\nfunction shouldPromise(name) {\n  if (\n  isContextApi(name) ||\n  isSyncApi(name) ||\n  isCallbackApi(name))\n  {\n    return false;\n  }\n  return true;\n}\n\nfunction promisify(name, api) {\n  if (!shouldPromise(name)) {\n    return api;\n  }\n  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}\n    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {\n      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));\n    }\n    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {\n      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {\n        success: resolve,\n        fail: reject })].concat(\n      params));\n      /* eslint-disable no-extend-native */\n      if (!Promise.prototype.finally) {\n        Promise.prototype.finally = function (callback) {\n          var promise = this.constructor;\n          return this.then(\n          function (value) {return promise.resolve(callback()).then(function () {return value;});},\n          function (reason) {return promise.resolve(callback()).then(function () {\n              throw reason;\n            });});\n\n        };\n      }\n    })));\n  };\n}\n\nvar EPS = 1e-4;\nvar BASE_DEVICE_WIDTH = 750;\nvar isIOS = false;\nvar deviceWidth = 0;\nvar deviceDPR = 0;\n\nfunction checkDeviceWidth() {var _wx$getSystemInfoSync =\n\n\n\n\n  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni\n\n  deviceWidth = windowWidth;\n  deviceDPR = pixelRatio;\n  isIOS = platform === 'ios';\n}\n\nfunction upx2px(number, newDeviceWidth) {\n  if (deviceWidth === 0) {\n    checkDeviceWidth();\n  }\n\n  number = Number(number);\n  if (number === 0) {\n    return 0;\n  }\n  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);\n  if (result < 0) {\n    result = -result;\n  }\n  result = Math.floor(result + EPS);\n  if (result === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number < 0 ? -result : result;\n}\n\nvar interceptors = {\n  promiseInterceptor: promiseInterceptor };\n\n\n\n\nvar baseApi = /*#__PURE__*/Object.freeze({\n  upx2px: upx2px,\n  interceptors: interceptors,\n  addInterceptor: addInterceptor,\n  removeInterceptor: removeInterceptor });\n\n\nvar protocols = {};\nvar todos = [];\nvar canIUses = [];\n\nvar CALLBACKS = ['success', 'fail', 'cancel', 'complete'];\n\nfunction processCallback(methodName, method, returnValue) {\n  return function (res) {\n    return method(processReturnValue(methodName, res, returnValue));\n  };\n}\n\nfunction processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析\n    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值\n    if (isFn(argsOption)) {\n      argsOption = argsOption(fromArgs, toArgs) || {};\n    }\n    for (var key in fromArgs) {\n      if (hasOwn(argsOption, key)) {\n        var keyOption = argsOption[key];\n        if (isFn(keyOption)) {\n          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);\n        }\n        if (!keyOption) {// 不支持的参数\n          console.warn(\"app-plus \".concat(methodName, \"\\u6682\\u4E0D\\u652F\\u6301\").concat(key));\n        } else if (isStr(keyOption)) {// 重写参数 key\n          toArgs[keyOption] = fromArgs[key];\n        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value\n          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;\n        }\n      } else if (CALLBACKS.indexOf(key) !== -1) {\n        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);\n      } else {\n        if (!keepFromArgs) {\n          toArgs[key] = fromArgs[key];\n        }\n      }\n    }\n    return toArgs;\n  } else if (isFn(fromArgs)) {\n    fromArgs = processCallback(methodName, fromArgs, returnValue);\n  }\n  return fromArgs;\n}\n\nfunction processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (isFn(protocols.returnValue)) {// 处理通用 returnValue\n    res = protocols.returnValue(methodName, res);\n  }\n  return processArgs(methodName, res, returnValue, {}, keepReturnValue);\n}\n\nfunction wrapper(methodName, method) {\n  if (hasOwn(protocols, methodName)) {\n    var protocol = protocols[methodName];\n    if (!protocol) {// 暂不支持的 api\n      return function () {\n        console.error(\"app-plus \\u6682\\u4E0D\\u652F\\u6301\".concat(methodName));\n      };\n    }\n    return function (arg1, arg2) {// 目前 api 最多两个参数\n      var options = protocol;\n      if (isFn(protocol)) {\n        options = protocol(arg1);\n      }\n\n      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);\n\n      var args = [arg1];\n      if (typeof arg2 !== 'undefined') {\n        args.push(arg2);\n      }\n      var returnValue = wx[options.name || methodName].apply(wx, args);\n      if (isSyncApi(methodName)) {// 同步 api\n        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));\n      }\n      return returnValue;\n    };\n  }\n  return method;\n}\n\nvar todoApis = Object.create(null);\n\nvar TODOS = [\n'onTabBarMidButtonTap',\n'subscribePush',\n'unsubscribePush',\n'onPush',\n'offPush',\n'share'];\n\n\nfunction createTodoApi(name) {\n  return function todoApi(_ref)\n\n\n  {var fail = _ref.fail,complete = _ref.complete;\n    var res = {\n      errMsg: \"\".concat(name, \":fail:\\u6682\\u4E0D\\u652F\\u6301 \").concat(name, \" \\u65B9\\u6CD5\") };\n\n    isFn(fail) && fail(res);\n    isFn(complete) && complete(res);\n  };\n}\n\nTODOS.forEach(function (name) {\n  todoApis[name] = createTodoApi(name);\n});\n\nvar getEmitter = function () {\n  if (typeof getUniEmitter === 'function') {\n    /* eslint-disable no-undef */\n    return getUniEmitter;\n  }\n  var Emitter;\n  return function getUniEmitter() {\n    if (!Emitter) {\n      Emitter = new _vue.default();\n    }\n    return Emitter;\n  };\n}();\n\nfunction apply(ctx, method, args) {\n  return ctx[method].apply(ctx, args);\n}\n\nfunction $on() {\n  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));\n}\nfunction $off() {\n  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));\n}\nfunction $once() {\n  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));\n}\nfunction $emit() {\n  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));\n}\n\nvar eventApi = /*#__PURE__*/Object.freeze({\n  $on: $on,\n  $off: $off,\n  $once: $once,\n  $emit: $emit });\n\n\nfunction requireNativePlugin(pluginName) {\n  /* eslint-disable no-undef */\n  if (typeof weex !== 'undefined') {\n    return weex.requireModule(pluginName);\n  }\n  /* eslint-disable no-undef */\n  return __requireNativePlugin__(pluginName);\n}\n\nfunction wrapper$1(webview) {\n  webview.$processed = true;\n\n  webview.postMessage = function (data) {\n    plus.webview.postMessageToUniNView({\n      type: 'UniAppSubNVue',\n      data: data },\n    webview.id);\n  };\n  var callbacks = [];\n  webview.onMessage = function (callback) {\n    callbacks.push(callback);\n  };\n  webview.$consumeMessage = function (e) {\n    callbacks.forEach(function (callback) {return callback(e);});\n  };\n\n  if (!webview.__uniapp_mask_id) {\n    return;\n  }\n  var maskColor = webview.__uniapp_mask;\n  var maskWebview = webview.__uniapp_mask_id === '0' ? {\n    setStyle: function setStyle(_ref2)\n\n    {var mask = _ref2.mask;\n      requireNativePlugin('uni-tabview').setMask({\n        color: mask });\n\n    } } :\n  plus.webview.getWebviewById(webview.__uniapp_mask_id);\n  var oldShow = webview.show;\n  var oldHide = webview.hide;\n  var oldClose = webview.close;\n\n  var showMask = function showMask() {\n    maskWebview.setStyle({\n      mask: maskColor });\n\n  };\n  var closeMask = function closeMask() {\n    maskWebview.setStyle({\n      mask: 'none' });\n\n  };\n  webview.show = function () {\n    showMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}\n    return oldShow.apply(webview, args);\n  };\n  webview.hide = function () {\n    closeMask();for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}\n    return oldHide.apply(webview, args);\n  };\n  webview.close = function () {\n    closeMask();\n    callbacks = [];for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}\n    return oldClose.apply(webview, args);\n  };\n}\n\nfunction getSubNVueById(id) {\n  var webview = plus.webview.getWebviewById(id);\n  if (webview && !webview.$processed) {\n    wrapper$1(webview);\n  }\n  return webview;\n}\n\n\n\nvar api = /*#__PURE__*/Object.freeze({\n  getSubNVueById: getSubNVueById,\n  requireNativePlugin: requireNativePlugin });\n\n\nvar MPPage = Page;\nvar MPComponent = Component;\n\nvar customizeRE = /:/g;\n\nvar customize = cached(function (str) {\n  return camelize(str.replace(customizeRE, '-'));\n});\n\nfunction initTriggerEvent(mpInstance) {\n  {\n    if (!wx.canIUse('nextTick')) {\n      return;\n    }\n  }\n  var oldTriggerEvent = mpInstance.triggerEvent;\n  mpInstance.triggerEvent = function (event) {for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {args[_key6 - 1] = arguments[_key6];}\n    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));\n  };\n}\n\nfunction initHook(name, options) {\n  var oldHook = options[name];\n  if (!oldHook) {\n    options[name] = function () {\n      initTriggerEvent(this);\n    };\n  } else {\n    options[name] = function () {\n      initTriggerEvent(this);for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}\n      return oldHook.apply(this, args);\n    };\n  }\n}\n\nPage = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('onLoad', options);\n  return MPPage(options);\n};\n\nComponent = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('created', options);\n  return MPComponent(options);\n};\n\nvar PAGE_EVENT_HOOKS = [\n'onPullDownRefresh',\n'onReachBottom',\n'onShareAppMessage',\n'onPageScroll',\n'onResize',\n'onTabItemTap'];\n\n\nfunction initMocks(vm, mocks) {\n  var mpInstance = vm.$mp[vm.mpType];\n  mocks.forEach(function (mock) {\n    if (hasOwn(mpInstance, mock)) {\n      vm[mock] = mpInstance[mock];\n    }\n  });\n}\n\nfunction hasHook(hook, vueOptions) {\n  if (!vueOptions) {\n    return true;\n  }\n\n  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {\n    return true;\n  }\n\n  vueOptions = vueOptions.default || vueOptions;\n\n  if (isFn(vueOptions)) {\n    if (isFn(vueOptions.extendOptions[hook])) {\n      return true;\n    }\n    if (vueOptions.super &&\n    vueOptions.super.options &&\n    Array.isArray(vueOptions.super.options[hook])) {\n      return true;\n    }\n    return false;\n  }\n\n  if (isFn(vueOptions[hook])) {\n    return true;\n  }\n  var mixins = vueOptions.mixins;\n  if (Array.isArray(mixins)) {\n    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});\n  }\n}\n\nfunction initHooks(mpOptions, hooks, vueOptions) {\n  hooks.forEach(function (hook) {\n    if (hasHook(hook, vueOptions)) {\n      mpOptions[hook] = function (args) {\n        return this.$vm && this.$vm.__call_hook(hook, args);\n      };\n    }\n  });\n}\n\nfunction initVueComponent(Vue, vueOptions) {\n  vueOptions = vueOptions.default || vueOptions;\n  var VueComponent;\n  if (isFn(vueOptions)) {\n    VueComponent = vueOptions;\n    vueOptions = VueComponent.extendOptions;\n  } else {\n    VueComponent = Vue.extend(vueOptions);\n  }\n  return [VueComponent, vueOptions];\n}\n\nfunction initSlots(vm, vueSlots) {\n  if (Array.isArray(vueSlots) && vueSlots.length) {\n    var $slots = Object.create(null);\n    vueSlots.forEach(function (slotName) {\n      $slots[slotName] = true;\n    });\n    vm.$scopedSlots = vm.$slots = $slots;\n  }\n}\n\nfunction initVueIds(vueIds, mpInstance) {\n  vueIds = (vueIds || '').split(',');\n  var len = vueIds.length;\n\n  if (len === 1) {\n    mpInstance._$vueId = vueIds[0];\n  } else if (len === 2) {\n    mpInstance._$vueId = vueIds[0];\n    mpInstance._$vuePid = vueIds[1];\n  }\n}\n\nfunction initData(vueOptions, context) {\n  var data = vueOptions.data || {};\n  var methods = vueOptions.methods || {};\n\n  if (typeof data === 'function') {\n    try {\n      data = data.call(context); // 支持 Vue.prototype 上挂的数据\n    } catch (e) {\n      if (Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\n        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);\n      }\n    }\n  } else {\n    try {\n      // 对 data 格式化\n      data = JSON.parse(JSON.stringify(data));\n    } catch (e) {}\n  }\n\n  if (!isPlainObject(data)) {\n    data = {};\n  }\n\n  Object.keys(methods).forEach(function (methodName) {\n    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {\n      data[methodName] = methods[methodName];\n    }\n  });\n\n  return data;\n}\n\nvar PROP_TYPES = [String, Number, Boolean, Object, Array, null];\n\nfunction createObserver(name) {\n  return function observer(newVal, oldVal) {\n    if (this.$vm) {\n      this.$vm[name] = newVal; // 为了触发其他非 render watcher\n    }\n  };\n}\n\nfunction initBehaviors(vueOptions, initBehavior) {\n  var vueBehaviors = vueOptions['behaviors'];\n  var vueExtends = vueOptions['extends'];\n  var vueMixins = vueOptions['mixins'];\n\n  var vueProps = vueOptions['props'];\n\n  if (!vueProps) {\n    vueOptions['props'] = vueProps = [];\n  }\n\n  var behaviors = [];\n  if (Array.isArray(vueBehaviors)) {\n    vueBehaviors.forEach(function (behavior) {\n      behaviors.push(behavior.replace('uni://', \"wx\".concat(\"://\")));\n      if (behavior === 'uni://form-field') {\n        if (Array.isArray(vueProps)) {\n          vueProps.push('name');\n          vueProps.push('value');\n        } else {\n          vueProps['name'] = {\n            type: String,\n            default: '' };\n\n          vueProps['value'] = {\n            type: [String, Number, Boolean, Array, Object, Date],\n            default: '' };\n\n        }\n      }\n    });\n  }\n  if (isPlainObject(vueExtends) && vueExtends.props) {\n    behaviors.push(\n    initBehavior({\n      properties: initProperties(vueExtends.props, true) }));\n\n\n  }\n  if (Array.isArray(vueMixins)) {\n    vueMixins.forEach(function (vueMixin) {\n      if (isPlainObject(vueMixin) && vueMixin.props) {\n        behaviors.push(\n        initBehavior({\n          properties: initProperties(vueMixin.props, true) }));\n\n\n      }\n    });\n  }\n  return behaviors;\n}\n\nfunction parsePropType(key, type, defaultValue, file) {\n  // [String]=>String\n  if (Array.isArray(type) && type.length === 1) {\n    return type[0];\n  }\n  return type;\n}\n\nfunction initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var properties = {};\n  if (!isBehavior) {\n    properties.vueId = {\n      type: String,\n      value: '' };\n\n    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots\n      type: null,\n      value: [],\n      observer: function observer(newVal, oldVal) {\n        var $slots = Object.create(null);\n        newVal.forEach(function (slotName) {\n          $slots[slotName] = true;\n        });\n        this.setData({\n          $slots: $slots });\n\n      } };\n\n  }\n  if (Array.isArray(props)) {// ['title']\n    props.forEach(function (key) {\n      properties[key] = {\n        type: null,\n        observer: createObserver(key) };\n\n    });\n  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}\n    Object.keys(props).forEach(function (key) {\n      var opts = props[key];\n      if (isPlainObject(opts)) {// title:{type:String,default:''}\n        var value = opts['default'];\n        if (isFn(value)) {\n          value = value();\n        }\n\n        opts.type = parsePropType(key, opts.type);\n\n        properties[key] = {\n          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,\n          value: value,\n          observer: createObserver(key) };\n\n      } else {// content:String\n        var type = parsePropType(key, opts);\n        properties[key] = {\n          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,\n          observer: createObserver(key) };\n\n      }\n    });\n  }\n  return properties;\n}\n\nfunction wrapper$2(event) {\n  // TODO 又得兼容 mpvue 的 mp 对象\n  try {\n    event.mp = JSON.parse(JSON.stringify(event));\n  } catch (e) {}\n\n  event.stopPropagation = noop;\n  event.preventDefault = noop;\n\n  event.target = event.target || {};\n\n  if (!hasOwn(event, 'detail')) {\n    event.detail = {};\n  }\n\n  if (isPlainObject(event.detail)) {\n    event.target = Object.assign({}, event.target, event.detail);\n  }\n\n  return event;\n}\n\nfunction getExtraValue(vm, dataPathsArray) {\n  var context = vm;\n  dataPathsArray.forEach(function (dataPathArray) {\n    var dataPath = dataPathArray[0];\n    var value = dataPathArray[2];\n    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']\n      var propPath = dataPathArray[1];\n      var valuePath = dataPathArray[3];\n\n      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;\n\n      if (Number.isInteger(vFor)) {\n        context = value;\n      } else if (!propPath) {\n        context = vFor[value];\n      } else {\n        if (Array.isArray(vFor)) {\n          context = vFor.find(function (vForItem) {\n            return vm.__get_value(propPath, vForItem) === value;\n          });\n        } else if (isPlainObject(vFor)) {\n          context = Object.keys(vFor).find(function (vForKey) {\n            return vm.__get_value(propPath, vFor[vForKey]) === value;\n          });\n        } else {\n          console.error('v-for 暂不支持循环数据：', vFor);\n        }\n      }\n\n      if (valuePath) {\n        context = vm.__get_value(valuePath, context);\n      }\n    }\n  });\n  return context;\n}\n\nfunction processEventExtra(vm, extra, event) {\n  var extraObj = {};\n\n  if (Array.isArray(extra) && extra.length) {\n    /**\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *'test'\r\n                                              */\n    extra.forEach(function (dataPath, index) {\n      if (typeof dataPath === 'string') {\n        if (!dataPath) {// model,prop.sync\n          extraObj['$' + index] = vm;\n        } else {\n          if (dataPath === '$event') {// $event\n            extraObj['$' + index] = event;\n          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value\n            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);\n          } else {\n            extraObj['$' + index] = vm.__get_value(dataPath);\n          }\n        }\n      } else {\n        extraObj['$' + index] = getExtraValue(vm, dataPath);\n      }\n    });\n  }\n\n  return extraObj;\n}\n\nfunction getObjByArray(arr) {\n  var obj = {};\n  for (var i = 1; i < arr.length; i++) {\n    var element = arr[i];\n    obj[element[0]] = element[1];\n  }\n  return obj;\n}\n\nfunction processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;\n  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象\n  if (isCustom) {// 自定义事件\n    isCustomMPEvent = event.currentTarget &&\n    event.currentTarget.dataset &&\n    event.currentTarget.dataset.comType === 'wx';\n    if (!args.length) {// 无参数，直接传入 event 或 detail 数组\n      if (isCustomMPEvent) {\n        return [event];\n      }\n      return event.detail.__args__ || event.detail;\n    }\n  }\n\n  var extraObj = processEventExtra(vm, extra, event);\n\n  var ret = [];\n  args.forEach(function (arg) {\n    if (arg === '$event') {\n      if (methodName === '__set_model' && !isCustom) {// input v-model value\n        ret.push(event.target.value);\n      } else {\n        if (isCustom && !isCustomMPEvent) {\n          ret.push(event.detail.__args__[0]);\n        } else {// wxcomponent 组件或内置组件\n          ret.push(event);\n        }\n      }\n    } else {\n      if (Array.isArray(arg) && arg[0] === 'o') {\n        ret.push(getObjByArray(arg));\n      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {\n        ret.push(extraObj[arg]);\n      } else {\n        ret.push(arg);\n      }\n    }\n  });\n\n  return ret;\n}\n\nvar ONCE = '~';\nvar CUSTOM = '^';\n\nfunction isMatchEventType(eventType, optType) {\n  return eventType === optType ||\n\n  optType === 'regionchange' && (\n\n  eventType === 'begin' ||\n  eventType === 'end');\n\n\n}\n\nfunction handleEvent(event) {var _this = this;\n  event = wrapper$2(event);\n\n  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]\n  var dataset = (event.currentTarget || event.target).dataset;\n  if (!dataset) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰\n  if (!eventOpts) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n\n  // [['handle',[1,2,a]],['handle1',[1,2,a]]]\n  var eventType = event.type;\n\n  var ret = [];\n\n  eventOpts.forEach(function (eventOpt) {\n    var type = eventOpt[0];\n    var eventsArray = eventOpt[1];\n\n    var isCustom = type.charAt(0) === CUSTOM;\n    type = isCustom ? type.slice(1) : type;\n    var isOnce = type.charAt(0) === ONCE;\n    type = isOnce ? type.slice(1) : type;\n\n    if (eventsArray && isMatchEventType(eventType, type)) {\n      eventsArray.forEach(function (eventArray) {\n        var methodName = eventArray[0];\n        if (methodName) {\n          var handlerCtx = _this.$vm;\n          if (\n          handlerCtx.$options.generic &&\n          handlerCtx.$parent &&\n          handlerCtx.$parent.$parent)\n          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots\n            handlerCtx = handlerCtx.$parent.$parent;\n          }\n          if (methodName === '$emit') {\n            handlerCtx.$emit.apply(handlerCtx,\n            processEventArgs(\n            _this.$vm,\n            event,\n            eventArray[1],\n            eventArray[2],\n            isCustom,\n            methodName));\n\n            return;\n          }\n          var handler = handlerCtx[methodName];\n          if (!isFn(handler)) {\n            throw new Error(\" _vm.\".concat(methodName, \" is not a function\"));\n          }\n          if (isOnce) {\n            if (handler.once) {\n              return;\n            }\n            handler.once = true;\n          }\n          ret.push(handler.apply(handlerCtx, processEventArgs(\n          _this.$vm,\n          event,\n          eventArray[1],\n          eventArray[2],\n          isCustom,\n          methodName)));\n\n        }\n      });\n    }\n  });\n\n  if (\n  eventType === 'input' &&\n  ret.length === 1 &&\n  typeof ret[0] !== 'undefined')\n  {\n    return ret[0];\n  }\n}\n\nvar hooks = [\n'onShow',\n'onHide',\n'onError',\n'onPageNotFound'];\n\n\nfunction parseBaseApp(vm, _ref3)\n\n\n{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;\n  if (vm.$options.store) {\n    _vue.default.prototype.$store = vm.$options.store;\n  }\n\n  _vue.default.prototype.mpHost = \"app-plus\";\n\n  _vue.default.mixin({\n    beforeCreate: function beforeCreate() {\n      if (!this.$options.mpType) {\n        return;\n      }\n\n      this.mpType = this.$options.mpType;\n\n      this.$mp = _defineProperty({\n        data: {} },\n      this.mpType, this.$options.mpInstance);\n\n\n      this.$scope = this.$options.mpInstance;\n\n      delete this.$options.mpType;\n      delete this.$options.mpInstance;\n\n      if (this.mpType !== 'app') {\n        initRefs(this);\n        initMocks(this, mocks);\n      }\n    } });\n\n\n  var appOptions = {\n    onLaunch: function onLaunch(args) {\n      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前\n        return;\n      }\n\n      this.$vm = vm;\n\n      this.$vm.$mp = {\n        app: this };\n\n\n      this.$vm.$scope = this;\n      // vm 上也挂载 globalData\n      this.$vm.globalData = this.globalData;\n\n      this.$vm._isMounted = true;\n      this.$vm.__call_hook('mounted', args);\n\n      this.$vm.__call_hook('onLaunch', args);\n    } };\n\n\n  // 兼容旧版本 globalData\n  appOptions.globalData = vm.$options.globalData || {};\n  // 将 methods 中的方法挂在 getApp() 中\n  var methods = vm.$options.methods;\n  if (methods) {\n    Object.keys(methods).forEach(function (name) {\n      appOptions[name] = methods[name];\n    });\n  }\n\n  initHooks(appOptions, hooks);\n\n  return appOptions;\n}\n\nvar mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];\n\nfunction findVmByVueId(vm, vuePid) {\n  var $children = vm.$children;\n  // 优先查找直属\n  var parentVm = $children.find(function (childVm) {return childVm.$scope._$vueId === vuePid;});\n  if (parentVm) {\n    return parentVm;\n  }\n  // 反向递归查找\n  for (var i = $children.length - 1; i >= 0; i--) {\n    parentVm = findVmByVueId($children[i], vuePid);\n    if (parentVm) {\n      return parentVm;\n    }\n  }\n}\n\nfunction initBehavior(options) {\n  return Behavior(options);\n}\n\nfunction isPage() {\n  return !!this.route;\n}\n\nfunction initRelation(detail) {\n  this.triggerEvent('__l', detail);\n}\n\nfunction initRefs(vm) {\n  var mpInstance = vm.$scope;\n  Object.defineProperty(vm, '$refs', {\n    get: function get() {\n      var $refs = {};\n      var components = mpInstance.selectAllComponents('.vue-ref');\n      components.forEach(function (component) {\n        var ref = component.dataset.ref;\n        $refs[ref] = component.$vm || component;\n      });\n      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');\n      forComponents.forEach(function (component) {\n        var ref = component.dataset.ref;\n        if (!$refs[ref]) {\n          $refs[ref] = [];\n        }\n        $refs[ref].push(component.$vm || component);\n      });\n      return $refs;\n    } });\n\n}\n\nfunction handleLink(event) {var _ref4 =\n\n\n\n  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)\n\n  var parentVm;\n\n  if (vuePid) {\n    parentVm = findVmByVueId(this.$vm, vuePid);\n  }\n\n  if (!parentVm) {\n    parentVm = this.$vm;\n  }\n\n  vueOptions.parent = parentVm;\n}\n\nfunction parseApp(vm) {\n  return parseBaseApp(vm, {\n    mocks: mocks,\n    initRefs: initRefs });\n\n}\n\nvar hooks$1 = [\n'onUniNViewMessage'];\n\n\nfunction parseApp$1(vm) {\n  var appOptions = parseApp(vm);\n\n  initHooks(appOptions, hooks$1);\n\n  return appOptions;\n}\n\nfunction createApp(vm) {\n  App(parseApp$1(vm));\n  return vm;\n}\n\nfunction parseBaseComponent(vueComponentOptions)\n\n\n{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =\n  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];\n\n  var options = {\n    multipleSlots: true,\n    addGlobalClass: true };\n\n\n  var componentOptions = {\n    options: options,\n    data: initData(vueOptions, _vue.default.prototype),\n    behaviors: initBehaviors(vueOptions, initBehavior),\n    properties: initProperties(vueOptions.props, false, vueOptions.__file),\n    lifetimes: {\n      attached: function attached() {\n        var properties = this.properties;\n\n        var options = {\n          mpType: isPage.call(this) ? 'page' : 'component',\n          mpInstance: this,\n          propsData: properties };\n\n\n        initVueIds(properties.vueId, this);\n\n        // 处理父子关系\n        initRelation.call(this, {\n          vuePid: this._$vuePid,\n          vueOptions: options });\n\n\n        // 初始化 vue 实例\n        this.$vm = new VueComponent(options);\n\n        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）\n        initSlots(this.$vm, properties.vueSlots);\n\n        // 触发首次 setData\n        this.$vm.$mount();\n      },\n      ready: function ready() {\n        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发\n        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800\n        if (this.$vm) {\n          this.$vm._isMounted = true;\n          this.$vm.__call_hook('mounted');\n          this.$vm.__call_hook('onReady');\n        }\n      },\n      detached: function detached() {\n        this.$vm.$destroy();\n      } },\n\n    pageLifetimes: {\n      show: function show(args) {\n        this.$vm && this.$vm.__call_hook('onPageShow', args);\n      },\n      hide: function hide() {\n        this.$vm && this.$vm.__call_hook('onPageHide');\n      },\n      resize: function resize(size) {\n        this.$vm && this.$vm.__call_hook('onPageResize', size);\n      } },\n\n    methods: {\n      __l: handleLink,\n      __e: handleEvent } };\n\n\n\n  if (Array.isArray(vueOptions.wxsCallMethods)) {\n    vueOptions.wxsCallMethods.forEach(function (callMethod) {\n      componentOptions.methods[callMethod] = function (args) {\n        return this.$vm[callMethod](args);\n      };\n    });\n  }\n\n  if (isPage) {\n    return componentOptions;\n  }\n  return [componentOptions, VueComponent];\n}\n\nfunction parseComponent(vueComponentOptions) {\n  return parseBaseComponent(vueComponentOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nfunction parseComponent$1(vueComponentOptions) {\n  var componentOptions = parseComponent(vueComponentOptions);\n\n  componentOptions.methods.$getAppWebview = function () {\n    return plus.webview.getWebviewById(\"\".concat(this.__wxWebviewId__));\n  };\n  return componentOptions;\n}\n\nvar hooks$2 = [\n'onShow',\n'onHide',\n'onUnload'];\n\n\nhooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);\n\nfunction parseBasePage(vuePageOptions, _ref6)\n\n\n{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;\n  var pageOptions = parseComponent$1(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$2, vuePageOptions);\n\n  pageOptions.methods.onLoad = function (args) {\n    this.$vm.$mp.query = args; // 兼容 mpvue\n    this.$vm.__call_hook('onLoad', args);\n  };\n\n  return pageOptions;\n}\n\nfunction parsePage(vuePageOptions) {\n  return parseBasePage(vuePageOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nvar hooks$3 = [\n'onBackPress',\n'onNavigationBarButtonTap',\n'onNavigationBarSearchInputChanged',\n'onNavigationBarSearchInputConfirmed',\n'onNavigationBarSearchInputClicked'];\n\n\nfunction parsePage$1(vuePageOptions) {\n  var pageOptions = parsePage(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$3);\n\n  return pageOptions;\n}\n\nfunction createPage(vuePageOptions) {\n  {\n    return Component(parsePage$1(vuePageOptions));\n  }\n}\n\nfunction createComponent(vueOptions) {\n  {\n    return Component(parseComponent$1(vueOptions));\n  }\n}\n\ntodos.forEach(function (todoApi) {\n  protocols[todoApi] = false;\n});\n\ncanIUses.forEach(function (canIUseApi) {\n  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :\n  canIUseApi;\n  if (!wx.canIUse(apiName)) {\n    protocols[canIUseApi] = false;\n  }\n});\n\nvar uni = {};\n\nif (typeof Proxy !== 'undefined' && \"app-plus\" !== 'app-plus') {\n  uni = new Proxy({}, {\n    get: function get(target, name) {\n      if (target[name]) {\n        return target[name];\n      }\n      if (baseApi[name]) {\n        return baseApi[name];\n      }\n      if (api[name]) {\n        return promisify(name, api[name]);\n      }\n      if (eventApi[name]) {\n        return eventApi[name];\n      }\n      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {\n        return;\n      }\n      return promisify(name, wrapper(name, wx[name]));\n    },\n    set: function set(target, name, value) {\n      target[name] = value;\n      return true;\n    } });\n\n} else {\n  Object.keys(baseApi).forEach(function (name) {\n    uni[name] = baseApi[name];\n  });\n\n  Object.keys(eventApi).forEach(function (name) {\n    uni[name] = eventApi[name];\n  });\n\n  Object.keys(api).forEach(function (name) {\n    uni[name] = promisify(name, api[name]);\n  });\n\n  Object.keys(wx).forEach(function (name) {\n    if (hasOwn(wx, name) || hasOwn(protocols, name)) {\n      uni[name] = promisify(name, wrapper(name, wx[name]));\n    }\n  });\n}\n\n{\n  if (typeof global !== 'undefined') {\n    global.uni = uni;\n    global.UniEmitter = eventApi;\n  }\n}\n\nwx.createApp = createApp;\nwx.createPage = createPage;\nwx.createComponent = createComponent;\n\nvar uni$1 = uni;var _default =\n\nuni$1;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 12:
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = formatLog;function typof(v) {\n  var s = Object.prototype.toString.call(v);\n  return s.substring(8, s.length - 1);\n}\n\nfunction formatLog() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var msgs = args.map(function (v) {\n    var type = Object.prototype.toString.call(v);\n\n    if (type.toLowerCase() === '[object object]') {\n      try {\n        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---';\n      } catch (e) {\n        v = '[object object]';\n      }\n    } else {\n      if (v === null) {\n        v = '---NULL---';\n      } else if (v === undefined) {\n        v = '---UNDEFINED---';\n      } else {\n        var vType = typof(v).toUpperCase();\n\n        if (vType === 'NUMBER' || vType === 'BOOLEAN') {\n          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---';\n        } else {\n          v = String(v);\n        }\n      }\n    }\n\n    return v;\n  });\n  var msg = '';\n\n  if (msgs.length > 1) {\n    var lastMsg = msgs.pop();\n    msg = msgs.join('---COMMA---');\n\n    if (lastMsg.indexOf(' at ') === 0) {\n      msg += lastMsg;\n    } else {\n      msg += '---COMMA---' + lastMsg;\n    }\n  } else {\n    msg = msgs[0];\n  }\n\n  return msg;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbInR5cG9mIiwidiIsInMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJmb3JtYXRMb2ciLCJfbGVuIiwiYXJndW1lbnRzIiwiYXJncyIsIkFycmF5IiwiX2tleSIsIm1zZ3MiLCJtYXAiLCJ0eXBlIiwidG9Mb3dlckNhc2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZSIsInVuZGVmaW5lZCIsInZUeXBlIiwidG9VcHBlckNhc2UiLCJTdHJpbmciLCJtc2ciLCJsYXN0TXNnIiwicG9wIiwiam9pbiIsImluZGV4T2YiXSwibWFwcGluZ3MiOiIwRkFBQSxTQUFTQSxLQUFULENBQWdCQyxDQUFoQixFQUFtQjtBQUNqQixNQUFJQyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsUUFBakIsQ0FBMEJDLElBQTFCLENBQStCTCxDQUEvQixDQUFSO0FBQ0EsU0FBT0MsQ0FBQyxDQUFDSyxTQUFGLENBQVksQ0FBWixFQUFlTCxDQUFDLENBQUNNLE1BQUYsR0FBVyxDQUExQixDQUFQO0FBQ0Q7O0FBRWMsU0FBU0MsU0FBVCxHQUFzQjtBQUNuQyxPQUFLLElBQUlDLElBQUksR0FBR0MsU0FBUyxDQUFDSCxNQUFyQixFQUE2QkksSUFBSSxHQUFHLElBQUlDLEtBQUosQ0FBVUgsSUFBVixDQUFwQyxFQUFxREksSUFBSSxHQUFHLENBQWpFLEVBQW9FQSxJQUFJLEdBQUdKLElBQTNFLEVBQWlGSSxJQUFJLEVBQXJGLEVBQXlGO0FBQ3ZGRixRQUFJLENBQUNFLElBQUQsQ0FBSixHQUFhSCxTQUFTLENBQUNHLElBQUQsQ0FBdEI7QUFDRDs7QUFFRCxNQUFJQyxJQUFJLEdBQUdILElBQUksQ0FBQ0ksR0FBTCxDQUFTLFVBQVVmLENBQVYsRUFBYTtBQUMvQixRQUFJZ0IsSUFBSSxHQUFHZCxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFFBQWpCLENBQTBCQyxJQUExQixDQUErQkwsQ0FBL0IsQ0FBWDs7QUFFQSxRQUFJZ0IsSUFBSSxDQUFDQyxXQUFMLE9BQXVCLGlCQUEzQixFQUE4QztBQUM1QyxVQUFJO0FBQ0ZqQixTQUFDLEdBQUcscUJBQXFCa0IsSUFBSSxDQUFDQyxTQUFMLENBQWVuQixDQUFmLENBQXJCLEdBQXlDLGdCQUE3QztBQUNELE9BRkQsQ0FFRSxPQUFPb0IsQ0FBUCxFQUFVO0FBQ1ZwQixTQUFDLEdBQUcsaUJBQUo7QUFDRDtBQUNGLEtBTkQsTUFNTztBQUNMLFVBQUlBLENBQUMsS0FBSyxJQUFWLEVBQWdCO0FBQ2RBLFNBQUMsR0FBRyxZQUFKO0FBQ0QsT0FGRCxNQUVPLElBQUlBLENBQUMsS0FBS3FCLFNBQVYsRUFBcUI7QUFDMUJyQixTQUFDLEdBQUcsaUJBQUo7QUFDRCxPQUZNLE1BRUE7QUFDTCxZQUFJc0IsS0FBSyxHQUFHdkIsS0FBSyxDQUFDQyxDQUFELENBQUwsQ0FBU3VCLFdBQVQsRUFBWjs7QUFFQSxZQUFJRCxLQUFLLEtBQUssUUFBVixJQUFzQkEsS0FBSyxLQUFLLFNBQXBDLEVBQStDO0FBQzdDdEIsV0FBQyxHQUFHLGNBQWNzQixLQUFkLEdBQXNCLEtBQXRCLEdBQThCdEIsQ0FBOUIsR0FBa0MsU0FBbEMsR0FBOENzQixLQUE5QyxHQUFzRCxLQUExRDtBQUNELFNBRkQsTUFFTztBQUNMdEIsV0FBQyxHQUFHd0IsTUFBTSxDQUFDeEIsQ0FBRCxDQUFWO0FBQ0Q7QUFDRjtBQUNGOztBQUVELFdBQU9BLENBQVA7QUFDRCxHQTFCVSxDQUFYO0FBMkJBLE1BQUl5QixHQUFHLEdBQUcsRUFBVjs7QUFFQSxNQUFJWCxJQUFJLENBQUNQLE1BQUwsR0FBYyxDQUFsQixFQUFxQjtBQUNuQixRQUFJbUIsT0FBTyxHQUFHWixJQUFJLENBQUNhLEdBQUwsRUFBZDtBQUNBRixPQUFHLEdBQUdYLElBQUksQ0FBQ2MsSUFBTCxDQUFVLGFBQVYsQ0FBTjs7QUFFQSxRQUFJRixPQUFPLENBQUNHLE9BQVIsQ0FBZ0IsTUFBaEIsTUFBNEIsQ0FBaEMsRUFBbUM7QUFDakNKLFNBQUcsSUFBSUMsT0FBUDtBQUNELEtBRkQsTUFFTztBQUNMRCxTQUFHLElBQUksZ0JBQWdCQyxPQUF2QjtBQUNEO0FBQ0YsR0FURCxNQVNPO0FBQ0xELE9BQUcsR0FBR1gsSUFBSSxDQUFDLENBQUQsQ0FBVjtBQUNEOztBQUVELFNBQU9XLEdBQVA7QUFDRCIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHR5cG9mICh2KSB7XHJcbiAgdmFyIHMgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodilcclxuICByZXR1cm4gcy5zdWJzdHJpbmcoOCwgcy5sZW5ndGggLSAxKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRMb2cgKCkge1xyXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xyXG4gICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XVxyXG4gIH1cclxuXHJcbiAgdmFyIG1zZ3MgPSBhcmdzLm1hcChmdW5jdGlvbiAodikge1xyXG4gICAgdmFyIHR5cGUgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodilcclxuXHJcbiAgICBpZiAodHlwZS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBvYmplY3RdJykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHYgPSAnLS0tQkVHSU46SlNPTi0tLScgKyBKU09OLnN0cmluZ2lmeSh2KSArICctLS1FTkQ6SlNPTi0tLSdcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHYgPSAnW29iamVjdCBvYmplY3RdJ1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodiA9PT0gbnVsbCkge1xyXG4gICAgICAgIHYgPSAnLS0tTlVMTC0tLSdcclxuICAgICAgfSBlbHNlIGlmICh2ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB2ID0gJy0tLVVOREVGSU5FRC0tLSdcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgdlR5cGUgPSB0eXBvZih2KS50b1VwcGVyQ2FzZSgpXHJcblxyXG4gICAgICAgIGlmICh2VHlwZSA9PT0gJ05VTUJFUicgfHwgdlR5cGUgPT09ICdCT09MRUFOJykge1xyXG4gICAgICAgICAgdiA9ICctLS1CRUdJTjonICsgdlR5cGUgKyAnLS0tJyArIHYgKyAnLS0tRU5EOicgKyB2VHlwZSArICctLS0nXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHYgPSBTdHJpbmcodilcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdlxyXG4gIH0pXHJcbiAgdmFyIG1zZyA9ICcnXHJcblxyXG4gIGlmIChtc2dzLmxlbmd0aCA+IDEpIHtcclxuICAgIHZhciBsYXN0TXNnID0gbXNncy5wb3AoKVxyXG4gICAgbXNnID0gbXNncy5qb2luKCctLS1DT01NQS0tLScpXHJcblxyXG4gICAgaWYgKGxhc3RNc2cuaW5kZXhPZignIGF0ICcpID09PSAwKSB7XHJcbiAgICAgIG1zZyArPSBsYXN0TXNnXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtc2cgKz0gJy0tLUNPTU1BLS0tJyArIGxhc3RNc2dcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgbXNnID0gbXNnc1swXVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIG1zZ1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),

/***/ 15:
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 3:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    {\n      if(vm.$scope && vm.$scope.is){\n        return vm.$scope.is\n      }\n    }\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.SharedObject.target) {\n    Dep.SharedObject.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\n// fixed by xxxxxx (nvue shared vuex)\n/* eslint-disable no-undef */\nDep.SharedObject = typeof SharedObject !== 'undefined' ? SharedObject : {};\nDep.SharedObject.target = null;\nDep.SharedObject.targetStack = [];\n\nfunction pushTarget (target) {\n  Dep.SharedObject.targetStack.push(target);\n  Dep.SharedObject.target = target;\n}\n\nfunction popTarget () {\n  Dep.SharedObject.targetStack.pop();\n  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑\n        if(value.push !== value.__proto__.push){\n          copyAugment(value, arrayMethods, arrayKeys);\n        } else {\n          protoAugment(value, arrayMethods);\n        }\n      }\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.SharedObject.target) { // fixed by xxxxxx\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if ( true && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if ( true && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if ( true && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       true && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page\n      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){\n        (slots['page'] || (slots['page'] = [])).push(child);\n      }else{\n        (slots.default || (slots.default = [])).push(child);\n      }\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     true && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if ( true &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       true && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : undefined\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : undefined;\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          {\n            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn\n                return\n            }\n            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警\n            if(\n                key === 'value' && \n                Array.isArray(vm.$options.behaviors) &&\n                vm.$options.behaviors.indexOf('uni://form-field') !== -1\n              ){\n              return\n            }\n            if(vm._getFormData){\n              return\n            }\n            var $parent = vm.$parent;\n            while($parent){\n              if($parent.__next_tick_pending){\n                return  \n              }\n              $parent = $parent.$parent;\n            }\n          }\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {}\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n       true && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if ( true && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if ( true &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.SharedObject.target) {// fixed by xxxxxx\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {}\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  \n    initState(vm);\n    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props\n    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      \n\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if ( true &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/**\n * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js\n */\nvar ARRAYTYPE = '[object Array]';\nvar OBJECTTYPE = '[object Object]';\n// const FUNCTIONTYPE = '[object Function]'\n\nfunction diff(current, pre) {\n    var result = {};\n    syncKeys(current, pre);\n    _diff(current, pre, '', result);\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (var key in pre) {\n                var currentValue = current[key];\n                if (currentValue === undefined) {\n                    current[key] = null;\n                } else {\n                    syncKeys(currentValue, pre[key]);\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach(function (item, index) {\n                syncKeys(current[index], item);\n            });\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current);\n        } else {\n            var loop = function ( key ) {\n                var currentValue = current[key];\n                var preValue = pre[key];\n                var currentType = type(currentValue);\n                var preType = type(preValue);\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                        } else {\n                            currentValue.forEach(function (item, index) {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result);\n                            });\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        for (var subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result);\n                        }\n                    }\n                }\n            };\n\n            for (var key in current) loop( key );\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current);\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current);\n            } else {\n                current.forEach(function (item, index) {\n                    _diff(item, pre[index], path + '[' + index + ']', result);\n                });\n            }\n        }\n    } else {\n        setResult(result, path, current);\n    }\n}\n\nfunction setResult(result, k, v) {\n    // if (type(v) != FUNCTIONTYPE) {\n        result[k] = v;\n    // }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}\n\n/*  */\r\n\r\nfunction flushCallbacks$1(vm) {\r\n    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {\r\n        if (Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n            var mpInstance = vm.$scope;\r\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\r\n                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');\r\n        }\r\n        var copies = vm.__next_tick_callbacks.slice(0);\r\n        vm.__next_tick_callbacks.length = 0;\r\n        for (var i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasRenderWatcher(vm) {\r\n    return queue.find(function (watcher) { return vm._watcher === watcher; })\r\n}\r\n\r\nfunction nextTick$1(vm, cb) {\r\n    //1.nextTick 之前 已 setData 且 setData 还未回调完成\r\n    //2.nextTick 之前存在 render watcher\r\n    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {\n        if(Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\n                ']:nextVueTick');\n        }\r\n        return nextTick(cb, vm)\r\n    }else{\n        if(Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance$1 = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +\n                ']:nextMPTick');\n        }\n    }\r\n    var _resolve;\r\n    if (!vm.__next_tick_callbacks) {\r\n        vm.__next_tick_callbacks = [];\r\n    }\r\n    vm.__next_tick_callbacks.push(function () {\r\n        if (cb) {\r\n            try {\r\n                cb.call(vm);\r\n            } catch (e) {\r\n                handleError(e, vm, 'nextTick');\r\n            }\r\n        } else if (_resolve) {\r\n            _resolve(vm);\r\n        }\r\n    });\r\n    // $flow-disable-line\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        })\r\n    }\r\n}\n\n/*  */\r\n\r\nfunction cloneWithData(vm) {\r\n  // 确保当前 vm 所有数据被同步\r\n  var ret = Object.create(null);\r\n  var dataKeys = [].concat(\r\n    Object.keys(vm._data || {}),\r\n    Object.keys(vm._computedWatchers || {}));\r\n\r\n  dataKeys.reduce(function(ret, key) {\r\n    ret[key] = vm[key];\r\n    return ret\r\n  }, ret);\r\n  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据\r\n  Object.assign(ret, vm.$mp.data || {});\r\n  if (\r\n    Array.isArray(vm.$options.behaviors) &&\r\n    vm.$options.behaviors.indexOf('uni://form-field') !== -1\r\n  ) { //form-field\r\n    ret['name'] = vm.name;\r\n    ret['value'] = vm.value;\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(ret))\r\n}\r\n\r\nvar patch = function(oldVnode, vnode) {\n  var this$1 = this;\n\r\n  if (vnode === null) { //destroy\r\n    return\r\n  }\r\n  if (this.mpType === 'page' || this.mpType === 'component') {\r\n    var mpInstance = this.$scope;\r\n    var data = Object.create(null);\r\n    try {\r\n      data = cloneWithData(this);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    data.__webviewId__ = mpInstance.data.__webviewId__;\r\n    var mpData = Object.create(null);\r\n    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据\r\n      mpData[key] = mpInstance.data[key];\r\n    });\r\n    var diffData = diff(data, mpData);\r\n    if (Object.keys(diffData).length) {\r\n      if (Object({\"NODE_ENV\":\"development\",\"VUE_APP_PLATFORM\":\"app-plus\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +\r\n          ']差量更新',\r\n          JSON.stringify(diffData));\r\n      }\r\n      this.__next_tick_pending = true;\r\n      mpInstance.setData(diffData, function () {\r\n        this$1.__next_tick_pending = false;\r\n        flushCallbacks$1(this$1);\r\n      });\r\n    } else {\r\n      flushCallbacks$1(this);\r\n    }\r\n  }\r\n};\n\n/*  */\n\nfunction createEmptyRender() {\n\n}\n\nfunction mountComponent$1(\n  vm,\n  el,\n  hydrating\n) {\n  if (!vm.mpType) {//main.js 中的 new Vue\n    return vm\n  }\n  if (vm.mpType === 'app') {\n    vm.$options.render = createEmptyRender;\n  }\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyRender;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  \n  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');\n\n  var updateComponent = function () {\n    vm._update(vm._render(), hydrating);\n  };\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n  return vm\n}\n\n/*  */\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/*  */\r\n\r\nvar MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];\r\n\r\nfunction getTarget(obj, path) {\r\n  var parts = path.split('.');\r\n  var key = parts[0];\r\n  if (key.indexOf('__$n') === 0) { //number index\r\n    key = parseInt(key.replace('__$n', ''));\r\n  }\r\n  if (parts.length === 1) {\r\n    return obj[key]\r\n  }\r\n  return getTarget(obj[key], parts.slice(1).join('.'))\r\n}\r\n\r\nfunction internalMixin(Vue) {\r\n\r\n  Vue.config.errorHandler = function(err) {\r\n    console.error(err);\r\n  };\r\n\r\n  var oldEmit = Vue.prototype.$emit;\r\n\r\n  Vue.prototype.$emit = function(event) {\r\n    if (this.$scope && event) {\r\n      this.$scope['triggerEvent'](event, {\r\n        __args__: toArray(arguments, 1)\r\n      });\r\n    }\r\n    return oldEmit.apply(this, arguments)\r\n  };\r\n\r\n  Vue.prototype.$nextTick = function(fn) {\r\n    return nextTick$1(this, fn)\r\n  };\r\n\r\n  MP_METHODS.forEach(function (method) {\r\n    Vue.prototype[method] = function(args) {\r\n      if (this.$scope) {\r\n        return this.$scope[method](args)\r\n      }\r\n    };\r\n  });\r\n\r\n  Vue.prototype.__init_provide = initProvide;\r\n\r\n  Vue.prototype.__init_injections = initInjections;\r\n\r\n  Vue.prototype.__call_hook = function(hook, args) {\r\n    var vm = this;\r\n    // #7573 disable dep collection when invoking lifecycle hooks\r\n    pushTarget();\r\n    var handlers = vm.$options[hook];\r\n    var info = hook + \" hook\";\r\n    var ret;\r\n    if (handlers) {\r\n      for (var i = 0, j = handlers.length; i < j; i++) {\r\n        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);\r\n      }\r\n    }\r\n    if (vm._hasHookEvent) {\r\n      vm.$emit('hook:' + hook);\r\n    }\r\n    popTarget();\r\n    return ret\r\n  };\r\n\r\n  Vue.prototype.__set_model = function(target, key, value, modifiers) {\r\n    if (Array.isArray(modifiers)) {\r\n      if (modifiers.indexOf('trim') !== -1) {\r\n        value = value.trim();\r\n      }\r\n      if (modifiers.indexOf('number') !== -1) {\r\n        value = this._n(value);\r\n      }\r\n    }\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__set_sync = function(target, key, value) {\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__get_orig = function(item) {\r\n    if (isPlainObject(item)) {\r\n      return item['$orig'] || item\r\n    }\r\n    return item\r\n  };\r\n\r\n  Vue.prototype.__get_value = function(dataPath, target) {\r\n    return getTarget(target || this, dataPath)\r\n  };\r\n\r\n\r\n  Vue.prototype.__get_class = function(dynamicClass, staticClass) {\r\n    return renderClass(staticClass, dynamicClass)\r\n  };\r\n\r\n  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {\r\n    if (!dynamicStyle && !staticStyle) {\r\n      return ''\r\n    }\r\n    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);\r\n    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;\r\n    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + \":\" + (styleObj[name])); }).join(';')\r\n  };\r\n\r\n  Vue.prototype.__map = function(val, iteratee) {\r\n    //TODO 暂不考虑 string,number\r\n    var ret, i, l, keys, key;\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length);\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = iteratee(val[i], i);\r\n      }\r\n      return ret\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val);\r\n      ret = Object.create(null);\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        ret[key] = iteratee(val[key], key, i);\r\n      }\r\n      return ret\r\n    }\r\n    return []\r\n  };\r\n\r\n}\n\n/*  */\r\n\r\nvar LIFECYCLE_HOOKS$1 = [\r\n    //App\r\n    'onLaunch',\r\n    'onShow',\r\n    'onHide',\r\n    'onUniNViewMessage',\n    'onError',\r\n    //Page\r\n    'onLoad',\r\n    // 'onShow',\r\n    'onReady',\r\n    // 'onHide',\r\n    'onUnload',\r\n    'onPullDownRefresh',\r\n    'onReachBottom',\r\n    'onTabItemTap',\r\n    'onShareAppMessage',\n    'onResize',\r\n    'onPageScroll',\r\n    'onNavigationBarButtonTap',\r\n    'onBackPress',\r\n    'onNavigationBarSearchInputChanged',\r\n    'onNavigationBarSearchInputConfirmed',\r\n    'onNavigationBarSearchInputClicked',\r\n    //Component\r\n    // 'onReady', // 兼容旧版本，应该移除该事件\r\n    'onPageShow',\r\n    'onPageHide',\r\n    'onPageResize'\r\n];\r\nfunction lifecycleMixin$1(Vue) {\r\n\r\n    //fixed vue-class-component\r\n    var oldExtend = Vue.extend;\r\n    Vue.extend = function(extendOptions) {\r\n        extendOptions = extendOptions || {};\r\n\r\n        var methods = extendOptions.methods;\r\n        if (methods) {\r\n            Object.keys(methods).forEach(function (methodName) {\r\n                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {\r\n                    extendOptions[methodName] = methods[methodName];\r\n                    delete methods[methodName];\r\n                }\r\n            });\r\n        }\r\n\r\n        return oldExtend.call(this, extendOptions)\r\n    };\r\n\r\n    var strategies = Vue.config.optionMergeStrategies;\r\n    var mergeHook = strategies.created;\r\n    LIFECYCLE_HOOKS$1.forEach(function (hook) {\r\n        strategies[hook] = mergeHook;\r\n    });\r\n\r\n    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;\r\n}\n\n/*  */\r\n\n// install platform patch function\r\nVue.prototype.__patch__ = patch;\r\n\r\n// public mount method\r\nVue.prototype.$mount = function(\r\n    el ,\r\n    hydrating \r\n) {\r\n    return mountComponent$1(this, el, hydrating)\r\n};\r\n\r\nlifecycleMixin$1(Vue);\r\ninternalMixin(Vue);\n\n/*  */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 30:
/*!****************************************************!*\
  !*** X:/毕业设计/MilkBusiness/components/mqtt/mqtt.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, __f__) {var require;var require;(function (f) {if (true) {module.exports = f();} else { var g; }})(function () {var define, module, exports;return function () {function r(e, n, t) {function o(i, f) {if (!n[i]) {if (!e[i]) {var c = \"function\" == typeof require && require;if (!f && c) return require(i, !0);if (u) return u(i, !0);var a = new Error(\"Cannot find module '\" + i + \"'\");throw a.code = \"MODULE_NOT_FOUND\", a;}var p = n[i] = { exports: {} };e[i][0].call(p.exports, function (r) {var n = e[i][1][r];return o(n || r);}, p, p.exports, r, e, n, t);}return n[i].exports;}for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) {o(t[i]);}return o;}return r;}()({ 1: [function (require, module, exports) {(function (process, global) {\"use strict\";var events = require(\"events\");var Store = require(\"./store\");var mqttPacket = require(\"mqtt-packet\");var Writable = require(\"readable-stream\").Writable;var inherits = require(\"inherits\");var reInterval = require(\"reinterval\");var validations = require(\"./validations\");var xtend = require(\"xtend\");var setImmediate = global.setImmediate || function (callback) {process.nextTick(callback);};var defaultConnectOptions = { keepalive: 60, reschedulePings: true, protocolId: \"MQTT\", protocolVersion: 4, reconnectPeriod: 1e3, connectTimeout: 30 * 1e3, clean: true, resubscribe: true };var errors = { 0: \"\", 1: \"Unacceptable protocol version\", 2: \"Identifier rejected\", 3: \"Server unavailable\", 4: \"Bad username or password\", 5: \"Not authorized\", 16: \"No matching subscribers\", 17: \"No subscription existed\", 128: \"Unspecified error\", 129: \"Malformed Packet\", 130: \"Protocol Error\", 131: \"Implementation specific error\", 132: \"Unsupported Protocol Version\", 133: \"Client Identifier not valid\", 134: \"Bad User Name or Password\", 135: \"Not authorized\", 136: \"Server unavailable\", 137: \"Server busy\", 138: \"Banned\", 139: \"Server shutting down\", 140: \"Bad authentication method\", 141: \"Keep Alive timeout\", 142: \"Session taken over\", 143: \"Topic Filter invalid\", 144: \"Topic Name invalid\", 145: \"Packet identifier in use\", 146: \"Packet Identifier not found\", 147: \"Receive Maximum exceeded\", 148: \"Topic Alias invalid\", 149: \"Packet too large\", 150: \"Message rate too high\", 151: \"Quota exceeded\", 152: \"Administrative action\", 153: \"Payload format invalid\", 154: \"Retain not supported\", 155: \"QoS not supported\", 156: \"Use another server\", 157: \"Server moved\", 158: \"Shared Subscriptions not supported\", 159: \"Connection rate exceeded\", 160: \"Maximum connect time\", 161: \"Subscription Identifiers not supported\", 162: \"Wildcard Subscriptions not supported\" };function defaultId() {return \"mqttjs_\" + Math.random().toString(16).substr(2, 8);}function sendPacket(client, packet, cb) {client.emit(\"packetsend\", packet);var result = mqttPacket.writeToStream(packet, client.stream, client.options);if (!result && cb) {client.stream.once(\"drain\", cb);} else if (cb) {cb();}}function flush(queue) {if (queue) {Object.keys(queue).forEach(function (messageId) {if (typeof queue[messageId].cb === \"function\") {queue[messageId].cb(new Error(\"Connection closed\"));delete queue[messageId];}});}}function flushVolatile(queue) {if (queue) {Object.keys(queue).forEach(function (messageId) {if (queue[messageId].volatile && typeof queue[messageId].cb === \"function\") {queue[messageId].cb(new Error(\"Connection closed\"));delete queue[messageId];}});}}function storeAndSend(client, packet, cb, cbStorePut) {client.outgoingStore.put(packet, function storedPacket(err) {if (err) {return cb && cb(err);}cbStorePut();sendPacket(client, packet, cb);});}function nop() {}function MqttClient(streamBuilder, options) {var k;var that = this;if (!(this instanceof MqttClient)) {return new MqttClient(streamBuilder, options);}this.options = options || {};for (k in defaultConnectOptions) {if (typeof this.options[k] === \"undefined\") {this.options[k] = defaultConnectOptions[k];} else {this.options[k] = options[k];}}this.options.clientId = typeof options.clientId === \"string\" ? options.clientId : defaultId();this.options.customHandleAcks = options.protocolVersion === 5 && options.customHandleAcks ? options.customHandleAcks : function () {arguments[3](0);};this.streamBuilder = streamBuilder;this.outgoingStore = options.outgoingStore || new Store();this.incomingStore = options.incomingStore || new Store();this.queueQoSZero = options.queueQoSZero === undefined ? true : options.queueQoSZero;this._resubscribeTopics = {};this.messageIdToTopic = {};this.pingTimer = null;this.connected = false;this.disconnecting = false;this.queue = [];this.connackTimer = null;this.reconnectTimer = null;this._storeProcessing = false;this._packetIdsDuringStoreProcessing = {};this.nextId = Math.max(1, Math.floor(Math.random() * 65535));this.outgoing = {};this._firstConnection = true;this.on(\"close\", function () {this.connected = false;clearTimeout(this.connackTimer);});this.on(\"connect\", function () {var queue = this.queue;function deliver() {var entry = queue.shift();var packet = null;if (!entry) {return;}packet = entry.packet;that._sendPacket(packet, function (err) {if (entry.cb) {entry.cb(err);}deliver();});}deliver();});this.on(\"close\", function () {if (that.pingTimer !== null) {that.pingTimer.clear();that.pingTimer = null;}});this.on(\"close\", this._setupReconnect);events.EventEmitter.call(this);this._setupStream();}inherits(MqttClient, events.EventEmitter);MqttClient.prototype._setupStream = function () {var connectPacket;var that = this;var writable = new Writable();var parser = mqttPacket.parser(this.options);var completeParse = null;var packets = [];this._clearReconnect();this.stream = this.streamBuilder(this);parser.on(\"packet\", function (packet) {packets.push(packet);});function nextTickWork() {if (packets.length) {process.nextTick(work);} else {var done = completeParse;completeParse = null;done();}}function work() {var packet = packets.shift();if (packet) {that._handlePacket(packet, nextTickWork);} else {var done = completeParse;completeParse = null;if (done) done();}}writable._write = function (buf, enc, done) {completeParse = done;parser.parse(buf);work();};this.stream.pipe(writable);this.stream.on(\"error\", nop);this.stream.on(\"close\", function () {flushVolatile(that.outgoing);that.emit(\"close\");});connectPacket = Object.create(this.options);connectPacket.cmd = \"connect\";sendPacket(this, connectPacket);parser.on(\"error\", this.emit.bind(this, \"error\"));if (this.options.properties) {if (!this.options.properties.authenticationMethod && this.options.properties.authenticationData) {this.emit(\"error\", new Error(\"Packet has no Authentication Method\"));return this;}if (this.options.properties.authenticationMethod && this.options.authPacket && typeof this.options.authPacket === \"object\") {var authPacket = xtend({ cmd: \"auth\", reasonCode: 0 }, this.options.authPacket);sendPacket(this, authPacket);}}this.stream.setMaxListeners(1e3);clearTimeout(this.connackTimer);this.connackTimer = setTimeout(function () {that._cleanUp(true);}, this.options.connectTimeout);};MqttClient.prototype._handlePacket = function (packet, done) {var options = this.options;if (options.protocolVersion === 5 && options.properties && options.properties.maximumPacketSize && options.properties.maximumPacketSize < packet.length) {this.emit(\"error\", new Error(\"exceeding packets size \" + packet.cmd));this.end({ reasonCode: 149, properties: { reasonString: \"Maximum packet size was exceeded\" } });return this;}this.emit(\"packetreceive\", packet);switch (packet.cmd) {case \"publish\":this._handlePublish(packet, done);break;case \"puback\":case \"pubrec\":case \"pubcomp\":case \"suback\":case \"unsuback\":this._handleAck(packet);done();break;case \"pubrel\":this._handlePubrel(packet, done);break;case \"connack\":this._handleConnack(packet);done();break;case \"pingresp\":this._handlePingresp(packet);done();break;case \"disconnect\":this._handleDisconnect(packet);done();break;default:break;}};MqttClient.prototype._checkDisconnecting = function (callback) {if (this.disconnecting) {if (callback) {callback(new Error(\"client disconnecting\"));} else {this.emit(\"error\", new Error(\"client disconnecting\"));}}return this.disconnecting;};MqttClient.prototype.publish = function (topic, message, opts, callback) {var packet;var options = this.options;if (typeof opts === \"function\") {callback = opts;opts = null;}var defaultOpts = { qos: 0, retain: false, dup: false };opts = xtend(defaultOpts, opts);if (this._checkDisconnecting(callback)) {return this;}packet = { cmd: \"publish\", topic: topic, payload: message, qos: opts.qos, retain: opts.retain, messageId: this._nextId(), dup: opts.dup };if (options.protocolVersion === 5) {packet.properties = opts.properties;if (!options.properties && packet.properties && packet.properties.topicAlias || opts.properties && options.properties && (opts.properties.topicAlias && options.properties.topicAliasMaximum && opts.properties.topicAlias > options.properties.topicAliasMaximum || !options.properties.topicAliasMaximum && opts.properties.topicAlias)) {delete packet.properties.topicAlias;}}switch (opts.qos) {case 1:case 2:this.outgoing[packet.messageId] = { volatile: false, cb: callback || nop };if (this._storeProcessing) {this._packetIdsDuringStoreProcessing[packet.messageId] = false;this._storePacket(packet, undefined, opts.cbStorePut);} else {this._sendPacket(packet, undefined, opts.cbStorePut);}break;default:if (this._storeProcessing) {this._storePacket(packet, callback, opts.cbStorePut);} else {this._sendPacket(packet, callback, opts.cbStorePut);}break;}return this;};MqttClient.prototype.subscribe = function () {var packet;var args = new Array(arguments.length);for (var i = 0; i < arguments.length; i++) {args[i] = arguments[i];}var subs = [];var obj = args.shift();var resubscribe = obj.resubscribe;var callback = args.pop() || nop;var opts = args.pop();var invalidTopic;var that = this;var version = this.options.protocolVersion;delete obj.resubscribe;if (typeof obj === \"string\") {obj = [obj];}if (typeof callback !== \"function\") {opts = callback;callback = nop;}invalidTopic = validations.validateTopics(obj);if (invalidTopic !== null) {setImmediate(callback, new Error(\"Invalid topic \" + invalidTopic));return this;}if (this._checkDisconnecting(callback)) {return this;}var defaultOpts = { qos: 0 };if (version === 5) {defaultOpts.nl = false;defaultOpts.rap = false;defaultOpts.rh = 0;}opts = xtend(defaultOpts, opts);if (Array.isArray(obj)) {obj.forEach(function (topic) {if (!that._resubscribeTopics.hasOwnProperty(topic) || that._resubscribeTopics[topic].qos < opts.qos || resubscribe) {var currentOpts = { topic: topic, qos: opts.qos };if (version === 5) {currentOpts.nl = opts.nl;currentOpts.rap = opts.rap;currentOpts.rh = opts.rh;currentOpts.properties = opts.properties;}subs.push(currentOpts);}});} else {Object.keys(obj).forEach(function (k) {if (!that._resubscribeTopics.hasOwnProperty(k) || that._resubscribeTopics[k].qos < obj[k].qos || resubscribe) {var currentOpts = { topic: k, qos: obj[k].qos };if (version === 5) {currentOpts.nl = obj[k].nl;currentOpts.rap = obj[k].rap;currentOpts.rh = obj[k].rh;currentOpts.properties = opts.properties;}subs.push(currentOpts);}});}packet = { cmd: \"subscribe\", subscriptions: subs, qos: 1, retain: false, dup: false, messageId: this._nextId() };if (opts.properties) {packet.properties = opts.properties;}if (!subs.length) {callback(null, []);return;}if (this.options.resubscribe) {var topics = [];subs.forEach(function (sub) {if (that.options.reconnectPeriod > 0) {var topic = { qos: sub.qos };if (version === 5) {topic.nl = sub.nl || false;topic.rap = sub.rap || false;topic.rh = sub.rh || 0;topic.properties = sub.properties;}that._resubscribeTopics[sub.topic] = topic;topics.push(sub.topic);}});that.messageIdToTopic[packet.messageId] = topics;}this.outgoing[packet.messageId] = { volatile: true, cb: function cb(err, packet) {if (!err) {var granted = packet.granted;for (var i = 0; i < granted.length; i += 1) {subs[i].qos = granted[i];}}callback(err, subs);} };this._sendPacket(packet);return this;};MqttClient.prototype.unsubscribe = function () {var packet = { cmd: \"unsubscribe\", qos: 1, messageId: this._nextId() };var that = this;var args = new Array(arguments.length);for (var i = 0; i < arguments.length; i++) {args[i] = arguments[i];}var topic = args.shift();var callback = args.pop() || nop;var opts = args.pop();if (typeof topic === \"string\") {topic = [topic];}if (typeof callback !== \"function\") {opts = callback;callback = nop;}if (this._checkDisconnecting(callback)) {return this;}if (typeof topic === \"string\") {packet.unsubscriptions = [topic];} else if (typeof topic === \"object\" && topic.length) {packet.unsubscriptions = topic;}if (this.options.resubscribe) {packet.unsubscriptions.forEach(function (topic) {delete that._resubscribeTopics[topic];});}if (typeof opts === \"object\" && opts.properties) {packet.properties = opts.properties;}this.outgoing[packet.messageId] = { volatile: true, cb: callback };this._sendPacket(packet);return this;};MqttClient.prototype.end = function () {var that = this;var force = arguments[0];var opts = arguments[1];var cb = arguments[2];if (force == null || typeof force !== \"boolean\") {cb = opts || nop;opts = force;force = false;if (typeof opts !== \"object\") {cb = opts;opts = null;if (typeof cb !== \"function\") {cb = nop;}}}if (typeof opts !== \"object\") {cb = opts;opts = null;}cb = cb || nop;function closeStores() {that.disconnected = true;that.incomingStore.close(function () {that.outgoingStore.close(function () {if (cb) {cb.apply(null, arguments);}that.emit(\"end\");});});if (that._deferredReconnect) {that._deferredReconnect();}}function finish() {that._cleanUp(force, setImmediate.bind(null, closeStores), opts);}if (this.disconnecting) {return this;}this._clearReconnect();this.disconnecting = true;if (!force && Object.keys(this.outgoing).length > 0) {this.once(\"outgoingEmpty\", setTimeout.bind(null, finish, 10));} else {finish();}return this;};MqttClient.prototype.removeOutgoingMessage = function (mid) {var cb = this.outgoing[mid] ? this.outgoing[mid].cb : null;delete this.outgoing[mid];this.outgoingStore.del({ messageId: mid }, function () {cb(new Error(\"Message removed\"));});return this;};MqttClient.prototype.reconnect = function (opts) {var that = this;var f = function f() {if (opts) {that.options.incomingStore = opts.incomingStore;that.options.outgoingStore = opts.outgoingStore;} else {that.options.incomingStore = null;that.options.outgoingStore = null;}that.incomingStore = that.options.incomingStore || new Store();that.outgoingStore = that.options.outgoingStore || new Store();that.disconnecting = false;that.disconnected = false;that._deferredReconnect = null;that._reconnect();};if (this.disconnecting && !this.disconnected) {this._deferredReconnect = f;} else {f();}return this;};MqttClient.prototype._reconnect = function () {this.emit(\"reconnect\");this._setupStream();};MqttClient.prototype._setupReconnect = function () {var that = this;if (!that.disconnecting && !that.reconnectTimer && that.options.reconnectPeriod > 0) {if (!this.reconnecting) {this.emit(\"offline\");this.reconnecting = true;}that.reconnectTimer = setInterval(function () {that._reconnect();}, that.options.reconnectPeriod);}};MqttClient.prototype._clearReconnect = function () {if (this.reconnectTimer) {clearInterval(this.reconnectTimer);this.reconnectTimer = null;}};MqttClient.prototype._cleanUp = function (forced, done) {var opts = arguments[2];if (done) {this.stream.on(\"close\", done);}if (forced) {if (this.options.reconnectPeriod === 0 && this.options.clean) {flush(this.outgoing);}this.stream.destroy();} else {var packet = xtend({ cmd: \"disconnect\" }, opts);this._sendPacket(packet, setImmediate.bind(null, this.stream.end.bind(this.stream)));}if (!this.disconnecting) {this._clearReconnect();this._setupReconnect();}if (this.pingTimer !== null) {this.pingTimer.clear();this.pingTimer = null;}if (done && !this.connected) {this.stream.removeListener(\"close\", done);done();}};MqttClient.prototype._sendPacket = function (packet, cb, cbStorePut) {cbStorePut = cbStorePut || nop;if (!this.connected) {this._storePacket(packet, cb, cbStorePut);return;}this._shiftPingInterval();switch (packet.cmd) {case \"publish\":break;case \"pubrel\":storeAndSend(this, packet, cb, cbStorePut);return;default:sendPacket(this, packet, cb);return;}switch (packet.qos) {case 2:case 1:storeAndSend(this, packet, cb, cbStorePut);break;case 0:default:sendPacket(this, packet, cb);break;}};MqttClient.prototype._storePacket = function (packet, cb, cbStorePut) {cbStorePut = cbStorePut || nop;if ((packet.qos || 0) === 0 && this.queueQoSZero || packet.cmd !== \"publish\") {this.queue.push({ packet: packet, cb: cb });} else if (packet.qos > 0) {cb = this.outgoing[packet.messageId] ? this.outgoing[packet.messageId].cb : null;this.outgoingStore.put(packet, function (err) {if (err) {return cb && cb(err);}cbStorePut();});} else if (cb) {cb(new Error(\"No connection to broker\"));}};MqttClient.prototype._setupPingTimer = function () {var that = this;if (!this.pingTimer && this.options.keepalive) {this.pingResp = true;this.pingTimer = reInterval(function () {that._checkPing();}, this.options.keepalive * 1e3);}};MqttClient.prototype._shiftPingInterval = function () {if (this.pingTimer && this.options.keepalive && this.options.reschedulePings) {this.pingTimer.reschedule(this.options.keepalive * 1e3);}};MqttClient.prototype._checkPing = function () {if (this.pingResp) {this.pingResp = false;this._sendPacket({ cmd: \"pingreq\" });} else {this._cleanUp(true);}};MqttClient.prototype._handlePingresp = function () {this.pingResp = true;};MqttClient.prototype._handleConnack = function (packet) {var options = this.options;var version = options.protocolVersion;var rc = version === 5 ? packet.reasonCode : packet.returnCode;clearTimeout(this.connackTimer);if (packet.properties) {if (packet.properties.topicAliasMaximum) {if (!options.properties) {options.properties = {};}options.properties.topicAliasMaximum = packet.properties.topicAliasMaximum;}if (packet.properties.serverKeepAlive && options.keepalive) {options.keepalive = packet.properties.serverKeepAlive;this._shiftPingInterval();}if (packet.properties.maximumPacketSize) {if (!options.properties) {options.properties = {};}options.properties.maximumPacketSize = packet.properties.maximumPacketSize;}}if (rc === 0) {this.reconnecting = false;this._onConnect(packet);} else if (rc > 0) {var err = new Error(\"Connection refused: \" + errors[rc]);err.code = rc;this.emit(\"error\", err);}};MqttClient.prototype._handlePublish = function (packet, done) {done = typeof done !== \"undefined\" ? done : nop;var topic = packet.topic.toString();var message = packet.payload;var qos = packet.qos;var mid = packet.messageId;var that = this;var options = this.options;var validReasonCodes = [0, 16, 128, 131, 135, 144, 145, 151, 153];switch (qos) {case 2:{options.customHandleAcks(topic, message, packet, function (error, code) {if (!(error instanceof Error)) {code = error;error = null;}if (error) {return that.emit(\"error\", error);}if (validReasonCodes.indexOf(code) === -1) {return that.emit(\"error\", new Error(\"Wrong reason code for pubrec\"));}if (code) {that._sendPacket({ cmd: \"pubrec\", messageId: mid, reasonCode: code }, done);} else {that.incomingStore.put(packet, function () {that._sendPacket({ cmd: \"pubrec\", messageId: mid }, done);});}});break;}case 1:{options.customHandleAcks(topic, message, packet, function (error, code) {if (!(error instanceof Error)) {code = error;error = null;}if (error) {return that.emit(\"error\", error);}if (validReasonCodes.indexOf(code) === -1) {return that.emit(\"error\", new Error(\"Wrong reason code for puback\"));}if (!code) {that.emit(\"message\", topic, message, packet);}that.handleMessage(packet, function (err) {if (err) {return done && done(err);}that._sendPacket({ cmd: \"puback\", messageId: mid, reasonCode: code }, done);});});break;}case 0:this.emit(\"message\", topic, message, packet);this.handleMessage(packet, done);break;default:break;}};MqttClient.prototype.handleMessage = function (packet, callback) {callback();};MqttClient.prototype._handleAck = function (packet) {var mid = packet.messageId;var type = packet.cmd;var response = null;var cb = this.outgoing[mid] ? this.outgoing[mid].cb : null;var that = this;var err;if (!cb) {return;}switch (type) {case \"pubcomp\":case \"puback\":var pubackRC = packet.reasonCode;if (pubackRC && pubackRC > 0 && pubackRC !== 16) {err = new Error(\"Publish error: \" + errors[pubackRC]);err.code = pubackRC;cb(err, packet);}delete this.outgoing[mid];this.outgoingStore.del(packet, cb);break;case \"pubrec\":response = { cmd: \"pubrel\", qos: 2, messageId: mid };var pubrecRC = packet.reasonCode;if (pubrecRC && pubrecRC > 0 && pubrecRC !== 16) {err = new Error(\"Publish error: \" + errors[pubrecRC]);err.code = pubrecRC;cb(err, packet);} else {this._sendPacket(response);}break;case \"suback\":delete this.outgoing[mid];for (var grantedI = 0; grantedI < packet.granted.length; grantedI++) {if ((packet.granted[grantedI] & 128) !== 0) {var topics = this.messageIdToTopic[mid];if (topics) {topics.forEach(function (topic) {delete that._resubscribeTopics[topic];});}}}cb(null, packet);break;case \"unsuback\":delete this.outgoing[mid];cb(null);break;default:that.emit(\"error\", new Error(\"unrecognized packet type\"));}if (this.disconnecting && Object.keys(this.outgoing).length === 0) {this.emit(\"outgoingEmpty\");}};MqttClient.prototype._handlePubrel = function (packet, callback) {callback = typeof callback !== \"undefined\" ? callback : nop;var mid = packet.messageId;var that = this;var comp = { cmd: \"pubcomp\", messageId: mid };that.incomingStore.get(packet, function (err, pub) {if (!err) {that.emit(\"message\", pub.topic, pub.payload, pub);that.handleMessage(pub, function (err) {if (err) {return callback(err);}that.incomingStore.del(pub, nop);that._sendPacket(comp, callback);});} else {that._sendPacket(comp, callback);}});};MqttClient.prototype._handleDisconnect = function (packet) {this.emit(\"disconnect\", packet);};MqttClient.prototype._nextId = function () {var id = this.nextId++;if (this.nextId === 65536) {this.nextId = 1;}return id;};MqttClient.prototype.getLastMessageId = function () {return this.nextId === 1 ? 65535 : this.nextId - 1;};MqttClient.prototype._resubscribe = function (connack) {var _resubscribeTopicsKeys = Object.keys(this._resubscribeTopics);if (!this._firstConnection && (this.options.clean || this.options.protocolVersion === 5 && !connack.sessionPresent) && _resubscribeTopicsKeys.length > 0) {if (this.options.resubscribe) {if (this.options.protocolVersion === 5) {for (var topicI = 0; topicI < _resubscribeTopicsKeys.length; topicI++) {var resubscribeTopic = {};resubscribeTopic[_resubscribeTopicsKeys[topicI]] = this._resubscribeTopics[_resubscribeTopicsKeys[topicI]];resubscribeTopic.resubscribe = true;this.subscribe(resubscribeTopic, { properties: resubscribeTopic[_resubscribeTopicsKeys[topicI]].properties });}} else {this._resubscribeTopics.resubscribe = true;this.subscribe(this._resubscribeTopics);}} else {this._resubscribeTopics = {};}}this._firstConnection = false;};MqttClient.prototype._onConnect = function (packet) {if (this.disconnected) {this.emit(\"connect\", packet);return;}var that = this;this._setupPingTimer();this._resubscribe(packet);this.connected = true;function startStreamProcess() {var outStore = that.outgoingStore.createStream();function clearStoreProcessing() {that._storeProcessing = false;that._packetIdsDuringStoreProcessing = {};}that.once(\"close\", remove);outStore.on(\"error\", function (err) {clearStoreProcessing();that.removeListener(\"close\", remove);that.emit(\"error\", err);});function remove() {outStore.destroy();outStore = null;clearStoreProcessing();}function storeDeliver() {if (!outStore) {return;}that._storeProcessing = true;var packet = outStore.read(1);var _cb;if (!packet) {outStore.once(\"readable\", storeDeliver);return;}if (that._packetIdsDuringStoreProcessing[packet.messageId]) {storeDeliver();return;}if (!that.disconnecting && !that.reconnectTimer) {_cb = that.outgoing[packet.messageId] ? that.outgoing[packet.messageId].cb : null;that.outgoing[packet.messageId] = { volatile: false, cb: function cb(err, status) {if (_cb) {_cb(err, status);}storeDeliver();} };that._packetIdsDuringStoreProcessing[packet.messageId] = true;that._sendPacket(packet);} else if (outStore.destroy) {outStore.destroy();}}outStore.on(\"end\", function () {var allProcessed = true;for (var id in that._packetIdsDuringStoreProcessing) {if (!that._packetIdsDuringStoreProcessing[id]) {allProcessed = false;break;}}if (allProcessed) {clearStoreProcessing();that.removeListener(\"close\", remove);that.emit(\"connect\", packet);} else {startStreamProcess();}});storeDeliver();}startStreamProcess();};module.exports = MqttClient;}).call(this, require(\"_process\"), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});}, { \"./store\": 7, \"./validations\": 8, _process: 92, events: 13, inherits: 80, \"mqtt-packet\": 84, \"readable-stream\": 108, reinterval: 109, xtend: 121 }], 2: [function (require, module, exports) {(function (Buffer) {\"use strict\";var Transform = require(\"readable-stream\").Transform;var duplexify = require(\"duplexify\");var base64 = require(\"base64-js\");var my;var proxy;var stream;var isInitialized = false;function buildProxy() {var proxy = new Transform();proxy._write = function (chunk, encoding, next) {my.sendSocketMessage({ data: chunk.buffer, success: function success() {next();}, fail: function fail() {next(new Error());} });};proxy._flush = function socketEnd(done) {my.closeSocket({ success: function success() {done();} });};return proxy;}function setDefaultOpts(opts) {if (!opts.hostname) {opts.hostname = \"localhost\";}if (!opts.path) {opts.path = \"/\";}if (!opts.wsOptions) {opts.wsOptions = {};}}function buildUrl(opts, client) {var protocol = opts.protocol === \"alis\" ? \"wss\" : \"ws\";var url = protocol + \"://\" + opts.hostname + opts.path;if (opts.port && opts.port !== 80 && opts.port !== 443) {url = protocol + \"://\" + opts.hostname + \":\" + opts.port + opts.path;}if (typeof opts.transformWsUrl === \"function\") {url = opts.transformWsUrl(url, opts, client);}return url;}function bindEventHandler() {if (isInitialized) return;isInitialized = true;my.onSocketOpen(function () {stream.setReadable(proxy);stream.setWritable(proxy);stream.emit(\"connect\");});my.onSocketMessage(function (res) {if (typeof res.data === \"string\") {var array = base64.toByteArray(res.data);var buffer = Buffer.from(array);proxy.push(buffer);} else {var reader = new FileReader();reader.addEventListener(\"load\", function () {var data = reader.result;if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, \"utf8\");proxy.push(data);});reader.readAsArrayBuffer(res.data);}});my.onSocketClose(function () {stream.end();stream.destroy();});my.onSocketError(function (res) {stream.destroy(res);});}function buildStream(client, opts) {opts.hostname = opts.hostname || opts.host;if (!opts.hostname) {throw new Error(\"Could not determine host. Specify host manually.\");}var websocketSubProtocol = opts.protocolId === \"MQIsdp\" && opts.protocolVersion === 3 ? \"mqttv3.1\" : \"mqtt\";setDefaultOpts(opts);var url = buildUrl(opts, client);my = opts.my;my.connectSocket({ url: url, protocols: websocketSubProtocol });proxy = buildProxy();stream = duplexify.obj();bindEventHandler();return stream;}module.exports = buildStream;}).call(this, require(\"buffer\").Buffer);}, { \"base64-js\": 10, buffer: 12, duplexify: 17, \"readable-stream\": 108 }], 3: [function (require, module, exports) {\"use strict\";var net = require(\"net\");function buildBuilder(client, opts) {var port, host;opts.port = opts.port || 1883;opts.hostname = opts.hostname || opts.host || \"localhost\";port = opts.port;host = opts.hostname;return net.createConnection(port, host);}module.exports = buildBuilder;}, { net: 11 }], 4: [function (require, module, exports) {\"use strict\";var tls = require(\"tls\");function buildBuilder(mqttClient, opts) {var connection;opts.port = opts.port || 8883;opts.host = opts.hostname || opts.host || \"localhost\";opts.rejectUnauthorized = opts.rejectUnauthorized !== false;delete opts.path;connection = tls.connect(opts);connection.on(\"secureConnect\", function () {if (opts.rejectUnauthorized && !connection.authorized) {connection.emit(\"error\", new Error(\"TLS not authorized\"));} else {connection.removeListener(\"error\", handleTLSerrors);}});function handleTLSerrors(err) {if (opts.rejectUnauthorized) {mqttClient.emit(\"error\", err);}connection.end();}connection.on(\"error\", handleTLSerrors);return connection;}module.exports = buildBuilder;}, { tls: 11 }], 5: [function (require, module, exports) {(function (process) {\"use strict\";var websocket = require(\"websocket-stream\");var urlModule = require(\"url\");var WSS_OPTIONS = [\"rejectUnauthorized\", \"ca\", \"cert\", \"key\", \"pfx\", \"passphrase\"];var IS_BROWSER = process.title === \"browser\";function buildUrl(opts, client) {var url = opts.protocol + \"://\" + opts.hostname + \":\" + opts.port + opts.path;if (typeof opts.transformWsUrl === \"function\") {url = opts.transformWsUrl(url, opts, client);}return url;}function setDefaultOpts(opts) {if (!opts.hostname) {opts.hostname = \"localhost\";}if (!opts.port) {if (opts.protocol === \"wss\") {opts.port = 443;} else {opts.port = 80;}}if (!opts.path) {opts.path = \"/\";}if (!opts.wsOptions) {opts.wsOptions = {};}if (!IS_BROWSER && opts.protocol === \"wss\") {WSS_OPTIONS.forEach(function (prop) {if (opts.hasOwnProperty(prop) && !opts.wsOptions.hasOwnProperty(prop)) {opts.wsOptions[prop] = opts[prop];}});}}function createWebSocket(client, opts) {var websocketSubProtocol = opts.protocolId === \"MQIsdp\" && opts.protocolVersion === 3 ? \"mqttv3.1\" : \"mqtt\";setDefaultOpts(opts);var url = buildUrl(opts, client);return websocket(url, [websocketSubProtocol], opts.wsOptions);}function buildBuilder(client, opts) {return createWebSocket(client, opts);}function buildBuilderBrowser(client, opts) {if (!opts.hostname) {opts.hostname = opts.host;}if (!opts.hostname) {if (typeof document === \"undefined\") {throw new Error(\"Could not determine host. Specify host manually.\");}var parsed = urlModule.parse(document.URL);opts.hostname = parsed.hostname;if (!opts.port) {opts.port = parsed.port;}}return createWebSocket(client, opts);}if (IS_BROWSER) {module.exports = buildBuilderBrowser;} else {module.exports = buildBuilder;}}).call(this, require(\"_process\"));}, { _process: 92, url: 113, \"websocket-stream\": 118 }], 6: [function (require, module, exports) {(function (process, Buffer) {\"use strict\";var Transform = require(\"readable-stream\").Transform;var duplexify = require(\"duplexify\");var socketTask;var proxy;var stream;function buildProxy() {var proxy = new Transform();proxy._write = function (chunk, encoding, next) {socketTask.send({ data: chunk.buffer, success: function success() {next();}, fail: function fail(errMsg) {next(new Error(errMsg));} });};proxy._flush = function socketEnd(done) {socketTask.close({ success: function success() {done();} });};return proxy;}function setDefaultOpts(opts) {if (!opts.hostname) {opts.hostname = \"localhost\";}if (!opts.path) {opts.path = \"/\";}if (!opts.wsOptions) {opts.wsOptions = {};}}function buildUrl(opts, client) {var protocol = opts.protocol === \"wxs\" ? \"wss\" : \"ws\";var url = protocol + \"://\" + opts.hostname + opts.path;if (opts.port && opts.port !== 80 && opts.port !== 443) {url = protocol + \"://\" + opts.hostname + \":\" + opts.port + opts.path;}if (typeof opts.transformWsUrl === \"function\") {url = opts.transformWsUrl(url, opts, client);}return url;}function bindEventHandler() {socketTask.onOpen(function () {stream.setReadable(proxy);stream.setWritable(proxy);stream.emit(\"connect\");});socketTask.onMessage(function (res) {var data = res.data;if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, \"utf8\");proxy.push(data);});socketTask.onClose(function () {stream.end();stream.destroy();});socketTask.onError(function (res) {stream.destroy(new Error(res.errMsg));});}function buildStream(client, opts) {opts.hostname = opts.hostname || opts.host;if (!opts.hostname) {throw new Error(\"Could not determine host. Specify host manually.\");}var websocketSubProtocol = opts.protocolId === \"MQIsdp\" && opts.protocolVersion === 3 ? \"mqttv3.1\" : \"mqtt\";setDefaultOpts(opts);var url = buildUrl(opts, client);socketTask = wx.connectSocket({ url: url, protocols: websocketSubProtocol });proxy = buildProxy();stream = duplexify.obj();stream._destroy = function (err, cb) {socketTask.close({ success: function success() {cb && cb(err);} });};var destroyRef = stream.destroy;stream.destroy = function () {stream.destroy = destroyRef;var self = this;process.nextTick(function () {socketTask.close({ fail: function fail() {self._destroy(new Error());} });});}.bind(stream);bindEventHandler();return stream;}module.exports = buildStream;}).call(this, require(\"_process\"), require(\"buffer\").Buffer);}, { _process: 92, buffer: 12, duplexify: 17, \"readable-stream\": 108 }], 7: [function (require, module, exports) {(function (process) {\"use strict\";var xtend = require(\"xtend\");var Readable = require(\"readable-stream\").Readable;var streamsOpts = { objectMode: true };var defaultStoreOptions = { clean: true };var Map = require(\"es6-map\");function Store(options) {if (!(this instanceof Store)) {return new Store(options);}this.options = options || {};this.options = xtend(defaultStoreOptions, options);this._inflights = new Map();}Store.prototype.put = function (packet, cb) {this._inflights.set(packet.messageId, packet);if (cb) {cb();}return this;};Store.prototype.createStream = function () {var stream = new Readable(streamsOpts);var destroyed = false;var values = [];var i = 0;this._inflights.forEach(function (value, key) {values.push(value);});stream._read = function () {if (!destroyed && i < values.length) {this.push(values[i++]);} else {this.push(null);}};stream.destroy = function () {if (destroyed) {return;}var self = this;destroyed = true;process.nextTick(function () {self.emit(\"close\");});};return stream;};Store.prototype.del = function (packet, cb) {packet = this._inflights.get(packet.messageId);if (packet) {this._inflights.delete(packet.messageId);cb(null, packet);} else if (cb) {cb(new Error(\"missing packet\"));}return this;};Store.prototype.get = function (packet, cb) {packet = this._inflights.get(packet.messageId);if (packet) {cb(null, packet);} else if (cb) {cb(new Error(\"missing packet\"));}return this;};Store.prototype.close = function (cb) {if (this.options.clean) {this._inflights = null;}if (cb) {cb();}};module.exports = Store;}).call(this, require(\"_process\"));}, { _process: 92, \"es6-map\": 67, \"readable-stream\": 108, xtend: 121 }], 8: [function (require, module, exports) {\"use strict\";function validateTopic(topic) {var parts = topic.split(\"/\");for (var i = 0; i < parts.length; i++) {if (parts[i] === \"+\") {continue;}if (parts[i] === \"#\") {return i === parts.length - 1;}if (parts[i].indexOf(\"+\") !== -1 || parts[i].indexOf(\"#\") !== -1) {return false;}}return true;}function validateTopics(topics) {if (topics.length === 0) {return \"empty_topic_list\";}for (var i = 0; i < topics.length; i++) {if (!validateTopic(topics[i])) {return topics[i];}}return null;}module.exports = { validateTopics: validateTopics };}, {}], 9: [function (require, module, exports) {(function (process) {\"use strict\";var MqttClient = require(\"../client\");var Store = require(\"../store\");var url = require(\"url\");var xtend = require(\"xtend\");var protocols = {};if (process.title !== \"browser\") {protocols.mqtt = require(\"./tcp\");protocols.tcp = require(\"./tcp\");protocols.ssl = require(\"./tls\");protocols.tls = require(\"./tls\");protocols.mqtts = require(\"./tls\");} else {protocols.wx = require(\"./wx\");protocols.wxs = require(\"./wx\");protocols.ali = require(\"./ali\");protocols.alis = require(\"./ali\");}protocols.ws = require(\"./ws\");protocols.wss = require(\"./ws\");function parseAuthOptions(opts) {var matches;if (opts.auth) {matches = opts.auth.match(/^(.+):(.+)$/);if (matches) {opts.username = matches[1];opts.password = matches[2];} else {opts.username = opts.auth;}}}function connect(brokerUrl, opts) {if (typeof brokerUrl === \"object\" && !opts) {opts = brokerUrl;brokerUrl = null;}opts = opts || {};if (brokerUrl) {var parsed = url.parse(brokerUrl, true);if (parsed.port != null) {parsed.port = Number(parsed.port);}opts = xtend(parsed, opts);if (opts.protocol === null) {throw new Error(\"Missing protocol\");}opts.protocol = opts.protocol.replace(/:$/, \"\");}parseAuthOptions(opts);if (opts.query && typeof opts.query.clientId === \"string\") {opts.clientId = opts.query.clientId;}if (opts.cert && opts.key) {if (opts.protocol) {if ([\"mqtts\", \"wss\", \"wxs\", \"alis\"].indexOf(opts.protocol) === -1) {switch (opts.protocol) {case \"mqtt\":opts.protocol = \"mqtts\";break;case \"ws\":opts.protocol = \"wss\";break;case \"wx\":opts.protocol = \"wxs\";break;case \"ali\":opts.protocol = \"alis\";break;default:throw new Error('Unknown protocol for secure connection: \"' + opts.protocol + '\"!');}}} else {throw new Error(\"Missing secure protocol key\");}}if (!protocols[opts.protocol]) {var isSecure = [\"mqtts\", \"wss\"].indexOf(opts.protocol) !== -1;opts.protocol = [\"mqtt\", \"mqtts\", \"ws\", \"wss\", \"wx\", \"wxs\", \"ali\", \"alis\"].filter(function (key, index) {if (isSecure && index % 2 === 0) {return false;}return typeof protocols[key] === \"function\";})[0];}if (opts.clean === false && !opts.clientId) {throw new Error(\"Missing clientId for unclean clients\");}if (opts.protocol) {opts.defaultProtocol = opts.protocol;}function wrapper(client) {if (opts.servers) {if (!client._reconnectCount || client._reconnectCount === opts.servers.length) {client._reconnectCount = 0;}opts.host = opts.servers[client._reconnectCount].host;opts.port = opts.servers[client._reconnectCount].port;opts.protocol = !opts.servers[client._reconnectCount].protocol ? opts.defaultProtocol : opts.servers[client._reconnectCount].protocol;opts.hostname = opts.host;client._reconnectCount++;}return protocols[opts.protocol](client, opts);}return new MqttClient(wrapper, opts);}module.exports = connect;module.exports.connect = connect;module.exports.MqttClient = MqttClient;module.exports.Store = Store;}).call(this, require(\"_process\"));}, { \"../client\": 1, \"../store\": 7, \"./ali\": 2, \"./tcp\": 3, \"./tls\": 4, \"./ws\": 5, \"./wx\": 6, _process: 92, url: 113, xtend: 121 }], 10: [function (require, module, exports) {\"use strict\";exports.byteLength = byteLength;exports.toByteArray = toByteArray;exports.fromByteArray = fromByteArray;var lookup = [];var revLookup = [];var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for (var i = 0, len = code.length; i < len; ++i) {lookup[i] = code[i];revLookup[code.charCodeAt(i)] = i;}revLookup[\"-\".charCodeAt(0)] = 62;revLookup[\"_\".charCodeAt(0)] = 63;function getLens(b64) {var len = b64.length;if (len % 4 > 0) {throw new Error(\"Invalid string. Length must be a multiple of 4\");}var validLen = b64.indexOf(\"=\");if (validLen === -1) validLen = len;var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;return [validLen, placeHoldersLen];}function byteLength(b64) {var lens = getLens(b64);var validLen = lens[0];var placeHoldersLen = lens[1];return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;}function _byteLength(b64, validLen, placeHoldersLen) {return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;}function toByteArray(b64) {var tmp;var lens = getLens(b64);var validLen = lens[0];var placeHoldersLen = lens[1];var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));var curByte = 0;var len = placeHoldersLen > 0 ? validLen - 4 : validLen;for (var i = 0; i < len; i += 4) {tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];arr[curByte++] = tmp >> 16 & 255;arr[curByte++] = tmp >> 8 & 255;arr[curByte++] = tmp & 255;}if (placeHoldersLen === 2) {tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;arr[curByte++] = tmp & 255;}if (placeHoldersLen === 1) {tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;arr[curByte++] = tmp >> 8 & 255;arr[curByte++] = tmp & 255;}return arr;}function tripletToBase64(num) {return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];}function encodeChunk(uint8, start, end) {var tmp;var output = [];for (var i = start; i < end; i += 3) {tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);output.push(tripletToBase64(tmp));}return output.join(\"\");}function fromByteArray(uint8) {var tmp;var len = uint8.length;var extraBytes = len % 3;var parts = [];var maxChunkLength = 16383;for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));}if (extraBytes === 1) {tmp = uint8[len - 1];parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");} else if (extraBytes === 2) {tmp = (uint8[len - 2] << 8) + uint8[len - 1];parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\");}return parts.join(\"\");}}, {}], 11: [function (require, module, exports) {}, {}], 12: [function (require, module, exports) {\"use strict\";var base64 = require(\"base64-js\");var ieee754 = require(\"ieee754\");exports.Buffer = Buffer;exports.SlowBuffer = SlowBuffer;exports.INSPECT_MAX_BYTES = 50;var K_MAX_LENGTH = 2147483647;exports.kMaxLength = K_MAX_LENGTH;Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {console.error(__f__(\"This browser lacks typed array (Uint8Array) support which is required by \" + \"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\", \" at components\\\\mqtt\\\\mqtt.js:1\"));}function typedArraySupport() {try {var arr = new Uint8Array(1);arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {return 42;} };return arr.foo() === 42;} catch (e) {return false;}}Object.defineProperty(Buffer.prototype, \"parent\", { enumerable: true, get: function get() {if (!Buffer.isBuffer(this)) return undefined;return this.buffer;} });Object.defineProperty(Buffer.prototype, \"offset\", { enumerable: true, get: function get() {if (!Buffer.isBuffer(this)) return undefined;return this.byteOffset;} });function createBuffer(length) {if (length > K_MAX_LENGTH) {throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');}var buf = new Uint8Array(length);buf.__proto__ = Buffer.prototype;return buf;}function Buffer(arg, encodingOrOffset, length) {if (typeof arg === \"number\") {if (typeof encodingOrOffset === \"string\") {throw new TypeError('The \"string\" argument must be of type string. Received type number');}return allocUnsafe(arg);}return from(arg, encodingOrOffset, length);}if (typeof Symbol !== \"undefined\" && Symbol.species != null && Buffer[Symbol.species] === Buffer) {Object.defineProperty(Buffer, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false });}Buffer.poolSize = 8192;function from(value, encodingOrOffset, length) {if (typeof value === \"string\") {return fromString(value, encodingOrOffset);}if (ArrayBuffer.isView(value)) {return fromArrayLike(value);}if (value == null) {throw TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof value);}if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {return fromArrayBuffer(value, encodingOrOffset, length);}if (typeof value === \"number\") {throw new TypeError('The \"value\" argument must not be of type number. Received type number');}var valueOf = value.valueOf && value.valueOf();if (valueOf != null && valueOf !== value) {return Buffer.from(valueOf, encodingOrOffset, length);}var b = fromObject(value);if (b) return b;if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {return Buffer.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof value);}Buffer.from = function (value, encodingOrOffset, length) {return from(value, encodingOrOffset, length);};Buffer.prototype.__proto__ = Uint8Array.prototype;Buffer.__proto__ = Uint8Array;function assertSize(size) {if (typeof size !== \"number\") {throw new TypeError('\"size\" argument must be of type number');} else if (size < 0) {throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');}}function alloc(size, fill, encoding) {assertSize(size);if (size <= 0) {return createBuffer(size);}if (fill !== undefined) {return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);}return createBuffer(size);}Buffer.alloc = function (size, fill, encoding) {return alloc(size, fill, encoding);};function allocUnsafe(size) {assertSize(size);return createBuffer(size < 0 ? 0 : checked(size) | 0);}Buffer.allocUnsafe = function (size) {return allocUnsafe(size);};Buffer.allocUnsafeSlow = function (size) {return allocUnsafe(size);};function fromString(string, encoding) {if (typeof encoding !== \"string\" || encoding === \"\") {encoding = \"utf8\";}if (!Buffer.isEncoding(encoding)) {throw new TypeError(\"Unknown encoding: \" + encoding);}var length = byteLength(string, encoding) | 0;var buf = createBuffer(length);var actual = buf.write(string, encoding);if (actual !== length) {buf = buf.slice(0, actual);}return buf;}function fromArrayLike(array) {var length = array.length < 0 ? 0 : checked(array.length) | 0;var buf = createBuffer(length);for (var i = 0; i < length; i += 1) {buf[i] = array[i] & 255;}return buf;}function fromArrayBuffer(array, byteOffset, length) {if (byteOffset < 0 || array.byteLength < byteOffset) {throw new RangeError('\"offset\" is outside of buffer bounds');}if (array.byteLength < byteOffset + (length || 0)) {throw new RangeError('\"length\" is outside of buffer bounds');}var buf;if (byteOffset === undefined && length === undefined) {buf = new Uint8Array(array);} else if (length === undefined) {buf = new Uint8Array(array, byteOffset);} else {buf = new Uint8Array(array, byteOffset, length);}buf.__proto__ = Buffer.prototype;return buf;}function fromObject(obj) {if (Buffer.isBuffer(obj)) {var len = checked(obj.length) | 0;var buf = createBuffer(len);if (buf.length === 0) {return buf;}obj.copy(buf, 0, 0, len);return buf;}if (obj.length !== undefined) {if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {return createBuffer(0);}return fromArrayLike(obj);}if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {return fromArrayLike(obj.data);}}function checked(length) {if (length >= K_MAX_LENGTH) {throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");}return length | 0;}function SlowBuffer(length) {if (+length != length) {length = 0;}return Buffer.alloc(+length);}Buffer.isBuffer = function isBuffer(b) {return b != null && b._isBuffer === true && b !== Buffer.prototype;};Buffer.compare = function compare(a, b) {if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');}if (a === b) return 0;var x = a.length;var y = b.length;for (var i = 0, len = Math.min(x, y); i < len; ++i) {if (a[i] !== b[i]) {x = a[i];y = b[i];break;}}if (x < y) return -1;if (y < x) return 1;return 0;};Buffer.isEncoding = function isEncoding(encoding) {switch (String(encoding).toLowerCase()) {case \"hex\":case \"utf8\":case \"utf-8\":case \"ascii\":case \"latin1\":case \"binary\":case \"base64\":case \"ucs2\":case \"ucs-2\":case \"utf16le\":case \"utf-16le\":return true;default:return false;}};Buffer.concat = function concat(list, length) {if (!Array.isArray(list)) {throw new TypeError('\"list\" argument must be an Array of Buffers');}if (list.length === 0) {return Buffer.alloc(0);}var i;if (length === undefined) {length = 0;for (i = 0; i < list.length; ++i) {length += list[i].length;}}var buffer = Buffer.allocUnsafe(length);var pos = 0;for (i = 0; i < list.length; ++i) {var buf = list[i];if (isInstance(buf, Uint8Array)) {buf = Buffer.from(buf);}if (!Buffer.isBuffer(buf)) {throw new TypeError('\"list\" argument must be an Array of Buffers');}buf.copy(buffer, pos);pos += buf.length;}return buffer;};function byteLength(string, encoding) {if (Buffer.isBuffer(string)) {return string.length;}if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {return string.byteLength;}if (typeof string !== \"string\") {throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + \"Received type \" + typeof string);}var len = string.length;var mustMatch = arguments.length > 2 && arguments[2] === true;if (!mustMatch && len === 0) return 0;var loweredCase = false;for (;;) {switch (encoding) {case \"ascii\":case \"latin1\":case \"binary\":return len;case \"utf8\":case \"utf-8\":return utf8ToBytes(string).length;case \"ucs2\":case \"ucs-2\":case \"utf16le\":case \"utf-16le\":return len * 2;case \"hex\":return len >>> 1;case \"base64\":return base64ToBytes(string).length;default:if (loweredCase) {return mustMatch ? -1 : utf8ToBytes(string).length;}encoding = (\"\" + encoding).toLowerCase();loweredCase = true;}}}Buffer.byteLength = byteLength;function slowToString(encoding, start, end) {var loweredCase = false;if (start === undefined || start < 0) {start = 0;}if (start > this.length) {return \"\";}if (end === undefined || end > this.length) {end = this.length;}if (end <= 0) {return \"\";}end >>>= 0;start >>>= 0;if (end <= start) {return \"\";}if (!encoding) encoding = \"utf8\";while (true) {switch (encoding) {case \"hex\":return hexSlice(this, start, end);case \"utf8\":case \"utf-8\":return utf8Slice(this, start, end);case \"ascii\":return asciiSlice(this, start, end);case \"latin1\":case \"binary\":return latin1Slice(this, start, end);case \"base64\":return base64Slice(this, start, end);case \"ucs2\":case \"ucs-2\":case \"utf16le\":case \"utf-16le\":return utf16leSlice(this, start, end);default:if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);encoding = (encoding + \"\").toLowerCase();loweredCase = true;}}}Buffer.prototype._isBuffer = true;function swap(b, n, m) {var i = b[n];b[n] = b[m];b[m] = i;}Buffer.prototype.swap16 = function swap16() {var len = this.length;if (len % 2 !== 0) {throw new RangeError(\"Buffer size must be a multiple of 16-bits\");}for (var i = 0; i < len; i += 2) {swap(this, i, i + 1);}return this;};Buffer.prototype.swap32 = function swap32() {var len = this.length;if (len % 4 !== 0) {throw new RangeError(\"Buffer size must be a multiple of 32-bits\");}for (var i = 0; i < len; i += 4) {swap(this, i, i + 3);swap(this, i + 1, i + 2);}return this;};Buffer.prototype.swap64 = function swap64() {var len = this.length;if (len % 8 !== 0) {throw new RangeError(\"Buffer size must be a multiple of 64-bits\");}for (var i = 0; i < len; i += 8) {swap(this, i, i + 7);swap(this, i + 1, i + 6);swap(this, i + 2, i + 5);swap(this, i + 3, i + 4);}return this;};Buffer.prototype.toString = function toString() {var length = this.length;if (length === 0) return \"\";if (arguments.length === 0) return utf8Slice(this, 0, length);return slowToString.apply(this, arguments);};Buffer.prototype.toLocaleString = Buffer.prototype.toString;Buffer.prototype.equals = function equals(b) {if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");if (this === b) return true;return Buffer.compare(this, b) === 0;};Buffer.prototype.inspect = function inspect() {var str = \"\";var max = exports.INSPECT_MAX_BYTES;str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();if (this.length > max) str += \" ... \";return \"<Buffer \" + str + \">\";};Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {if (isInstance(target, Uint8Array)) {target = Buffer.from(target, target.offset, target.byteLength);}if (!Buffer.isBuffer(target)) {throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + \"Received type \" + typeof target);}if (start === undefined) {start = 0;}if (end === undefined) {end = target ? target.length : 0;}if (thisStart === undefined) {thisStart = 0;}if (thisEnd === undefined) {thisEnd = this.length;}if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {throw new RangeError(\"out of range index\");}if (thisStart >= thisEnd && start >= end) {return 0;}if (thisStart >= thisEnd) {return -1;}if (start >= end) {return 1;}start >>>= 0;end >>>= 0;thisStart >>>= 0;thisEnd >>>= 0;if (this === target) return 0;var x = thisEnd - thisStart;var y = end - start;var len = Math.min(x, y);var thisCopy = this.slice(thisStart, thisEnd);var targetCopy = target.slice(start, end);for (var i = 0; i < len; ++i) {if (thisCopy[i] !== targetCopy[i]) {x = thisCopy[i];y = targetCopy[i];break;}}if (x < y) return -1;if (y < x) return 1;return 0;};function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {if (buffer.length === 0) return -1;if (typeof byteOffset === \"string\") {encoding = byteOffset;byteOffset = 0;} else if (byteOffset > 2147483647) {byteOffset = 2147483647;} else if (byteOffset < -2147483648) {byteOffset = -2147483648;}byteOffset = +byteOffset;if (numberIsNaN(byteOffset)) {byteOffset = dir ? 0 : buffer.length - 1;}if (byteOffset < 0) byteOffset = buffer.length + byteOffset;if (byteOffset >= buffer.length) {if (dir) return -1;else byteOffset = buffer.length - 1;} else if (byteOffset < 0) {if (dir) byteOffset = 0;else return -1;}if (typeof val === \"string\") {val = Buffer.from(val, encoding);}if (Buffer.isBuffer(val)) {if (val.length === 0) {return -1;}return arrayIndexOf(buffer, val, byteOffset, encoding, dir);} else if (typeof val === \"number\") {val = val & 255;if (typeof Uint8Array.prototype.indexOf === \"function\") {if (dir) {return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);} else {return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);}}return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);}throw new TypeError(\"val must be string, number or Buffer\");}function arrayIndexOf(arr, val, byteOffset, encoding, dir) {var indexSize = 1;var arrLength = arr.length;var valLength = val.length;if (encoding !== undefined) {encoding = String(encoding).toLowerCase();if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {if (arr.length < 2 || val.length < 2) {return -1;}indexSize = 2;arrLength /= 2;valLength /= 2;byteOffset /= 2;}}function read(buf, i) {if (indexSize === 1) {return buf[i];} else {return buf.readUInt16BE(i * indexSize);}}var i;if (dir) {var foundIndex = -1;for (i = byteOffset; i < arrLength; i++) {if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {if (foundIndex === -1) foundIndex = i;if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;} else {if (foundIndex !== -1) i -= i - foundIndex;foundIndex = -1;}}} else {if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;for (i = byteOffset; i >= 0; i--) {var found = true;for (var j = 0; j < valLength; j++) {if (read(arr, i + j) !== read(val, j)) {found = false;break;}}if (found) return i;}}return -1;}Buffer.prototype.includes = function includes(val, byteOffset, encoding) {return this.indexOf(val, byteOffset, encoding) !== -1;};Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {return bidirectionalIndexOf(this, val, byteOffset, encoding, true);};Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {return bidirectionalIndexOf(this, val, byteOffset, encoding, false);};function hexWrite(buf, string, offset, length) {offset = Number(offset) || 0;var remaining = buf.length - offset;if (!length) {length = remaining;} else {length = Number(length);if (length > remaining) {length = remaining;}}var strLen = string.length;if (length > strLen / 2) {length = strLen / 2;}for (var i = 0; i < length; ++i) {var parsed = parseInt(string.substr(i * 2, 2), 16);if (numberIsNaN(parsed)) return i;buf[offset + i] = parsed;}return i;}function utf8Write(buf, string, offset, length) {return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);}function asciiWrite(buf, string, offset, length) {return blitBuffer(asciiToBytes(string), buf, offset, length);}function latin1Write(buf, string, offset, length) {return asciiWrite(buf, string, offset, length);}function base64Write(buf, string, offset, length) {return blitBuffer(base64ToBytes(string), buf, offset, length);}function ucs2Write(buf, string, offset, length) {return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);}Buffer.prototype.write = function write(string, offset, length, encoding) {if (offset === undefined) {encoding = \"utf8\";length = this.length;offset = 0;} else if (length === undefined && typeof offset === \"string\") {encoding = offset;length = this.length;offset = 0;} else if (isFinite(offset)) {offset = offset >>> 0;if (isFinite(length)) {length = length >>> 0;if (encoding === undefined) encoding = \"utf8\";} else {encoding = length;length = undefined;}} else {throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");}var remaining = this.length - offset;if (length === undefined || length > remaining) length = remaining;if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {throw new RangeError(\"Attempt to write outside buffer bounds\");}if (!encoding) encoding = \"utf8\";var loweredCase = false;for (;;) {switch (encoding) {case \"hex\":return hexWrite(this, string, offset, length);case \"utf8\":case \"utf-8\":return utf8Write(this, string, offset, length);case \"ascii\":return asciiWrite(this, string, offset, length);case \"latin1\":case \"binary\":return latin1Write(this, string, offset, length);case \"base64\":return base64Write(this, string, offset, length);case \"ucs2\":case \"ucs-2\":case \"utf16le\":case \"utf-16le\":return ucs2Write(this, string, offset, length);default:if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);encoding = (\"\" + encoding).toLowerCase();loweredCase = true;}}};Buffer.prototype.toJSON = function toJSON() {return { type: \"Buffer\", data: Array.prototype.slice.call(this._arr || this, 0) };};function base64Slice(buf, start, end) {if (start === 0 && end === buf.length) {return base64.fromByteArray(buf);} else {return base64.fromByteArray(buf.slice(start, end));}}function utf8Slice(buf, start, end) {end = Math.min(buf.length, end);var res = [];var i = start;while (i < end) {var firstByte = buf[i];var codePoint = null;var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;if (i + bytesPerSequence <= end) {var secondByte, thirdByte, fourthByte, tempCodePoint;switch (bytesPerSequence) {case 1:if (firstByte < 128) {codePoint = firstByte;}break;case 2:secondByte = buf[i + 1];if ((secondByte & 192) === 128) {tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;if (tempCodePoint > 127) {codePoint = tempCodePoint;}}break;case 3:secondByte = buf[i + 1];thirdByte = buf[i + 2];if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {codePoint = tempCodePoint;}}break;case 4:secondByte = buf[i + 1];thirdByte = buf[i + 2];fourthByte = buf[i + 3];if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;if (tempCodePoint > 65535 && tempCodePoint < 1114112) {codePoint = tempCodePoint;}}}}if (codePoint === null) {codePoint = 65533;bytesPerSequence = 1;} else if (codePoint > 65535) {codePoint -= 65536;res.push(codePoint >>> 10 & 1023 | 55296);codePoint = 56320 | codePoint & 1023;}res.push(codePoint);i += bytesPerSequence;}return decodeCodePointsArray(res);}var MAX_ARGUMENTS_LENGTH = 4096;function decodeCodePointsArray(codePoints) {var len = codePoints.length;if (len <= MAX_ARGUMENTS_LENGTH) {return String.fromCharCode.apply(String, codePoints);}var res = \"\";var i = 0;while (i < len) {res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf, start, end) {var ret = \"\";end = Math.min(buf.length, end);for (var i = start; i < end; ++i) {ret += String.fromCharCode(buf[i] & 127);}return ret;}function latin1Slice(buf, start, end) {var ret = \"\";end = Math.min(buf.length, end);for (var i = start; i < end; ++i) {ret += String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf, start, end) {var len = buf.length;if (!start || start < 0) start = 0;if (!end || end < 0 || end > len) end = len;var out = \"\";for (var i = start; i < end; ++i) {out += toHex(buf[i]);}return out;}function utf16leSlice(buf, start, end) {var bytes = buf.slice(start, end);var res = \"\";for (var i = 0; i < bytes.length; i += 2) {res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);}return res;}Buffer.prototype.slice = function slice(start, end) {var len = this.length;start = ~~start;end = end === undefined ? len : ~~end;if (start < 0) {start += len;if (start < 0) start = 0;} else if (start > len) {start = len;}if (end < 0) {end += len;if (end < 0) end = 0;} else if (end > len) {end = len;}if (end < start) end = start;var newBuf = this.subarray(start, end);newBuf.__proto__ = Buffer.prototype;return newBuf;};function checkOffset(offset, ext, length) {if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");}Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {offset = offset >>> 0;byteLength = byteLength >>> 0;if (!noAssert) checkOffset(offset, byteLength, this.length);var val = this[offset];var mul = 1;var i = 0;while (++i < byteLength && (mul *= 256)) {val += this[offset + i] * mul;}return val;};Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {offset = offset >>> 0;byteLength = byteLength >>> 0;if (!noAssert) {checkOffset(offset, byteLength, this.length);}var val = this[offset + --byteLength];var mul = 1;while (byteLength > 0 && (mul *= 256)) {val += this[offset + --byteLength] * mul;}return val;};Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 1, this.length);return this[offset];};Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 2, this.length);return this[offset] | this[offset + 1] << 8;};Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 2, this.length);return this[offset] << 8 | this[offset + 1];};Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 4, this.length);return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;};Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 4, this.length);return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);};Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {offset = offset >>> 0;byteLength = byteLength >>> 0;if (!noAssert) checkOffset(offset, byteLength, this.length);var val = this[offset];var mul = 1;var i = 0;while (++i < byteLength && (mul *= 256)) {val += this[offset + i] * mul;}mul *= 128;if (val >= mul) val -= Math.pow(2, 8 * byteLength);return val;};Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {offset = offset >>> 0;byteLength = byteLength >>> 0;if (!noAssert) checkOffset(offset, byteLength, this.length);var i = byteLength;var mul = 1;var val = this[offset + --i];while (i > 0 && (mul *= 256)) {val += this[offset + --i] * mul;}mul *= 128;if (val >= mul) val -= Math.pow(2, 8 * byteLength);return val;};Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 1, this.length);if (!(this[offset] & 128)) return this[offset];return (255 - this[offset] + 1) * -1;};Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 2, this.length);var val = this[offset] | this[offset + 1] << 8;return val & 32768 ? val | 4294901760 : val;};Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 2, this.length);var val = this[offset + 1] | this[offset] << 8;return val & 32768 ? val | 4294901760 : val;};Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 4, this.length);return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;};Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 4, this.length);return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];};Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 4, this.length);return ieee754.read(this, offset, true, 23, 4);};Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 4, this.length);return ieee754.read(this, offset, false, 23, 4);};Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 8, this.length);return ieee754.read(this, offset, true, 52, 8);};Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {offset = offset >>> 0;if (!noAssert) checkOffset(offset, 8, this.length);return ieee754.read(this, offset, false, 52, 8);};function checkInt(buf, value, offset, ext, max, min) {if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");}Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {value = +value;offset = offset >>> 0;byteLength = byteLength >>> 0;if (!noAssert) {var maxBytes = Math.pow(2, 8 * byteLength) - 1;checkInt(this, value, offset, byteLength, maxBytes, 0);}var mul = 1;var i = 0;this[offset] = value & 255;while (++i < byteLength && (mul *= 256)) {this[offset + i] = value / mul & 255;}return offset + byteLength;};Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {value = +value;offset = offset >>> 0;byteLength = byteLength >>> 0;if (!noAssert) {var maxBytes = Math.pow(2, 8 * byteLength) - 1;checkInt(this, value, offset, byteLength, maxBytes, 0);}var i = byteLength - 1;var mul = 1;this[offset + i] = value & 255;while (--i >= 0 && (mul *= 256)) {this[offset + i] = value / mul & 255;}return offset + byteLength;};Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 1, 255, 0);this[offset] = value & 255;return offset + 1;};Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);this[offset] = value & 255;this[offset + 1] = value >>> 8;return offset + 2;};Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);this[offset] = value >>> 8;this[offset + 1] = value & 255;return offset + 2;};Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);this[offset + 3] = value >>> 24;this[offset + 2] = value >>> 16;this[offset + 1] = value >>> 8;this[offset] = value & 255;return offset + 4;};Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);this[offset] = value >>> 24;this[offset + 1] = value >>> 16;this[offset + 2] = value >>> 8;this[offset + 3] = value & 255;return offset + 4;};Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) {var limit = Math.pow(2, 8 * byteLength - 1);checkInt(this, value, offset, byteLength, limit - 1, -limit);}var i = 0;var mul = 1;var sub = 0;this[offset] = value & 255;while (++i < byteLength && (mul *= 256)) {if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {sub = 1;}this[offset + i] = (value / mul >> 0) - sub & 255;}return offset + byteLength;};Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) {var limit = Math.pow(2, 8 * byteLength - 1);checkInt(this, value, offset, byteLength, limit - 1, -limit);}var i = byteLength - 1;var mul = 1;var sub = 0;this[offset + i] = value & 255;while (--i >= 0 && (mul *= 256)) {if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {sub = 1;}this[offset + i] = (value / mul >> 0) - sub & 255;}return offset + byteLength;};Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 1, 127, -128);if (value < 0) value = 255 + value + 1;this[offset] = value & 255;return offset + 1;};Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);this[offset] = value & 255;this[offset + 1] = value >>> 8;return offset + 2;};Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);this[offset] = value >>> 8;this[offset + 1] = value & 255;return offset + 2;};Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);this[offset] = value & 255;this[offset + 1] = value >>> 8;this[offset + 2] = value >>> 16;this[offset + 3] = value >>> 24;return offset + 4;};Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);if (value < 0) value = 4294967295 + value + 1;this[offset] = value >>> 24;this[offset + 1] = value >>> 16;this[offset + 2] = value >>> 8;this[offset + 3] = value & 255;return offset + 4;};function checkIEEE754(buf, value, offset, ext, max, min) {if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");if (offset < 0) throw new RangeError(\"Index out of range\");}function writeFloat(buf, value, offset, littleEndian, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) {checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);}ieee754.write(buf, value, offset, littleEndian, 23, 4);return offset + 4;}Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {return writeFloat(this, value, offset, true, noAssert);};Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {return writeFloat(this, value, offset, false, noAssert);};function writeDouble(buf, value, offset, littleEndian, noAssert) {value = +value;offset = offset >>> 0;if (!noAssert) {checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);}ieee754.write(buf, value, offset, littleEndian, 52, 8);return offset + 8;}Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {return writeDouble(this, value, offset, true, noAssert);};Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {return writeDouble(this, value, offset, false, noAssert);};Buffer.prototype.copy = function copy(target, targetStart, start, end) {if (!Buffer.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");if (!start) start = 0;if (!end && end !== 0) end = this.length;if (targetStart >= target.length) targetStart = target.length;if (!targetStart) targetStart = 0;if (end > 0 && end < start) end = start;if (end === start) return 0;if (target.length === 0 || this.length === 0) return 0;if (targetStart < 0) {throw new RangeError(\"targetStart out of bounds\");}if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");if (end > this.length) end = this.length;if (target.length - targetStart < end - start) {end = target.length - targetStart + start;}var len = end - start;if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") {this.copyWithin(targetStart, start, end);} else if (this === target && start < targetStart && targetStart < end) {for (var i = len - 1; i >= 0; --i) {target[i + targetStart] = this[i + start];}} else {Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);}return len;};Buffer.prototype.fill = function fill(val, start, end, encoding) {if (typeof val === \"string\") {if (typeof start === \"string\") {encoding = start;start = 0;end = this.length;} else if (typeof end === \"string\") {encoding = end;end = this.length;}if (encoding !== undefined && typeof encoding !== \"string\") {throw new TypeError(\"encoding must be a string\");}if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {throw new TypeError(\"Unknown encoding: \" + encoding);}if (val.length === 1) {var code = val.charCodeAt(0);if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {val = code;}}} else if (typeof val === \"number\") {val = val & 255;}if (start < 0 || this.length < start || this.length < end) {throw new RangeError(\"Out of range index\");}if (end <= start) {return this;}start = start >>> 0;end = end === undefined ? this.length : end >>> 0;if (!val) val = 0;var i;if (typeof val === \"number\") {for (i = start; i < end; ++i) {this[i] = val;}} else {var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);var len = bytes.length;if (len === 0) {throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');}for (i = 0; i < end - start; ++i) {this[i + start] = bytes[i % len];}}return this;};var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;function base64clean(str) {str = str.split(\"=\")[0];str = str.trim().replace(INVALID_BASE64_RE, \"\");if (str.length < 2) return \"\";while (str.length % 4 !== 0) {str = str + \"=\";}return str;}function toHex(n) {if (n < 16) return \"0\" + n.toString(16);return n.toString(16);}function utf8ToBytes(string, units) {units = units || Infinity;var codePoint;var length = string.length;var leadSurrogate = null;var bytes = [];for (var i = 0; i < length; ++i) {codePoint = string.charCodeAt(i);if (codePoint > 55295 && codePoint < 57344) {if (!leadSurrogate) {if (codePoint > 56319) {if ((units -= 3) > -1) bytes.push(239, 191, 189);continue;} else if (i + 1 === length) {if ((units -= 3) > -1) bytes.push(239, 191, 189);continue;}leadSurrogate = codePoint;continue;}if (codePoint < 56320) {if ((units -= 3) > -1) bytes.push(239, 191, 189);leadSurrogate = codePoint;continue;}codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;} else if (leadSurrogate) {if ((units -= 3) > -1) bytes.push(239, 191, 189);}leadSurrogate = null;if (codePoint < 128) {if ((units -= 1) < 0) break;bytes.push(codePoint);} else if (codePoint < 2048) {if ((units -= 2) < 0) break;bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);} else if (codePoint < 65536) {if ((units -= 3) < 0) break;bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);} else if (codePoint < 1114112) {if ((units -= 4) < 0) break;bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);} else {throw new Error(\"Invalid code point\");}}return bytes;}function asciiToBytes(str) {var byteArray = [];for (var i = 0; i < str.length; ++i) {byteArray.push(str.charCodeAt(i) & 255);}return byteArray;}function utf16leToBytes(str, units) {var c, hi, lo;var byteArray = [];for (var i = 0; i < str.length; ++i) {if ((units -= 2) < 0) break;c = str.charCodeAt(i);hi = c >> 8;lo = c % 256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str) {return base64.toByteArray(base64clean(str));}function blitBuffer(src, dst, offset, length) {for (var i = 0; i < length; ++i) {if (i + offset >= dst.length || i >= src.length) break;dst[i + offset] = src[i];}return i;}function isInstance(obj, type) {return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;}function numberIsNaN(obj) {return obj !== obj;}}, { \"base64-js\": 10, ieee754: 79 }], 13: [function (require, module, exports) {var objectCreate = Object.create || objectCreatePolyfill;var objectKeys = Object.keys || objectKeysPolyfill;var bind = Function.prototype.bind || functionBindPolyfill;function EventEmitter() {if (!this._events || !Object.prototype.hasOwnProperty.call(this, \"_events\")) {this._events = objectCreate(null);this._eventsCount = 0;}this._maxListeners = this._maxListeners || undefined;}module.exports = EventEmitter;EventEmitter.EventEmitter = EventEmitter;EventEmitter.prototype._events = undefined;EventEmitter.prototype._maxListeners = undefined;var defaultMaxListeners = 10;var hasDefineProperty;try {var o = {};if (Object.defineProperty) Object.defineProperty(o, \"x\", { value: 0 });hasDefineProperty = o.x === 0;} catch (err) {hasDefineProperty = false;}if (hasDefineProperty) {Object.defineProperty(EventEmitter, \"defaultMaxListeners\", { enumerable: true, get: function get() {return defaultMaxListeners;}, set: function set(arg) {if (typeof arg !== \"number\" || arg < 0 || arg !== arg) throw new TypeError('\"defaultMaxListeners\" must be a positive number');defaultMaxListeners = arg;} });} else {EventEmitter.defaultMaxListeners = defaultMaxListeners;}EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {if (typeof n !== \"number\" || n < 0 || isNaN(n)) throw new TypeError('\"n\" argument must be a positive number');this._maxListeners = n;return this;};function $getMaxListeners(that) {if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;return that._maxListeners;}EventEmitter.prototype.getMaxListeners = function getMaxListeners() {return $getMaxListeners(this);};function emitNone(handler, isFn, self) {if (isFn) handler.call(self);else {var len = handler.length;var listeners = arrayClone(handler, len);for (var i = 0; i < len; ++i) {listeners[i].call(self);}}}function emitOne(handler, isFn, self, arg1) {if (isFn) handler.call(self, arg1);else {var len = handler.length;var listeners = arrayClone(handler, len);for (var i = 0; i < len; ++i) {listeners[i].call(self, arg1);}}}function emitTwo(handler, isFn, self, arg1, arg2) {if (isFn) handler.call(self, arg1, arg2);else {var len = handler.length;var listeners = arrayClone(handler, len);for (var i = 0; i < len; ++i) {listeners[i].call(self, arg1, arg2);}}}function emitThree(handler, isFn, self, arg1, arg2, arg3) {if (isFn) handler.call(self, arg1, arg2, arg3);else {var len = handler.length;var listeners = arrayClone(handler, len);for (var i = 0; i < len; ++i) {listeners[i].call(self, arg1, arg2, arg3);}}}function emitMany(handler, isFn, self, args) {if (isFn) handler.apply(self, args);else {var len = handler.length;var listeners = arrayClone(handler, len);for (var i = 0; i < len; ++i) {listeners[i].apply(self, args);}}}EventEmitter.prototype.emit = function emit(type) {var er, handler, len, args, i, events;var doError = type === \"error\";events = this._events;if (events) doError = doError && events.error == null;else if (!doError) return false;if (doError) {if (arguments.length > 1) er = arguments[1];if (er instanceof Error) {throw er;} else {var err = new Error('Unhandled \"error\" event. (' + er + \")\");err.context = er;throw err;}return false;}handler = events[type];if (!handler) return false;var isFn = typeof handler === \"function\";len = arguments.length;switch (len) {case 1:emitNone(handler, isFn, this);break;case 2:emitOne(handler, isFn, this, arguments[1]);break;case 3:emitTwo(handler, isFn, this, arguments[1], arguments[2]);break;case 4:emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);break;default:args = new Array(len - 1);for (i = 1; i < len; i++) {args[i - 1] = arguments[i];}emitMany(handler, isFn, this, args);}return true;};function _addListener(target, type, listener, prepend) {var m;var events;var existing;if (typeof listener !== \"function\") throw new TypeError('\"listener\" argument must be a function');events = target._events;if (!events) {events = target._events = objectCreate(null);target._eventsCount = 0;} else {if (events.newListener) {target.emit(\"newListener\", type, listener.listener ? listener.listener : listener);events = target._events;}existing = events[type];}if (!existing) {existing = events[type] = listener;++target._eventsCount;} else {if (typeof existing === \"function\") {existing = events[type] = prepend ? [listener, existing] : [existing, listener];} else {if (prepend) {existing.unshift(listener);} else {existing.push(listener);}}if (!existing.warned) {m = $getMaxListeners(target);if (m && m > 0 && existing.length > m) {existing.warned = true;var w = new Error(\"Possible EventEmitter memory leak detected. \" + existing.length + ' \"' + String(type) + '\" listeners ' + \"added. Use emitter.setMaxListeners() to \" + \"increase limit.\");w.name = \"MaxListenersExceededWarning\";w.emitter = target;w.type = type;w.count = existing.length;if (typeof console === \"object\" && console.warn) {console.warn(__f__(\"%s: %s\", w.name, w.message, \" at components\\\\mqtt\\\\mqtt.js:1\"));}}}}return target;}EventEmitter.prototype.addListener = function addListener(type, listener) {return _addListener(this, type, listener, false);};EventEmitter.prototype.on = EventEmitter.prototype.addListener;EventEmitter.prototype.prependListener = function prependListener(type, listener) {return _addListener(this, type, listener, true);};function onceWrapper() {if (!this.fired) {this.target.removeListener(this.type, this.wrapFn);this.fired = true;switch (arguments.length) {case 0:return this.listener.call(this.target);case 1:return this.listener.call(this.target, arguments[0]);case 2:return this.listener.call(this.target, arguments[0], arguments[1]);case 3:return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);default:var args = new Array(arguments.length);for (var i = 0; i < args.length; ++i) {args[i] = arguments[i];}this.listener.apply(this.target, args);}}}function _onceWrap(target, type, listener) {var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };var wrapped = bind.call(onceWrapper, state);wrapped.listener = listener;state.wrapFn = wrapped;return wrapped;}EventEmitter.prototype.once = function once(type, listener) {if (typeof listener !== \"function\") throw new TypeError('\"listener\" argument must be a function');this.on(type, _onceWrap(this, type, listener));return this;};EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {if (typeof listener !== \"function\") throw new TypeError('\"listener\" argument must be a function');this.prependListener(type, _onceWrap(this, type, listener));return this;};EventEmitter.prototype.removeListener = function removeListener(type, listener) {var list, events, position, i, originalListener;if (typeof listener !== \"function\") throw new TypeError('\"listener\" argument must be a function');events = this._events;if (!events) return this;list = events[type];if (!list) return this;if (list === listener || list.listener === listener) {if (--this._eventsCount === 0) this._events = objectCreate(null);else {delete events[type];if (events.removeListener) this.emit(\"removeListener\", type, list.listener || listener);}} else if (typeof list !== \"function\") {position = -1;for (i = list.length - 1; i >= 0; i--) {if (list[i] === listener || list[i].listener === listener) {originalListener = list[i].listener;position = i;break;}}if (position < 0) return this;if (position === 0) list.shift();else spliceOne(list, position);if (list.length === 1) events[type] = list[0];if (events.removeListener) this.emit(\"removeListener\", type, originalListener || listener);}return this;};EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {var listeners, events, i;events = this._events;if (!events) return this;if (!events.removeListener) {if (arguments.length === 0) {this._events = objectCreate(null);this._eventsCount = 0;} else if (events[type]) {if (--this._eventsCount === 0) this._events = objectCreate(null);else delete events[type];}return this;}if (arguments.length === 0) {var keys = objectKeys(events);var key;for (i = 0; i < keys.length; ++i) {key = keys[i];if (key === \"removeListener\") continue;this.removeAllListeners(key);}this.removeAllListeners(\"removeListener\");this._events = objectCreate(null);this._eventsCount = 0;return this;}listeners = events[type];if (typeof listeners === \"function\") {this.removeListener(type, listeners);} else if (listeners) {for (i = listeners.length - 1; i >= 0; i--) {this.removeListener(type, listeners[i]);}}return this;};function _listeners(target, type, unwrap) {var events = target._events;if (!events) return [];var evlistener = events[type];if (!evlistener) return [];if (typeof evlistener === \"function\") return unwrap ? [evlistener.listener || evlistener] : [evlistener];return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);}EventEmitter.prototype.listeners = function listeners(type) {return _listeners(this, type, true);};EventEmitter.prototype.rawListeners = function rawListeners(type) {return _listeners(this, type, false);};EventEmitter.listenerCount = function (emitter, type) {if (typeof emitter.listenerCount === \"function\") {return emitter.listenerCount(type);} else {return listenerCount.call(emitter, type);}};EventEmitter.prototype.listenerCount = listenerCount;function listenerCount(type) {var events = this._events;if (events) {var evlistener = events[type];if (typeof evlistener === \"function\") {return 1;} else if (evlistener) {return evlistener.length;}}return 0;}EventEmitter.prototype.eventNames = function eventNames() {return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];};function spliceOne(list, index) {for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {list[i] = list[k];}list.pop();}function arrayClone(arr, n) {var copy = new Array(n);for (var i = 0; i < n; ++i) {copy[i] = arr[i];}return copy;}function unwrapListeners(arr) {var ret = new Array(arr.length);for (var i = 0; i < ret.length; ++i) {ret[i] = arr[i].listener || arr[i];}return ret;}function objectCreatePolyfill(proto) {var F = function F() {};F.prototype = proto;return new F();}function objectKeysPolyfill(obj) {var keys = [];for (var k in obj) {if (Object.prototype.hasOwnProperty.call(obj, k)) {keys.push(k);}}return k;}function functionBindPolyfill(context) {var fn = this;return function () {return fn.apply(context, arguments);};}}, {}], 14: [function (require, module, exports) {(function (Buffer) {function isArray(arg) {if (Array.isArray) {return Array.isArray(arg);}return objectToString(arg) === \"[object Array]\";}exports.isArray = isArray;function isBoolean(arg) {return typeof arg === \"boolean\";}exports.isBoolean = isBoolean;function isNull(arg) {return arg === null;}exports.isNull = isNull;function isNullOrUndefined(arg) {return arg == null;}exports.isNullOrUndefined = isNullOrUndefined;function isNumber(arg) {return typeof arg === \"number\";}exports.isNumber = isNumber;function isString(arg) {return typeof arg === \"string\";}exports.isString = isString;function isSymbol(arg) {return typeof arg === \"symbol\";}exports.isSymbol = isSymbol;function isUndefined(arg) {return arg === void 0;}exports.isUndefined = isUndefined;function isRegExp(re) {return objectToString(re) === \"[object RegExp]\";}exports.isRegExp = isRegExp;function isObject(arg) {return typeof arg === \"object\" && arg !== null;}exports.isObject = isObject;function isDate(d) {return objectToString(d) === \"[object Date]\";}exports.isDate = isDate;function isError(e) {return objectToString(e) === \"[object Error]\" || e instanceof Error;}exports.isError = isError;function isFunction(arg) {return typeof arg === \"function\";}exports.isFunction = isFunction;function isPrimitive(arg) {return arg === null || typeof arg === \"boolean\" || typeof arg === \"number\" || typeof arg === \"string\" || typeof arg === \"symbol\" || typeof arg === \"undefined\";}exports.isPrimitive = isPrimitive;exports.isBuffer = Buffer.isBuffer;function objectToString(o) {return Object.prototype.toString.call(o);}}).call(this, { isBuffer: require(\"../../is-buffer/index.js\") });}, { \"../../is-buffer/index.js\": 81 }], 15: [function (require, module, exports) {\"use strict\";var copy = require(\"es5-ext/object/copy\"),normalizeOptions = require(\"es5-ext/object/normalize-options\"),ensureCallable = require(\"es5-ext/object/valid-callable\"),map = require(\"es5-ext/object/map\"),callable = require(\"es5-ext/object/valid-callable\"),validValue = require(\"es5-ext/object/valid-value\"),bind = Function.prototype.bind,defineProperty = Object.defineProperty,hasOwnProperty = Object.prototype.hasOwnProperty,define;define = function define(name, desc, options) {var value = validValue(desc) && callable(desc.value),dgs;dgs = copy(desc);delete dgs.writable;delete dgs.value;dgs.get = function () {if (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;desc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);defineProperty(this, name, desc);return this[name];};return dgs;};module.exports = function (props) {var options = normalizeOptions(arguments[1]);if (options.resolveContext != null) ensureCallable(options.resolveContext);return map(props, function (desc, name) {return define(name, desc, options);});};}, { \"es5-ext/object/copy\": 39, \"es5-ext/object/map\": 48, \"es5-ext/object/normalize-options\": 49, \"es5-ext/object/valid-callable\": 54, \"es5-ext/object/valid-value\": 55 }], 16: [function (require, module, exports) {\"use strict\";var assign = require(\"es5-ext/object/assign\"),normalizeOpts = require(\"es5-ext/object/normalize-options\"),isCallable = require(\"es5-ext/object/is-callable\"),contains = require(\"es5-ext/string/#/contains\"),d;d = module.exports = function (dscr, value) {var c, e, w, options, desc;if (arguments.length < 2 || typeof dscr !== \"string\") {options = value;value = dscr;dscr = null;} else {options = arguments[2];}if (dscr == null) {c = w = true;e = false;} else {c = contains.call(dscr, \"c\");e = contains.call(dscr, \"e\");w = contains.call(dscr, \"w\");}desc = { value: value, configurable: c, enumerable: e, writable: w };return !options ? desc : assign(normalizeOpts(options), desc);};d.gs = function (dscr, get, set) {var c, e, options, desc;if (typeof dscr !== \"string\") {options = set;set = get;get = dscr;dscr = null;} else {options = arguments[3];}if (get == null) {get = undefined;} else if (!isCallable(get)) {options = get;get = set = undefined;} else if (set == null) {set = undefined;} else if (!isCallable(set)) {options = set;set = undefined;}if (dscr == null) {c = true;e = false;} else {c = contains.call(dscr, \"c\");e = contains.call(dscr, \"e\");}desc = { get: get, set: set, configurable: c, enumerable: e };return !options ? desc : assign(normalizeOpts(options), desc);};}, { \"es5-ext/object/assign\": 36, \"es5-ext/object/is-callable\": 42, \"es5-ext/object/normalize-options\": 49, \"es5-ext/string/#/contains\": 56 }], 17: [function (require, module, exports) {(function (process, Buffer) {var stream = require(\"readable-stream\");var eos = require(\"end-of-stream\");var inherits = require(\"inherits\");var shift = require(\"stream-shift\");var SIGNAL_FLUSH = Buffer.from && Buffer.from !== Uint8Array.from ? Buffer.from([0]) : new Buffer([0]);var onuncork = function onuncork(self, fn) {if (self._corked) self.once(\"uncork\", fn);else fn();};var autoDestroy = function autoDestroy(self, err) {if (self._autoDestroy) self.destroy(err);};var destroyer = function destroyer(self, end) {return function (err) {if (err) autoDestroy(self, err.message === \"premature close\" ? null : err);else if (end && !self._ended) self.end();};};var end = function end(ws, fn) {if (!ws) return fn();if (ws._writableState && ws._writableState.finished) return fn();if (ws._writableState) return ws.end(fn);ws.end();fn();};var toStreams2 = function toStreams2(rs) {return new stream.Readable({ objectMode: true, highWaterMark: 16 }).wrap(rs);};var Duplexify = function Duplexify(writable, readable, opts) {if (!(this instanceof Duplexify)) return new Duplexify(writable, readable, opts);stream.Duplex.call(this, opts);this._writable = null;this._readable = null;this._readable2 = null;this._autoDestroy = !opts || opts.autoDestroy !== false;this._forwardDestroy = !opts || opts.destroy !== false;this._forwardEnd = !opts || opts.end !== false;this._corked = 1;this._ondrain = null;this._drained = false;this._forwarding = false;this._unwrite = null;this._unread = null;this._ended = false;this.destroyed = false;if (writable) this.setWritable(writable);if (readable) this.setReadable(readable);};inherits(Duplexify, stream.Duplex);Duplexify.obj = function (writable, readable, opts) {if (!opts) opts = {};opts.objectMode = true;opts.highWaterMark = 16;return new Duplexify(writable, readable, opts);};Duplexify.prototype.cork = function () {if (++this._corked === 1) this.emit(\"cork\");};Duplexify.prototype.uncork = function () {if (this._corked && --this._corked === 0) this.emit(\"uncork\");};Duplexify.prototype.setWritable = function (writable) {if (this._unwrite) this._unwrite();if (this.destroyed) {if (writable && writable.destroy) writable.destroy();return;}if (writable === null || writable === false) {this.end();return;}var self = this;var unend = eos(writable, { writable: true, readable: false }, destroyer(this, this._forwardEnd));var ondrain = function ondrain() {var ondrain = self._ondrain;self._ondrain = null;if (ondrain) ondrain();};var clear = function clear() {self._writable.removeListener(\"drain\", ondrain);unend();};if (this._unwrite) process.nextTick(ondrain);this._writable = writable;this._writable.on(\"drain\", ondrain);this._unwrite = clear;this.uncork();};Duplexify.prototype.setReadable = function (readable) {if (this._unread) this._unread();if (this.destroyed) {if (readable && readable.destroy) readable.destroy();return;}if (readable === null || readable === false) {this.push(null);this.resume();return;}var self = this;var unend = eos(readable, { writable: false, readable: true }, destroyer(this));var onreadable = function onreadable() {self._forward();};var onend = function onend() {self.push(null);};var clear = function clear() {self._readable2.removeListener(\"readable\", onreadable);self._readable2.removeListener(\"end\", onend);unend();};this._drained = true;this._readable = readable;this._readable2 = readable._readableState ? readable : toStreams2(readable);this._readable2.on(\"readable\", onreadable);this._readable2.on(\"end\", onend);this._unread = clear;this._forward();};Duplexify.prototype._read = function () {this._drained = true;this._forward();};Duplexify.prototype._forward = function () {if (this._forwarding || !this._readable2 || !this._drained) return;this._forwarding = true;var data;while (this._drained && (data = shift(this._readable2)) !== null) {if (this.destroyed) continue;this._drained = this.push(data);}this._forwarding = false;};Duplexify.prototype.destroy = function (err) {if (this.destroyed) return;this.destroyed = true;var self = this;process.nextTick(function () {self._destroy(err);});};Duplexify.prototype._destroy = function (err) {if (err) {var ondrain = this._ondrain;this._ondrain = null;if (ondrain) ondrain(err);else this.emit(\"error\", err);}if (this._forwardDestroy) {if (this._readable && this._readable.destroy) this._readable.destroy();if (this._writable && this._writable.destroy) this._writable.destroy();}this.emit(\"close\");};Duplexify.prototype._write = function (data, enc, cb) {if (this.destroyed) return cb();if (this._corked) return onuncork(this, this._write.bind(this, data, enc, cb));if (data === SIGNAL_FLUSH) return this._finish(cb);if (!this._writable) return cb();if (this._writable.write(data) === false) this._ondrain = cb;else cb();};Duplexify.prototype._finish = function (cb) {var self = this;this.emit(\"preend\");onuncork(this, function () {end(self._forwardEnd && self._writable, function () {if (self._writableState.prefinished === false) self._writableState.prefinished = true;self.emit(\"prefinish\");onuncork(self, cb);});});};Duplexify.prototype.end = function (data, enc, cb) {if (typeof data === \"function\") return this.end(null, null, data);if (typeof enc === \"function\") return this.end(data, null, enc);this._ended = true;if (data) this.write(data);if (!this._writableState.ending) this.write(SIGNAL_FLUSH);return stream.Writable.prototype.end.call(this, cb);};module.exports = Duplexify;}).call(this, require(\"_process\"), require(\"buffer\").Buffer);}, { _process: 92, buffer: 12, \"end-of-stream\": 18, inherits: 80, \"readable-stream\": 108, \"stream-shift\": 111 }], 18: [function (require, module, exports) {var once = require(\"once\");var noop = function noop() {};var isRequest = function isRequest(stream) {return stream.setHeader && typeof stream.abort === \"function\";};var isChildProcess = function isChildProcess(stream) {return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;};var eos = function eos(stream, opts, callback) {if (typeof opts === \"function\") return eos(stream, null, opts);if (!opts) opts = {};callback = once(callback || noop);var ws = stream._writableState;var rs = stream._readableState;var readable = opts.readable || opts.readable !== false && stream.readable;var writable = opts.writable || opts.writable !== false && stream.writable;var onlegacyfinish = function onlegacyfinish() {if (!stream.writable) onfinish();};var onfinish = function onfinish() {writable = false;if (!readable) callback.call(stream);};var onend = function onend() {readable = false;if (!writable) callback.call(stream);};var onexit = function onexit(exitCode) {callback.call(stream, exitCode ? new Error(\"exited with error code: \" + exitCode) : null);};var onerror = function onerror(err) {callback.call(stream, err);};var onclose = function onclose() {if (readable && !(rs && rs.ended)) return callback.call(stream, new Error(\"premature close\"));if (writable && !(ws && ws.ended)) return callback.call(stream, new Error(\"premature close\"));};var onrequest = function onrequest() {stream.req.on(\"finish\", onfinish);};if (isRequest(stream)) {stream.on(\"complete\", onfinish);stream.on(\"abort\", onclose);if (stream.req) onrequest();else stream.on(\"request\", onrequest);} else if (writable && !ws) {stream.on(\"end\", onlegacyfinish);stream.on(\"close\", onlegacyfinish);}if (isChildProcess(stream)) stream.on(\"exit\", onexit);stream.on(\"end\", onend);stream.on(\"finish\", onfinish);if (opts.error !== false) stream.on(\"error\", onerror);stream.on(\"close\", onclose);return function () {stream.removeListener(\"complete\", onfinish);stream.removeListener(\"abort\", onclose);stream.removeListener(\"request\", onrequest);if (stream.req) stream.req.removeListener(\"finish\", onfinish);stream.removeListener(\"end\", onlegacyfinish);stream.removeListener(\"close\", onlegacyfinish);stream.removeListener(\"finish\", onfinish);stream.removeListener(\"exit\", onexit);stream.removeListener(\"end\", onend);stream.removeListener(\"error\", onerror);stream.removeListener(\"close\", onclose);};};module.exports = eos;}, { once: 90 }], 19: [function (require, module, exports) {\"use strict\";var value = require(\"../../object/valid-value\");module.exports = function () {value(this).length = 0;return this;};}, { \"../../object/valid-value\": 55 }], 20: [function (require, module, exports) {\"use strict\";var numberIsNaN = require(\"../../number/is-nan\"),toPosInt = require(\"../../number/to-pos-integer\"),value = require(\"../../object/valid-value\"),indexOf = Array.prototype.indexOf,objHasOwnProperty = Object.prototype.hasOwnProperty,abs = Math.abs,floor = Math.floor;module.exports = function (searchElement) {var i, length, fromIndex, val;if (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);length = toPosInt(value(this).length);fromIndex = arguments[1];if (isNaN(fromIndex)) fromIndex = 0;else if (fromIndex >= 0) fromIndex = floor(fromIndex);else fromIndex = toPosInt(this.length) - floor(abs(fromIndex));for (i = fromIndex; i < length; ++i) {if (objHasOwnProperty.call(this, i)) {val = this[i];if (numberIsNaN(val)) return i;}}return -1;};}, { \"../../number/is-nan\": 30, \"../../number/to-pos-integer\": 34, \"../../object/valid-value\": 55 }], 21: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");}, { \"./is-implemented\": 22, \"./shim\": 23 }], 22: [function (require, module, exports) {\"use strict\";module.exports = function () {var from = Array.from,arr,result;if (typeof from !== \"function\") return false;arr = [\"raz\", \"dwa\"];result = from(arr);return Boolean(result && result !== arr && result[1] === \"dwa\");};}, {}], 23: [function (require, module, exports) {\"use strict\";var iteratorSymbol = require(\"es6-symbol\").iterator,isArguments = require(\"../../function/is-arguments\"),isFunction = require(\"../../function/is-function\"),toPosInt = require(\"../../number/to-pos-integer\"),callable = require(\"../../object/valid-callable\"),validValue = require(\"../../object/valid-value\"),isValue = require(\"../../object/is-value\"),isString = require(\"../../string/is-string\"),isArray = Array.isArray,call = Function.prototype.call,desc = { configurable: true, enumerable: true, writable: true, value: null },defineProperty = Object.defineProperty;module.exports = function (arrayLike) {var mapFn = arguments[1],thisArg = arguments[2],Context,i,j,arr,length,code,iterator,result,getIterator,value;arrayLike = Object(validValue(arrayLike));if (isValue(mapFn)) callable(mapFn);if (!this || this === Array || !isFunction(this)) {if (!mapFn) {if (isArguments(arrayLike)) {length = arrayLike.length;if (length !== 1) return Array.apply(null, arrayLike);arr = new Array(1);arr[0] = arrayLike[0];return arr;}if (isArray(arrayLike)) {arr = new Array(length = arrayLike.length);for (i = 0; i < length; ++i) {arr[i] = arrayLike[i];}return arr;}}arr = [];} else {Context = this;}if (!isArray(arrayLike)) {if ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {iterator = callable(getIterator).call(arrayLike);if (Context) arr = new Context();result = iterator.next();i = 0;while (!result.done) {value = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;if (Context) {desc.value = value;defineProperty(arr, i, desc);} else {arr[i] = value;}result = iterator.next();++i;}length = i;} else if (isString(arrayLike)) {length = arrayLike.length;if (Context) arr = new Context();for (i = 0, j = 0; i < length; ++i) {value = arrayLike[i];if (i + 1 < length) {code = value.charCodeAt(0);if (code >= 55296 && code <= 56319) value += arrayLike[++i];}value = mapFn ? call.call(mapFn, thisArg, value, j) : value;if (Context) {desc.value = value;defineProperty(arr, j, desc);} else {arr[j] = value;}++j;}length = j;}}if (length === undefined) {length = toPosInt(arrayLike.length);if (Context) arr = new Context(length);for (i = 0; i < length; ++i) {value = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];if (Context) {desc.value = value;defineProperty(arr, i, desc);} else {arr[i] = value;}}}if (Context) {desc.value = null;arr.length = length;}return arr;};}, { \"../../function/is-arguments\": 24, \"../../function/is-function\": 25, \"../../number/to-pos-integer\": 34, \"../../object/is-value\": 44, \"../../object/valid-callable\": 54, \"../../object/valid-value\": 55, \"../../string/is-string\": 59, \"es6-symbol\": 73 }], 24: [function (require, module, exports) {\"use strict\";var objToString = Object.prototype.toString,id = objToString.call(function () {return arguments;}());module.exports = function (value) {return objToString.call(value) === id;};}, {}], 25: [function (require, module, exports) {\"use strict\";var objToString = Object.prototype.toString,id = objToString.call(require(\"./noop\"));module.exports = function (value) {return typeof value === \"function\" && objToString.call(value) === id;};}, { \"./noop\": 26 }], 26: [function (require, module, exports) {\"use strict\";module.exports = function () {};}, {}], 27: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");}, { \"./is-implemented\": 28, \"./shim\": 29 }], 28: [function (require, module, exports) {\"use strict\";module.exports = function () {var sign = Math.sign;if (typeof sign !== \"function\") return false;return sign(10) === 1 && sign(-20) === -1;};}, {}], 29: [function (require, module, exports) {\"use strict\";module.exports = function (value) {value = Number(value);if (isNaN(value) || value === 0) return value;return value > 0 ? 1 : -1;};}, {}], 30: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Number.isNaN : require(\"./shim\");}, { \"./is-implemented\": 31, \"./shim\": 32 }], 31: [function (require, module, exports) {\"use strict\";module.exports = function () {var numberIsNaN = Number.isNaN;if (typeof numberIsNaN !== \"function\") return false;return !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);};}, {}], 32: [function (require, module, exports) {\"use strict\";module.exports = function (value) {return value !== value;};}, {}], 33: [function (require, module, exports) {\"use strict\";var sign = require(\"../math/sign\"),abs = Math.abs,floor = Math.floor;module.exports = function (value) {if (isNaN(value)) return 0;value = Number(value);if (value === 0 || !isFinite(value)) return value;return sign(value) * floor(abs(value));};}, { \"../math/sign\": 27 }], 34: [function (require, module, exports) {\"use strict\";var toInteger = require(\"./to-integer\"),max = Math.max;module.exports = function (value) {return max(0, toInteger(value));};}, { \"./to-integer\": 33 }], 35: [function (require, module, exports) {\"use strict\";var callable = require(\"./valid-callable\"),value = require(\"./valid-value\"),bind = Function.prototype.bind,call = Function.prototype.call,keys = Object.keys,objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;module.exports = function (method, defVal) {return function (obj, cb) {var list,thisArg = arguments[2],compareFn = arguments[3];obj = Object(value(obj));callable(cb);list = keys(obj);if (compareFn) {list.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);}if (typeof method !== \"function\") method = list[method];return call.call(method, list, function (key, index) {if (!objPropertyIsEnumerable.call(obj, key)) return defVal;return call.call(cb, thisArg, obj[key], key, obj, index);});};};}, { \"./valid-callable\": 54, \"./valid-value\": 55 }], 36: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");}, { \"./is-implemented\": 37, \"./shim\": 38 }], 37: [function (require, module, exports) {\"use strict\";module.exports = function () {var assign = Object.assign,obj;if (typeof assign !== \"function\") return false;obj = { foo: \"raz\" };assign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });return obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";};}, {}], 38: [function (require, module, exports) {\"use strict\";var keys = require(\"../keys\"),value = require(\"../valid-value\"),max = Math.max;module.exports = function (dest, src) {var error,i,length = max(arguments.length, 2),assign;dest = Object(value(dest));assign = function assign(key) {try {dest[key] = src[key];} catch (e) {if (!error) error = e;}};for (i = 1; i < length; ++i) {src = arguments[i];keys(src).forEach(assign);}if (error !== undefined) throw error;return dest;};}, { \"../keys\": 45, \"../valid-value\": 55 }], 39: [function (require, module, exports) {\"use strict\";var aFrom = require(\"../array/from\"),assign = require(\"./assign\"),value = require(\"./valid-value\");module.exports = function (obj) {var copy = Object(value(obj)),propertyNames = arguments[1],options = Object(arguments[2]);if (copy !== obj && !propertyNames) return copy;var result = {};if (propertyNames) {aFrom(propertyNames, function (propertyName) {if (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];});} else {assign(result, obj);}return result;};}, { \"../array/from\": 21, \"./assign\": 36, \"./valid-value\": 55 }], 40: [function (require, module, exports) {\"use strict\";var create = Object.create,shim;if (!require(\"./set-prototype-of/is-implemented\")()) {shim = require(\"./set-prototype-of/shim\");}module.exports = function () {var nullObject, polyProps, desc;if (!shim) return create;if (shim.level !== 1) return create;nullObject = {};polyProps = {};desc = { configurable: false, enumerable: false, writable: true, value: undefined };Object.getOwnPropertyNames(Object.prototype).forEach(function (name) {if (name === \"__proto__\") {polyProps[name] = { configurable: true, enumerable: false, writable: true, value: undefined };return;}polyProps[name] = desc;});Object.defineProperties(nullObject, polyProps);Object.defineProperty(shim, \"nullPolyfill\", { configurable: false, enumerable: false, writable: false, value: nullObject });return function (prototype, props) {return create(prototype === null ? nullObject : prototype, props);};}();}, { \"./set-prototype-of/is-implemented\": 52, \"./set-prototype-of/shim\": 53 }], 41: [function (require, module, exports) {\"use strict\";module.exports = require(\"./_iterate\")(\"forEach\");}, { \"./_iterate\": 35 }], 42: [function (require, module, exports) {\"use strict\";module.exports = function (obj) {return typeof obj === \"function\";};}, {}], 43: [function (require, module, exports) {\"use strict\";var isValue = require(\"./is-value\");var map = { function: true, object: true };module.exports = function (value) {return isValue(value) && map[typeof value] || false;};}, { \"./is-value\": 44 }], 44: [function (require, module, exports) {\"use strict\";var _undefined = require(\"../function/noop\")();module.exports = function (val) {return val !== _undefined && val !== null;};}, { \"../function/noop\": 26 }], 45: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");}, { \"./is-implemented\": 46, \"./shim\": 47 }], 46: [function (require, module, exports) {\"use strict\";module.exports = function () {try {Object.keys(\"primitive\");return true;} catch (e) {return false;}};}, {}], 47: [function (require, module, exports) {\"use strict\";var isValue = require(\"../is-value\");var keys = Object.keys;module.exports = function (object) {return keys(isValue(object) ? Object(object) : object);};}, { \"../is-value\": 44 }], 48: [function (require, module, exports) {\"use strict\";var callable = require(\"./valid-callable\"),forEach = require(\"./for-each\"),call = Function.prototype.call;module.exports = function (obj, cb) {var result = {},thisArg = arguments[2];callable(cb);forEach(obj, function (value, key, targetObj, index) {result[key] = call.call(cb, thisArg, value, key, targetObj, index);});return result;};}, { \"./for-each\": 41, \"./valid-callable\": 54 }], 49: [function (require, module, exports) {\"use strict\";var isValue = require(\"./is-value\");var forEach = Array.prototype.forEach,create = Object.create;var process = function process(src, obj) {var key;for (key in src) {obj[key] = src[key];}};module.exports = function (opts1) {var result = create(null);forEach.call(arguments, function (options) {if (!isValue(options)) return;process(Object(options), result);});return result;};}, { \"./is-value\": 44 }], 50: [function (require, module, exports) {\"use strict\";var forEach = Array.prototype.forEach,create = Object.create;module.exports = function (arg) {var set = create(null);forEach.call(arguments, function (name) {set[name] = true;});return set;};}, {}], 51: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");}, { \"./is-implemented\": 52, \"./shim\": 53 }], 52: [function (require, module, exports) {\"use strict\";var create = Object.create,getPrototypeOf = Object.getPrototypeOf,plainObject = {};module.exports = function () {var setPrototypeOf = Object.setPrototypeOf,customCreate = arguments[0] || create;if (typeof setPrototypeOf !== \"function\") return false;return getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;};}, {}], 53: [function (require, module, exports) {\"use strict\";var isObject = require(\"../is-object\"),value = require(\"../valid-value\"),objIsPrototypeOf = Object.prototype.isPrototypeOf,defineProperty = Object.defineProperty,nullDesc = { configurable: true, enumerable: false, writable: true, value: undefined },validate;validate = function validate(obj, prototype) {value(obj);if (prototype === null || isObject(prototype)) return obj;throw new TypeError(\"Prototype must be null or an object\");};module.exports = function (status) {var fn, set;if (!status) return null;if (status.level === 2) {if (status.set) {set = status.set;fn = function fn(obj, prototype) {set.call(validate(obj, prototype), prototype);return obj;};} else {fn = function fn(obj, prototype) {validate(obj, prototype).__proto__ = prototype;return obj;};}} else {fn = function self(obj, prototype) {var isNullBase;validate(obj, prototype);isNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);if (isNullBase) delete self.nullPolyfill.__proto__;if (prototype === null) prototype = self.nullPolyfill;obj.__proto__ = prototype;if (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);return obj;};}return Object.defineProperty(fn, \"level\", { configurable: false, enumerable: false, writable: false, value: status.level });}(function () {var tmpObj1 = Object.create(null),tmpObj2 = {},set,desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");if (desc) {try {set = desc.set;set.call(tmpObj1, tmpObj2);} catch (ignore) {}if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };}tmpObj1.__proto__ = tmpObj2;if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };tmpObj1 = {};tmpObj1.__proto__ = tmpObj2;if (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };return false;}());require(\"../create\");}, { \"../create\": 40, \"../is-object\": 43, \"../valid-value\": 55 }], 54: [function (require, module, exports) {\"use strict\";module.exports = function (fn) {if (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");return fn;};}, {}], 55: [function (require, module, exports) {\"use strict\";var isValue = require(\"./is-value\");module.exports = function (value) {if (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");return value;};}, { \"./is-value\": 44 }], 56: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");}, { \"./is-implemented\": 57, \"./shim\": 58 }], 57: [function (require, module, exports) {\"use strict\";var str = \"razdwatrzy\";module.exports = function () {if (typeof str.contains !== \"function\") return false;return str.contains(\"dwa\") === true && str.contains(\"foo\") === false;};}, {}], 58: [function (require, module, exports) {\"use strict\";var indexOf = String.prototype.indexOf;module.exports = function (searchString) {return indexOf.call(this, searchString, arguments[1]) > -1;};}, {}], 59: [function (require, module, exports) {\"use strict\";var objToString = Object.prototype.toString,id = objToString.call(\"\");module.exports = function (value) {return typeof value === \"string\" || value && typeof value === \"object\" && (value instanceof String || objToString.call(value) === id) || false;};}, {}], 60: [function (require, module, exports) {\"use strict\";var setPrototypeOf = require(\"es5-ext/object/set-prototype-of\"),contains = require(\"es5-ext/string/#/contains\"),d = require(\"d\"),Symbol = require(\"es6-symbol\"),Iterator = require(\"./\");var defineProperty = Object.defineProperty,ArrayIterator;ArrayIterator = module.exports = function (arr, kind) {if (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");Iterator.call(this, arr);if (!kind) kind = \"value\";else if (contains.call(kind, \"key+value\")) kind = \"key+value\";else if (contains.call(kind, \"key\")) kind = \"key\";else kind = \"value\";defineProperty(this, \"__kind__\", d(\"\", kind));};if (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);delete ArrayIterator.prototype.constructor;ArrayIterator.prototype = Object.create(Iterator.prototype, { _resolve: d(function (i) {if (this.__kind__ === \"value\") return this.__list__[i];if (this.__kind__ === \"key+value\") return [i, this.__list__[i]];return i;}) });defineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));}, { \"./\": 63, d: 16, \"es5-ext/object/set-prototype-of\": 51, \"es5-ext/string/#/contains\": 56, \"es6-symbol\": 73 }], 61: [function (require, module, exports) {\"use strict\";var isArguments = require(\"es5-ext/function/is-arguments\"),callable = require(\"es5-ext/object/valid-callable\"),isString = require(\"es5-ext/string/is-string\"),get = require(\"./get\");var isArray = Array.isArray,call = Function.prototype.call,some = Array.prototype.some;module.exports = function (iterable, cb) {var mode,thisArg = arguments[2],result,doBreak,broken,i,length,char,code;if (isArray(iterable) || isArguments(iterable)) mode = \"array\";else if (isString(iterable)) mode = \"string\";else iterable = get(iterable);callable(cb);doBreak = function doBreak() {broken = true;};if (mode === \"array\") {some.call(iterable, function (value) {call.call(cb, thisArg, value, doBreak);return broken;});return;}if (mode === \"string\") {length = iterable.length;for (i = 0; i < length; ++i) {char = iterable[i];if (i + 1 < length) {code = char.charCodeAt(0);if (code >= 55296 && code <= 56319) char += iterable[++i];}call.call(cb, thisArg, char, doBreak);if (broken) break;}return;}result = iterable.next();while (!result.done) {call.call(cb, thisArg, result.value, doBreak);if (broken) return;result = iterable.next();}};}, { \"./get\": 62, \"es5-ext/function/is-arguments\": 24, \"es5-ext/object/valid-callable\": 54, \"es5-ext/string/is-string\": 59 }], 62: [function (require, module, exports) {\"use strict\";var isArguments = require(\"es5-ext/function/is-arguments\"),isString = require(\"es5-ext/string/is-string\"),ArrayIterator = require(\"./array\"),StringIterator = require(\"./string\"),iterable = require(\"./valid-iterable\"),iteratorSymbol = require(\"es6-symbol\").iterator;module.exports = function (obj) {if (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();if (isArguments(obj)) return new ArrayIterator(obj);if (isString(obj)) return new StringIterator(obj);return new ArrayIterator(obj);};}, { \"./array\": 60, \"./string\": 65, \"./valid-iterable\": 66, \"es5-ext/function/is-arguments\": 24, \"es5-ext/string/is-string\": 59, \"es6-symbol\": 73 }], 63: [function (require, module, exports) {\"use strict\";var clear = require(\"es5-ext/array/#/clear\"),assign = require(\"es5-ext/object/assign\"),callable = require(\"es5-ext/object/valid-callable\"),value = require(\"es5-ext/object/valid-value\"),d = require(\"d\"),autoBind = require(\"d/auto-bind\"),Symbol = require(\"es6-symbol\");var defineProperty = Object.defineProperty,defineProperties = Object.defineProperties,_Iterator;module.exports = _Iterator = function Iterator(list, context) {if (!(this instanceof _Iterator)) throw new TypeError(\"Constructor requires 'new'\");defineProperties(this, { __list__: d(\"w\", value(list)), __context__: d(\"w\", context), __nextIndex__: d(\"w\", 0) });if (!context) return;callable(context.on);context.on(\"_add\", this._onAdd);context.on(\"_delete\", this._onDelete);context.on(\"_clear\", this._onClear);};delete _Iterator.prototype.constructor;defineProperties(_Iterator.prototype, assign({ _next: d(function () {var i;if (!this.__list__) return undefined;if (this.__redo__) {i = this.__redo__.shift();if (i !== undefined) return i;}if (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;this._unBind();return undefined;}), next: d(function () {return this._createResult(this._next());}), _createResult: d(function (i) {if (i === undefined) return { done: true, value: undefined };return { done: false, value: this._resolve(i) };}), _resolve: d(function (i) {return this.__list__[i];}), _unBind: d(function () {this.__list__ = null;delete this.__redo__;if (!this.__context__) return;this.__context__.off(\"_add\", this._onAdd);this.__context__.off(\"_delete\", this._onDelete);this.__context__.off(\"_clear\", this._onClear);this.__context__ = null;}), toString: d(function () {return \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";}) }, autoBind({ _onAdd: d(function (index) {if (index >= this.__nextIndex__) return;++this.__nextIndex__;if (!this.__redo__) {defineProperty(this, \"__redo__\", d(\"c\", [index]));return;}this.__redo__.forEach(function (redo, i) {if (redo >= index) this.__redo__[i] = ++redo;}, this);this.__redo__.push(index);}), _onDelete: d(function (index) {var i;if (index >= this.__nextIndex__) return;--this.__nextIndex__;if (!this.__redo__) return;i = this.__redo__.indexOf(index);if (i !== -1) this.__redo__.splice(i, 1);this.__redo__.forEach(function (redo, j) {if (redo > index) this.__redo__[j] = --redo;}, this);}), _onClear: d(function () {if (this.__redo__) clear.call(this.__redo__);this.__nextIndex__ = 0;}) })));defineProperty(_Iterator.prototype, Symbol.iterator, d(function () {return this;}));}, { d: 16, \"d/auto-bind\": 15, \"es5-ext/array/#/clear\": 19, \"es5-ext/object/assign\": 36, \"es5-ext/object/valid-callable\": 54, \"es5-ext/object/valid-value\": 55, \"es6-symbol\": 73 }], 64: [function (require, module, exports) {\"use strict\";var isArguments = require(\"es5-ext/function/is-arguments\"),isValue = require(\"es5-ext/object/is-value\"),isString = require(\"es5-ext/string/is-string\");var iteratorSymbol = require(\"es6-symbol\").iterator,isArray = Array.isArray;module.exports = function (value) {if (!isValue(value)) return false;if (isArray(value)) return true;if (isString(value)) return true;if (isArguments(value)) return true;return typeof value[iteratorSymbol] === \"function\";};}, { \"es5-ext/function/is-arguments\": 24, \"es5-ext/object/is-value\": 44, \"es5-ext/string/is-string\": 59, \"es6-symbol\": 73 }], 65: [function (require, module, exports) {\"use strict\";var setPrototypeOf = require(\"es5-ext/object/set-prototype-of\"),d = require(\"d\"),Symbol = require(\"es6-symbol\"),Iterator = require(\"./\");var defineProperty = Object.defineProperty,StringIterator;StringIterator = module.exports = function (str) {if (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");str = String(str);Iterator.call(this, str);defineProperty(this, \"__length__\", d(\"\", str.length));};if (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);delete StringIterator.prototype.constructor;StringIterator.prototype = Object.create(Iterator.prototype, { _next: d(function () {if (!this.__list__) return undefined;if (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;this._unBind();return undefined;}), _resolve: d(function (i) {var char = this.__list__[i],code;if (this.__nextIndex__ === this.__length__) return char;code = char.charCodeAt(0);if (code >= 55296 && code <= 56319) return char + this.__list__[this.__nextIndex__++];return char;}) });defineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));}, { \"./\": 63, d: 16, \"es5-ext/object/set-prototype-of\": 51, \"es6-symbol\": 73 }], 66: [function (require, module, exports) {\"use strict\";var isIterable = require(\"./is-iterable\");module.exports = function (value) {if (!isIterable(value)) throw new TypeError(value + \" is not iterable\");return value;};}, { \"./is-iterable\": 64 }], 67: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Map : require(\"./polyfill\");}, { \"./is-implemented\": 68, \"./polyfill\": 72 }], 68: [function (require, module, exports) {\"use strict\";module.exports = function () {var map, iterator, result;if (typeof Map !== \"function\") return false;try {map = new Map([[\"raz\", \"one\"], [\"dwa\", \"two\"], [\"trzy\", \"three\"]]);} catch (e) {return false;}if (String(map) !== \"[object Map]\") return false;if (map.size !== 3) return false;if (typeof map.clear !== \"function\") return false;if (typeof map.delete !== \"function\") return false;if (typeof map.entries !== \"function\") return false;if (typeof map.forEach !== \"function\") return false;if (typeof map.get !== \"function\") return false;if (typeof map.has !== \"function\") return false;if (typeof map.keys !== \"function\") return false;if (typeof map.set !== \"function\") return false;if (typeof map.values !== \"function\") return false;iterator = map.entries();result = iterator.next();if (result.done !== false) return false;if (!result.value) return false;if (result.value[0] !== \"raz\") return false;if (result.value[1] !== \"one\") return false;return true;};}, {}], 69: [function (require, module, exports) {\"use strict\";module.exports = function () {if (typeof Map === \"undefined\") return false;return Object.prototype.toString.call(new Map()) === \"[object Map]\";}();}, {}], 70: [function (require, module, exports) {\"use strict\";module.exports = require(\"es5-ext/object/primitive-set\")(\"key\", \"value\", \"key+value\");}, { \"es5-ext/object/primitive-set\": 50 }], 71: [function (require, module, exports) {\"use strict\";var setPrototypeOf = require(\"es5-ext/object/set-prototype-of\"),d = require(\"d\"),Iterator = require(\"es6-iterator\"),toStringTagSymbol = require(\"es6-symbol\").toStringTag,kinds = require(\"./iterator-kinds\"),defineProperties = Object.defineProperties,unBind = Iterator.prototype._unBind,MapIterator;MapIterator = module.exports = function (map, kind) {if (!(this instanceof MapIterator)) return new MapIterator(map, kind);Iterator.call(this, map.__mapKeysData__, map);if (!kind || !kinds[kind]) kind = \"key+value\";defineProperties(this, { __kind__: d(\"\", kind), __values__: d(\"w\", map.__mapValuesData__) });};if (setPrototypeOf) setPrototypeOf(MapIterator, Iterator);MapIterator.prototype = Object.create(Iterator.prototype, { constructor: d(MapIterator), _resolve: d(function (i) {if (this.__kind__ === \"value\") return this.__values__[i];if (this.__kind__ === \"key\") return this.__list__[i];return [this.__list__[i], this.__values__[i]];}), _unBind: d(function () {this.__values__ = null;unBind.call(this);}), toString: d(function () {return \"[object Map Iterator]\";}) });Object.defineProperty(MapIterator.prototype, toStringTagSymbol, d(\"c\", \"Map Iterator\"));}, { \"./iterator-kinds\": 70, d: 16, \"es5-ext/object/set-prototype-of\": 51, \"es6-iterator\": 63, \"es6-symbol\": 73 }], 72: [function (require, module, exports) {\"use strict\";var clear = require(\"es5-ext/array/#/clear\"),eIndexOf = require(\"es5-ext/array/#/e-index-of\"),setPrototypeOf = require(\"es5-ext/object/set-prototype-of\"),callable = require(\"es5-ext/object/valid-callable\"),validValue = require(\"es5-ext/object/valid-value\"),d = require(\"d\"),ee = require(\"event-emitter\"),Symbol = require(\"es6-symbol\"),iterator = require(\"es6-iterator/valid-iterable\"),forOf = require(\"es6-iterator/for-of\"),Iterator = require(\"./lib/iterator\"),isNative = require(\"./is-native-implemented\"),call = Function.prototype.call,defineProperties = Object.defineProperties,getPrototypeOf = Object.getPrototypeOf,_MapPoly;module.exports = _MapPoly = function MapPoly() {var iterable = arguments[0],keys,values,self;if (!(this instanceof _MapPoly)) throw new TypeError(\"Constructor requires 'new'\");if (isNative && setPrototypeOf && Map !== _MapPoly) {self = setPrototypeOf(new Map(), getPrototypeOf(this));} else {self = this;}if (iterable != null) iterator(iterable);defineProperties(self, { __mapKeysData__: d(\"c\", keys = []), __mapValuesData__: d(\"c\", values = []) });if (!iterable) return self;forOf(iterable, function (value) {var key = validValue(value)[0];value = value[1];if (eIndexOf.call(keys, key) !== -1) return;keys.push(key);values.push(value);}, self);return self;};if (isNative) {if (setPrototypeOf) setPrototypeOf(_MapPoly, Map);_MapPoly.prototype = Object.create(Map.prototype, { constructor: d(_MapPoly) });}ee(defineProperties(_MapPoly.prototype, { clear: d(function () {if (!this.__mapKeysData__.length) return;clear.call(this.__mapKeysData__);clear.call(this.__mapValuesData__);this.emit(\"_clear\");}), delete: d(function (key) {var index = eIndexOf.call(this.__mapKeysData__, key);if (index === -1) return false;this.__mapKeysData__.splice(index, 1);this.__mapValuesData__.splice(index, 1);this.emit(\"_delete\", index, key);return true;}), entries: d(function () {return new Iterator(this, \"key+value\");}), forEach: d(function (cb) {var thisArg = arguments[1],iterator,result;callable(cb);iterator = this.entries();result = iterator._next();while (result !== undefined) {call.call(cb, thisArg, this.__mapValuesData__[result], this.__mapKeysData__[result], this);result = iterator._next();}}), get: d(function (key) {var index = eIndexOf.call(this.__mapKeysData__, key);if (index === -1) return;return this.__mapValuesData__[index];}), has: d(function (key) {return eIndexOf.call(this.__mapKeysData__, key) !== -1;}), keys: d(function () {return new Iterator(this, \"key\");}), set: d(function (key, value) {var index = eIndexOf.call(this.__mapKeysData__, key),emit;if (index === -1) {index = this.__mapKeysData__.push(key) - 1;emit = true;}this.__mapValuesData__[index] = value;if (emit) this.emit(\"_add\", index, key);return this;}), size: d.gs(function () {return this.__mapKeysData__.length;}), values: d(function () {return new Iterator(this, \"value\");}), toString: d(function () {return \"[object Map]\";}) }));Object.defineProperty(_MapPoly.prototype, Symbol.iterator, d(function () {return this.entries();}));Object.defineProperty(_MapPoly.prototype, Symbol.toStringTag, d(\"c\", \"Map\"));}, { \"./is-native-implemented\": 69, \"./lib/iterator\": 71, d: 16, \"es5-ext/array/#/clear\": 19, \"es5-ext/array/#/e-index-of\": 20, \"es5-ext/object/set-prototype-of\": 51, \"es5-ext/object/valid-callable\": 54, \"es5-ext/object/valid-value\": 55, \"es6-iterator/for-of\": 61, \"es6-iterator/valid-iterable\": 66, \"es6-symbol\": 73, \"event-emitter\": 78 }], 73: [function (require, module, exports) {\"use strict\";module.exports = require(\"./is-implemented\")() ? Symbol : require(\"./polyfill\");}, { \"./is-implemented\": 74, \"./polyfill\": 76 }], 74: [function (require, module, exports) {\"use strict\";var validTypes = { object: true, symbol: true };module.exports = function () {var symbol;if (typeof Symbol !== \"function\") return false;symbol = Symbol(\"test symbol\");try {String(symbol);} catch (e) {return false;}if (!validTypes[typeof Symbol.iterator]) return false;if (!validTypes[typeof Symbol.toPrimitive]) return false;if (!validTypes[typeof Symbol.toStringTag]) return false;return true;};}, {}], 75: [function (require, module, exports) {\"use strict\";module.exports = function (x) {if (!x) return false;if (typeof x === \"symbol\") return true;if (!x.constructor) return false;if (x.constructor.name !== \"Symbol\") return false;return x[x.constructor.toStringTag] === \"Symbol\";};}, {}], 76: [function (require, module, exports) {\"use strict\";var d = require(\"d\"),validateSymbol = require(\"./validate-symbol\"),create = Object.create,defineProperties = Object.defineProperties,defineProperty = Object.defineProperty,objPrototype = Object.prototype,NativeSymbol,SymbolPolyfill,HiddenSymbol,globalSymbols = create(null),isNativeSafe;if (typeof Symbol === \"function\") {NativeSymbol = Symbol;try {String(NativeSymbol());isNativeSafe = true;} catch (ignore) {}}var generateName = function () {var created = create(null);return function (desc) {var postfix = 0,name,ie11BugWorkaround;while (created[desc + (postfix || \"\")]) {++postfix;}desc += postfix || \"\";created[desc] = true;name = \"@@\" + desc;defineProperty(objPrototype, name, d.gs(null, function (value) {if (ie11BugWorkaround) return;ie11BugWorkaround = true;defineProperty(this, name, d(value));ie11BugWorkaround = false;}));return name;};}();HiddenSymbol = function Symbol(description) {if (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");return SymbolPolyfill(description);};module.exports = SymbolPolyfill = function Symbol(description) {var symbol;if (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");if (isNativeSafe) return NativeSymbol(description);symbol = create(HiddenSymbol.prototype);description = description === undefined ? \"\" : String(description);return defineProperties(symbol, { __description__: d(\"\", description), __name__: d(\"\", generateName(description)) });};defineProperties(SymbolPolyfill, { for: d(function (key) {if (globalSymbols[key]) return globalSymbols[key];return globalSymbols[key] = SymbolPolyfill(String(key));}), keyFor: d(function (s) {var key;validateSymbol(s);for (key in globalSymbols) {if (globalSymbols[key] === s) return key;}}), hasInstance: d(\"\", NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill(\"hasInstance\")), isConcatSpreadable: d(\"\", NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill(\"isConcatSpreadable\")), iterator: d(\"\", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill(\"iterator\")), match: d(\"\", NativeSymbol && NativeSymbol.match || SymbolPolyfill(\"match\")), replace: d(\"\", NativeSymbol && NativeSymbol.replace || SymbolPolyfill(\"replace\")), search: d(\"\", NativeSymbol && NativeSymbol.search || SymbolPolyfill(\"search\")), species: d(\"\", NativeSymbol && NativeSymbol.species || SymbolPolyfill(\"species\")), split: d(\"\", NativeSymbol && NativeSymbol.split || SymbolPolyfill(\"split\")), toPrimitive: d(\"\", NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill(\"toPrimitive\")), toStringTag: d(\"\", NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill(\"toStringTag\")), unscopables: d(\"\", NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill(\"unscopables\")) });defineProperties(HiddenSymbol.prototype, { constructor: d(SymbolPolyfill), toString: d(\"\", function () {return this.__name__;}) });defineProperties(SymbolPolyfill.prototype, { toString: d(function () {return \"Symbol (\" + validateSymbol(this).__description__ + \")\";}), valueOf: d(function () {return validateSymbol(this);}) });defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d(\"\", function () {var symbol = validateSymbol(this);if (typeof symbol === \"symbol\") return symbol;return symbol.toString();}));defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));}, { \"./validate-symbol\": 77, d: 16 }], 77: [function (require, module, exports) {\"use strict\";var isSymbol = require(\"./is-symbol\");module.exports = function (value) {if (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");return value;};}, { \"./is-symbol\": 75 }], 78: [function (require, module, exports) {\"use strict\";var d = require(\"d\"),callable = require(\"es5-ext/object/valid-callable\"),apply = Function.prototype.apply,call = Function.prototype.call,create = Object.create,defineProperty = Object.defineProperty,defineProperties = Object.defineProperties,hasOwnProperty = Object.prototype.hasOwnProperty,descriptor = { configurable: true, enumerable: false, writable: true },on,_once2,off,emit,methods,descriptors,base;on = function on(type, listener) {var data;callable(listener);if (!hasOwnProperty.call(this, \"__ee__\")) {data = descriptor.value = create(null);defineProperty(this, \"__ee__\", descriptor);descriptor.value = null;} else {data = this.__ee__;}if (!data[type]) data[type] = listener;else if (typeof data[type] === \"object\") data[type].push(listener);else data[type] = [data[type], listener];return this;};_once2 = function once(type, listener) {var _once, self;callable(listener);self = this;on.call(this, type, _once = function once() {off.call(self, type, _once);apply.call(listener, this, arguments);});_once.__eeOnceListener__ = listener;return this;};off = function off(type, listener) {var data, listeners, candidate, i;callable(listener);if (!hasOwnProperty.call(this, \"__ee__\")) return this;data = this.__ee__;if (!data[type]) return this;listeners = data[type];if (typeof listeners === \"object\") {for (i = 0; candidate = listeners[i]; ++i) {if (candidate === listener || candidate.__eeOnceListener__ === listener) {if (listeners.length === 2) data[type] = listeners[i ? 0 : 1];else listeners.splice(i, 1);}}} else {if (listeners === listener || listeners.__eeOnceListener__ === listener) {delete data[type];}}return this;};emit = function emit(type) {var i, l, listener, listeners, args;if (!hasOwnProperty.call(this, \"__ee__\")) return;listeners = this.__ee__[type];if (!listeners) return;if (typeof listeners === \"object\") {l = arguments.length;args = new Array(l - 1);for (i = 1; i < l; ++i) {args[i - 1] = arguments[i];}listeners = listeners.slice();for (i = 0; listener = listeners[i]; ++i) {apply.call(listener, this, args);}} else {switch (arguments.length) {case 1:call.call(listeners, this);break;case 2:call.call(listeners, this, arguments[1]);break;case 3:call.call(listeners, this, arguments[1], arguments[2]);break;default:l = arguments.length;args = new Array(l - 1);for (i = 1; i < l; ++i) {args[i - 1] = arguments[i];}apply.call(listeners, this, args);}}};methods = { on: on, once: _once2, off: off, emit: emit };descriptors = { on: d(on), once: d(_once2), off: d(off), emit: d(emit) };base = defineProperties({}, descriptors);module.exports = exports = function exports(o) {return o == null ? create(base) : defineProperties(Object(o), descriptors);};exports.methods = methods;}, { d: 16, \"es5-ext/object/valid-callable\": 54 }], 79: [function (require, module, exports) {exports.read = function (buffer, offset, isLE, mLen, nBytes) {var e, m;var eLen = nBytes * 8 - mLen - 1;var eMax = (1 << eLen) - 1;var eBias = eMax >> 1;var nBits = -7;var i = isLE ? nBytes - 1 : 0;var d = isLE ? -1 : 1;var s = buffer[offset + i];i += d;e = s & (1 << -nBits) - 1;s >>= -nBits;nBits += eLen;for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}m = e & (1 << -nBits) - 1;e >>= -nBits;nBits += mLen;for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}if (e === 0) {e = 1 - eBias;} else if (e === eMax) {return m ? NaN : (s ? -1 : 1) * Infinity;} else {m = m + Math.pow(2, mLen);e = e - eBias;}return (s ? -1 : 1) * m * Math.pow(2, e - mLen);};exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {var e, m, c;var eLen = nBytes * 8 - mLen - 1;var eMax = (1 << eLen) - 1;var eBias = eMax >> 1;var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;var i = isLE ? 0 : nBytes - 1;var d = isLE ? 1 : -1;var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;value = Math.abs(value);if (isNaN(value) || value === Infinity) {m = isNaN(value) ? 1 : 0;e = eMax;} else {e = Math.floor(Math.log(value) / Math.LN2);if (value * (c = Math.pow(2, -e)) < 1) {e--;c *= 2;}if (e + eBias >= 1) {value += rt / c;} else {value += rt * Math.pow(2, 1 - eBias);}if (value * c >= 2) {e++;c /= 2;}if (e + eBias >= eMax) {m = 0;e = eMax;} else if (e + eBias >= 1) {m = (value * c - 1) * Math.pow(2, mLen);e = e + eBias;} else {m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);e = 0;}}for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}e = e << mLen | m;eLen += mLen;for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}buffer[offset + i - d] |= s * 128;};}, {}], 80: [function (require, module, exports) {if (typeof Object.create === \"function\") {module.exports = function inherits(ctor, superCtor) {ctor.super_ = superCtor;ctor.prototype = Object.create(superCtor.prototype, { constructor: { value: ctor, enumerable: false, writable: true, configurable: true } });};} else {module.exports = function inherits(ctor, superCtor) {ctor.super_ = superCtor;var TempCtor = function TempCtor() {};TempCtor.prototype = superCtor.prototype;ctor.prototype = new TempCtor();ctor.prototype.constructor = ctor;};}}, {}], 81: [function (require, module, exports) {module.exports = function (obj) {return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);};function isBuffer(obj) {return !!obj.constructor && typeof obj.constructor.isBuffer === \"function\" && obj.constructor.isBuffer(obj);}function isSlowBuffer(obj) {return typeof obj.readFloatLE === \"function\" && typeof obj.slice === \"function\" && isBuffer(obj.slice(0, 0));}}, {}], 82: [function (require, module, exports) {\"use strict\";var Buffer = require(\"safe-buffer\").Buffer;var protocol = module.exports;protocol.types = { 0: \"reserved\", 1: \"connect\", 2: \"connack\", 3: \"publish\", 4: \"puback\", 5: \"pubrec\", 6: \"pubrel\", 7: \"pubcomp\", 8: \"subscribe\", 9: \"suback\", 10: \"unsubscribe\", 11: \"unsuback\", 12: \"pingreq\", 13: \"pingresp\", 14: \"disconnect\", 15: \"auth\" };protocol.codes = {};for (var k in protocol.types) {var v = protocol.types[k];protocol.codes[v] = k;}protocol.CMD_SHIFT = 4;protocol.CMD_MASK = 240;protocol.DUP_MASK = 8;protocol.QOS_MASK = 3;protocol.QOS_SHIFT = 1;protocol.RETAIN_MASK = 1;protocol.LENGTH_MASK = 127;protocol.LENGTH_FIN_MASK = 128;protocol.SESSIONPRESENT_MASK = 1;protocol.SESSIONPRESENT_HEADER = Buffer.from([protocol.SESSIONPRESENT_MASK]);protocol.CONNACK_HEADER = Buffer.from([protocol.codes[\"connack\"] << protocol.CMD_SHIFT]);protocol.USERNAME_MASK = 128;protocol.PASSWORD_MASK = 64;protocol.WILL_RETAIN_MASK = 32;protocol.WILL_QOS_MASK = 24;protocol.WILL_QOS_SHIFT = 3;protocol.WILL_FLAG_MASK = 4;protocol.CLEAN_SESSION_MASK = 2;protocol.CONNECT_HEADER = Buffer.from([protocol.codes[\"connect\"] << protocol.CMD_SHIFT]);protocol.properties = { sessionExpiryInterval: 17, willDelayInterval: 24, receiveMaximum: 33, maximumPacketSize: 39, topicAliasMaximum: 34, requestResponseInformation: 25, requestProblemInformation: 23, userProperties: 38, authenticationMethod: 21, authenticationData: 22, payloadFormatIndicator: 1, messageExpiryInterval: 2, contentType: 3, responseTopic: 8, correlationData: 9, maximumQoS: 36, retainAvailable: 37, assignedClientIdentifier: 18, reasonString: 31, wildcardSubscriptionAvailable: 40, subscriptionIdentifiersAvailable: 41, sharedSubscriptionAvailable: 42, serverKeepAlive: 19, responseInformation: 26, serverReference: 28, topicAlias: 35, subscriptionIdentifier: 11 };protocol.propertiesCodes = {};for (var prop in protocol.properties) {var id = protocol.properties[prop];protocol.propertiesCodes[id] = prop;}protocol.propertiesTypes = { sessionExpiryInterval: \"int32\", willDelayInterval: \"int32\", receiveMaximum: \"int16\", maximumPacketSize: \"int32\", topicAliasMaximum: \"int16\", requestResponseInformation: \"byte\", requestProblemInformation: \"byte\", userProperties: \"pair\", authenticationMethod: \"string\", authenticationData: \"binary\", payloadFormatIndicator: \"byte\", messageExpiryInterval: \"int32\", contentType: \"string\", responseTopic: \"string\", correlationData: \"binary\", maximumQoS: \"int8\", retainAvailable: \"byte\", assignedClientIdentifier: \"string\", reasonString: \"string\", wildcardSubscriptionAvailable: \"byte\", subscriptionIdentifiersAvailable: \"byte\", sharedSubscriptionAvailable: \"byte\", serverKeepAlive: \"int32\", responseInformation: \"string\", serverReference: \"string\", topicAlias: \"int16\", subscriptionIdentifier: \"var\" };function genHeader(type) {return [0, 1, 2].map(function (qos) {return [0, 1].map(function (dup) {return [0, 1].map(function (retain) {var buf = new Buffer(1);buf.writeUInt8(protocol.codes[type] << protocol.CMD_SHIFT | (dup ? protocol.DUP_MASK : 0) | qos << protocol.QOS_SHIFT | retain, 0, true);return buf;});});});}protocol.PUBLISH_HEADER = genHeader(\"publish\");protocol.SUBSCRIBE_HEADER = genHeader(\"subscribe\");protocol.SUBSCRIBE_OPTIONS_QOS_MASK = 3;protocol.SUBSCRIBE_OPTIONS_NL_MASK = 1;protocol.SUBSCRIBE_OPTIONS_NL_SHIFT = 2;protocol.SUBSCRIBE_OPTIONS_RAP_MASK = 1;protocol.SUBSCRIBE_OPTIONS_RAP_SHIFT = 3;protocol.SUBSCRIBE_OPTIONS_RH_MASK = 3;protocol.SUBSCRIBE_OPTIONS_RH_SHIFT = 4;protocol.SUBSCRIBE_OPTIONS_RH = [0, 16, 32];protocol.SUBSCRIBE_OPTIONS_NL = 4;protocol.SUBSCRIBE_OPTIONS_RAP = 8;protocol.SUBSCRIBE_OPTIONS_QOS = [0, 1, 2];protocol.UNSUBSCRIBE_HEADER = genHeader(\"unsubscribe\");protocol.ACKS = { unsuback: genHeader(\"unsuback\"), puback: genHeader(\"puback\"), pubcomp: genHeader(\"pubcomp\"), pubrel: genHeader(\"pubrel\"), pubrec: genHeader(\"pubrec\") };protocol.SUBACK_HEADER = Buffer.from([protocol.codes[\"suback\"] << protocol.CMD_SHIFT]);protocol.VERSION3 = Buffer.from([3]);protocol.VERSION4 = Buffer.from([4]);protocol.VERSION5 = Buffer.from([5]);protocol.QOS = [0, 1, 2].map(function (qos) {return Buffer.from([qos]);});protocol.EMPTY = { pingreq: Buffer.from([protocol.codes[\"pingreq\"] << 4, 0]), pingresp: Buffer.from([protocol.codes[\"pingresp\"] << 4, 0]), disconnect: Buffer.from([protocol.codes[\"disconnect\"] << 4, 0]) };}, { \"safe-buffer\": 110 }], 83: [function (require, module, exports) {\"use strict\";var Buffer = require(\"safe-buffer\").Buffer;var writeToStream = require(\"./writeToStream\");var EE = require(\"events\").EventEmitter;var inherits = require(\"inherits\");function generate(packet, opts) {var stream = new Accumulator();writeToStream(packet, stream, opts);return stream.concat();}function Accumulator() {this._array = new Array(20);this._i = 0;}inherits(Accumulator, EE);Accumulator.prototype.write = function (chunk) {this._array[this._i++] = chunk;return true;};Accumulator.prototype.concat = function () {var length = 0;var lengths = new Array(this._array.length);var list = this._array;var pos = 0;var i;var result;for (i = 0; i < list.length && list[i] !== undefined; i++) {if (typeof list[i] !== \"string\") lengths[i] = list[i].length;else lengths[i] = Buffer.byteLength(list[i]);length += lengths[i];}result = Buffer.allocUnsafe(length);for (i = 0; i < list.length && list[i] !== undefined; i++) {if (typeof list[i] !== \"string\") {list[i].copy(result, pos);pos += lengths[i];} else {result.write(list[i], pos);pos += lengths[i];}}return result;};module.exports = generate;}, { \"./writeToStream\": 89, events: 13, inherits: 80, \"safe-buffer\": 110 }], 84: [function (require, module, exports) {\"use strict\";exports.parser = require(\"./parser\");exports.generate = require(\"./generate\");exports.writeToStream = require(\"./writeToStream\");}, { \"./generate\": 83, \"./parser\": 88, \"./writeToStream\": 89 }], 85: [function (require, module, exports) {var DuplexStream = require(\"readable-stream/duplex\"),util = require(\"util\"),Buffer = require(\"safe-buffer\").Buffer;function BufferList(callback) {if (!(this instanceof BufferList)) return new BufferList(callback);this._bufs = [];this.length = 0;if (typeof callback == \"function\") {this._callback = callback;var piper = function piper(err) {if (this._callback) {this._callback(err);this._callback = null;}}.bind(this);this.on(\"pipe\", function onPipe(src) {src.on(\"error\", piper);});this.on(\"unpipe\", function onUnpipe(src) {src.removeListener(\"error\", piper);});} else {this.append(callback);}DuplexStream.call(this);}util.inherits(BufferList, DuplexStream);BufferList.prototype._offset = function _offset(offset) {var tot = 0,i = 0,_t;if (offset === 0) return [0, 0];for (; i < this._bufs.length; i++) {_t = tot + this._bufs[i].length;if (offset < _t || i == this._bufs.length - 1) return [i, offset - tot];tot = _t;}};BufferList.prototype.append = function append(buf) {var i = 0;if (Buffer.isBuffer(buf)) {this._appendBuffer(buf);} else if (Array.isArray(buf)) {for (; i < buf.length; i++) {this.append(buf[i]);}} else if (buf instanceof BufferList) {for (; i < buf._bufs.length; i++) {this.append(buf._bufs[i]);}} else if (buf != null) {if (typeof buf == \"number\") buf = buf.toString();this._appendBuffer(Buffer.from(buf));}return this;};BufferList.prototype._appendBuffer = function appendBuffer(buf) {this._bufs.push(buf);this.length += buf.length;};BufferList.prototype._write = function _write(buf, encoding, callback) {this._appendBuffer(buf);if (typeof callback == \"function\") callback();};BufferList.prototype._read = function _read(size) {if (!this.length) return this.push(null);size = Math.min(size, this.length);this.push(this.slice(0, size));this.consume(size);};BufferList.prototype.end = function end(chunk) {DuplexStream.prototype.end.call(this, chunk);if (this._callback) {this._callback(null, this.slice());this._callback = null;}};BufferList.prototype.get = function get(index) {return this.slice(index, index + 1)[0];};BufferList.prototype.slice = function slice(start, end) {if (typeof start == \"number\" && start < 0) start += this.length;if (typeof end == \"number\" && end < 0) end += this.length;return this.copy(null, 0, start, end);};BufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {if (typeof srcStart != \"number\" || srcStart < 0) srcStart = 0;if (typeof srcEnd != \"number\" || srcEnd > this.length) srcEnd = this.length;if (srcStart >= this.length) return dst || Buffer.alloc(0);if (srcEnd <= 0) return dst || Buffer.alloc(0);var copy = !!dst,off = this._offset(srcStart),len = srcEnd - srcStart,bytes = len,bufoff = copy && dstStart || 0,start = off[1],l,i;if (srcStart === 0 && srcEnd == this.length) {if (!copy) {return this._bufs.length === 1 ? this._bufs[0] : Buffer.concat(this._bufs, this.length);}for (i = 0; i < this._bufs.length; i++) {this._bufs[i].copy(dst, bufoff);bufoff += this._bufs[i].length;}return dst;}if (bytes <= this._bufs[off[0]].length - start) {return copy ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);}if (!copy) dst = Buffer.allocUnsafe(len);for (i = off[0]; i < this._bufs.length; i++) {l = this._bufs[i].length - start;if (bytes > l) {this._bufs[i].copy(dst, bufoff, start);} else {this._bufs[i].copy(dst, bufoff, start, start + bytes);break;}bufoff += l;bytes -= l;if (start) start = 0;}return dst;};BufferList.prototype.shallowSlice = function shallowSlice(start, end) {start = start || 0;end = end || this.length;if (start < 0) start += this.length;if (end < 0) end += this.length;var startOffset = this._offset(start),endOffset = this._offset(end),buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1);if (endOffset[1] == 0) buffers.pop();else buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1]);if (startOffset[1] != 0) buffers[0] = buffers[0].slice(startOffset[1]);return new BufferList(buffers);};BufferList.prototype.toString = function toString(encoding, start, end) {return this.slice(start, end).toString(encoding);};BufferList.prototype.consume = function consume(bytes) {while (this._bufs.length) {if (bytes >= this._bufs[0].length) {bytes -= this._bufs[0].length;this.length -= this._bufs[0].length;this._bufs.shift();} else {this._bufs[0] = this._bufs[0].slice(bytes);this.length -= bytes;break;}}return this;};BufferList.prototype.duplicate = function duplicate() {var i = 0,copy = new BufferList();for (; i < this._bufs.length; i++) {copy.append(this._bufs[i]);}return copy;};BufferList.prototype.destroy = function destroy() {this._bufs.length = 0;this.length = 0;this.push(null);};(function () {var methods = { readDoubleBE: 8, readDoubleLE: 8, readFloatBE: 4, readFloatLE: 4, readInt32BE: 4, readInt32LE: 4, readUInt32BE: 4, readUInt32LE: 4, readInt16BE: 2, readInt16LE: 2, readUInt16BE: 2, readUInt16LE: 2, readInt8: 1, readUInt8: 1 };for (var m in methods) {(function (m) {BufferList.prototype[m] = function (offset) {return this.slice(offset, offset + methods[m])[m](0);};})(m);}})();module.exports = BufferList;}, { \"readable-stream/duplex\": 97, \"safe-buffer\": 110, util: 117 }], 86: [function (require, module, exports) {\"use strict\";var Buffer = require(\"safe-buffer\").Buffer;var max = 65536;var cache = {};function generateBuffer(i) {var buffer = Buffer.allocUnsafe(2);buffer.writeUInt8(i >> 8, 0);buffer.writeUInt8(i & 255, 0 + 1);return buffer;}function generateCache() {for (var i = 0; i < max; i++) {cache[i] = generateBuffer(i);}}function calcVariableByteIntLength(length) {if (length >= 0 && length < 128) return 1;else if (length >= 128 && length < 16384) return 2;else if (length >= 16384 && length < 2097152) return 3;else if (length >= 2097152 && length < 268435456) return 4;else return 0;}function genBufVariableByteInt(num) {var digit = 0;var pos = 0;var length = calcVariableByteIntLength(num);var buffer = Buffer.allocUnsafe(length);do {digit = num % 128 | 0;num = num / 128 | 0;if (num > 0) digit = digit | 128;buffer.writeUInt8(digit, pos++);} while (num > 0);return { data: buffer, length: length };}function generate4ByteBuffer(num) {var buffer = Buffer.allocUnsafe(4);buffer.writeUInt32BE(num, 0);return buffer;}module.exports = { cache: cache, generateCache: generateCache, generateNumber: generateBuffer, genBufVariableByteInt: genBufVariableByteInt, generate4ByteBuffer: generate4ByteBuffer };}, { \"safe-buffer\": 110 }], 87: [function (require, module, exports) {function Packet() {this.cmd = null;this.retain = false;this.qos = 0;this.dup = false;this.length = -1;this.topic = null;this.payload = null;}module.exports = Packet;}, {}], 88: [function (require, module, exports) {\"use strict\";var bl = require(\"bl\");var inherits = require(\"inherits\");var EE = require(\"events\").EventEmitter;var Packet = require(\"./packet\");var constants = require(\"./constants\");function Parser(opt) {if (!(this instanceof Parser)) return new Parser(opt);this.settings = opt || {};this._states = [\"_parseHeader\", \"_parseLength\", \"_parsePayload\", \"_newPacket\"];this._resetState();}inherits(Parser, EE);Parser.prototype._resetState = function () {this.packet = new Packet();this.error = null;this._list = bl();this._stateCounter = 0;};Parser.prototype.parse = function (buf) {if (this.error) this._resetState();this._list.append(buf);while ((this.packet.length !== -1 || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error) {this._stateCounter++;if (this._stateCounter >= this._states.length) this._stateCounter = 0;}return this._list.length;};Parser.prototype._parseHeader = function () {var zero = this._list.readUInt8(0);this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT];this.packet.retain = (zero & constants.RETAIN_MASK) !== 0;this.packet.qos = zero >> constants.QOS_SHIFT & constants.QOS_MASK;this.packet.dup = (zero & constants.DUP_MASK) !== 0;this._list.consume(1);return true;};Parser.prototype._parseLength = function () {var result = this._parseVarByteNum(true);if (result) {this.packet.length = result.value;this._list.consume(result.bytes);}return !!result;};Parser.prototype._parsePayload = function () {var result = false;if (this.packet.length === 0 || this._list.length >= this.packet.length) {this._pos = 0;switch (this.packet.cmd) {case \"connect\":this._parseConnect();break;case \"connack\":this._parseConnack();break;case \"publish\":this._parsePublish();break;case \"puback\":case \"pubrec\":case \"pubrel\":case \"pubcomp\":this._parseConfirmation();break;case \"subscribe\":this._parseSubscribe();break;case \"suback\":this._parseSuback();break;case \"unsubscribe\":this._parseUnsubscribe();break;case \"unsuback\":this._parseUnsuback();break;case \"pingreq\":case \"pingresp\":break;case \"disconnect\":this._parseDisconnect();break;case \"auth\":this._parseAuth();break;default:this._emitError(new Error(\"Not supported\"));}result = true;}return result;};Parser.prototype._parseConnect = function () {var protocolId;var clientId;var topic;var payload;var password;var username;var flags = {};var packet = this.packet;protocolId = this._parseString();if (protocolId === null) return this._emitError(new Error(\"Cannot parse protocolId\"));if (protocolId !== \"MQTT\" && protocolId !== \"MQIsdp\") {return this._emitError(new Error(\"Invalid protocolId\"));}packet.protocolId = protocolId;if (this._pos >= this._list.length) return this._emitError(new Error(\"Packet too short\"));packet.protocolVersion = this._list.readUInt8(this._pos);if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {return this._emitError(new Error(\"Invalid protocol version\"));}this._pos++;if (this._pos >= this._list.length) {return this._emitError(new Error(\"Packet too short\"));}flags.username = this._list.readUInt8(this._pos) & constants.USERNAME_MASK;flags.password = this._list.readUInt8(this._pos) & constants.PASSWORD_MASK;flags.will = this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK;if (flags.will) {packet.will = {};packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0;packet.will.qos = (this._list.readUInt8(this._pos) & constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT;}packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0;this._pos++;packet.keepalive = this._parseNum();if (packet.keepalive === -1) return this._emitError(new Error(\"Packet too short\"));if (packet.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}clientId = this._parseString();if (clientId === null) return this._emitError(new Error(\"Packet too short\"));packet.clientId = clientId;if (flags.will) {if (packet.protocolVersion === 5) {var willProperties = this._parseProperties();if (Object.getOwnPropertyNames(willProperties).length) {packet.will.properties = willProperties;}}topic = this._parseString();if (topic === null) return this._emitError(new Error(\"Cannot parse will topic\"));packet.will.topic = topic;payload = this._parseBuffer();if (payload === null) return this._emitError(new Error(\"Cannot parse will payload\"));packet.will.payload = payload;}if (flags.username) {username = this._parseString();if (username === null) return this._emitError(new Error(\"Cannot parse username\"));packet.username = username;}if (flags.password) {password = this._parseBuffer();if (password === null) return this._emitError(new Error(\"Cannot parse password\"));packet.password = password;}this.settings = packet;return packet;};Parser.prototype._parseConnack = function () {var packet = this.packet;if (this._list.length < 2) return null;packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK);if (this.settings.protocolVersion === 5) {packet.reasonCode = this._list.readUInt8(this._pos++);} else {packet.returnCode = this._list.readUInt8(this._pos++);}if (packet.returnCode === -1 || packet.reasonCode === -1) return this._emitError(new Error(\"Cannot parse return code\"));if (this.settings.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}};Parser.prototype._parsePublish = function () {var packet = this.packet;packet.topic = this._parseString();if (packet.topic === null) return this._emitError(new Error(\"Cannot parse topic\"));if (packet.qos > 0) if (!this._parseMessageId()) {return;}if (this.settings.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}packet.payload = this._list.slice(this._pos, packet.length);};Parser.prototype._parseSubscribe = function () {var packet = this.packet;var topic;var options;var qos;var rh;var rap;var nl;var subscription;if (packet.qos !== 1) {return this._emitError(new Error(\"Wrong subscribe header\"));}packet.subscriptions = [];if (!this._parseMessageId()) {return;}if (this.settings.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}while (this._pos < packet.length) {topic = this._parseString();if (topic === null) return this._emitError(new Error(\"Cannot parse topic\"));options = this._parseByte();qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK;nl = (options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0;rap = (options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0;rh = options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT & constants.SUBSCRIBE_OPTIONS_RH_MASK;subscription = { topic: topic, qos: qos };if (this.settings.protocolVersion === 5) {subscription.nl = nl;subscription.rap = rap;subscription.rh = rh;}packet.subscriptions.push(subscription);}};Parser.prototype._parseSuback = function () {var packet = this.packet;this.packet.granted = [];if (!this._parseMessageId()) {return;}if (this.settings.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}while (this._pos < this.packet.length) {this.packet.granted.push(this._list.readUInt8(this._pos++));}};Parser.prototype._parseUnsubscribe = function () {var packet = this.packet;packet.unsubscriptions = [];if (!this._parseMessageId()) {return;}if (this.settings.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}while (this._pos < packet.length) {var topic;topic = this._parseString();if (topic === null) return this._emitError(new Error(\"Cannot parse topic\"));packet.unsubscriptions.push(topic);}};Parser.prototype._parseUnsuback = function () {var packet = this.packet;if (!this._parseMessageId()) return this._emitError(new Error(\"Cannot parse messageId\"));if (this.settings.protocolVersion === 5) {var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}packet.granted = [];while (this._pos < this.packet.length) {this.packet.granted.push(this._list.readUInt8(this._pos++));}}};Parser.prototype._parseConfirmation = function () {var packet = this.packet;this._parseMessageId();if (this.settings.protocolVersion === 5) {if (packet.length > 2) {packet.reasonCode = this._parseByte();var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}}return true;};Parser.prototype._parseDisconnect = function () {var packet = this.packet;if (this.settings.protocolVersion === 5) {packet.reasonCode = this._parseByte();var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}}return true;};Parser.prototype._parseAuth = function () {var packet = this.packet;if (this.settings.protocolVersion !== 5) {return this._emitError(new Error(\"Not supported auth packet for this version MQTT\"));}packet.reasonCode = this._parseByte();var properties = this._parseProperties();if (Object.getOwnPropertyNames(properties).length) {packet.properties = properties;}return true;};Parser.prototype._parseMessageId = function () {var packet = this.packet;packet.messageId = this._parseNum();if (packet.messageId === null) {this._emitError(new Error(\"Cannot parse messageId\"));return false;}return true;};Parser.prototype._parseString = function (maybeBuffer) {var length = this._parseNum();var result;var end = length + this._pos;if (length === -1 || end > this._list.length || end > this.packet.length) return null;result = this._list.toString(\"utf8\", this._pos, end);this._pos += length;return result;};Parser.prototype._parseStringPair = function () {return { name: this._parseString(), value: this._parseString() };};Parser.prototype._parseBuffer = function () {var length = this._parseNum();var result;var end = length + this._pos;if (length === -1 || end > this._list.length || end > this.packet.length) return null;result = this._list.slice(this._pos, end);this._pos += length;return result;};Parser.prototype._parseNum = function () {if (this._list.length - this._pos < 2) return -1;var result = this._list.readUInt16BE(this._pos);this._pos += 2;return result;};Parser.prototype._parse4ByteNum = function () {if (this._list.length - this._pos < 4) return -1;var result = this._list.readUInt32BE(this._pos);this._pos += 4;return result;};Parser.prototype._parseVarByteNum = function (fullInfoFlag) {var bytes = 0;var mul = 1;var length = 0;var result = true;var current;var padding = this._pos ? this._pos : 0;while (bytes < 5) {current = this._list.readUInt8(padding + bytes++);length += mul * (current & constants.LENGTH_MASK);mul *= 128;if ((current & constants.LENGTH_FIN_MASK) === 0) break;if (this._list.length <= bytes) {result = false;break;}}if (padding) {this._pos += bytes;}result = result ? fullInfoFlag ? { bytes: bytes, value: length } : length : false;return result;};Parser.prototype._parseByte = function () {var result = this._list.readUInt8(this._pos);this._pos++;return result;};Parser.prototype._parseByType = function (type) {switch (type) {case \"byte\":{return this._parseByte() !== 0;}case \"int8\":{return this._parseByte();}case \"int16\":{return this._parseNum();}case \"int32\":{return this._parse4ByteNum();}case \"var\":{return this._parseVarByteNum();}case \"string\":{return this._parseString();}case \"pair\":{return this._parseStringPair();}case \"binary\":{return this._parseBuffer();}}};Parser.prototype._parseProperties = function () {var length = this._parseVarByteNum();var start = this._pos;var end = start + length;var result = {};while (this._pos < end) {var type = this._parseByte();var name = constants.propertiesCodes[type];if (!name) {this._emitError(new Error(\"Unknown property\"));return false;}if (name === \"userProperties\") {if (!result[name]) {result[name] = {};}var currentUserProperty = this._parseByType(constants.propertiesTypes[name]);result[name][currentUserProperty.name] = currentUserProperty.value;continue;}result[name] = this._parseByType(constants.propertiesTypes[name]);}return result;};Parser.prototype._newPacket = function () {if (this.packet) {this._list.consume(this.packet.length);this.emit(\"packet\", this.packet);}this.packet = new Packet();this._pos = 0;return true;};Parser.prototype._emitError = function (err) {this.error = err;this.emit(\"error\", err);};module.exports = Parser;}, { \"./constants\": 82, \"./packet\": 87, bl: 85, events: 13, inherits: 80 }], 89: [function (require, module, exports) {\"use strict\";var protocol = require(\"./constants\");var Buffer = require(\"safe-buffer\").Buffer;var empty = Buffer.allocUnsafe(0);var zeroBuf = Buffer.from([0]);var numbers = require(\"./numbers\");var nextTick = require(\"process-nextick-args\").nextTick;var numCache = numbers.cache;var generateNumber = numbers.generateNumber;var generateCache = numbers.generateCache;var genBufVariableByteInt = numbers.genBufVariableByteInt;var generate4ByteBuffer = numbers.generate4ByteBuffer;var writeNumber = writeNumberCached;var toGenerate = true;function generate(packet, stream, opts) {if (stream.cork) {stream.cork();nextTick(uncork, stream);}if (toGenerate) {toGenerate = false;generateCache();}switch (packet.cmd) {case \"connect\":return connect(packet, stream, opts);case \"connack\":return connack(packet, stream, opts);case \"publish\":return publish(packet, stream, opts);case \"puback\":case \"pubrec\":case \"pubrel\":case \"pubcomp\":return confirmation(packet, stream, opts);case \"subscribe\":return subscribe(packet, stream, opts);case \"suback\":return suback(packet, stream, opts);case \"unsubscribe\":return unsubscribe(packet, stream, opts);case \"unsuback\":return unsuback(packet, stream, opts);case \"pingreq\":case \"pingresp\":return emptyPacket(packet, stream, opts);case \"disconnect\":return disconnect(packet, stream, opts);case \"auth\":return auth(packet, stream, opts);default:stream.emit(\"error\", new Error(\"Unknown command\"));return false;}}Object.defineProperty(generate, \"cacheNumbers\", { get: function get() {return writeNumber === writeNumberCached;}, set: function set(value) {if (value) {if (!numCache || Object.keys(numCache).length === 0) toGenerate = true;writeNumber = writeNumberCached;} else {toGenerate = false;writeNumber = writeNumberGenerated;}} });function uncork(stream) {stream.uncork();}function connect(packet, stream, opts) {var settings = packet || {};var protocolId = settings.protocolId || \"MQTT\";var protocolVersion = settings.protocolVersion || 4;var will = settings.will;var clean = settings.clean;var keepalive = settings.keepalive || 0;var clientId = settings.clientId || \"\";var username = settings.username;var password = settings.password;var properties = settings.properties;if (clean === undefined) clean = true;var length = 0;if (!protocolId || typeof protocolId !== \"string\" && !Buffer.isBuffer(protocolId)) {stream.emit(\"error\", new Error(\"Invalid protocolId\"));return false;} else length += protocolId.length + 2;if (protocolVersion !== 3 && protocolVersion !== 4 && protocolVersion !== 5) {stream.emit(\"error\", new Error(\"Invalid protocol version\"));return false;} else length += 1;if ((typeof clientId === \"string\" || Buffer.isBuffer(clientId)) && (clientId || protocolVersion === 4) && (clientId || clean)) {length += clientId.length + 2;} else {if (protocolVersion < 4) {stream.emit(\"error\", new Error(\"clientId must be supplied before 3.1.1\"));return false;}if (clean * 1 === 0) {stream.emit(\"error\", new Error(\"clientId must be given if cleanSession set to 0\"));return false;}}if (typeof keepalive !== \"number\" || keepalive < 0 || keepalive > 65535 || keepalive % 1 !== 0) {stream.emit(\"error\", new Error(\"Invalid keepalive\"));return false;} else length += 2;length += 1;if (protocolVersion === 5) {var propertiesData = getProperties(stream, properties);length += propertiesData.length;}if (will) {if (typeof will !== \"object\") {stream.emit(\"error\", new Error(\"Invalid will\"));return false;}if (!will.topic || typeof will.topic !== \"string\") {stream.emit(\"error\", new Error(\"Invalid will topic\"));return false;} else {length += Buffer.byteLength(will.topic) + 2;}if (will.payload) {if (will.payload.length >= 0) {if (typeof will.payload === \"string\") {length += Buffer.byteLength(will.payload) + 2;} else {length += will.payload.length + 2;}} else {stream.emit(\"error\", new Error(\"Invalid will payload\"));return false;}var willProperties = {};if (protocolVersion === 5) {willProperties = getProperties(stream, will.properties);length += willProperties.length;}}}var providedUsername = false;if (username != null) {if (isStringOrBuffer(username)) {providedUsername = true;length += Buffer.byteLength(username) + 2;} else {stream.emit(\"error\", new Error(\"Invalid username\"));return false;}}if (password != null) {if (!providedUsername) {stream.emit(\"error\", new Error(\"Username is required to use password\"));return false;}if (isStringOrBuffer(password)) {length += byteLength(password) + 2;} else {stream.emit(\"error\", new Error(\"Invalid password\"));return false;}}stream.write(protocol.CONNECT_HEADER);writeVarByteInt(stream, length);writeStringOrBuffer(stream, protocolId);stream.write(protocolVersion === 4 ? protocol.VERSION4 : protocolVersion === 5 ? protocol.VERSION5 : protocol.VERSION3);var flags = 0;flags |= username != null ? protocol.USERNAME_MASK : 0;flags |= password != null ? protocol.PASSWORD_MASK : 0;flags |= will && will.retain ? protocol.WILL_RETAIN_MASK : 0;flags |= will && will.qos ? will.qos << protocol.WILL_QOS_SHIFT : 0;flags |= will ? protocol.WILL_FLAG_MASK : 0;flags |= clean ? protocol.CLEAN_SESSION_MASK : 0;stream.write(Buffer.from([flags]));writeNumber(stream, keepalive);if (protocolVersion === 5) {propertiesData.write();}writeStringOrBuffer(stream, clientId);if (will) {if (protocolVersion === 5) {willProperties.write();}writeString(stream, will.topic);writeStringOrBuffer(stream, will.payload);}if (username != null) {writeStringOrBuffer(stream, username);}if (password != null) {writeStringOrBuffer(stream, password);}return true;}function connack(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var rc = version === 5 ? settings.reasonCode : settings.returnCode;var properties = settings.properties;var length = 2;if (typeof rc !== \"number\") {stream.emit(\"error\", new Error(\"Invalid return code\"));return false;}var propertiesData = null;if (version === 5) {propertiesData = getProperties(stream, properties);length += propertiesData.length;}stream.write(protocol.CONNACK_HEADER);writeVarByteInt(stream, length);stream.write(settings.sessionPresent ? protocol.SESSIONPRESENT_HEADER : zeroBuf);stream.write(Buffer.from([rc]));if (propertiesData != null) {propertiesData.write();}return true;}function publish(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var qos = settings.qos || 0;var retain = settings.retain ? protocol.RETAIN_MASK : 0;var topic = settings.topic;var payload = settings.payload || empty;var id = settings.messageId;var properties = settings.properties;var length = 0;if (typeof topic === \"string\") length += Buffer.byteLength(topic) + 2;else if (Buffer.isBuffer(topic)) length += topic.length + 2;else {stream.emit(\"error\", new Error(\"Invalid topic\"));return false;}if (!Buffer.isBuffer(payload)) length += Buffer.byteLength(payload);else length += payload.length;if (qos && typeof id !== \"number\") {stream.emit(\"error\", new Error(\"Invalid messageId\"));return false;} else if (qos) length += 2;var propertiesData = null;if (version === 5) {propertiesData = getProperties(stream, properties);length += propertiesData.length;}stream.write(protocol.PUBLISH_HEADER[qos][settings.dup ? 1 : 0][retain ? 1 : 0]);writeVarByteInt(stream, length);writeNumber(stream, byteLength(topic));stream.write(topic);if (qos > 0) writeNumber(stream, id);if (propertiesData != null) {propertiesData.write();}return stream.write(payload);}function confirmation(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var type = settings.cmd || \"puback\";var id = settings.messageId;var dup = settings.dup && type === \"pubrel\" ? protocol.DUP_MASK : 0;var qos = 0;var reasonCode = settings.reasonCode;var properties = settings.properties;var length = version === 5 ? 3 : 2;if (type === \"pubrel\") qos = 1;if (typeof id !== \"number\") {stream.emit(\"error\", new Error(\"Invalid messageId\"));return false;}var propertiesData = null;if (version === 5) {propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);if (!propertiesData) {return false;}length += propertiesData.length;}stream.write(protocol.ACKS[type][qos][dup][0]);writeVarByteInt(stream, length);writeNumber(stream, id);if (version === 5) {stream.write(Buffer.from([reasonCode]));}if (propertiesData !== null) {propertiesData.write();}return true;}function subscribe(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var dup = settings.dup ? protocol.DUP_MASK : 0;var id = settings.messageId;var subs = settings.subscriptions;var properties = settings.properties;var length = 0;if (typeof id !== \"number\") {stream.emit(\"error\", new Error(\"Invalid messageId\"));return false;} else length += 2;var propertiesData = null;if (version === 5) {propertiesData = getProperties(stream, properties);length += propertiesData.length;}if (typeof subs === \"object\" && subs.length) {for (var i = 0; i < subs.length; i += 1) {var itopic = subs[i].topic;var iqos = subs[i].qos;if (typeof itopic !== \"string\") {stream.emit(\"error\", new Error(\"Invalid subscriptions - invalid topic\"));return false;}if (typeof iqos !== \"number\") {stream.emit(\"error\", new Error(\"Invalid subscriptions - invalid qos\"));return false;}if (version === 5) {var nl = subs[i].nl || false;if (typeof nl !== \"boolean\") {stream.emit(\"error\", new Error(\"Invalid subscriptions - invalid No Local\"));return false;}var rap = subs[i].rap || false;if (typeof rap !== \"boolean\") {stream.emit(\"error\", new Error(\"Invalid subscriptions - invalid Retain as Published\"));return false;}var rh = subs[i].rh || 0;if (typeof rh !== \"number\" || rh > 2) {stream.emit(\"error\", new Error(\"Invalid subscriptions - invalid Retain Handling\"));return false;}}length += Buffer.byteLength(itopic) + 2 + 1;}} else {stream.emit(\"error\", new Error(\"Invalid subscriptions\"));return false;}stream.write(protocol.SUBSCRIBE_HEADER[1][dup ? 1 : 0][0]);writeVarByteInt(stream, length);writeNumber(stream, id);if (propertiesData !== null) {propertiesData.write();}var result = true;for (var j = 0; j < subs.length; j++) {var sub = subs[j];var jtopic = sub.topic;var jqos = sub.qos;var jnl = +sub.nl;var jrap = +sub.rap;var jrh = sub.rh;var joptions;writeString(stream, jtopic);joptions = protocol.SUBSCRIBE_OPTIONS_QOS[jqos];if (version === 5) {joptions |= jnl ? protocol.SUBSCRIBE_OPTIONS_NL : 0;joptions |= jrap ? protocol.SUBSCRIBE_OPTIONS_RAP : 0;joptions |= jrh ? protocol.SUBSCRIBE_OPTIONS_RH[jrh] : 0;}result = stream.write(Buffer.from([joptions]));}return result;}function suback(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var id = settings.messageId;var granted = settings.granted;var properties = settings.properties;var length = 0;if (typeof id !== \"number\") {stream.emit(\"error\", new Error(\"Invalid messageId\"));return false;} else length += 2;if (typeof granted === \"object\" && granted.length) {for (var i = 0; i < granted.length; i += 1) {if (typeof granted[i] !== \"number\") {stream.emit(\"error\", new Error(\"Invalid qos vector\"));return false;}length += 1;}} else {stream.emit(\"error\", new Error(\"Invalid qos vector\"));return false;}var propertiesData = null;if (version === 5) {propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);if (!propertiesData) {return false;}length += propertiesData.length;}stream.write(protocol.SUBACK_HEADER);writeVarByteInt(stream, length);writeNumber(stream, id);if (propertiesData !== null) {propertiesData.write();}return stream.write(Buffer.from(granted));}function unsubscribe(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var id = settings.messageId;var dup = settings.dup ? protocol.DUP_MASK : 0;var unsubs = settings.unsubscriptions;var properties = settings.properties;var length = 0;if (typeof id !== \"number\") {stream.emit(\"error\", new Error(\"Invalid messageId\"));return false;} else {length += 2;}if (typeof unsubs === \"object\" && unsubs.length) {for (var i = 0; i < unsubs.length; i += 1) {if (typeof unsubs[i] !== \"string\") {stream.emit(\"error\", new Error(\"Invalid unsubscriptions\"));return false;}length += Buffer.byteLength(unsubs[i]) + 2;}} else {stream.emit(\"error\", new Error(\"Invalid unsubscriptions\"));return false;}var propertiesData = null;if (version === 5) {propertiesData = getProperties(stream, properties);length += propertiesData.length;}stream.write(protocol.UNSUBSCRIBE_HEADER[1][dup ? 1 : 0][0]);writeVarByteInt(stream, length);writeNumber(stream, id);if (propertiesData !== null) {propertiesData.write();}var result = true;for (var j = 0; j < unsubs.length; j++) {result = writeString(stream, unsubs[j]);}return result;}function unsuback(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var id = settings.messageId;var dup = settings.dup ? protocol.DUP_MASK : 0;var granted = settings.granted;var properties = settings.properties;var type = settings.cmd;var qos = 0;var length = 2;if (typeof id !== \"number\") {stream.emit(\"error\", new Error(\"Invalid messageId\"));return false;}if (version === 5) {if (typeof granted === \"object\" && granted.length) {for (var i = 0; i < granted.length; i += 1) {if (typeof granted[i] !== \"number\") {stream.emit(\"error\", new Error(\"Invalid qos vector\"));return false;}length += 1;}} else {stream.emit(\"error\", new Error(\"Invalid qos vector\"));return false;}}var propertiesData = null;if (version === 5) {propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);if (!propertiesData) {return false;}length += propertiesData.length;}stream.write(protocol.ACKS[type][qos][dup][0]);writeVarByteInt(stream, length);writeNumber(stream, id);if (propertiesData !== null) {propertiesData.write();}if (version === 5) {stream.write(Buffer.from(granted));}return true;}function emptyPacket(packet, stream, opts) {return stream.write(protocol.EMPTY[packet.cmd]);}function disconnect(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var reasonCode = settings.reasonCode;var properties = settings.properties;var length = version === 5 ? 1 : 0;var propertiesData = null;if (version === 5) {propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);if (!propertiesData) {return false;}length += propertiesData.length;}stream.write(Buffer.from([protocol.codes[\"disconnect\"] << 4]));writeVarByteInt(stream, length);if (version === 5) {stream.write(Buffer.from([reasonCode]));}if (propertiesData !== null) {propertiesData.write();}return true;}function auth(packet, stream, opts) {var version = opts ? opts.protocolVersion : 4;var settings = packet || {};var reasonCode = settings.reasonCode;var properties = settings.properties;var length = version === 5 ? 1 : 0;if (version !== 5) stream.emit(\"error\", new Error(\"Invalid mqtt version for auth packet\"));var propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);if (!propertiesData) {return false;}length += propertiesData.length;stream.write(Buffer.from([protocol.codes[\"auth\"] << 4]));writeVarByteInt(stream, length);stream.write(Buffer.from([reasonCode]));if (propertiesData !== null) {propertiesData.write();}return true;}var varByteIntCache = {};function writeVarByteInt(stream, num) {var buffer = varByteIntCache[num];if (!buffer) {buffer = genBufVariableByteInt(num).data;if (num < 16384) varByteIntCache[num] = buffer;}stream.write(buffer);}function writeString(stream, string) {var strlen = Buffer.byteLength(string);writeNumber(stream, strlen);stream.write(string, \"utf8\");}function writeStringPair(stream, name, value) {writeString(stream, name);writeString(stream, value);}function writeNumberCached(stream, number) {return stream.write(numCache[number]);}function writeNumberGenerated(stream, number) {return stream.write(generateNumber(number));}function write4ByteNumber(stream, number) {return stream.write(generate4ByteBuffer(number));}function writeStringOrBuffer(stream, toWrite) {if (typeof toWrite === \"string\") {writeString(stream, toWrite);} else if (toWrite) {writeNumber(stream, toWrite.length);stream.write(toWrite);} else writeNumber(stream, 0);}function getProperties(stream, properties) {if (typeof properties !== \"object\" || properties.length != null) {return { length: 1, write: function write() {writeProperties(stream, {}, 0);} };}var propertiesLength = 0;function getLengthProperty(name) {var type = protocol.propertiesTypes[name];var value = properties[name];var length = 0;switch (type) {case \"byte\":{if (typeof value !== \"boolean\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + 1;break;}case \"int8\":{if (typeof value !== \"number\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + 1;break;}case \"binary\":{if (value && value === null) {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + Buffer.byteLength(value) + 2;break;}case \"int16\":{if (typeof value !== \"number\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + 2;break;}case \"int32\":{if (typeof value !== \"number\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + 4;break;}case \"var\":{if (typeof value !== \"number\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + genBufVariableByteInt(value).length;break;}case \"string\":{if (typeof value !== \"string\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += 1 + 2 + Buffer.byteLength(value.toString());break;}case \"pair\":{if (typeof value !== \"object\") {stream.emit(\"error\", new Error(\"Invalid \" + name));return false;}length += Object.getOwnPropertyNames(value).reduce(function (result, name) {result += 1 + 2 + Buffer.byteLength(name.toString()) + 2 + Buffer.byteLength(value[name].toString());return result;}, 0);break;}default:{stream.emit(\"error\", new Error(\"Invalid property \" + name));return false;}}return length;}if (properties) {for (var propName in properties) {var propLength = getLengthProperty(propName);if (!propLength) return false;propertiesLength += propLength;}}var propertiesLengthLength = genBufVariableByteInt(propertiesLength).length;return { length: propertiesLengthLength + propertiesLength, write: function write() {writeProperties(stream, properties, propertiesLength);} };}function getPropertiesByMaximumPacketSize(stream, properties, opts, length) {var mayEmptyProps = [\"reasonString\", \"userProperties\"];var maximumPacketSize = opts && opts.properties && opts.properties.maximumPacketSize ? opts.properties.maximumPacketSize : 0;var propertiesData = getProperties(stream, properties);if (maximumPacketSize) {while (length + propertiesData.length > maximumPacketSize) {var currentMayEmptyProp = mayEmptyProps.shift();if (currentMayEmptyProp && properties[currentMayEmptyProp]) {delete properties[currentMayEmptyProp];propertiesData = getProperties(stream, properties);} else {return false;}}}return propertiesData;}function writeProperties(stream, properties, propertiesLength) {writeVarByteInt(stream, propertiesLength);for (var propName in properties) {if (properties.hasOwnProperty(propName) && properties[propName] !== null) {var value = properties[propName];var type = protocol.propertiesTypes[propName];switch (type) {case \"byte\":{stream.write(Buffer.from([protocol.properties[propName]]));stream.write(Buffer.from([+value]));break;}case \"int8\":{stream.write(Buffer.from([protocol.properties[propName]]));stream.write(Buffer.from([value]));break;}case \"binary\":{stream.write(Buffer.from([protocol.properties[propName]]));writeStringOrBuffer(stream, value);break;}case \"int16\":{stream.write(Buffer.from([protocol.properties[propName]]));writeNumber(stream, value);break;}case \"int32\":{stream.write(Buffer.from([protocol.properties[propName]]));write4ByteNumber(stream, value);break;}case \"var\":{stream.write(Buffer.from([protocol.properties[propName]]));writeVarByteInt(stream, value);break;}case \"string\":{stream.write(Buffer.from([protocol.properties[propName]]));writeString(stream, value);break;}case \"pair\":{Object.getOwnPropertyNames(value).forEach(function (name) {stream.write(Buffer.from([protocol.properties[propName]]));writeStringPair(stream, name.toString(), value[name].toString());});break;}default:{stream.emit(\"error\", new Error(\"Invalid property \" + propName));return false;}}}}}function byteLength(bufOrString) {if (!bufOrString) return 0;else if (bufOrString instanceof Buffer) return bufOrString.length;else return Buffer.byteLength(bufOrString);}function isStringOrBuffer(field) {return typeof field === \"string\" || field instanceof Buffer;}module.exports = generate;}, { \"./constants\": 82, \"./numbers\": 86, \"process-nextick-args\": 91, \"safe-buffer\": 110 }], 90: [function (require, module, exports) {var wrappy = require(\"wrappy\");module.exports = wrappy(once);module.exports.strict = wrappy(onceStrict);once.proto = once(function () {Object.defineProperty(Function.prototype, \"once\", { value: function value() {return once(this);}, configurable: true });Object.defineProperty(Function.prototype, \"onceStrict\", { value: function value() {return onceStrict(this);}, configurable: true });});function once(fn) {var f = function f() {if (f.called) return f.value;f.called = true;return f.value = fn.apply(this, arguments);};f.called = false;return f;}function onceStrict(fn) {var f = function f() {if (f.called) throw new Error(f.onceError);f.called = true;return f.value = fn.apply(this, arguments);};var name = fn.name || \"Function wrapped with `once`\";f.onceError = name + \" shouldn't be called more than once\";f.called = false;return f;}}, { wrappy: 120 }], 91: [function (require, module, exports) {(function (process) {\"use strict\";if (!process.version || process.version.indexOf(\"v0.\") === 0 || process.version.indexOf(\"v1.\") === 0 && process.version.indexOf(\"v1.8.\") !== 0) {module.exports = { nextTick: nextTick };} else {module.exports = process;}function nextTick(fn, arg1, arg2, arg3) {if (typeof fn !== \"function\") {throw new TypeError('\"callback\" argument must be a function');}var len = arguments.length;var args, i;switch (len) {case 0:case 1:return process.nextTick(fn);case 2:return process.nextTick(function afterTickOne() {fn.call(null, arg1);});case 3:return process.nextTick(function afterTickTwo() {fn.call(null, arg1, arg2);});case 4:return process.nextTick(function afterTickThree() {fn.call(null, arg1, arg2, arg3);});default:args = new Array(len - 1);i = 0;while (i < args.length) {args[i++] = arguments[i];}return process.nextTick(function afterTick() {fn.apply(null, args);});}}}).call(this, require(\"_process\"));}, { _process: 92 }], 92: [function (require, module, exports) {var process = module.exports = {};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout() {throw new Error(\"setTimeout has not been defined\");}function defaultClearTimeout() {throw new Error(\"clearTimeout has not been defined\");}(function () {try {if (typeof setTimeout === \"function\") {cachedSetTimeout = setTimeout;} else {cachedSetTimeout = defaultSetTimout;}} catch (e) {cachedSetTimeout = defaultSetTimout;}try {if (typeof clearTimeout === \"function\") {cachedClearTimeout = clearTimeout;} else {cachedClearTimeout = defaultClearTimeout;}} catch (e) {cachedClearTimeout = defaultClearTimeout;}})();function runTimeout(fun) {if (cachedSetTimeout === setTimeout) {return setTimeout(fun, 0);}if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {cachedSetTimeout = setTimeout;return setTimeout(fun, 0);}try {return cachedSetTimeout(fun, 0);} catch (e) {try {return cachedSetTimeout.call(null, fun, 0);} catch (e) {return cachedSetTimeout.call(this, fun, 0);}}}function runClearTimeout(marker) {if (cachedClearTimeout === clearTimeout) {return clearTimeout(marker);}if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {cachedClearTimeout = clearTimeout;return clearTimeout(marker);}try {return cachedClearTimeout(marker);} catch (e) {try {return cachedClearTimeout.call(null, marker);} catch (e) {return cachedClearTimeout.call(this, marker);}}}var queue = [];var draining = false;var currentQueue;var queueIndex = -1;function cleanUpNextTick() {if (!draining || !currentQueue) {return;}draining = false;if (currentQueue.length) {queue = currentQueue.concat(queue);} else {queueIndex = -1;}if (queue.length) {drainQueue();}}function drainQueue() {if (draining) {return;}var timeout = runTimeout(cleanUpNextTick);draining = true;var len = queue.length;while (len) {currentQueue = queue;queue = [];while (++queueIndex < len) {if (currentQueue) {currentQueue[queueIndex].run();}}queueIndex = -1;len = queue.length;}currentQueue = null;draining = false;runClearTimeout(timeout);}process.nextTick = function (fun) {var args = new Array(arguments.length - 1);if (arguments.length > 1) {for (var i = 1; i < arguments.length; i++) {args[i - 1] = arguments[i];}}queue.push(new Item(fun, args));if (queue.length === 1 && !draining) {runTimeout(drainQueue);}};function Item(fun, array) {this.fun = fun;this.array = array;}Item.prototype.run = function () {this.fun.apply(null, this.array);};process.title = \"browser\";process.browser = true;process.env = {};process.argv = [];process.version = \"\";process.versions = {};function noop() {}process.on = noop;process.addListener = noop;process.once = noop;process.off = noop;process.removeListener = noop;process.removeAllListeners = noop;process.emit = noop;process.prependListener = noop;process.prependOnceListener = noop;process.listeners = function (name) {return [];};process.binding = function (name) {throw new Error(\"process.binding is not supported\");};process.cwd = function () {return \"/\";};process.chdir = function (dir) {throw new Error(\"process.chdir is not supported\");};process.umask = function () {return 0;};}, {}], 93: [function (require, module, exports) {(function (global) {(function (root) {var freeExports = typeof exports == \"object\" && exports && !exports.nodeType && exports;var freeModule = typeof module == \"object\" && module && !module.nodeType && module;var freeGlobal = typeof global == \"object\" && global;if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {root = freeGlobal;}var punycode,maxInt = 2147483647,base = 36,tMin = 1,tMax = 26,skew = 38,damp = 700,initialBias = 72,initialN = 128,delimiter = \"-\",regexPunycode = /^xn--/,regexNonASCII = /[^\\x20-\\x7E]/,regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,errors = { overflow: \"Overflow: input needs wider integers to process\", \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\", \"invalid-input\": \"Invalid input\" },baseMinusTMin = base - tMin,floor = Math.floor,stringFromCharCode = String.fromCharCode,key;function error(type) {throw new RangeError(errors[type]);}function map(array, fn) {var length = array.length;var result = [];while (length--) {result[length] = fn(array[length]);}return result;}function mapDomain(string, fn) {var parts = string.split(\"@\");var result = \"\";if (parts.length > 1) {result = parts[0] + \"@\";string = parts[1];}string = string.replace(regexSeparators, \".\");var labels = string.split(\".\");var encoded = map(labels, fn).join(\".\");return result + encoded;}function ucs2decode(string) {var output = [],counter = 0,length = string.length,value,extra;while (counter < length) {value = string.charCodeAt(counter++);if (value >= 55296 && value <= 56319 && counter < length) {extra = string.charCodeAt(counter++);if ((extra & 64512) == 56320) {output.push(((value & 1023) << 10) + (extra & 1023) + 65536);} else {output.push(value);counter--;}} else {output.push(value);}}return output;}function ucs2encode(array) {return map(array, function (value) {var output = \"\";if (value > 65535) {value -= 65536;output += stringFromCharCode(value >>> 10 & 1023 | 55296);value = 56320 | value & 1023;}output += stringFromCharCode(value);return output;}).join(\"\");}function basicToDigit(codePoint) {if (codePoint - 48 < 10) {return codePoint - 22;}if (codePoint - 65 < 26) {return codePoint - 65;}if (codePoint - 97 < 26) {return codePoint - 97;}return base;}function digitToBasic(digit, flag) {return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);}function adapt(delta, numPoints, firstTime) {var k = 0;delta = firstTime ? floor(delta / damp) : delta >> 1;delta += floor(delta / numPoints);for (; delta > baseMinusTMin * tMax >> 1; k += base) {delta = floor(delta / baseMinusTMin);}return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));}function decode(input) {var output = [],inputLength = input.length,out,i = 0,n = initialN,bias = initialBias,basic,j,index,oldi,w,k,digit,t,baseMinusT;basic = input.lastIndexOf(delimiter);if (basic < 0) {basic = 0;}for (j = 0; j < basic; ++j) {if (input.charCodeAt(j) >= 128) {error(\"not-basic\");}output.push(input.charCodeAt(j));}for (index = basic > 0 ? basic + 1 : 0; index < inputLength;) {for (oldi = i, w = 1, k = base;; k += base) {if (index >= inputLength) {error(\"invalid-input\");}digit = basicToDigit(input.charCodeAt(index++));if (digit >= base || digit > floor((maxInt - i) / w)) {error(\"overflow\");}i += digit * w;t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;if (digit < t) {break;}baseMinusT = base - t;if (w > floor(maxInt / baseMinusT)) {error(\"overflow\");}w *= baseMinusT;}out = output.length + 1;bias = adapt(i - oldi, out, oldi == 0);if (floor(i / out) > maxInt - n) {error(\"overflow\");}n += floor(i / out);i %= out;output.splice(i++, 0, n);}return ucs2encode(output);}function encode(input) {var n,delta,handledCPCount,basicLength,bias,j,m,q,k,t,currentValue,output = [],inputLength,handledCPCountPlusOne,baseMinusT,qMinusT;input = ucs2decode(input);inputLength = input.length;n = initialN;delta = 0;bias = initialBias;for (j = 0; j < inputLength; ++j) {currentValue = input[j];if (currentValue < 128) {output.push(stringFromCharCode(currentValue));}}handledCPCount = basicLength = output.length;if (basicLength) {output.push(delimiter);}while (handledCPCount < inputLength) {for (m = maxInt, j = 0; j < inputLength; ++j) {currentValue = input[j];if (currentValue >= n && currentValue < m) {m = currentValue;}}handledCPCountPlusOne = handledCPCount + 1;if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {error(\"overflow\");}delta += (m - n) * handledCPCountPlusOne;n = m;for (j = 0; j < inputLength; ++j) {currentValue = input[j];if (currentValue < n && ++delta > maxInt) {error(\"overflow\");}if (currentValue == n) {for (q = delta, k = base;; k += base) {t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;if (q < t) {break;}qMinusT = q - t;baseMinusT = base - t;output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));q = floor(qMinusT / baseMinusT);}output.push(stringFromCharCode(digitToBasic(q, 0)));bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);delta = 0;++handledCPCount;}}++delta;++n;}return output.join(\"\");}function toUnicode(input) {return mapDomain(input, function (string) {return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;});}function toASCII(input) {return mapDomain(input, function (string) {return regexNonASCII.test(string) ? \"xn--\" + encode(string) : string;});}punycode = { version: \"1.4.1\", ucs2: { decode: ucs2decode, encode: ucs2encode }, decode: decode, encode: encode, toASCII: toASCII, toUnicode: toUnicode };if (typeof define == \"function\" && typeof define.amd == \"object\" && define.amd) {define(\"punycode\", function () {return punycode;});} else if (freeExports && freeModule) {if (module.exports == freeExports) {freeModule.exports = punycode;} else {for (key in punycode) {punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);}}} else {root.punycode = punycode;}})(this);}).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});}, {}], 94: [function (require, module, exports) {\"use strict\";function hasOwnProperty(obj, prop) {return Object.prototype.hasOwnProperty.call(obj, prop);}module.exports = function (qs, sep, eq, options) {sep = sep || \"&\";eq = eq || \"=\";var obj = {};if (typeof qs !== \"string\" || qs.length === 0) {return obj;}var regexp = /\\+/g;qs = qs.split(sep);var maxKeys = 1e3;if (options && typeof options.maxKeys === \"number\") {maxKeys = options.maxKeys;}var len = qs.length;if (maxKeys > 0 && len > maxKeys) {len = maxKeys;}for (var i = 0; i < len; ++i) {var x = qs[i].replace(regexp, \"%20\"),idx = x.indexOf(eq),kstr,vstr,k,v;if (idx >= 0) {kstr = x.substr(0, idx);vstr = x.substr(idx + 1);} else {kstr = x;vstr = \"\";}k = decodeURIComponent(kstr);v = decodeURIComponent(vstr);if (!hasOwnProperty(obj, k)) {obj[k] = v;} else if (isArray(obj[k])) {obj[k].push(v);} else {obj[k] = [obj[k], v];}}return obj;};var isArray = Array.isArray || function (xs) {return Object.prototype.toString.call(xs) === \"[object Array]\";};}, {}], 95: [function (require, module, exports) {\"use strict\";var stringifyPrimitive = function stringifyPrimitive(v) {switch (typeof v) {case \"string\":return v;case \"boolean\":return v ? \"true\" : \"false\";case \"number\":return isFinite(v) ? v : \"\";default:return \"\";}};module.exports = function (obj, sep, eq, name) {sep = sep || \"&\";eq = eq || \"=\";if (obj === null) {obj = undefined;}if (typeof obj === \"object\") {return map(objectKeys(obj), function (k) {var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;if (isArray(obj[k])) {return map(obj[k], function (v) {return ks + encodeURIComponent(stringifyPrimitive(v));}).join(sep);} else {return ks + encodeURIComponent(stringifyPrimitive(obj[k]));}}).join(sep);}if (!name) return \"\";return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));};var isArray = Array.isArray || function (xs) {return Object.prototype.toString.call(xs) === \"[object Array]\";};function map(xs, f) {if (xs.map) return xs.map(f);var res = [];for (var i = 0; i < xs.length; i++) {res.push(f(xs[i], i));}return res;}var objectKeys = Object.keys || function (obj) {var res = [];for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);}return res;};}, {}], 96: [function (require, module, exports) {\"use strict\";exports.decode = exports.parse = require(\"./decode\");exports.encode = exports.stringify = require(\"./encode\");}, { \"./decode\": 94, \"./encode\": 95 }], 97: [function (require, module, exports) {module.exports = require(\"./lib/_stream_duplex.js\");}, { \"./lib/_stream_duplex.js\": 98 }], 98: [function (require, module, exports) {\"use strict\";var pna = require(\"process-nextick-args\");var objectKeys = Object.keys || function (obj) {var keys = [];for (var key in obj) {keys.push(key);}return keys;};module.exports = Duplex;var util = require(\"core-util-is\");util.inherits = require(\"inherits\");var Readable = require(\"./_stream_readable\");var Writable = require(\"./_stream_writable\");util.inherits(Duplex, Readable);{var keys = objectKeys(Writable.prototype);for (var v = 0; v < keys.length; v++) {var method = keys[v];if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];}}function Duplex(options) {if (!(this instanceof Duplex)) return new Duplex(options);Readable.call(this, options);Writable.call(this, options);if (options && options.readable === false) this.readable = false;if (options && options.writable === false) this.writable = false;this.allowHalfOpen = true;if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;this.once(\"end\", onend);}Object.defineProperty(Duplex.prototype, \"writableHighWaterMark\", { enumerable: false, get: function get() {return this._writableState.highWaterMark;} });function onend() {if (this.allowHalfOpen || this._writableState.ended) return;pna.nextTick(onEndNT, this);}function onEndNT(self) {self.end();}Object.defineProperty(Duplex.prototype, \"destroyed\", { get: function get() {if (this._readableState === undefined || this._writableState === undefined) {return false;}return this._readableState.destroyed && this._writableState.destroyed;}, set: function set(value) {if (this._readableState === undefined || this._writableState === undefined) {return;}this._readableState.destroyed = value;this._writableState.destroyed = value;} });Duplex.prototype._destroy = function (err, cb) {this.push(null);this.end();pna.nextTick(cb, err);};}, { \"./_stream_readable\": 100, \"./_stream_writable\": 102, \"core-util-is\": 14, inherits: 80, \"process-nextick-args\": 91 }], 99: [function (require, module, exports) {\"use strict\";module.exports = PassThrough;var Transform = require(\"./_stream_transform\");var util = require(\"core-util-is\");util.inherits = require(\"inherits\");util.inherits(PassThrough, Transform);function PassThrough(options) {if (!(this instanceof PassThrough)) return new PassThrough(options);Transform.call(this, options);}PassThrough.prototype._transform = function (chunk, encoding, cb) {cb(null, chunk);};}, { \"./_stream_transform\": 101, \"core-util-is\": 14, inherits: 80 }], 100: [function (require, module, exports) {(function (process, global) {\"use strict\";var pna = require(\"process-nextick-args\");module.exports = Readable;var isArray = require(\"isarray\");var Duplex;Readable.ReadableState = ReadableState;var EE = require(\"events\").EventEmitter;var EElistenerCount = function EElistenerCount(emitter, type) {return emitter.listeners(type).length;};var Stream = require(\"./internal/streams/stream\");var Buffer = require(\"safe-buffer\").Buffer;var OurUint8Array = global.Uint8Array || function () {};function _uint8ArrayToBuffer(chunk) {return Buffer.from(chunk);}function _isUint8Array(obj) {return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;}var util = require(\"core-util-is\");util.inherits = require(\"inherits\");var debugUtil = require(\"util\");var debug = void 0;if (debugUtil && debugUtil.debuglog) {debug = debugUtil.debuglog(\"stream\");} else {debug = function debug() {};}var BufferList = require(\"./internal/streams/BufferList\");var destroyImpl = require(\"./internal/streams/destroy\");var StringDecoder;util.inherits(Readable, Stream);var kProxyEvents = [\"error\", \"close\", \"destroy\", \"pause\", \"resume\"];function prependListener(emitter, event, fn) {if (typeof emitter.prependListener === \"function\") return emitter.prependListener(event, fn);if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];}function ReadableState(options, stream) {Duplex = Duplex || require(\"./_stream_duplex\");options = options || {};var isDuplex = stream instanceof Duplex;this.objectMode = !!options.objectMode;if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;var hwm = options.highWaterMark;var readableHwm = options.readableHighWaterMark;var defaultHwm = this.objectMode ? 16 : 16 * 1024;if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;this.highWaterMark = Math.floor(this.highWaterMark);this.buffer = new BufferList();this.length = 0;this.pipes = null;this.pipesCount = 0;this.flowing = null;this.ended = false;this.endEmitted = false;this.reading = false;this.sync = true;this.needReadable = false;this.emittedReadable = false;this.readableListening = false;this.resumeScheduled = false;this.destroyed = false;this.defaultEncoding = options.defaultEncoding || \"utf8\";this.awaitDrain = 0;this.readingMore = false;this.decoder = null;this.encoding = null;if (options.encoding) {if (!StringDecoder) StringDecoder = require(\"string_decoder/\").StringDecoder;this.decoder = new StringDecoder(options.encoding);this.encoding = options.encoding;}}function Readable(options) {Duplex = Duplex || require(\"./_stream_duplex\");if (!(this instanceof Readable)) return new Readable(options);this._readableState = new ReadableState(options, this);this.readable = true;if (options) {if (typeof options.read === \"function\") this._read = options.read;if (typeof options.destroy === \"function\") this._destroy = options.destroy;}Stream.call(this);}Object.defineProperty(Readable.prototype, \"destroyed\", { get: function get() {if (this._readableState === undefined) {return false;}return this._readableState.destroyed;}, set: function set(value) {if (!this._readableState) {return;}this._readableState.destroyed = value;} });Readable.prototype.destroy = destroyImpl.destroy;Readable.prototype._undestroy = destroyImpl.undestroy;Readable.prototype._destroy = function (err, cb) {this.push(null);cb(err);};Readable.prototype.push = function (chunk, encoding) {var state = this._readableState;var skipChunkCheck;if (!state.objectMode) {if (typeof chunk === \"string\") {encoding = encoding || state.defaultEncoding;if (encoding !== state.encoding) {chunk = Buffer.from(chunk, encoding);encoding = \"\";}skipChunkCheck = true;}} else {skipChunkCheck = true;}return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);};Readable.prototype.unshift = function (chunk) {return readableAddChunk(this, chunk, null, true, false);};function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {var state = stream._readableState;if (chunk === null) {state.reading = false;onEofChunk(stream, state);} else {var er;if (!skipChunkCheck) er = chunkInvalid(state, chunk);if (er) {stream.emit(\"error\", er);} else if (state.objectMode || chunk && chunk.length > 0) {if (typeof chunk !== \"string\" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {chunk = _uint8ArrayToBuffer(chunk);}if (addToFront) {if (state.endEmitted) stream.emit(\"error\", new Error(\"stream.unshift() after end event\"));else addChunk(stream, state, chunk, true);} else if (state.ended) {stream.emit(\"error\", new Error(\"stream.push() after EOF\"));} else {state.reading = false;if (state.decoder && !encoding) {chunk = state.decoder.write(chunk);if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);} else {addChunk(stream, state, chunk, false);}}} else if (!addToFront) {state.reading = false;}}return needMoreData(state);}function addChunk(stream, state, chunk, addToFront) {if (state.flowing && state.length === 0 && !state.sync) {stream.emit(\"data\", chunk);stream.read(0);} else {state.length += state.objectMode ? 1 : chunk.length;if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);if (state.needReadable) emitReadable(stream);}maybeReadMore(stream, state);}function chunkInvalid(state, chunk) {var er;if (!_isUint8Array(chunk) && typeof chunk !== \"string\" && chunk !== undefined && !state.objectMode) {er = new TypeError(\"Invalid non-string/buffer chunk\");}return er;}function needMoreData(state) {return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);}Readable.prototype.isPaused = function () {return this._readableState.flowing === false;};Readable.prototype.setEncoding = function (enc) {if (!StringDecoder) StringDecoder = require(\"string_decoder/\").StringDecoder;this._readableState.decoder = new StringDecoder(enc);this._readableState.encoding = enc;return this;};var MAX_HWM = 8388608;function computeNewHighWaterMark(n) {if (n >= MAX_HWM) {n = MAX_HWM;} else {n--;n |= n >>> 1;n |= n >>> 2;n |= n >>> 4;n |= n >>> 8;n |= n >>> 16;n++;}return n;}function howMuchToRead(n, state) {if (n <= 0 || state.length === 0 && state.ended) return 0;if (state.objectMode) return 1;if (n !== n) {if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;}if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);if (n <= state.length) return n;if (!state.ended) {state.needReadable = true;return 0;}return state.length;}Readable.prototype.read = function (n) {debug(\"read\", n);n = parseInt(n, 10);var state = this._readableState;var nOrig = n;if (n !== 0) state.emittedReadable = false;if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {debug(\"read: emitReadable\", state.length, state.ended);if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);return null;}n = howMuchToRead(n, state);if (n === 0 && state.ended) {if (state.length === 0) endReadable(this);return null;}var doRead = state.needReadable;debug(\"need readable\", doRead);if (state.length === 0 || state.length - n < state.highWaterMark) {doRead = true;debug(\"length less than watermark\", doRead);}if (state.ended || state.reading) {doRead = false;debug(\"reading or ended\", doRead);} else if (doRead) {debug(\"do read\");state.reading = true;state.sync = true;if (state.length === 0) state.needReadable = true;this._read(state.highWaterMark);state.sync = false;if (!state.reading) n = howMuchToRead(nOrig, state);}var ret;if (n > 0) ret = fromList(n, state);else ret = null;if (ret === null) {state.needReadable = true;n = 0;} else {state.length -= n;}if (state.length === 0) {if (!state.ended) state.needReadable = true;if (nOrig !== n && state.ended) endReadable(this);}if (ret !== null) this.emit(\"data\", ret);return ret;};function onEofChunk(stream, state) {if (state.ended) return;if (state.decoder) {var chunk = state.decoder.end();if (chunk && chunk.length) {state.buffer.push(chunk);state.length += state.objectMode ? 1 : chunk.length;}}state.ended = true;emitReadable(stream);}function emitReadable(stream) {var state = stream._readableState;state.needReadable = false;if (!state.emittedReadable) {debug(\"emitReadable\", state.flowing);state.emittedReadable = true;if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);}}function emitReadable_(stream) {debug(\"emit readable\");stream.emit(\"readable\");flow(stream);}function maybeReadMore(stream, state) {if (!state.readingMore) {state.readingMore = true;pna.nextTick(maybeReadMore_, stream, state);}}function maybeReadMore_(stream, state) {var len = state.length;while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {debug(\"maybeReadMore read 0\");stream.read(0);if (len === state.length) break;else len = state.length;}state.readingMore = false;}Readable.prototype._read = function (n) {this.emit(\"error\", new Error(\"_read() is not implemented\"));};Readable.prototype.pipe = function (dest, pipeOpts) {var src = this;var state = this._readableState;switch (state.pipesCount) {case 0:state.pipes = dest;break;case 1:state.pipes = [state.pipes, dest];break;default:state.pipes.push(dest);break;}state.pipesCount += 1;debug(\"pipe count=%d opts=%j\", state.pipesCount, pipeOpts);var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;var endFn = doEnd ? onend : unpipe;if (state.endEmitted) pna.nextTick(endFn);else src.once(\"end\", endFn);dest.on(\"unpipe\", onunpipe);function onunpipe(readable, unpipeInfo) {debug(\"onunpipe\");if (readable === src) {if (unpipeInfo && unpipeInfo.hasUnpiped === false) {unpipeInfo.hasUnpiped = true;cleanup();}}}function onend() {debug(\"onend\");dest.end();}var ondrain = pipeOnDrain(src);dest.on(\"drain\", ondrain);var cleanedUp = false;function cleanup() {debug(\"cleanup\");dest.removeListener(\"close\", onclose);dest.removeListener(\"finish\", onfinish);dest.removeListener(\"drain\", ondrain);dest.removeListener(\"error\", onerror);dest.removeListener(\"unpipe\", onunpipe);src.removeListener(\"end\", onend);src.removeListener(\"end\", unpipe);src.removeListener(\"data\", ondata);cleanedUp = true;if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();}var increasedAwaitDrain = false;src.on(\"data\", ondata);function ondata(chunk) {debug(\"ondata\");increasedAwaitDrain = false;var ret = dest.write(chunk);if (false === ret && !increasedAwaitDrain) {if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {debug(\"false write response, pause\", src._readableState.awaitDrain);src._readableState.awaitDrain++;increasedAwaitDrain = true;}src.pause();}}function onerror(er) {debug(\"onerror\", er);unpipe();dest.removeListener(\"error\", onerror);if (EElistenerCount(dest, \"error\") === 0) dest.emit(\"error\", er);}prependListener(dest, \"error\", onerror);function onclose() {dest.removeListener(\"finish\", onfinish);unpipe();}dest.once(\"close\", onclose);function onfinish() {debug(\"onfinish\");dest.removeListener(\"close\", onclose);unpipe();}dest.once(\"finish\", onfinish);function unpipe() {debug(\"unpipe\");src.unpipe(dest);}dest.emit(\"pipe\", src);if (!state.flowing) {debug(\"pipe resume\");src.resume();}return dest;};function pipeOnDrain(src) {return function () {var state = src._readableState;debug(\"pipeOnDrain\", state.awaitDrain);if (state.awaitDrain) state.awaitDrain--;if (state.awaitDrain === 0 && EElistenerCount(src, \"data\")) {state.flowing = true;flow(src);}};}Readable.prototype.unpipe = function (dest) {var state = this._readableState;var unpipeInfo = { hasUnpiped: false };if (state.pipesCount === 0) return this;if (state.pipesCount === 1) {if (dest && dest !== state.pipes) return this;if (!dest) dest = state.pipes;state.pipes = null;state.pipesCount = 0;state.flowing = false;if (dest) dest.emit(\"unpipe\", this, unpipeInfo);return this;}if (!dest) {var dests = state.pipes;var len = state.pipesCount;state.pipes = null;state.pipesCount = 0;state.flowing = false;for (var i = 0; i < len; i++) {dests[i].emit(\"unpipe\", this, unpipeInfo);}return this;}var index = indexOf(state.pipes, dest);if (index === -1) return this;state.pipes.splice(index, 1);state.pipesCount -= 1;if (state.pipesCount === 1) state.pipes = state.pipes[0];dest.emit(\"unpipe\", this, unpipeInfo);return this;};Readable.prototype.on = function (ev, fn) {var res = Stream.prototype.on.call(this, ev, fn);if (ev === \"data\") {if (this._readableState.flowing !== false) this.resume();} else if (ev === \"readable\") {var state = this._readableState;if (!state.endEmitted && !state.readableListening) {state.readableListening = state.needReadable = true;state.emittedReadable = false;if (!state.reading) {pna.nextTick(nReadingNextTick, this);} else if (state.length) {emitReadable(this);}}}return res;};Readable.prototype.addListener = Readable.prototype.on;function nReadingNextTick(self) {debug(\"readable nexttick read 0\");self.read(0);}Readable.prototype.resume = function () {var state = this._readableState;if (!state.flowing) {debug(\"resume\");state.flowing = true;resume(this, state);}return this;};function resume(stream, state) {if (!state.resumeScheduled) {state.resumeScheduled = true;pna.nextTick(resume_, stream, state);}}function resume_(stream, state) {if (!state.reading) {debug(\"resume read 0\");stream.read(0);}state.resumeScheduled = false;state.awaitDrain = 0;stream.emit(\"resume\");flow(stream);if (state.flowing && !state.reading) stream.read(0);}Readable.prototype.pause = function () {debug(\"call pause flowing=%j\", this._readableState.flowing);if (false !== this._readableState.flowing) {debug(\"pause\");this._readableState.flowing = false;this.emit(\"pause\");}return this;};function flow(stream) {var state = stream._readableState;debug(\"flow\", state.flowing);while (state.flowing && stream.read() !== null) {}}Readable.prototype.wrap = function (stream) {var _this = this;var state = this._readableState;var paused = false;stream.on(\"end\", function () {debug(\"wrapped end\");if (state.decoder && !state.ended) {var chunk = state.decoder.end();if (chunk && chunk.length) _this.push(chunk);}_this.push(null);});stream.on(\"data\", function (chunk) {debug(\"wrapped data\");if (state.decoder) chunk = state.decoder.write(chunk);if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;var ret = _this.push(chunk);if (!ret) {paused = true;stream.pause();}});for (var i in stream) {if (this[i] === undefined && typeof stream[i] === \"function\") {this[i] = function (method) {return function () {return stream[method].apply(stream, arguments);};}(i);}}for (var n = 0; n < kProxyEvents.length; n++) {stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));}this._read = function (n) {debug(\"wrapped _read\", n);if (paused) {paused = false;stream.resume();}};return this;};Object.defineProperty(Readable.prototype, \"readableHighWaterMark\", { enumerable: false, get: function get() {return this._readableState.highWaterMark;} });Readable._fromList = fromList;function fromList(n, state) {if (state.length === 0) return null;var ret;if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {if (state.decoder) ret = state.buffer.join(\"\");else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);state.buffer.clear();} else {ret = fromListPartial(n, state.buffer, state.decoder);}return ret;}function fromListPartial(n, list, hasStrings) {var ret;if (n < list.head.data.length) {ret = list.head.data.slice(0, n);list.head.data = list.head.data.slice(n);} else if (n === list.head.data.length) {ret = list.shift();} else {ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);}return ret;}function copyFromBufferString(n, list) {var p = list.head;var c = 1;var ret = p.data;n -= ret.length;while (p = p.next) {var str = p.data;var nb = n > str.length ? str.length : n;if (nb === str.length) ret += str;else ret += str.slice(0, n);n -= nb;if (n === 0) {if (nb === str.length) {++c;if (p.next) list.head = p.next;else list.head = list.tail = null;} else {list.head = p;p.data = str.slice(nb);}break;}++c;}list.length -= c;return ret;}function copyFromBuffer(n, list) {var ret = Buffer.allocUnsafe(n);var p = list.head;var c = 1;p.data.copy(ret);n -= p.data.length;while (p = p.next) {var buf = p.data;var nb = n > buf.length ? buf.length : n;buf.copy(ret, ret.length - n, 0, nb);n -= nb;if (n === 0) {if (nb === buf.length) {++c;if (p.next) list.head = p.next;else list.head = list.tail = null;} else {list.head = p;p.data = buf.slice(nb);}break;}++c;}list.length -= c;return ret;}function endReadable(stream) {var state = stream._readableState;if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');if (!state.endEmitted) {state.ended = true;pna.nextTick(endReadableNT, state, stream);}}function endReadableNT(state, stream) {if (!state.endEmitted && state.length === 0) {state.endEmitted = true;stream.readable = false;stream.emit(\"end\");}}function indexOf(xs, x) {for (var i = 0, l = xs.length; i < l; i++) {if (xs[i] === x) return i;}return -1;}}).call(this, require(\"_process\"), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});}, { \"./_stream_duplex\": 98, \"./internal/streams/BufferList\": 103, \"./internal/streams/destroy\": 104, \"./internal/streams/stream\": 105, _process: 92, \"core-util-is\": 14, events: 13, inherits: 80, isarray: 106, \"process-nextick-args\": 91, \"safe-buffer\": 110, \"string_decoder/\": 107, util: 11 }], 101: [function (require, module, exports) {\"use strict\";module.exports = Transform;var Duplex = require(\"./_stream_duplex\");var util = require(\"core-util-is\");util.inherits = require(\"inherits\");util.inherits(Transform, Duplex);function afterTransform(er, data) {var ts = this._transformState;ts.transforming = false;var cb = ts.writecb;if (!cb) {return this.emit(\"error\", new Error(\"write callback called multiple times\"));}ts.writechunk = null;ts.writecb = null;if (data != null) this.push(data);cb(er);var rs = this._readableState;rs.reading = false;if (rs.needReadable || rs.length < rs.highWaterMark) {this._read(rs.highWaterMark);}}function Transform(options) {if (!(this instanceof Transform)) return new Transform(options);Duplex.call(this, options);this._transformState = { afterTransform: afterTransform.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null };this._readableState.needReadable = true;this._readableState.sync = false;if (options) {if (typeof options.transform === \"function\") this._transform = options.transform;if (typeof options.flush === \"function\") this._flush = options.flush;}this.on(\"prefinish\", prefinish);}function prefinish() {var _this = this;if (typeof this._flush === \"function\") {this._flush(function (er, data) {done(_this, er, data);});} else {done(this, null, null);}}Transform.prototype.push = function (chunk, encoding) {this._transformState.needTransform = false;return Duplex.prototype.push.call(this, chunk, encoding);};Transform.prototype._transform = function (chunk, encoding, cb) {throw new Error(\"_transform() is not implemented\");};Transform.prototype._write = function (chunk, encoding, cb) {var ts = this._transformState;ts.writecb = cb;ts.writechunk = chunk;ts.writeencoding = encoding;if (!ts.transforming) {var rs = this._readableState;if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);}};Transform.prototype._read = function (n) {var ts = this._transformState;if (ts.writechunk !== null && ts.writecb && !ts.transforming) {ts.transforming = true;this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);} else {ts.needTransform = true;}};Transform.prototype._destroy = function (err, cb) {var _this2 = this;Duplex.prototype._destroy.call(this, err, function (err2) {cb(err2);_this2.emit(\"close\");});};function done(stream, er, data) {if (er) return stream.emit(\"error\", er);if (data != null) stream.push(data);if (stream._writableState.length) throw new Error(\"Calling transform done when ws.length != 0\");if (stream._transformState.transforming) throw new Error(\"Calling transform done when still transforming\");return stream.push(null);}}, { \"./_stream_duplex\": 98, \"core-util-is\": 14, inherits: 80 }], 102: [function (require, module, exports) {(function (process, global, setImmediate) {\"use strict\";var pna = require(\"process-nextick-args\");module.exports = Writable;function WriteReq(chunk, encoding, cb) {this.chunk = chunk;this.encoding = encoding;this.callback = cb;this.next = null;}function CorkedRequest(state) {var _this = this;this.next = null;this.entry = null;this.finish = function () {onCorkedFinish(_this, state);};}var asyncWrite = !process.browser && [\"v0.10\", \"v0.9.\"].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;var Duplex;Writable.WritableState = WritableState;var util = require(\"core-util-is\");util.inherits = require(\"inherits\");var internalUtil = { deprecate: require(\"util-deprecate\") };var Stream = require(\"./internal/streams/stream\");var Buffer = require(\"safe-buffer\").Buffer;var OurUint8Array = global.Uint8Array || function () {};function _uint8ArrayToBuffer(chunk) {return Buffer.from(chunk);}function _isUint8Array(obj) {return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;}var destroyImpl = require(\"./internal/streams/destroy\");util.inherits(Writable, Stream);function nop() {}function WritableState(options, stream) {Duplex = Duplex || require(\"./_stream_duplex\");options = options || {};var isDuplex = stream instanceof Duplex;this.objectMode = !!options.objectMode;if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;var hwm = options.highWaterMark;var writableHwm = options.writableHighWaterMark;var defaultHwm = this.objectMode ? 16 : 16 * 1024;if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;this.highWaterMark = Math.floor(this.highWaterMark);this.finalCalled = false;this.needDrain = false;this.ending = false;this.ended = false;this.finished = false;this.destroyed = false;var noDecode = options.decodeStrings === false;this.decodeStrings = !noDecode;this.defaultEncoding = options.defaultEncoding || \"utf8\";this.length = 0;this.writing = false;this.corked = 0;this.sync = true;this.bufferProcessing = false;this.onwrite = function (er) {onwrite(stream, er);};this.writecb = null;this.writelen = 0;this.bufferedRequest = null;this.lastBufferedRequest = null;this.pendingcb = 0;this.prefinished = false;this.errorEmitted = false;this.bufferedRequestCount = 0;this.corkedRequestsFree = new CorkedRequest(this);}WritableState.prototype.getBuffer = function getBuffer() {var current = this.bufferedRequest;var out = [];while (current) {out.push(current);current = current.next;}return out;};(function () {try {Object.defineProperty(WritableState.prototype, \"buffer\", { get: internalUtil.deprecate(function () {return this.getBuffer();}, \"_writableState.buffer is deprecated. Use _writableState.getBuffer \" + \"instead.\", \"DEP0003\") });} catch (_) {}})();var realHasInstance;if (typeof Symbol === \"function\" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === \"function\") {realHasInstance = Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable, Symbol.hasInstance, { value: function value(object) {if (realHasInstance.call(this, object)) return true;if (this !== Writable) return false;return object && object._writableState instanceof WritableState;} });} else {realHasInstance = function realHasInstance(object) {return object instanceof this;};}function Writable(options) {Duplex = Duplex || require(\"./_stream_duplex\");if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {return new Writable(options);}this._writableState = new WritableState(options, this);this.writable = true;if (options) {if (typeof options.write === \"function\") this._write = options.write;if (typeof options.writev === \"function\") this._writev = options.writev;if (typeof options.destroy === \"function\") this._destroy = options.destroy;if (typeof options.final === \"function\") this._final = options.final;}Stream.call(this);}Writable.prototype.pipe = function () {this.emit(\"error\", new Error(\"Cannot pipe, not readable\"));};function writeAfterEnd(stream, cb) {var er = new Error(\"write after end\");stream.emit(\"error\", er);pna.nextTick(cb, er);}function validChunk(stream, state, chunk, cb) {var valid = true;var er = false;if (chunk === null) {er = new TypeError(\"May not write null values to stream\");} else if (typeof chunk !== \"string\" && chunk !== undefined && !state.objectMode) {er = new TypeError(\"Invalid non-string/buffer chunk\");}if (er) {stream.emit(\"error\", er);pna.nextTick(cb, er);valid = false;}return valid;}Writable.prototype.write = function (chunk, encoding, cb) {var state = this._writableState;var ret = false;var isBuf = !state.objectMode && _isUint8Array(chunk);if (isBuf && !Buffer.isBuffer(chunk)) {chunk = _uint8ArrayToBuffer(chunk);}if (typeof encoding === \"function\") {cb = encoding;encoding = null;}if (isBuf) encoding = \"buffer\";else if (!encoding) encoding = state.defaultEncoding;if (typeof cb !== \"function\") cb = nop;if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {state.pendingcb++;ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);}return ret;};Writable.prototype.cork = function () {var state = this._writableState;state.corked++;};Writable.prototype.uncork = function () {var state = this._writableState;if (state.corked) {state.corked--;if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);}};Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {if (typeof encoding === \"string\") encoding = encoding.toLowerCase();if (!([\"hex\", \"utf8\", \"utf-8\", \"ascii\", \"binary\", \"base64\", \"ucs2\", \"ucs-2\", \"utf16le\", \"utf-16le\", \"raw\"].indexOf((encoding + \"\").toLowerCase()) > -1)) throw new TypeError(\"Unknown encoding: \" + encoding);this._writableState.defaultEncoding = encoding;return this;};function decodeChunk(state, chunk, encoding) {if (!state.objectMode && state.decodeStrings !== false && typeof chunk === \"string\") {chunk = Buffer.from(chunk, encoding);}return chunk;}Object.defineProperty(Writable.prototype, \"writableHighWaterMark\", { enumerable: false, get: function get() {return this._writableState.highWaterMark;} });function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {if (!isBuf) {var newChunk = decodeChunk(state, chunk, encoding);if (chunk !== newChunk) {isBuf = true;encoding = \"buffer\";chunk = newChunk;}}var len = state.objectMode ? 1 : chunk.length;state.length += len;var ret = state.length < state.highWaterMark;if (!ret) state.needDrain = true;if (state.writing || state.corked) {var last = state.lastBufferedRequest;state.lastBufferedRequest = { chunk: chunk, encoding: encoding, isBuf: isBuf, callback: cb, next: null };if (last) {last.next = state.lastBufferedRequest;} else {state.bufferedRequest = state.lastBufferedRequest;}state.bufferedRequestCount += 1;} else {doWrite(stream, state, false, len, chunk, encoding, cb);}return ret;}function doWrite(stream, state, writev, len, chunk, encoding, cb) {state.writelen = len;state.writecb = cb;state.writing = true;state.sync = true;if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);state.sync = false;}function onwriteError(stream, state, sync, er, cb) {--state.pendingcb;if (sync) {pna.nextTick(cb, er);pna.nextTick(finishMaybe, stream, state);stream._writableState.errorEmitted = true;stream.emit(\"error\", er);} else {cb(er);stream._writableState.errorEmitted = true;stream.emit(\"error\", er);finishMaybe(stream, state);}}function onwriteStateUpdate(state) {state.writing = false;state.writecb = null;state.length -= state.writelen;state.writelen = 0;}function onwrite(stream, er) {var state = stream._writableState;var sync = state.sync;var cb = state.writecb;onwriteStateUpdate(state);if (er) onwriteError(stream, state, sync, er, cb);else {var finished = needFinish(state);if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {clearBuffer(stream, state);}if (sync) {asyncWrite(afterWrite, stream, state, finished, cb);} else {afterWrite(stream, state, finished, cb);}}}function afterWrite(stream, state, finished, cb) {if (!finished) onwriteDrain(stream, state);state.pendingcb--;cb();finishMaybe(stream, state);}function onwriteDrain(stream, state) {if (state.length === 0 && state.needDrain) {state.needDrain = false;stream.emit(\"drain\");}}function clearBuffer(stream, state) {state.bufferProcessing = true;var entry = state.bufferedRequest;if (stream._writev && entry && entry.next) {var l = state.bufferedRequestCount;var buffer = new Array(l);var holder = state.corkedRequestsFree;holder.entry = entry;var count = 0;var allBuffers = true;while (entry) {buffer[count] = entry;if (!entry.isBuf) allBuffers = false;entry = entry.next;count += 1;}buffer.allBuffers = allBuffers;doWrite(stream, state, true, state.length, buffer, \"\", holder.finish);state.pendingcb++;state.lastBufferedRequest = null;if (holder.next) {state.corkedRequestsFree = holder.next;holder.next = null;} else {state.corkedRequestsFree = new CorkedRequest(state);}state.bufferedRequestCount = 0;} else {while (entry) {var chunk = entry.chunk;var encoding = entry.encoding;var cb = entry.callback;var len = state.objectMode ? 1 : chunk.length;doWrite(stream, state, false, len, chunk, encoding, cb);entry = entry.next;state.bufferedRequestCount--;if (state.writing) {break;}}if (entry === null) state.lastBufferedRequest = null;}state.bufferedRequest = entry;state.bufferProcessing = false;}Writable.prototype._write = function (chunk, encoding, cb) {cb(new Error(\"_write() is not implemented\"));};Writable.prototype._writev = null;Writable.prototype.end = function (chunk, encoding, cb) {var state = this._writableState;if (typeof chunk === \"function\") {cb = chunk;chunk = null;encoding = null;} else if (typeof encoding === \"function\") {cb = encoding;encoding = null;}if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);if (state.corked) {state.corked = 1;this.uncork();}if (!state.ending && !state.finished) endWritable(this, state, cb);};function needFinish(state) {return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;}function callFinal(stream, state) {stream._final(function (err) {state.pendingcb--;if (err) {stream.emit(\"error\", err);}state.prefinished = true;stream.emit(\"prefinish\");finishMaybe(stream, state);});}function prefinish(stream, state) {if (!state.prefinished && !state.finalCalled) {if (typeof stream._final === \"function\") {state.pendingcb++;state.finalCalled = true;pna.nextTick(callFinal, stream, state);} else {state.prefinished = true;stream.emit(\"prefinish\");}}}function finishMaybe(stream, state) {var need = needFinish(state);if (need) {prefinish(stream, state);if (state.pendingcb === 0) {state.finished = true;stream.emit(\"finish\");}}return need;}function endWritable(stream, state, cb) {state.ending = true;finishMaybe(stream, state);if (cb) {if (state.finished) pna.nextTick(cb);else stream.once(\"finish\", cb);}state.ended = true;stream.writable = false;}function onCorkedFinish(corkReq, state, err) {var entry = corkReq.entry;corkReq.entry = null;while (entry) {var cb = entry.callback;state.pendingcb--;cb(err);entry = entry.next;}if (state.corkedRequestsFree) {state.corkedRequestsFree.next = corkReq;} else {state.corkedRequestsFree = corkReq;}}Object.defineProperty(Writable.prototype, \"destroyed\", { get: function get() {if (this._writableState === undefined) {return false;}return this._writableState.destroyed;}, set: function set(value) {if (!this._writableState) {return;}this._writableState.destroyed = value;} });Writable.prototype.destroy = destroyImpl.destroy;Writable.prototype._undestroy = destroyImpl.undestroy;Writable.prototype._destroy = function (err, cb) {this.end();cb(err);};}).call(this, require(\"_process\"), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"timers\").setImmediate);}, { \"./_stream_duplex\": 98, \"./internal/streams/destroy\": 104, \"./internal/streams/stream\": 105, _process: 92, \"core-util-is\": 14, inherits: 80, \"process-nextick-args\": 91, \"safe-buffer\": 110, timers: 112, \"util-deprecate\": 115 }], 103: [function (require, module, exports) {\"use strict\";function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var Buffer = require(\"safe-buffer\").Buffer;var util = require(\"util\");function copyBuffer(src, target, offset) {src.copy(target, offset);}module.exports = function () {function BufferList() {_classCallCheck(this, BufferList);this.head = null;this.tail = null;this.length = 0;}BufferList.prototype.push = function push(v) {var entry = { data: v, next: null };if (this.length > 0) this.tail.next = entry;else this.head = entry;this.tail = entry;++this.length;};BufferList.prototype.unshift = function unshift(v) {var entry = { data: v, next: this.head };if (this.length === 0) this.tail = entry;this.head = entry;++this.length;};BufferList.prototype.shift = function shift() {if (this.length === 0) return;var ret = this.head.data;if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;--this.length;return ret;};BufferList.prototype.clear = function clear() {this.head = this.tail = null;this.length = 0;};BufferList.prototype.join = function join(s) {if (this.length === 0) return \"\";var p = this.head;var ret = \"\" + p.data;while (p = p.next) {ret += s + p.data;}return ret;};BufferList.prototype.concat = function concat(n) {if (this.length === 0) return Buffer.alloc(0);if (this.length === 1) return this.head.data;var ret = Buffer.allocUnsafe(n >>> 0);var p = this.head;var i = 0;while (p) {copyBuffer(p.data, ret, i);i += p.data.length;p = p.next;}return ret;};return BufferList;}();if (util && util.inspect && util.inspect.custom) {module.exports.prototype[util.inspect.custom] = function () {var obj = util.inspect({ length: this.length });return this.constructor.name + \" \" + obj;};}}, { \"safe-buffer\": 110, util: 11 }], 104: [function (require, module, exports) {\"use strict\";var pna = require(\"process-nextick-args\");function destroy(err, cb) {var _this = this;var readableDestroyed = this._readableState && this._readableState.destroyed;var writableDestroyed = this._writableState && this._writableState.destroyed;if (readableDestroyed || writableDestroyed) {if (cb) {cb(err);} else if (err && (!this._writableState || !this._writableState.errorEmitted)) {pna.nextTick(emitErrorNT, this, err);}return this;}if (this._readableState) {this._readableState.destroyed = true;}if (this._writableState) {this._writableState.destroyed = true;}this._destroy(err || null, function (err) {if (!cb && err) {pna.nextTick(emitErrorNT, _this, err);if (_this._writableState) {_this._writableState.errorEmitted = true;}} else if (cb) {cb(err);}});return this;}function undestroy() {if (this._readableState) {this._readableState.destroyed = false;this._readableState.reading = false;this._readableState.ended = false;this._readableState.endEmitted = false;}if (this._writableState) {this._writableState.destroyed = false;this._writableState.ended = false;this._writableState.ending = false;this._writableState.finished = false;this._writableState.errorEmitted = false;}}function emitErrorNT(self, err) {self.emit(\"error\", err);}module.exports = { destroy: destroy, undestroy: undestroy };}, { \"process-nextick-args\": 91 }], 105: [function (require, module, exports) {module.exports = require(\"events\").EventEmitter;}, { events: 13 }], 106: [function (require, module, exports) {var toString = {}.toString;module.exports = Array.isArray || function (arr) {return toString.call(arr) == \"[object Array]\";};}, {}], 107: [function (require, module, exports) {\"use strict\";var Buffer = require(\"safe-buffer\").Buffer;var isEncoding = Buffer.isEncoding || function (encoding) {encoding = \"\" + encoding;switch (encoding && encoding.toLowerCase()) {case \"hex\":case \"utf8\":case \"utf-8\":case \"ascii\":case \"binary\":case \"base64\":case \"ucs2\":case \"ucs-2\":case \"utf16le\":case \"utf-16le\":case \"raw\":return true;default:return false;}};function _normalizeEncoding(enc) {if (!enc) return \"utf8\";var retried;while (true) {switch (enc) {case \"utf8\":case \"utf-8\":return \"utf8\";case \"ucs2\":case \"ucs-2\":case \"utf16le\":case \"utf-16le\":return \"utf16le\";case \"latin1\":case \"binary\":return \"latin1\";case \"base64\":case \"ascii\":case \"hex\":return enc;default:if (retried) return;enc = (\"\" + enc).toLowerCase();retried = true;}}}function normalizeEncoding(enc) {var nenc = _normalizeEncoding(enc);if (typeof nenc !== \"string\" && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error(\"Unknown encoding: \" + enc);return nenc || enc;}exports.StringDecoder = StringDecoder;function StringDecoder(encoding) {this.encoding = normalizeEncoding(encoding);var nb;switch (this.encoding) {case \"utf16le\":this.text = utf16Text;this.end = utf16End;nb = 4;break;case \"utf8\":this.fillLast = utf8FillLast;nb = 4;break;case \"base64\":this.text = base64Text;this.end = base64End;nb = 3;break;default:this.write = simpleWrite;this.end = simpleEnd;return;}this.lastNeed = 0;this.lastTotal = 0;this.lastChar = Buffer.allocUnsafe(nb);}StringDecoder.prototype.write = function (buf) {if (buf.length === 0) return \"\";var r;var i;if (this.lastNeed) {r = this.fillLast(buf);if (r === undefined) return \"\";i = this.lastNeed;this.lastNeed = 0;} else {i = 0;}if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);return r || \"\";};StringDecoder.prototype.end = utf8End;StringDecoder.prototype.text = utf8Text;StringDecoder.prototype.fillLast = function (buf) {if (this.lastNeed <= buf.length) {buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);return this.lastChar.toString(this.encoding, 0, this.lastTotal);}buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);this.lastNeed -= buf.length;};function utf8CheckByte(byte) {if (byte <= 127) return 0;else if (byte >> 5 === 6) return 2;else if (byte >> 4 === 14) return 3;else if (byte >> 3 === 30) return 4;return byte >> 6 === 2 ? -1 : -2;}function utf8CheckIncomplete(self, buf, i) {var j = buf.length - 1;if (j < i) return 0;var nb = utf8CheckByte(buf[j]);if (nb >= 0) {if (nb > 0) self.lastNeed = nb - 1;return nb;}if (--j < i || nb === -2) return 0;nb = utf8CheckByte(buf[j]);if (nb >= 0) {if (nb > 0) self.lastNeed = nb - 2;return nb;}if (--j < i || nb === -2) return 0;nb = utf8CheckByte(buf[j]);if (nb >= 0) {if (nb > 0) {if (nb === 2) nb = 0;else self.lastNeed = nb - 3;}return nb;}return 0;}function utf8CheckExtraBytes(self, buf, p) {if ((buf[0] & 192) !== 128) {self.lastNeed = 0;return \"�\";}if (self.lastNeed > 1 && buf.length > 1) {if ((buf[1] & 192) !== 128) {self.lastNeed = 1;return \"�\";}if (self.lastNeed > 2 && buf.length > 2) {if ((buf[2] & 192) !== 128) {self.lastNeed = 2;return \"�\";}}}}function utf8FillLast(buf) {var p = this.lastTotal - this.lastNeed;var r = utf8CheckExtraBytes(this, buf, p);if (r !== undefined) return r;if (this.lastNeed <= buf.length) {buf.copy(this.lastChar, p, 0, this.lastNeed);return this.lastChar.toString(this.encoding, 0, this.lastTotal);}buf.copy(this.lastChar, p, 0, buf.length);this.lastNeed -= buf.length;}function utf8Text(buf, i) {var total = utf8CheckIncomplete(this, buf, i);if (!this.lastNeed) return buf.toString(\"utf8\", i);this.lastTotal = total;var end = buf.length - (total - this.lastNeed);buf.copy(this.lastChar, 0, end);return buf.toString(\"utf8\", i, end);}function utf8End(buf) {var r = buf && buf.length ? this.write(buf) : \"\";if (this.lastNeed) return r + \"�\";return r;}function utf16Text(buf, i) {if ((buf.length - i) % 2 === 0) {var r = buf.toString(\"utf16le\", i);if (r) {var c = r.charCodeAt(r.length - 1);if (c >= 55296 && c <= 56319) {this.lastNeed = 2;this.lastTotal = 4;this.lastChar[0] = buf[buf.length - 2];this.lastChar[1] = buf[buf.length - 1];return r.slice(0, -1);}}return r;}this.lastNeed = 1;this.lastTotal = 2;this.lastChar[0] = buf[buf.length - 1];return buf.toString(\"utf16le\", i, buf.length - 1);}function utf16End(buf) {var r = buf && buf.length ? this.write(buf) : \"\";if (this.lastNeed) {var end = this.lastTotal - this.lastNeed;return r + this.lastChar.toString(\"utf16le\", 0, end);}return r;}function base64Text(buf, i) {var n = (buf.length - i) % 3;if (n === 0) return buf.toString(\"base64\", i);this.lastNeed = 3 - n;this.lastTotal = 3;if (n === 1) {this.lastChar[0] = buf[buf.length - 1];} else {this.lastChar[0] = buf[buf.length - 2];this.lastChar[1] = buf[buf.length - 1];}return buf.toString(\"base64\", i, buf.length - n);}function base64End(buf) {var r = buf && buf.length ? this.write(buf) : \"\";if (this.lastNeed) return r + this.lastChar.toString(\"base64\", 0, 3 - this.lastNeed);return r;}function simpleWrite(buf) {return buf.toString(this.encoding);}function simpleEnd(buf) {return buf && buf.length ? this.write(buf) : \"\";}}, { \"safe-buffer\": 110 }], 108: [function (require, module, exports) {exports = module.exports = require(\"./lib/_stream_readable.js\");exports.Stream = exports;exports.Readable = exports;exports.Writable = require(\"./lib/_stream_writable.js\");exports.Duplex = require(\"./lib/_stream_duplex.js\");exports.Transform = require(\"./lib/_stream_transform.js\");exports.PassThrough = require(\"./lib/_stream_passthrough.js\");}, { \"./lib/_stream_duplex.js\": 98, \"./lib/_stream_passthrough.js\": 99, \"./lib/_stream_readable.js\": 100, \"./lib/_stream_transform.js\": 101, \"./lib/_stream_writable.js\": 102 }], 109: [function (require, module, exports) {\"use strict\";function ReInterval(callback, interval, args) {var self = this;this._callback = callback;this._args = args;this._interval = setInterval(callback, interval, this._args);this.reschedule = function (interval) {if (!interval) interval = self._interval;if (self._interval) clearInterval(self._interval);self._interval = setInterval(self._callback, interval, self._args);};this.clear = function () {if (self._interval) {clearInterval(self._interval);self._interval = undefined;}};this.destroy = function () {if (self._interval) {clearInterval(self._interval);}self._callback = undefined;self._interval = undefined;self._args = undefined;};}function reInterval() {if (typeof arguments[0] !== \"function\") throw new Error(\"callback needed\");if (typeof arguments[1] !== \"number\") throw new Error(\"interval needed\");var args;if (arguments.length > 0) {args = new Array(arguments.length - 2);for (var i = 0; i < args.length; i++) {args[i] = arguments[i + 2];}}return new ReInterval(arguments[0], arguments[1], args);}module.exports = reInterval;}, {}], 110: [function (require, module, exports) {var buffer = require(\"buffer\");var Buffer = buffer.Buffer;function copyProps(src, dst) {for (var key in src) {dst[key] = src[key];}}if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {module.exports = buffer;} else {copyProps(buffer, exports);exports.Buffer = SafeBuffer;}function SafeBuffer(arg, encodingOrOffset, length) {return Buffer(arg, encodingOrOffset, length);}copyProps(Buffer, SafeBuffer);SafeBuffer.from = function (arg, encodingOrOffset, length) {if (typeof arg === \"number\") {throw new TypeError(\"Argument must not be a number\");}return Buffer(arg, encodingOrOffset, length);};SafeBuffer.alloc = function (size, fill, encoding) {if (typeof size !== \"number\") {throw new TypeError(\"Argument must be a number\");}var buf = Buffer(size);if (fill !== undefined) {if (typeof encoding === \"string\") {buf.fill(fill, encoding);} else {buf.fill(fill);}} else {buf.fill(0);}return buf;};SafeBuffer.allocUnsafe = function (size) {if (typeof size !== \"number\") {throw new TypeError(\"Argument must be a number\");}return Buffer(size);};SafeBuffer.allocUnsafeSlow = function (size) {if (typeof size !== \"number\") {throw new TypeError(\"Argument must be a number\");}return buffer.SlowBuffer(size);};}, { buffer: 12 }], 111: [function (require, module, exports) {module.exports = shift;function shift(stream) {var rs = stream._readableState;if (!rs) return null;return rs.objectMode ? stream.read() : stream.read(getStateLength(rs));}function getStateLength(state) {if (state.buffer.length) {if (state.buffer.head) {return state.buffer.head.data.length;}return state.buffer[0].length;}return state.length;}}, {}], 112: [function (require, module, exports) {(function (setImmediate, clearImmediate) {var nextTick = require(\"process/browser.js\").nextTick;var apply = Function.prototype.apply;var slice = Array.prototype.slice;var immediateIds = {};var nextImmediateId = 0;exports.setTimeout = function () {return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);};exports.setInterval = function () {return new Timeout(apply.call(setInterval, window, arguments), clearInterval);};exports.clearTimeout = exports.clearInterval = function (timeout) {timeout.close();};function Timeout(id, clearFn) {this._id = id;this._clearFn = clearFn;}Timeout.prototype.unref = Timeout.prototype.ref = function () {};Timeout.prototype.close = function () {this._clearFn.call(window, this._id);};exports.enroll = function (item, msecs) {clearTimeout(item._idleTimeoutId);item._idleTimeout = msecs;};exports.unenroll = function (item) {clearTimeout(item._idleTimeoutId);item._idleTimeout = -1;};exports._unrefActive = exports.active = function (item) {clearTimeout(item._idleTimeoutId);var msecs = item._idleTimeout;if (msecs >= 0) {item._idleTimeoutId = setTimeout(function onTimeout() {if (item._onTimeout) item._onTimeout();}, msecs);}};exports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function (fn) {var id = nextImmediateId++;var args = arguments.length < 2 ? false : slice.call(arguments, 1);immediateIds[id] = true;nextTick(function onNextTick() {if (immediateIds[id]) {if (args) {fn.apply(null, args);} else {fn.call(null);}exports.clearImmediate(id);}});return id;};exports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function (id) {delete immediateIds[id];};}).call(this, require(\"timers\").setImmediate, require(\"timers\").clearImmediate);}, { \"process/browser.js\": 92, timers: 112 }], 113: [function (require, module, exports) {\"use strict\";var punycode = require(\"punycode\");var util = require(\"./util\");exports.parse = urlParse;exports.resolve = urlResolve;exports.resolveObject = urlResolveObject;exports.format = urlFormat;exports.Url = Url;function Url() {this.protocol = null;this.slashes = null;this.auth = null;this.host = null;this.port = null;this.hostname = null;this.hash = null;this.search = null;this.query = null;this.pathname = null;this.path = null;this.href = null;}var protocolPattern = /^([a-z0-9.+-]+:)/i,portPattern = /:[0-9]*$/,simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,delims = [\"<\", \">\", '\"', \"`\", \" \", \"\\r\", \"\\n\", \"\\t\"],unwise = [\"{\", \"}\", \"|\", \"\\\\\", \"^\", \"`\"].concat(delims),autoEscape = [\"'\"].concat(unwise),nonHostChars = [\"%\", \"/\", \"?\", \";\", \"#\"].concat(autoEscape),hostEndingChars = [\"/\", \"?\", \"#\"],hostnameMaxLen = 255,hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,unsafeProtocol = { javascript: true, \"javascript:\": true },hostlessProtocol = { javascript: true, \"javascript:\": true },slashedProtocol = { http: true, https: true, ftp: true, gopher: true, file: true, \"http:\": true, \"https:\": true, \"ftp:\": true, \"gopher:\": true, \"file:\": true },querystring = require(\"querystring\");function urlParse(url, parseQueryString, slashesDenoteHost) {if (url && util.isObject(url) && url instanceof Url) return url;var u = new Url();u.parse(url, parseQueryString, slashesDenoteHost);return u;}Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {if (!util.isString(url)) {throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);}var queryIndex = url.indexOf(\"?\"),splitter = queryIndex !== -1 && queryIndex < url.indexOf(\"#\") ? \"?\" : \"#\",uSplit = url.split(splitter),slashRegex = /\\\\/g;uSplit[0] = uSplit[0].replace(slashRegex, \"/\");url = uSplit.join(splitter);var rest = url;rest = rest.trim();if (!slashesDenoteHost && url.split(\"#\").length === 1) {var simplePath = simplePathPattern.exec(rest);if (simplePath) {this.path = rest;this.href = rest;this.pathname = simplePath[1];if (simplePath[2]) {this.search = simplePath[2];if (parseQueryString) {this.query = querystring.parse(this.search.substr(1));} else {this.query = this.search.substr(1);}} else if (parseQueryString) {this.search = \"\";this.query = {};}return this;}}var proto = protocolPattern.exec(rest);if (proto) {proto = proto[0];var lowerProto = proto.toLowerCase();this.protocol = lowerProto;rest = rest.substr(proto.length);}if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {var slashes = rest.substr(0, 2) === \"//\";if (slashes && !(proto && hostlessProtocol[proto])) {rest = rest.substr(2);this.slashes = true;}}if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {var hostEnd = -1;for (var i = 0; i < hostEndingChars.length; i++) {var hec = rest.indexOf(hostEndingChars[i]);if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;}var auth, atSign;if (hostEnd === -1) {atSign = rest.lastIndexOf(\"@\");} else {atSign = rest.lastIndexOf(\"@\", hostEnd);}if (atSign !== -1) {auth = rest.slice(0, atSign);rest = rest.slice(atSign + 1);this.auth = decodeURIComponent(auth);}hostEnd = -1;for (var i = 0; i < nonHostChars.length; i++) {var hec = rest.indexOf(nonHostChars[i]);if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;}if (hostEnd === -1) hostEnd = rest.length;this.host = rest.slice(0, hostEnd);rest = rest.slice(hostEnd);this.parseHost();this.hostname = this.hostname || \"\";var ipv6Hostname = this.hostname[0] === \"[\" && this.hostname[this.hostname.length - 1] === \"]\";if (!ipv6Hostname) {var hostparts = this.hostname.split(/\\./);for (var i = 0, l = hostparts.length; i < l; i++) {var part = hostparts[i];if (!part) continue;if (!part.match(hostnamePartPattern)) {var newpart = \"\";for (var j = 0, k = part.length; j < k; j++) {if (part.charCodeAt(j) > 127) {newpart += \"x\";} else {newpart += part[j];}}if (!newpart.match(hostnamePartPattern)) {var validParts = hostparts.slice(0, i);var notHost = hostparts.slice(i + 1);var bit = part.match(hostnamePartStart);if (bit) {validParts.push(bit[1]);notHost.unshift(bit[2]);}if (notHost.length) {rest = \"/\" + notHost.join(\".\") + rest;}this.hostname = validParts.join(\".\");break;}}}}if (this.hostname.length > hostnameMaxLen) {this.hostname = \"\";} else {this.hostname = this.hostname.toLowerCase();}if (!ipv6Hostname) {this.hostname = punycode.toASCII(this.hostname);}var p = this.port ? \":\" + this.port : \"\";var h = this.hostname || \"\";this.host = h + p;this.href += this.host;if (ipv6Hostname) {this.hostname = this.hostname.substr(1, this.hostname.length - 2);if (rest[0] !== \"/\") {rest = \"/\" + rest;}}}if (!unsafeProtocol[lowerProto]) {for (var i = 0, l = autoEscape.length; i < l; i++) {var ae = autoEscape[i];if (rest.indexOf(ae) === -1) continue;var esc = encodeURIComponent(ae);if (esc === ae) {esc = escape(ae);}rest = rest.split(ae).join(esc);}}var hash = rest.indexOf(\"#\");if (hash !== -1) {this.hash = rest.substr(hash);rest = rest.slice(0, hash);}var qm = rest.indexOf(\"?\");if (qm !== -1) {this.search = rest.substr(qm);this.query = rest.substr(qm + 1);if (parseQueryString) {this.query = querystring.parse(this.query);}rest = rest.slice(0, qm);} else if (parseQueryString) {this.search = \"\";this.query = {};}if (rest) this.pathname = rest;if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {this.pathname = \"/\";}if (this.pathname || this.search) {var p = this.pathname || \"\";var s = this.search || \"\";this.path = p + s;}this.href = this.format();return this;};function urlFormat(obj) {if (util.isString(obj)) obj = urlParse(obj);if (!(obj instanceof Url)) return Url.prototype.format.call(obj);return obj.format();}Url.prototype.format = function () {var auth = this.auth || \"\";if (auth) {auth = encodeURIComponent(auth);auth = auth.replace(/%3A/i, \":\");auth += \"@\";}var protocol = this.protocol || \"\",pathname = this.pathname || \"\",hash = this.hash || \"\",host = false,query = \"\";if (this.host) {host = auth + this.host;} else if (this.hostname) {host = auth + (this.hostname.indexOf(\":\") === -1 ? this.hostname : \"[\" + this.hostname + \"]\");if (this.port) {host += \":\" + this.port;}}if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {query = querystring.stringify(this.query);}var search = this.search || query && \"?\" + query || \"\";if (protocol && protocol.substr(-1) !== \":\") protocol += \":\";if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {host = \"//\" + (host || \"\");if (pathname && pathname.charAt(0) !== \"/\") pathname = \"/\" + pathname;} else if (!host) {host = \"\";}if (hash && hash.charAt(0) !== \"#\") hash = \"#\" + hash;if (search && search.charAt(0) !== \"?\") search = \"?\" + search;pathname = pathname.replace(/[?#]/g, function (match) {return encodeURIComponent(match);});search = search.replace(\"#\", \"%23\");return protocol + host + pathname + search + hash;};function urlResolve(source, relative) {return urlParse(source, false, true).resolve(relative);}Url.prototype.resolve = function (relative) {return this.resolveObject(urlParse(relative, false, true)).format();};function urlResolveObject(source, relative) {if (!source) return relative;return urlParse(source, false, true).resolveObject(relative);}Url.prototype.resolveObject = function (relative) {if (util.isString(relative)) {var rel = new Url();rel.parse(relative, false, true);relative = rel;}var result = new Url();var tkeys = Object.keys(this);for (var tk = 0; tk < tkeys.length; tk++) {var tkey = tkeys[tk];result[tkey] = this[tkey];}result.hash = relative.hash;if (relative.href === \"\") {result.href = result.format();return result;}if (relative.slashes && !relative.protocol) {var rkeys = Object.keys(relative);for (var rk = 0; rk < rkeys.length; rk++) {var rkey = rkeys[rk];if (rkey !== \"protocol\") result[rkey] = relative[rkey];}if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {result.path = result.pathname = \"/\";}result.href = result.format();return result;}if (relative.protocol && relative.protocol !== result.protocol) {if (!slashedProtocol[relative.protocol]) {var keys = Object.keys(relative);for (var v = 0; v < keys.length; v++) {var k = keys[v];result[k] = relative[k];}result.href = result.format();return result;}result.protocol = relative.protocol;if (!relative.host && !hostlessProtocol[relative.protocol]) {var relPath = (relative.pathname || \"\").split(\"/\");while (relPath.length && !(relative.host = relPath.shift())) {;}if (!relative.host) relative.host = \"\";if (!relative.hostname) relative.hostname = \"\";if (relPath[0] !== \"\") relPath.unshift(\"\");if (relPath.length < 2) relPath.unshift(\"\");result.pathname = relPath.join(\"/\");} else {result.pathname = relative.pathname;}result.search = relative.search;result.query = relative.query;result.host = relative.host || \"\";result.auth = relative.auth;result.hostname = relative.hostname || relative.host;result.port = relative.port;if (result.pathname || result.search) {var p = result.pathname || \"\";var s = result.search || \"\";result.path = p + s;}result.slashes = result.slashes || relative.slashes;result.href = result.format();return result;}var isSourceAbs = result.pathname && result.pathname.charAt(0) === \"/\",isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === \"/\",mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,removeAllDots = mustEndAbs,srcPath = result.pathname && result.pathname.split(\"/\") || [],relPath = relative.pathname && relative.pathname.split(\"/\") || [],psychotic = result.protocol && !slashedProtocol[result.protocol];if (psychotic) {result.hostname = \"\";result.port = null;if (result.host) {if (srcPath[0] === \"\") srcPath[0] = result.host;else srcPath.unshift(result.host);}result.host = \"\";if (relative.protocol) {relative.hostname = null;relative.port = null;if (relative.host) {if (relPath[0] === \"\") relPath[0] = relative.host;else relPath.unshift(relative.host);}relative.host = null;}mustEndAbs = mustEndAbs && (relPath[0] === \"\" || srcPath[0] === \"\");}if (isRelAbs) {result.host = relative.host || relative.host === \"\" ? relative.host : result.host;result.hostname = relative.hostname || relative.hostname === \"\" ? relative.hostname : result.hostname;result.search = relative.search;result.query = relative.query;srcPath = relPath;} else if (relPath.length) {if (!srcPath) srcPath = [];srcPath.pop();srcPath = srcPath.concat(relPath);result.search = relative.search;result.query = relative.query;} else if (!util.isNullOrUndefined(relative.search)) {if (psychotic) {result.hostname = result.host = srcPath.shift();var authInHost = result.host && result.host.indexOf(\"@\") > 0 ? result.host.split(\"@\") : false;if (authInHost) {result.auth = authInHost.shift();result.host = result.hostname = authInHost.shift();}}result.search = relative.search;result.query = relative.query;if (!util.isNull(result.pathname) || !util.isNull(result.search)) {result.path = (result.pathname ? result.pathname : \"\") + (result.search ? result.search : \"\");}result.href = result.format();return result;}if (!srcPath.length) {result.pathname = null;if (result.search) {result.path = \"/\" + result.search;} else {result.path = null;}result.href = result.format();return result;}var last = srcPath.slice(-1)[0];var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === \".\" || last === \"..\") || last === \"\";var up = 0;for (var i = srcPath.length; i >= 0; i--) {last = srcPath[i];if (last === \".\") {srcPath.splice(i, 1);} else if (last === \"..\") {srcPath.splice(i, 1);up++;} else if (up) {srcPath.splice(i, 1);up--;}}if (!mustEndAbs && !removeAllDots) {for (; up--; up) {srcPath.unshift(\"..\");}}if (mustEndAbs && srcPath[0] !== \"\" && (!srcPath[0] || srcPath[0].charAt(0) !== \"/\")) {srcPath.unshift(\"\");}if (hasTrailingSlash && srcPath.join(\"/\").substr(-1) !== \"/\") {srcPath.push(\"\");}var isAbsolute = srcPath[0] === \"\" || srcPath[0] && srcPath[0].charAt(0) === \"/\";if (psychotic) {result.hostname = result.host = isAbsolute ? \"\" : srcPath.length ? srcPath.shift() : \"\";var authInHost = result.host && result.host.indexOf(\"@\") > 0 ? result.host.split(\"@\") : false;if (authInHost) {result.auth = authInHost.shift();result.host = result.hostname = authInHost.shift();}}mustEndAbs = mustEndAbs || result.host && srcPath.length;if (mustEndAbs && !isAbsolute) {srcPath.unshift(\"\");}if (!srcPath.length) {result.pathname = null;result.path = null;} else {result.pathname = srcPath.join(\"/\");}if (!util.isNull(result.pathname) || !util.isNull(result.search)) {result.path = (result.pathname ? result.pathname : \"\") + (result.search ? result.search : \"\");}result.auth = relative.auth || result.auth;result.slashes = result.slashes || relative.slashes;result.href = result.format();return result;};Url.prototype.parseHost = function () {var host = this.host;var port = portPattern.exec(host);if (port) {port = port[0];if (port !== \":\") {this.port = port.substr(1);}host = host.substr(0, host.length - port.length);}if (host) this.hostname = host;};}, { \"./util\": 114, punycode: 93, querystring: 96 }], 114: [function (require, module, exports) {\"use strict\";module.exports = { isString: function isString(arg) {return typeof arg === \"string\";}, isObject: function isObject(arg) {return typeof arg === \"object\" && arg !== null;}, isNull: function isNull(arg) {return arg === null;}, isNullOrUndefined: function isNullOrUndefined(arg) {return arg == null;} };}, {}], 115: [function (require, module, exports) {(function (global) {module.exports = deprecate;function deprecate(fn, msg) {if (config(\"noDeprecation\")) {return fn;}var warned = false;function deprecated() {if (!warned) {if (config(\"throwDeprecation\")) {throw new Error(msg);} else if (config(\"traceDeprecation\")) {console.trace(msg);} else {console.warn(__f__(msg, \" at components\\\\mqtt\\\\mqtt.js:1\"));}warned = true;}return fn.apply(this, arguments);}return deprecated;}function config(name) {try {if (!global.localStorage) return false;} catch (_) {return false;}var val = global.localStorage[name];if (null == val) return false;return String(val).toLowerCase() === \"true\";}}).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});}, {}], 116: [function (require, module, exports) {module.exports = function isBuffer(arg) {return arg && typeof arg === \"object\" && typeof arg.copy === \"function\" && typeof arg.fill === \"function\" && typeof arg.readUInt8 === \"function\";};}, {}], 117: [function (require, module, exports) {(function (process, global) {var formatRegExp = /%[sdj%]/g;exports.format = function (f) {if (!isString(f)) {var objects = [];for (var i = 0; i < arguments.length; i++) {objects.push(inspect(arguments[i]));}return objects.join(\" \");}var i = 1;var args = arguments;var len = args.length;var str = String(f).replace(formatRegExp, function (x) {if (x === \"%%\") return \"%\";if (i >= len) return x;switch (x) {case \"%s\":return String(args[i++]);case \"%d\":return Number(args[i++]);case \"%j\":try {return JSON.stringify(args[i++]);} catch (_) {return \"[Circular]\";}default:return x;}});for (var x = args[i]; i < len; x = args[++i]) {if (isNull(x) || !isObject(x)) {str += \" \" + x;} else {str += \" \" + inspect(x);}}return str;};exports.deprecate = function (fn, msg) {if (isUndefined(global.process)) {return function () {return exports.deprecate(fn, msg).apply(this, arguments);};}if (process.noDeprecation === true) {return fn;}var warned = false;function deprecated() {if (!warned) {if (process.throwDeprecation) {throw new Error(msg);} else if (process.traceDeprecation) {console.trace(msg);} else {console.error(__f__(msg, \" at components\\\\mqtt\\\\mqtt.js:1\"));}warned = true;}return fn.apply(this, arguments);}return deprecated;};var debugs = {};var debugEnviron;exports.debuglog = function (set) {if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || \"\";set = set.toUpperCase();if (!debugs[set]) {if (new RegExp(\"\\\\b\" + set + \"\\\\b\", \"i\").test(debugEnviron)) {var pid = process.pid;debugs[set] = function () {var msg = exports.format.apply(exports, arguments);console.error(__f__(\"%s %d: %s\", set, pid, msg, \" at components\\\\mqtt\\\\mqtt.js:1\"));};} else {debugs[set] = function () {};}}return debugs[set];};function inspect(obj, opts) {var ctx = { seen: [], stylize: stylizeNoColor };if (arguments.length >= 3) ctx.depth = arguments[2];if (arguments.length >= 4) ctx.colors = arguments[3];if (isBoolean(opts)) {ctx.showHidden = opts;} else if (opts) {exports._extend(ctx, opts);}if (isUndefined(ctx.showHidden)) ctx.showHidden = false;if (isUndefined(ctx.depth)) ctx.depth = 2;if (isUndefined(ctx.colors)) ctx.colors = false;if (isUndefined(ctx.customInspect)) ctx.customInspect = true;if (ctx.colors) ctx.stylize = stylizeWithColor;return formatValue(ctx, obj, ctx.depth);}exports.inspect = inspect;inspect.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] };inspect.styles = { special: \"cyan\", number: \"yellow\", boolean: \"yellow\", undefined: \"grey\", null: \"bold\", string: \"green\", date: \"magenta\", regexp: \"red\" };function stylizeWithColor(str, styleType) {var style = inspect.styles[styleType];if (style) {return \"\u001b[\" + inspect.colors[style][0] + \"m\" + str + \"\u001b[\" + inspect.colors[style][1] + \"m\";} else {return str;}}function stylizeNoColor(str, styleType) {return str;}function arrayToHash(array) {var hash = {};array.forEach(function (val, idx) {hash[val] = true;});return hash;}function formatValue(ctx, value, recurseTimes) {if (ctx.customInspect && value && isFunction(value.inspect) && value.inspect !== exports.inspect && !(value.constructor && value.constructor.prototype === value)) {var ret = value.inspect(recurseTimes, ctx);if (!isString(ret)) {ret = formatValue(ctx, ret, recurseTimes);}return ret;}var primitive = formatPrimitive(ctx, value);if (primitive) {return primitive;}var keys = Object.keys(value);var visibleKeys = arrayToHash(keys);if (ctx.showHidden) {keys = Object.getOwnPropertyNames(value);}if (isError(value) && (keys.indexOf(\"message\") >= 0 || keys.indexOf(\"description\") >= 0)) {return formatError(value);}if (keys.length === 0) {if (isFunction(value)) {var name = value.name ? \": \" + value.name : \"\";return ctx.stylize(\"[Function\" + name + \"]\", \"special\");}if (isRegExp(value)) {return ctx.stylize(RegExp.prototype.toString.call(value), \"regexp\");}if (isDate(value)) {return ctx.stylize(Date.prototype.toString.call(value), \"date\");}if (isError(value)) {return formatError(value);}}var base = \"\",array = false,braces = [\"{\", \"}\"];if (isArray(value)) {array = true;braces = [\"[\", \"]\"];}if (isFunction(value)) {var n = value.name ? \": \" + value.name : \"\";base = \" [Function\" + n + \"]\";}if (isRegExp(value)) {base = \" \" + RegExp.prototype.toString.call(value);}if (isDate(value)) {base = \" \" + Date.prototype.toUTCString.call(value);}if (isError(value)) {base = \" \" + formatError(value);}if (keys.length === 0 && (!array || value.length == 0)) {return braces[0] + base + braces[1];}if (recurseTimes < 0) {if (isRegExp(value)) {return ctx.stylize(RegExp.prototype.toString.call(value), \"regexp\");} else {return ctx.stylize(\"[Object]\", \"special\");}}ctx.seen.push(value);var output;if (array) {output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);} else {output = keys.map(function (key) {return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);});}ctx.seen.pop();return reduceToSingleString(output, base, braces);}function formatPrimitive(ctx, value) {if (isUndefined(value)) return ctx.stylize(\"undefined\", \"undefined\");if (isString(value)) {var simple = \"'\" + JSON.stringify(value).replace(/^\"|\"$/g, \"\").replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + \"'\";return ctx.stylize(simple, \"string\");}if (isNumber(value)) return ctx.stylize(\"\" + value, \"number\");if (isBoolean(value)) return ctx.stylize(\"\" + value, \"boolean\");if (isNull(value)) return ctx.stylize(\"null\", \"null\");}function formatError(value) {return \"[\" + Error.prototype.toString.call(value) + \"]\";}function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {var output = [];for (var i = 0, l = value.length; i < l; ++i) {if (hasOwnProperty(value, String(i))) {output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));} else {output.push(\"\");}}keys.forEach(function (key) {if (!key.match(/^\\d+$/)) {output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));}});return output;}function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {var name, str, desc;desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };if (desc.get) {if (desc.set) {str = ctx.stylize(\"[Getter/Setter]\", \"special\");} else {str = ctx.stylize(\"[Getter]\", \"special\");}} else {if (desc.set) {str = ctx.stylize(\"[Setter]\", \"special\");}}if (!hasOwnProperty(visibleKeys, key)) {name = \"[\" + key + \"]\";}if (!str) {if (ctx.seen.indexOf(desc.value) < 0) {if (isNull(recurseTimes)) {str = formatValue(ctx, desc.value, null);} else {str = formatValue(ctx, desc.value, recurseTimes - 1);}if (str.indexOf(\"\\n\") > -1) {if (array) {str = str.split(\"\\n\").map(function (line) {return \"  \" + line;}).join(\"\\n\").substr(2);} else {str = \"\\n\" + str.split(\"\\n\").map(function (line) {return \"   \" + line;}).join(\"\\n\");}}} else {str = ctx.stylize(\"[Circular]\", \"special\");}}if (isUndefined(name)) {if (array && key.match(/^\\d+$/)) {return str;}name = JSON.stringify(\"\" + key);if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {name = name.substr(1, name.length - 2);name = ctx.stylize(name, \"name\");} else {name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");name = ctx.stylize(name, \"string\");}}return name + \": \" + str;}function reduceToSingleString(output, base, braces) {var numLinesEst = 0;var length = output.reduce(function (prev, cur) {numLinesEst++;if (cur.indexOf(\"\\n\") >= 0) numLinesEst++;return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1;}, 0);if (length > 60) {return braces[0] + (base === \"\" ? \"\" : base + \"\\n \") + \" \" + output.join(\",\\n  \") + \" \" + braces[1];}return braces[0] + base + \" \" + output.join(\", \") + \" \" + braces[1];}function isArray(ar) {return Array.isArray(ar);}exports.isArray = isArray;function isBoolean(arg) {return typeof arg === \"boolean\";}exports.isBoolean = isBoolean;function isNull(arg) {return arg === null;}exports.isNull = isNull;function isNullOrUndefined(arg) {return arg == null;}exports.isNullOrUndefined = isNullOrUndefined;function isNumber(arg) {return typeof arg === \"number\";}exports.isNumber = isNumber;function isString(arg) {return typeof arg === \"string\";}exports.isString = isString;function isSymbol(arg) {return typeof arg === \"symbol\";}exports.isSymbol = isSymbol;function isUndefined(arg) {return arg === void 0;}exports.isUndefined = isUndefined;function isRegExp(re) {return isObject(re) && objectToString(re) === \"[object RegExp]\";}exports.isRegExp = isRegExp;function isObject(arg) {return typeof arg === \"object\" && arg !== null;}exports.isObject = isObject;function isDate(d) {return isObject(d) && objectToString(d) === \"[object Date]\";}exports.isDate = isDate;function isError(e) {return isObject(e) && (objectToString(e) === \"[object Error]\" || e instanceof Error);}exports.isError = isError;function isFunction(arg) {return typeof arg === \"function\";}exports.isFunction = isFunction;function isPrimitive(arg) {return arg === null || typeof arg === \"boolean\" || typeof arg === \"number\" || typeof arg === \"string\" || typeof arg === \"symbol\" || typeof arg === \"undefined\";}exports.isPrimitive = isPrimitive;exports.isBuffer = require(\"./support/isBuffer\");function objectToString(o) {return Object.prototype.toString.call(o);}function pad(n) {return n < 10 ? \"0\" + n.toString(10) : n.toString(10);}var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];function timestamp() {var d = new Date();var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(\":\");return [d.getDate(), months[d.getMonth()], time].join(\" \");}exports.log = function () {console.log(__f__(\"%s - %s\", timestamp(), exports.format.apply(exports, arguments), \" at components\\\\mqtt\\\\mqtt.js:1\"));};exports.inherits = require(\"inherits\");exports._extend = function (origin, add) {if (!add || !isObject(add)) return origin;var keys = Object.keys(add);var i = keys.length;while (i--) {origin[keys[i]] = add[keys[i]];}return origin;};function hasOwnProperty(obj, prop) {return Object.prototype.hasOwnProperty.call(obj, prop);}}).call(this, require(\"_process\"), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});}, { \"./support/isBuffer\": 116, _process: 92, inherits: 80 }], 118: [function (require, module, exports) {(function (process, global) {\"use strict\";var Transform = require(\"readable-stream\").Transform;var duplexify = require(\"duplexify\");var WS = require(\"ws\");var Buffer = require(\"safe-buffer\").Buffer;module.exports = WebSocketStream;function buildProxy(options, socketWrite, socketEnd) {var proxy = new Transform({ objectMode: options.objectMode });proxy._write = socketWrite;proxy._flush = socketEnd;return proxy;}function WebSocketStream(target, protocols, options) {var stream, socket;var isBrowser = process.title === \"browser\";var isNative = !!global.WebSocket;var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode;if (protocols && !Array.isArray(protocols) && \"object\" === typeof protocols) {options = protocols;protocols = null;if (typeof options.protocol === \"string\" || Array.isArray(options.protocol)) {protocols = options.protocol;}}if (!options) options = {};if (options.objectMode === undefined) {options.objectMode = !(options.binary === true || options.binary === undefined);}var proxy = buildProxy(options, socketWrite, socketEnd);if (!options.objectMode) {proxy._writev = writev;}var bufferSize = options.browserBufferSize || 1024 * 512;var bufferTimeout = options.browserBufferTimeout || 1e3;if (typeof target === \"object\") {socket = target;} else {if (isNative && isBrowser) {socket = new WS(target, protocols);} else {socket = new WS(target, protocols, options);}socket.binaryType = \"arraybuffer\";}if (socket.readyState === socket.OPEN) {stream = proxy;} else {stream = duplexify.obj();socket.onopen = onopen;}stream.socket = socket;socket.onclose = onclose;socket.onerror = onerror;socket.onmessage = onmessage;proxy.on(\"close\", destroy);var coerceToBuffer = !options.objectMode;function socketWriteNode(chunk, enc, next) {if (socket.readyState !== socket.OPEN) {next();return;}if (coerceToBuffer && typeof chunk === \"string\") {chunk = Buffer.from(chunk, \"utf8\");}socket.send(chunk, next);}function socketWriteBrowser(chunk, enc, next) {if (socket.bufferedAmount > bufferSize) {setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next);return;}if (coerceToBuffer && typeof chunk === \"string\") {chunk = Buffer.from(chunk, \"utf8\");}try {socket.send(chunk);} catch (err) {return next(err);}next();}function socketEnd(done) {socket.close();done();}function onopen() {stream.setReadable(proxy);stream.setWritable(proxy);stream.emit(\"connect\");}function onclose() {stream.end();stream.destroy();}function onerror(err) {stream.destroy(err);}function onmessage(event) {var data = event.data;if (data instanceof ArrayBuffer) data = Buffer.from(data);else data = Buffer.from(data, \"utf8\");proxy.push(data);}function destroy() {socket.close();}function writev(chunks, cb) {var buffers = new Array(chunks.length);for (var i = 0; i < chunks.length; i++) {if (typeof chunks[i].chunk === \"string\") {buffers[i] = Buffer.from(chunks[i], \"utf8\");} else {buffers[i] = chunks[i].chunk;}}this._write(Buffer.concat(buffers), \"binary\", cb);}return stream;}}).call(this, require(\"_process\"), typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});}, { _process: 92, duplexify: 17, \"readable-stream\": 108, \"safe-buffer\": 110, ws: 119 }], 119: [function (require, module, exports) {var ws = null;if (typeof WebSocket !== \"undefined\") {ws = WebSocket;} else if (typeof MozWebSocket !== \"undefined\") {ws = MozWebSocket;} else if (typeof window !== \"undefined\") {ws = window.WebSocket || window.MozWebSocket;}module.exports = ws;}, {}], 120: [function (require, module, exports) {module.exports = wrappy;function wrappy(fn, cb) {if (fn && cb) return wrappy(fn)(cb);if (typeof fn !== \"function\") throw new TypeError(\"need wrapper function\");Object.keys(fn).forEach(function (k) {wrapper[k] = fn[k];});return wrapper;function wrapper() {var args = new Array(arguments.length);for (var i = 0; i < args.length; i++) {args[i] = arguments[i];}var ret = fn.apply(this, args);var cb = args[args.length - 1];if (typeof ret === \"function\" && ret !== cb) {Object.keys(cb).forEach(function (k) {ret[k] = cb[k];});}return ret;}}}, {}], 121: [function (require, module, exports) {module.exports = extend;var hasOwnProperty = Object.prototype.hasOwnProperty;function extend() {var target = {};for (var i = 0; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;}}, {}] }, {}, [9])(9);});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! (webpack)/buildin/global.js */ 2), __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9tcXR0L21xdHQuanMiXSwibmFtZXMiOlsiZiIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZpbmUiLCJyIiwiZSIsIm4iLCJ0IiwibyIsImkiLCJjIiwicmVxdWlyZSIsInUiLCJhIiwiRXJyb3IiLCJjb2RlIiwicCIsImNhbGwiLCJsZW5ndGgiLCJwcm9jZXNzIiwiZ2xvYmFsIiwiZXZlbnRzIiwiU3RvcmUiLCJtcXR0UGFja2V0IiwiV3JpdGFibGUiLCJpbmhlcml0cyIsInJlSW50ZXJ2YWwiLCJ2YWxpZGF0aW9ucyIsInh0ZW5kIiwic2V0SW1tZWRpYXRlIiwiY2FsbGJhY2siLCJuZXh0VGljayIsImRlZmF1bHRDb25uZWN0T3B0aW9ucyIsImtlZXBhbGl2ZSIsInJlc2NoZWR1bGVQaW5ncyIsInByb3RvY29sSWQiLCJwcm90b2NvbFZlcnNpb24iLCJyZWNvbm5lY3RQZXJpb2QiLCJjb25uZWN0VGltZW91dCIsImNsZWFuIiwicmVzdWJzY3JpYmUiLCJlcnJvcnMiLCJkZWZhdWx0SWQiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJzZW5kUGFja2V0IiwiY2xpZW50IiwicGFja2V0IiwiY2IiLCJlbWl0IiwicmVzdWx0Iiwid3JpdGVUb1N0cmVhbSIsInN0cmVhbSIsIm9wdGlvbnMiLCJvbmNlIiwiZmx1c2giLCJxdWV1ZSIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwibWVzc2FnZUlkIiwiZmx1c2hWb2xhdGlsZSIsInZvbGF0aWxlIiwic3RvcmVBbmRTZW5kIiwiY2JTdG9yZVB1dCIsIm91dGdvaW5nU3RvcmUiLCJwdXQiLCJzdG9yZWRQYWNrZXQiLCJlcnIiLCJub3AiLCJNcXR0Q2xpZW50Iiwic3RyZWFtQnVpbGRlciIsImsiLCJ0aGF0IiwiY2xpZW50SWQiLCJjdXN0b21IYW5kbGVBY2tzIiwiYXJndW1lbnRzIiwiaW5jb21pbmdTdG9yZSIsInF1ZXVlUW9TWmVybyIsInVuZGVmaW5lZCIsIl9yZXN1YnNjcmliZVRvcGljcyIsIm1lc3NhZ2VJZFRvVG9waWMiLCJwaW5nVGltZXIiLCJjb25uZWN0ZWQiLCJkaXNjb25uZWN0aW5nIiwiY29ubmFja1RpbWVyIiwicmVjb25uZWN0VGltZXIiLCJfc3RvcmVQcm9jZXNzaW5nIiwiX3BhY2tldElkc0R1cmluZ1N0b3JlUHJvY2Vzc2luZyIsIm5leHRJZCIsIm1heCIsImZsb29yIiwib3V0Z29pbmciLCJfZmlyc3RDb25uZWN0aW9uIiwib24iLCJjbGVhclRpbWVvdXQiLCJkZWxpdmVyIiwiZW50cnkiLCJzaGlmdCIsIl9zZW5kUGFja2V0IiwiY2xlYXIiLCJfc2V0dXBSZWNvbm5lY3QiLCJFdmVudEVtaXR0ZXIiLCJfc2V0dXBTdHJlYW0iLCJwcm90b3R5cGUiLCJjb25uZWN0UGFja2V0Iiwid3JpdGFibGUiLCJwYXJzZXIiLCJjb21wbGV0ZVBhcnNlIiwicGFja2V0cyIsIl9jbGVhclJlY29ubmVjdCIsInB1c2giLCJuZXh0VGlja1dvcmsiLCJ3b3JrIiwiZG9uZSIsIl9oYW5kbGVQYWNrZXQiLCJfd3JpdGUiLCJidWYiLCJlbmMiLCJwYXJzZSIsInBpcGUiLCJjcmVhdGUiLCJjbWQiLCJiaW5kIiwicHJvcGVydGllcyIsImF1dGhlbnRpY2F0aW9uTWV0aG9kIiwiYXV0aGVudGljYXRpb25EYXRhIiwiYXV0aFBhY2tldCIsInJlYXNvbkNvZGUiLCJzZXRNYXhMaXN0ZW5lcnMiLCJzZXRUaW1lb3V0IiwiX2NsZWFuVXAiLCJtYXhpbXVtUGFja2V0U2l6ZSIsImVuZCIsInJlYXNvblN0cmluZyIsIl9oYW5kbGVQdWJsaXNoIiwiX2hhbmRsZUFjayIsIl9oYW5kbGVQdWJyZWwiLCJfaGFuZGxlQ29ubmFjayIsIl9oYW5kbGVQaW5ncmVzcCIsIl9oYW5kbGVEaXNjb25uZWN0IiwiX2NoZWNrRGlzY29ubmVjdGluZyIsInB1Ymxpc2giLCJ0b3BpYyIsIm1lc3NhZ2UiLCJvcHRzIiwiZGVmYXVsdE9wdHMiLCJxb3MiLCJyZXRhaW4iLCJkdXAiLCJwYXlsb2FkIiwiX25leHRJZCIsInRvcGljQWxpYXMiLCJ0b3BpY0FsaWFzTWF4aW11bSIsIl9zdG9yZVBhY2tldCIsInN1YnNjcmliZSIsImFyZ3MiLCJBcnJheSIsInN1YnMiLCJvYmoiLCJwb3AiLCJpbnZhbGlkVG9waWMiLCJ2ZXJzaW9uIiwidmFsaWRhdGVUb3BpY3MiLCJubCIsInJhcCIsInJoIiwiaXNBcnJheSIsImhhc093blByb3BlcnR5IiwiY3VycmVudE9wdHMiLCJzdWJzY3JpcHRpb25zIiwidG9waWNzIiwic3ViIiwiZ3JhbnRlZCIsInVuc3Vic2NyaWJlIiwidW5zdWJzY3JpcHRpb25zIiwiZm9yY2UiLCJjbG9zZVN0b3JlcyIsImRpc2Nvbm5lY3RlZCIsImNsb3NlIiwiYXBwbHkiLCJfZGVmZXJyZWRSZWNvbm5lY3QiLCJmaW5pc2giLCJyZW1vdmVPdXRnb2luZ01lc3NhZ2UiLCJtaWQiLCJkZWwiLCJyZWNvbm5lY3QiLCJfcmVjb25uZWN0IiwicmVjb25uZWN0aW5nIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiZm9yY2VkIiwiZGVzdHJveSIsInJlbW92ZUxpc3RlbmVyIiwiX3NoaWZ0UGluZ0ludGVydmFsIiwiX3NldHVwUGluZ1RpbWVyIiwicGluZ1Jlc3AiLCJfY2hlY2tQaW5nIiwicmVzY2hlZHVsZSIsInJjIiwicmV0dXJuQ29kZSIsInNlcnZlcktlZXBBbGl2ZSIsIl9vbkNvbm5lY3QiLCJ2YWxpZFJlYXNvbkNvZGVzIiwiZXJyb3IiLCJpbmRleE9mIiwiaGFuZGxlTWVzc2FnZSIsInR5cGUiLCJyZXNwb25zZSIsInB1YmFja1JDIiwicHVicmVjUkMiLCJncmFudGVkSSIsImNvbXAiLCJnZXQiLCJwdWIiLCJpZCIsImdldExhc3RNZXNzYWdlSWQiLCJfcmVzdWJzY3JpYmUiLCJjb25uYWNrIiwiX3Jlc3Vic2NyaWJlVG9waWNzS2V5cyIsInNlc3Npb25QcmVzZW50IiwidG9waWNJIiwicmVzdWJzY3JpYmVUb3BpYyIsInN0YXJ0U3RyZWFtUHJvY2VzcyIsIm91dFN0b3JlIiwiY3JlYXRlU3RyZWFtIiwiY2xlYXJTdG9yZVByb2Nlc3NpbmciLCJyZW1vdmUiLCJzdG9yZURlbGl2ZXIiLCJyZWFkIiwic3RhdHVzIiwiYWxsUHJvY2Vzc2VkIiwic2VsZiIsIndpbmRvdyIsIl9wcm9jZXNzIiwicmVpbnRlcnZhbCIsIkJ1ZmZlciIsIlRyYW5zZm9ybSIsImR1cGxleGlmeSIsImJhc2U2NCIsIm15IiwicHJveHkiLCJpc0luaXRpYWxpemVkIiwiYnVpbGRQcm94eSIsImNodW5rIiwiZW5jb2RpbmciLCJuZXh0Iiwic2VuZFNvY2tldE1lc3NhZ2UiLCJkYXRhIiwiYnVmZmVyIiwic3VjY2VzcyIsImZhaWwiLCJfZmx1c2giLCJzb2NrZXRFbmQiLCJjbG9zZVNvY2tldCIsInNldERlZmF1bHRPcHRzIiwiaG9zdG5hbWUiLCJwYXRoIiwid3NPcHRpb25zIiwiYnVpbGRVcmwiLCJwcm90b2NvbCIsInVybCIsInBvcnQiLCJ0cmFuc2Zvcm1Xc1VybCIsImJpbmRFdmVudEhhbmRsZXIiLCJvblNvY2tldE9wZW4iLCJzZXRSZWFkYWJsZSIsInNldFdyaXRhYmxlIiwib25Tb2NrZXRNZXNzYWdlIiwicmVzIiwiYXJyYXkiLCJ0b0J5dGVBcnJheSIsImZyb20iLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIkFycmF5QnVmZmVyIiwicmVhZEFzQXJyYXlCdWZmZXIiLCJvblNvY2tldENsb3NlIiwib25Tb2NrZXRFcnJvciIsImJ1aWxkU3RyZWFtIiwiaG9zdCIsIndlYnNvY2tldFN1YlByb3RvY29sIiwiY29ubmVjdFNvY2tldCIsInByb3RvY29scyIsIm5ldCIsImJ1aWxkQnVpbGRlciIsImNyZWF0ZUNvbm5lY3Rpb24iLCJ0bHMiLCJtcXR0Q2xpZW50IiwiY29ubmVjdGlvbiIsInJlamVjdFVuYXV0aG9yaXplZCIsImNvbm5lY3QiLCJhdXRob3JpemVkIiwiaGFuZGxlVExTZXJyb3JzIiwid2Vic29ja2V0IiwidXJsTW9kdWxlIiwiV1NTX09QVElPTlMiLCJJU19CUk9XU0VSIiwidGl0bGUiLCJwcm9wIiwiY3JlYXRlV2ViU29ja2V0IiwiYnVpbGRCdWlsZGVyQnJvd3NlciIsImRvY3VtZW50IiwicGFyc2VkIiwiVVJMIiwic29ja2V0VGFzayIsInNlbmQiLCJlcnJNc2ciLCJvbk9wZW4iLCJvbk1lc3NhZ2UiLCJvbkNsb3NlIiwib25FcnJvciIsInd4IiwiX2Rlc3Ryb3kiLCJkZXN0cm95UmVmIiwiUmVhZGFibGUiLCJzdHJlYW1zT3B0cyIsIm9iamVjdE1vZGUiLCJkZWZhdWx0U3RvcmVPcHRpb25zIiwiTWFwIiwiX2luZmxpZ2h0cyIsInNldCIsImRlc3Ryb3llZCIsInZhbHVlcyIsInZhbHVlIiwia2V5IiwiX3JlYWQiLCJkZWxldGUiLCJ2YWxpZGF0ZVRvcGljIiwicGFydHMiLCJzcGxpdCIsIm1xdHQiLCJ0Y3AiLCJzc2wiLCJtcXR0cyIsInd4cyIsImFsaSIsImFsaXMiLCJ3cyIsIndzcyIsInBhcnNlQXV0aE9wdGlvbnMiLCJtYXRjaGVzIiwiYXV0aCIsIm1hdGNoIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImJyb2tlclVybCIsIk51bWJlciIsInJlcGxhY2UiLCJxdWVyeSIsImNlcnQiLCJpc1NlY3VyZSIsImZpbHRlciIsImluZGV4IiwiZGVmYXVsdFByb3RvY29sIiwid3JhcHBlciIsInNlcnZlcnMiLCJfcmVjb25uZWN0Q291bnQiLCJieXRlTGVuZ3RoIiwiZnJvbUJ5dGVBcnJheSIsImxvb2t1cCIsInJldkxvb2t1cCIsIkFyciIsIlVpbnQ4QXJyYXkiLCJsZW4iLCJjaGFyQ29kZUF0IiwiZ2V0TGVucyIsImI2NCIsInZhbGlkTGVuIiwicGxhY2VIb2xkZXJzTGVuIiwibGVucyIsIl9ieXRlTGVuZ3RoIiwidG1wIiwiYXJyIiwiY3VyQnl0ZSIsInRyaXBsZXRUb0Jhc2U2NCIsIm51bSIsImVuY29kZUNodW5rIiwidWludDgiLCJzdGFydCIsIm91dHB1dCIsImpvaW4iLCJleHRyYUJ5dGVzIiwibWF4Q2h1bmtMZW5ndGgiLCJsZW4yIiwiaWVlZTc1NCIsIlNsb3dCdWZmZXIiLCJJTlNQRUNUX01BWF9CWVRFUyIsIktfTUFYX0xFTkdUSCIsImtNYXhMZW5ndGgiLCJUWVBFRF9BUlJBWV9TVVBQT1JUIiwidHlwZWRBcnJheVN1cHBvcnQiLCJjb25zb2xlIiwiX19wcm90b19fIiwiZm9vIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiaXNCdWZmZXIiLCJieXRlT2Zmc2V0IiwiY3JlYXRlQnVmZmVyIiwiUmFuZ2VFcnJvciIsImFyZyIsImVuY29kaW5nT3JPZmZzZXQiLCJUeXBlRXJyb3IiLCJhbGxvY1Vuc2FmZSIsIlN5bWJvbCIsInNwZWNpZXMiLCJjb25maWd1cmFibGUiLCJwb29sU2l6ZSIsImZyb21TdHJpbmciLCJpc1ZpZXciLCJmcm9tQXJyYXlMaWtlIiwiaXNJbnN0YW5jZSIsImZyb21BcnJheUJ1ZmZlciIsInZhbHVlT2YiLCJiIiwiZnJvbU9iamVjdCIsInRvUHJpbWl0aXZlIiwiYXNzZXJ0U2l6ZSIsInNpemUiLCJhbGxvYyIsImZpbGwiLCJjaGVja2VkIiwiYWxsb2NVbnNhZmVTbG93Iiwic3RyaW5nIiwiaXNFbmNvZGluZyIsImFjdHVhbCIsIndyaXRlIiwic2xpY2UiLCJjb3B5IiwibnVtYmVySXNOYU4iLCJfaXNCdWZmZXIiLCJjb21wYXJlIiwib2Zmc2V0IiwieCIsInkiLCJtaW4iLCJTdHJpbmciLCJ0b0xvd2VyQ2FzZSIsImNvbmNhdCIsImxpc3QiLCJwb3MiLCJtdXN0TWF0Y2giLCJsb3dlcmVkQ2FzZSIsInV0ZjhUb0J5dGVzIiwiYmFzZTY0VG9CeXRlcyIsInNsb3dUb1N0cmluZyIsImhleFNsaWNlIiwidXRmOFNsaWNlIiwiYXNjaWlTbGljZSIsImxhdGluMVNsaWNlIiwiYmFzZTY0U2xpY2UiLCJ1dGYxNmxlU2xpY2UiLCJzd2FwIiwibSIsInN3YXAxNiIsInN3YXAzMiIsInN3YXA2NCIsInRvTG9jYWxlU3RyaW5nIiwiZXF1YWxzIiwiaW5zcGVjdCIsInN0ciIsInRyaW0iLCJ0YXJnZXQiLCJ0aGlzU3RhcnQiLCJ0aGlzRW5kIiwidGhpc0NvcHkiLCJ0YXJnZXRDb3B5IiwiYmlkaXJlY3Rpb25hbEluZGV4T2YiLCJ2YWwiLCJkaXIiLCJhcnJheUluZGV4T2YiLCJsYXN0SW5kZXhPZiIsImluZGV4U2l6ZSIsImFyckxlbmd0aCIsInZhbExlbmd0aCIsInJlYWRVSW50MTZCRSIsImZvdW5kSW5kZXgiLCJmb3VuZCIsImoiLCJpbmNsdWRlcyIsImhleFdyaXRlIiwicmVtYWluaW5nIiwic3RyTGVuIiwicGFyc2VJbnQiLCJ1dGY4V3JpdGUiLCJibGl0QnVmZmVyIiwiYXNjaWlXcml0ZSIsImFzY2lpVG9CeXRlcyIsImxhdGluMVdyaXRlIiwiYmFzZTY0V3JpdGUiLCJ1Y3MyV3JpdGUiLCJ1dGYxNmxlVG9CeXRlcyIsImlzRmluaXRlIiwidG9KU09OIiwiX2FyciIsImZpcnN0Qnl0ZSIsImNvZGVQb2ludCIsImJ5dGVzUGVyU2VxdWVuY2UiLCJzZWNvbmRCeXRlIiwidGhpcmRCeXRlIiwiZm91cnRoQnl0ZSIsInRlbXBDb2RlUG9pbnQiLCJkZWNvZGVDb2RlUG9pbnRzQXJyYXkiLCJNQVhfQVJHVU1FTlRTX0xFTkdUSCIsImNvZGVQb2ludHMiLCJmcm9tQ2hhckNvZGUiLCJyZXQiLCJvdXQiLCJ0b0hleCIsImJ5dGVzIiwibmV3QnVmIiwic3ViYXJyYXkiLCJjaGVja09mZnNldCIsImV4dCIsInJlYWRVSW50TEUiLCJub0Fzc2VydCIsIm11bCIsInJlYWRVSW50QkUiLCJyZWFkVUludDgiLCJyZWFkVUludDE2TEUiLCJyZWFkVUludDMyTEUiLCJyZWFkVUludDMyQkUiLCJyZWFkSW50TEUiLCJwb3ciLCJyZWFkSW50QkUiLCJyZWFkSW50OCIsInJlYWRJbnQxNkxFIiwicmVhZEludDE2QkUiLCJyZWFkSW50MzJMRSIsInJlYWRJbnQzMkJFIiwicmVhZEZsb2F0TEUiLCJyZWFkRmxvYXRCRSIsInJlYWREb3VibGVMRSIsInJlYWREb3VibGVCRSIsImNoZWNrSW50Iiwid3JpdGVVSW50TEUiLCJtYXhCeXRlcyIsIndyaXRlVUludEJFIiwid3JpdGVVSW50OCIsIndyaXRlVUludDE2TEUiLCJ3cml0ZVVJbnQxNkJFIiwid3JpdGVVSW50MzJMRSIsIndyaXRlVUludDMyQkUiLCJ3cml0ZUludExFIiwibGltaXQiLCJ3cml0ZUludEJFIiwid3JpdGVJbnQ4Iiwid3JpdGVJbnQxNkxFIiwid3JpdGVJbnQxNkJFIiwid3JpdGVJbnQzMkxFIiwid3JpdGVJbnQzMkJFIiwiY2hlY2tJRUVFNzU0Iiwid3JpdGVGbG9hdCIsImxpdHRsZUVuZGlhbiIsIndyaXRlRmxvYXRMRSIsIndyaXRlRmxvYXRCRSIsIndyaXRlRG91YmxlIiwid3JpdGVEb3VibGVMRSIsIndyaXRlRG91YmxlQkUiLCJ0YXJnZXRTdGFydCIsImNvcHlXaXRoaW4iLCJJTlZBTElEX0JBU0U2NF9SRSIsImJhc2U2NGNsZWFuIiwidW5pdHMiLCJJbmZpbml0eSIsImxlYWRTdXJyb2dhdGUiLCJieXRlQXJyYXkiLCJoaSIsImxvIiwic3JjIiwiZHN0IiwiY29uc3RydWN0b3IiLCJuYW1lIiwib2JqZWN0Q3JlYXRlIiwib2JqZWN0Q3JlYXRlUG9seWZpbGwiLCJvYmplY3RLZXlzIiwib2JqZWN0S2V5c1BvbHlmaWxsIiwiRnVuY3Rpb24iLCJmdW5jdGlvbkJpbmRQb2x5ZmlsbCIsIl9ldmVudHMiLCJfZXZlbnRzQ291bnQiLCJfbWF4TGlzdGVuZXJzIiwiZGVmYXVsdE1heExpc3RlbmVycyIsImhhc0RlZmluZVByb3BlcnR5IiwiaXNOYU4iLCIkZ2V0TWF4TGlzdGVuZXJzIiwiZ2V0TWF4TGlzdGVuZXJzIiwiZW1pdE5vbmUiLCJoYW5kbGVyIiwiaXNGbiIsImxpc3RlbmVycyIsImFycmF5Q2xvbmUiLCJlbWl0T25lIiwiYXJnMSIsImVtaXRUd28iLCJhcmcyIiwiZW1pdFRocmVlIiwiYXJnMyIsImVtaXRNYW55IiwiZXIiLCJkb0Vycm9yIiwiY29udGV4dCIsIl9hZGRMaXN0ZW5lciIsImxpc3RlbmVyIiwicHJlcGVuZCIsImV4aXN0aW5nIiwibmV3TGlzdGVuZXIiLCJ1bnNoaWZ0Iiwid2FybmVkIiwidyIsImVtaXR0ZXIiLCJjb3VudCIsIndhcm4iLCJhZGRMaXN0ZW5lciIsInByZXBlbmRMaXN0ZW5lciIsIm9uY2VXcmFwcGVyIiwiZmlyZWQiLCJ3cmFwRm4iLCJfb25jZVdyYXAiLCJzdGF0ZSIsIndyYXBwZWQiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwicG9zaXRpb24iLCJvcmlnaW5hbExpc3RlbmVyIiwic3BsaWNlT25lIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiX2xpc3RlbmVycyIsInVud3JhcCIsImV2bGlzdGVuZXIiLCJ1bndyYXBMaXN0ZW5lcnMiLCJyYXdMaXN0ZW5lcnMiLCJsaXN0ZW5lckNvdW50IiwiZXZlbnROYW1lcyIsIlJlZmxlY3QiLCJvd25LZXlzIiwicHJvdG8iLCJGIiwiZm4iLCJvYmplY3RUb1N0cmluZyIsImlzQm9vbGVhbiIsImlzTnVsbCIsImlzTnVsbE9yVW5kZWZpbmVkIiwiaXNOdW1iZXIiLCJpc1N0cmluZyIsImlzU3ltYm9sIiwiaXNVbmRlZmluZWQiLCJpc1JlZ0V4cCIsInJlIiwiaXNPYmplY3QiLCJpc0RhdGUiLCJkIiwiaXNFcnJvciIsImlzRnVuY3Rpb24iLCJpc1ByaW1pdGl2ZSIsIm5vcm1hbGl6ZU9wdGlvbnMiLCJlbnN1cmVDYWxsYWJsZSIsIm1hcCIsImNhbGxhYmxlIiwidmFsaWRWYWx1ZSIsImRlc2MiLCJkZ3MiLCJvdmVyd3JpdGVEZWZpbml0aW9uIiwicmVzb2x2ZUNvbnRleHQiLCJwcm9wcyIsImFzc2lnbiIsIm5vcm1hbGl6ZU9wdHMiLCJpc0NhbGxhYmxlIiwiY29udGFpbnMiLCJkc2NyIiwiZ3MiLCJlb3MiLCJTSUdOQUxfRkxVU0giLCJvbnVuY29yayIsIl9jb3JrZWQiLCJhdXRvRGVzdHJveSIsIl9hdXRvRGVzdHJveSIsImRlc3Ryb3llciIsIl9lbmRlZCIsIl93cml0YWJsZVN0YXRlIiwiZmluaXNoZWQiLCJ0b1N0cmVhbXMyIiwicnMiLCJoaWdoV2F0ZXJNYXJrIiwid3JhcCIsIkR1cGxleGlmeSIsInJlYWRhYmxlIiwiRHVwbGV4IiwiX3dyaXRhYmxlIiwiX3JlYWRhYmxlIiwiX3JlYWRhYmxlMiIsIl9mb3J3YXJkRGVzdHJveSIsIl9mb3J3YXJkRW5kIiwiX29uZHJhaW4iLCJfZHJhaW5lZCIsIl9mb3J3YXJkaW5nIiwiX3Vud3JpdGUiLCJfdW5yZWFkIiwiY29yayIsInVuY29yayIsInVuZW5kIiwib25kcmFpbiIsInJlc3VtZSIsIm9ucmVhZGFibGUiLCJfZm9yd2FyZCIsIm9uZW5kIiwiX3JlYWRhYmxlU3RhdGUiLCJfZmluaXNoIiwicHJlZmluaXNoZWQiLCJlbmRpbmciLCJub29wIiwiaXNSZXF1ZXN0Iiwic2V0SGVhZGVyIiwiYWJvcnQiLCJpc0NoaWxkUHJvY2VzcyIsInN0ZGlvIiwib25sZWdhY3lmaW5pc2giLCJvbmZpbmlzaCIsIm9uZXhpdCIsImV4aXRDb2RlIiwib25lcnJvciIsIm9uY2xvc2UiLCJlbmRlZCIsIm9ucmVxdWVzdCIsInJlcSIsInRvUG9zSW50Iiwib2JqSGFzT3duUHJvcGVydHkiLCJhYnMiLCJzZWFyY2hFbGVtZW50IiwiZnJvbUluZGV4IiwiQm9vbGVhbiIsIml0ZXJhdG9yU3ltYm9sIiwiaXRlcmF0b3IiLCJpc0FyZ3VtZW50cyIsImlzVmFsdWUiLCJhcnJheUxpa2UiLCJtYXBGbiIsInRoaXNBcmciLCJDb250ZXh0IiwiZ2V0SXRlcmF0b3IiLCJvYmpUb1N0cmluZyIsInNpZ24iLCJOYU4iLCJ0b0ludGVnZXIiLCJvYmpQcm9wZXJ0eUlzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwibWV0aG9kIiwiZGVmVmFsIiwiY29tcGFyZUZuIiwic29ydCIsImJhciIsInRyenkiLCJkZXN0IiwiYUZyb20iLCJwcm9wZXJ0eU5hbWVzIiwicHJvcGVydHlOYW1lIiwiZW5zdXJlIiwic2hpbSIsIm51bGxPYmplY3QiLCJwb2x5UHJvcHMiLCJsZXZlbCIsImdldE93blByb3BlcnR5TmFtZXMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZnVuY3Rpb24iLCJvYmplY3QiLCJfdW5kZWZpbmVkIiwidGFyZ2V0T2JqIiwib3B0czEiLCJzZXRQcm90b3R5cGVPZiIsImdldFByb3RvdHlwZU9mIiwicGxhaW5PYmplY3QiLCJjdXN0b21DcmVhdGUiLCJvYmpJc1Byb3RvdHlwZU9mIiwiaXNQcm90b3R5cGVPZiIsIm51bGxEZXNjIiwidmFsaWRhdGUiLCJpc051bGxCYXNlIiwibnVsbFBvbHlmaWxsIiwidG1wT2JqMSIsInRtcE9iajIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJpZ25vcmUiLCJzZWFyY2hTdHJpbmciLCJJdGVyYXRvciIsIkFycmF5SXRlcmF0b3IiLCJraW5kIiwiX3Jlc29sdmUiLCJfX2tpbmRfXyIsIl9fbGlzdF9fIiwidG9TdHJpbmdUYWciLCJzb21lIiwiaXRlcmFibGUiLCJtb2RlIiwiZG9CcmVhayIsImJyb2tlbiIsImNoYXIiLCJTdHJpbmdJdGVyYXRvciIsImF1dG9CaW5kIiwiX19jb250ZXh0X18iLCJfX25leHRJbmRleF9fIiwiX29uQWRkIiwiX29uRGVsZXRlIiwiX29uQ2xlYXIiLCJfbmV4dCIsIl9fcmVkb19fIiwiX3VuQmluZCIsIl9jcmVhdGVSZXN1bHQiLCJvZmYiLCJyZWRvIiwic3BsaWNlIiwiX19sZW5ndGhfXyIsImlzSXRlcmFibGUiLCJlbnRyaWVzIiwiaGFzIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJraW5kcyIsInVuQmluZCIsIk1hcEl0ZXJhdG9yIiwiX19tYXBLZXlzRGF0YV9fIiwiX192YWx1ZXNfXyIsIl9fbWFwVmFsdWVzRGF0YV9fIiwiZUluZGV4T2YiLCJlZSIsImZvck9mIiwiaXNOYXRpdmUiLCJNYXBQb2x5IiwidmFsaWRUeXBlcyIsInN5bWJvbCIsInZhbGlkYXRlU3ltYm9sIiwib2JqUHJvdG90eXBlIiwiTmF0aXZlU3ltYm9sIiwiU3ltYm9sUG9seWZpbGwiLCJIaWRkZW5TeW1ib2wiLCJnbG9iYWxTeW1ib2xzIiwiaXNOYXRpdmVTYWZlIiwiZ2VuZXJhdGVOYW1lIiwiY3JlYXRlZCIsInBvc3RmaXgiLCJpZTExQnVnV29ya2Fyb3VuZCIsImRlc2NyaXB0aW9uIiwiX19kZXNjcmlwdGlvbl9fIiwiX19uYW1lX18iLCJmb3IiLCJrZXlGb3IiLCJzIiwiaGFzSW5zdGFuY2UiLCJpc0NvbmNhdFNwcmVhZGFibGUiLCJzZWFyY2giLCJ1bnNjb3BhYmxlcyIsImRlc2NyaXB0b3IiLCJtZXRob2RzIiwiZGVzY3JpcHRvcnMiLCJiYXNlIiwiX19lZV9fIiwiX19lZU9uY2VMaXN0ZW5lcl9fIiwiY2FuZGlkYXRlIiwibCIsImlzTEUiLCJtTGVuIiwibkJ5dGVzIiwiZUxlbiIsImVNYXgiLCJlQmlhcyIsIm5CaXRzIiwicnQiLCJsb2ciLCJMTjIiLCJjdG9yIiwic3VwZXJDdG9yIiwic3VwZXJfIiwiVGVtcEN0b3IiLCJpc1Nsb3dCdWZmZXIiLCJ0eXBlcyIsImNvZGVzIiwidiIsIkNNRF9TSElGVCIsIkNNRF9NQVNLIiwiRFVQX01BU0siLCJRT1NfTUFTSyIsIlFPU19TSElGVCIsIlJFVEFJTl9NQVNLIiwiTEVOR1RIX01BU0siLCJMRU5HVEhfRklOX01BU0siLCJTRVNTSU9OUFJFU0VOVF9NQVNLIiwiU0VTU0lPTlBSRVNFTlRfSEVBREVSIiwiQ09OTkFDS19IRUFERVIiLCJVU0VSTkFNRV9NQVNLIiwiUEFTU1dPUkRfTUFTSyIsIldJTExfUkVUQUlOX01BU0siLCJXSUxMX1FPU19NQVNLIiwiV0lMTF9RT1NfU0hJRlQiLCJXSUxMX0ZMQUdfTUFTSyIsIkNMRUFOX1NFU1NJT05fTUFTSyIsIkNPTk5FQ1RfSEVBREVSIiwic2Vzc2lvbkV4cGlyeUludGVydmFsIiwid2lsbERlbGF5SW50ZXJ2YWwiLCJyZWNlaXZlTWF4aW11bSIsInJlcXVlc3RSZXNwb25zZUluZm9ybWF0aW9uIiwicmVxdWVzdFByb2JsZW1JbmZvcm1hdGlvbiIsInVzZXJQcm9wZXJ0aWVzIiwicGF5bG9hZEZvcm1hdEluZGljYXRvciIsIm1lc3NhZ2VFeHBpcnlJbnRlcnZhbCIsImNvbnRlbnRUeXBlIiwicmVzcG9uc2VUb3BpYyIsImNvcnJlbGF0aW9uRGF0YSIsIm1heGltdW1Rb1MiLCJyZXRhaW5BdmFpbGFibGUiLCJhc3NpZ25lZENsaWVudElkZW50aWZpZXIiLCJ3aWxkY2FyZFN1YnNjcmlwdGlvbkF2YWlsYWJsZSIsInN1YnNjcmlwdGlvbklkZW50aWZpZXJzQXZhaWxhYmxlIiwic2hhcmVkU3Vic2NyaXB0aW9uQXZhaWxhYmxlIiwicmVzcG9uc2VJbmZvcm1hdGlvbiIsInNlcnZlclJlZmVyZW5jZSIsInN1YnNjcmlwdGlvbklkZW50aWZpZXIiLCJwcm9wZXJ0aWVzQ29kZXMiLCJwcm9wZXJ0aWVzVHlwZXMiLCJnZW5IZWFkZXIiLCJQVUJMSVNIX0hFQURFUiIsIlNVQlNDUklCRV9IRUFERVIiLCJTVUJTQ1JJQkVfT1BUSU9OU19RT1NfTUFTSyIsIlNVQlNDUklCRV9PUFRJT05TX05MX01BU0siLCJTVUJTQ1JJQkVfT1BUSU9OU19OTF9TSElGVCIsIlNVQlNDUklCRV9PUFRJT05TX1JBUF9NQVNLIiwiU1VCU0NSSUJFX09QVElPTlNfUkFQX1NISUZUIiwiU1VCU0NSSUJFX09QVElPTlNfUkhfTUFTSyIsIlNVQlNDUklCRV9PUFRJT05TX1JIX1NISUZUIiwiU1VCU0NSSUJFX09QVElPTlNfUkgiLCJTVUJTQ1JJQkVfT1BUSU9OU19OTCIsIlNVQlNDUklCRV9PUFRJT05TX1JBUCIsIlNVQlNDUklCRV9PUFRJT05TX1FPUyIsIlVOU1VCU0NSSUJFX0hFQURFUiIsIkFDS1MiLCJ1bnN1YmFjayIsInB1YmFjayIsInB1YmNvbXAiLCJwdWJyZWwiLCJwdWJyZWMiLCJTVUJBQ0tfSEVBREVSIiwiVkVSU0lPTjMiLCJWRVJTSU9ONCIsIlZFUlNJT041IiwiUU9TIiwiRU1QVFkiLCJwaW5ncmVxIiwicGluZ3Jlc3AiLCJkaXNjb25uZWN0IiwiRUUiLCJnZW5lcmF0ZSIsIkFjY3VtdWxhdG9yIiwiX2FycmF5IiwiX2kiLCJsZW5ndGhzIiwiRHVwbGV4U3RyZWFtIiwidXRpbCIsIkJ1ZmZlckxpc3QiLCJfYnVmcyIsIl9jYWxsYmFjayIsInBpcGVyIiwib25QaXBlIiwib25VbnBpcGUiLCJhcHBlbmQiLCJfb2Zmc2V0IiwidG90IiwiX3QiLCJfYXBwZW5kQnVmZmVyIiwiYXBwZW5kQnVmZmVyIiwiY29uc3VtZSIsImRzdFN0YXJ0Iiwic3JjU3RhcnQiLCJzcmNFbmQiLCJidWZvZmYiLCJzaGFsbG93U2xpY2UiLCJzdGFydE9mZnNldCIsImVuZE9mZnNldCIsImJ1ZmZlcnMiLCJkdXBsaWNhdGUiLCJjYWNoZSIsImdlbmVyYXRlQnVmZmVyIiwiZ2VuZXJhdGVDYWNoZSIsImNhbGNWYXJpYWJsZUJ5dGVJbnRMZW5ndGgiLCJnZW5CdWZWYXJpYWJsZUJ5dGVJbnQiLCJkaWdpdCIsImdlbmVyYXRlNEJ5dGVCdWZmZXIiLCJnZW5lcmF0ZU51bWJlciIsIlBhY2tldCIsImJsIiwiY29uc3RhbnRzIiwiUGFyc2VyIiwib3B0Iiwic2V0dGluZ3MiLCJfc3RhdGVzIiwiX3Jlc2V0U3RhdGUiLCJfbGlzdCIsIl9zdGF0ZUNvdW50ZXIiLCJfcGFyc2VIZWFkZXIiLCJ6ZXJvIiwiX3BhcnNlTGVuZ3RoIiwiX3BhcnNlVmFyQnl0ZU51bSIsIl9wYXJzZVBheWxvYWQiLCJfcG9zIiwiX3BhcnNlQ29ubmVjdCIsIl9wYXJzZUNvbm5hY2siLCJfcGFyc2VQdWJsaXNoIiwiX3BhcnNlQ29uZmlybWF0aW9uIiwiX3BhcnNlU3Vic2NyaWJlIiwiX3BhcnNlU3ViYWNrIiwiX3BhcnNlVW5zdWJzY3JpYmUiLCJfcGFyc2VVbnN1YmFjayIsIl9wYXJzZURpc2Nvbm5lY3QiLCJfcGFyc2VBdXRoIiwiX2VtaXRFcnJvciIsImZsYWdzIiwiX3BhcnNlU3RyaW5nIiwid2lsbCIsIl9wYXJzZU51bSIsIl9wYXJzZVByb3BlcnRpZXMiLCJ3aWxsUHJvcGVydGllcyIsIl9wYXJzZUJ1ZmZlciIsIl9wYXJzZU1lc3NhZ2VJZCIsInN1YnNjcmlwdGlvbiIsIl9wYXJzZUJ5dGUiLCJtYXliZUJ1ZmZlciIsIl9wYXJzZVN0cmluZ1BhaXIiLCJfcGFyc2U0Qnl0ZU51bSIsImZ1bGxJbmZvRmxhZyIsImN1cnJlbnQiLCJwYWRkaW5nIiwiX3BhcnNlQnlUeXBlIiwiY3VycmVudFVzZXJQcm9wZXJ0eSIsIl9uZXdQYWNrZXQiLCJlbXB0eSIsInplcm9CdWYiLCJudW1iZXJzIiwibnVtQ2FjaGUiLCJ3cml0ZU51bWJlciIsIndyaXRlTnVtYmVyQ2FjaGVkIiwidG9HZW5lcmF0ZSIsImNvbmZpcm1hdGlvbiIsInN1YmFjayIsImVtcHR5UGFja2V0Iiwid3JpdGVOdW1iZXJHZW5lcmF0ZWQiLCJwcm9wZXJ0aWVzRGF0YSIsImdldFByb3BlcnRpZXMiLCJwcm92aWRlZFVzZXJuYW1lIiwiaXNTdHJpbmdPckJ1ZmZlciIsIndyaXRlVmFyQnl0ZUludCIsIndyaXRlU3RyaW5nT3JCdWZmZXIiLCJ3cml0ZVN0cmluZyIsImdldFByb3BlcnRpZXNCeU1heGltdW1QYWNrZXRTaXplIiwiaXRvcGljIiwiaXFvcyIsImp0b3BpYyIsImpxb3MiLCJqbmwiLCJqcmFwIiwianJoIiwiam9wdGlvbnMiLCJ1bnN1YnMiLCJ2YXJCeXRlSW50Q2FjaGUiLCJzdHJsZW4iLCJ3cml0ZVN0cmluZ1BhaXIiLCJudW1iZXIiLCJ3cml0ZTRCeXRlTnVtYmVyIiwidG9Xcml0ZSIsIndyaXRlUHJvcGVydGllcyIsInByb3BlcnRpZXNMZW5ndGgiLCJnZXRMZW5ndGhQcm9wZXJ0eSIsInJlZHVjZSIsInByb3BOYW1lIiwicHJvcExlbmd0aCIsInByb3BlcnRpZXNMZW5ndGhMZW5ndGgiLCJtYXlFbXB0eVByb3BzIiwiY3VycmVudE1heUVtcHR5UHJvcCIsImJ1Zk9yU3RyaW5nIiwiZmllbGQiLCJ3cmFwcHkiLCJzdHJpY3QiLCJvbmNlU3RyaWN0IiwiY2FsbGVkIiwib25jZUVycm9yIiwiYWZ0ZXJUaWNrT25lIiwiYWZ0ZXJUaWNrVHdvIiwiYWZ0ZXJUaWNrVGhyZWUiLCJhZnRlclRpY2siLCJjYWNoZWRTZXRUaW1lb3V0IiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwiZGVmYXVsdFNldFRpbW91dCIsImRlZmF1bHRDbGVhclRpbWVvdXQiLCJydW5UaW1lb3V0IiwiZnVuIiwicnVuQ2xlYXJUaW1lb3V0IiwibWFya2VyIiwiZHJhaW5pbmciLCJjdXJyZW50UXVldWUiLCJxdWV1ZUluZGV4IiwiY2xlYW5VcE5leHRUaWNrIiwiZHJhaW5RdWV1ZSIsInRpbWVvdXQiLCJydW4iLCJJdGVtIiwiYnJvd3NlciIsImVudiIsImFyZ3YiLCJ2ZXJzaW9ucyIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsInVtYXNrIiwicm9vdCIsImZyZWVFeHBvcnRzIiwibm9kZVR5cGUiLCJmcmVlTW9kdWxlIiwiZnJlZUdsb2JhbCIsInB1bnljb2RlIiwibWF4SW50IiwidE1pbiIsInRNYXgiLCJza2V3IiwiZGFtcCIsImluaXRpYWxCaWFzIiwiaW5pdGlhbE4iLCJkZWxpbWl0ZXIiLCJyZWdleFB1bnljb2RlIiwicmVnZXhOb25BU0NJSSIsInJlZ2V4U2VwYXJhdG9ycyIsIm92ZXJmbG93IiwiYmFzZU1pbnVzVE1pbiIsInN0cmluZ0Zyb21DaGFyQ29kZSIsIm1hcERvbWFpbiIsImxhYmVscyIsImVuY29kZWQiLCJ1Y3MyZGVjb2RlIiwiY291bnRlciIsImV4dHJhIiwidWNzMmVuY29kZSIsImJhc2ljVG9EaWdpdCIsImRpZ2l0VG9CYXNpYyIsImZsYWciLCJhZGFwdCIsImRlbHRhIiwibnVtUG9pbnRzIiwiZmlyc3RUaW1lIiwiZGVjb2RlIiwiaW5wdXQiLCJpbnB1dExlbmd0aCIsImJpYXMiLCJiYXNpYyIsIm9sZGkiLCJiYXNlTWludXNUIiwiZW5jb2RlIiwiaGFuZGxlZENQQ291bnQiLCJiYXNpY0xlbmd0aCIsInEiLCJjdXJyZW50VmFsdWUiLCJoYW5kbGVkQ1BDb3VudFBsdXNPbmUiLCJxTWludXNUIiwidG9Vbmljb2RlIiwidGVzdCIsInRvQVNDSUkiLCJ1Y3MyIiwiYW1kIiwicXMiLCJzZXAiLCJlcSIsInJlZ2V4cCIsIm1heEtleXMiLCJpZHgiLCJrc3RyIiwidnN0ciIsImRlY29kZVVSSUNvbXBvbmVudCIsInhzIiwic3RyaW5naWZ5UHJpbWl0aXZlIiwia3MiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzdHJpbmdpZnkiLCJwbmEiLCJhbGxvd0hhbGZPcGVuIiwib25FbmROVCIsIlBhc3NUaHJvdWdoIiwiX3RyYW5zZm9ybSIsIlJlYWRhYmxlU3RhdGUiLCJFRWxpc3RlbmVyQ291bnQiLCJTdHJlYW0iLCJPdXJVaW50OEFycmF5IiwiX3VpbnQ4QXJyYXlUb0J1ZmZlciIsIl9pc1VpbnQ4QXJyYXkiLCJkZWJ1Z1V0aWwiLCJkZWJ1ZyIsImRlYnVnbG9nIiwiZGVzdHJveUltcGwiLCJTdHJpbmdEZWNvZGVyIiwia1Byb3h5RXZlbnRzIiwiZXZlbnQiLCJpc0R1cGxleCIsInJlYWRhYmxlT2JqZWN0TW9kZSIsImh3bSIsInJlYWRhYmxlSHdtIiwicmVhZGFibGVIaWdoV2F0ZXJNYXJrIiwiZGVmYXVsdEh3bSIsInBpcGVzIiwicGlwZXNDb3VudCIsImZsb3dpbmciLCJlbmRFbWl0dGVkIiwicmVhZGluZyIsInN5bmMiLCJuZWVkUmVhZGFibGUiLCJlbWl0dGVkUmVhZGFibGUiLCJyZWFkYWJsZUxpc3RlbmluZyIsInJlc3VtZVNjaGVkdWxlZCIsImRlZmF1bHRFbmNvZGluZyIsImF3YWl0RHJhaW4iLCJyZWFkaW5nTW9yZSIsImRlY29kZXIiLCJfdW5kZXN0cm95IiwidW5kZXN0cm95Iiwic2tpcENodW5rQ2hlY2siLCJyZWFkYWJsZUFkZENodW5rIiwiYWRkVG9Gcm9udCIsIm9uRW9mQ2h1bmsiLCJjaHVua0ludmFsaWQiLCJhZGRDaHVuayIsIm1heWJlUmVhZE1vcmUiLCJuZWVkTW9yZURhdGEiLCJlbWl0UmVhZGFibGUiLCJpc1BhdXNlZCIsInNldEVuY29kaW5nIiwiTUFYX0hXTSIsImNvbXB1dGVOZXdIaWdoV2F0ZXJNYXJrIiwiaG93TXVjaFRvUmVhZCIsImhlYWQiLCJuT3JpZyIsImVuZFJlYWRhYmxlIiwiZG9SZWFkIiwiZnJvbUxpc3QiLCJlbWl0UmVhZGFibGVfIiwiZmxvdyIsIm1heWJlUmVhZE1vcmVfIiwicGlwZU9wdHMiLCJkb0VuZCIsInN0ZG91dCIsInN0ZGVyciIsImVuZEZuIiwidW5waXBlIiwib251bnBpcGUiLCJ1bnBpcGVJbmZvIiwiaGFzVW5waXBlZCIsImNsZWFudXAiLCJwaXBlT25EcmFpbiIsImNsZWFuZWRVcCIsIm9uZGF0YSIsIm5lZWREcmFpbiIsImluY3JlYXNlZEF3YWl0RHJhaW4iLCJwYXVzZSIsImRlc3RzIiwiZXYiLCJuUmVhZGluZ05leHRUaWNrIiwicmVzdW1lXyIsIl90aGlzIiwicGF1c2VkIiwiX2Zyb21MaXN0IiwiZnJvbUxpc3RQYXJ0aWFsIiwiaGFzU3RyaW5ncyIsImNvcHlGcm9tQnVmZmVyU3RyaW5nIiwiY29weUZyb21CdWZmZXIiLCJuYiIsInRhaWwiLCJlbmRSZWFkYWJsZU5UIiwiaXNhcnJheSIsImFmdGVyVHJhbnNmb3JtIiwidHMiLCJfdHJhbnNmb3JtU3RhdGUiLCJ0cmFuc2Zvcm1pbmciLCJ3cml0ZWNiIiwid3JpdGVjaHVuayIsIm5lZWRUcmFuc2Zvcm0iLCJ3cml0ZWVuY29kaW5nIiwidHJhbnNmb3JtIiwicHJlZmluaXNoIiwiX3RoaXMyIiwiZXJyMiIsIldyaXRlUmVxIiwiQ29ya2VkUmVxdWVzdCIsIm9uQ29ya2VkRmluaXNoIiwiYXN5bmNXcml0ZSIsIldyaXRhYmxlU3RhdGUiLCJpbnRlcm5hbFV0aWwiLCJkZXByZWNhdGUiLCJ3cml0YWJsZU9iamVjdE1vZGUiLCJ3cml0YWJsZUh3bSIsIndyaXRhYmxlSGlnaFdhdGVyTWFyayIsImZpbmFsQ2FsbGVkIiwibm9EZWNvZGUiLCJkZWNvZGVTdHJpbmdzIiwid3JpdGluZyIsImNvcmtlZCIsImJ1ZmZlclByb2Nlc3NpbmciLCJvbndyaXRlIiwid3JpdGVsZW4iLCJidWZmZXJlZFJlcXVlc3QiLCJsYXN0QnVmZmVyZWRSZXF1ZXN0IiwicGVuZGluZ2NiIiwiZXJyb3JFbWl0dGVkIiwiYnVmZmVyZWRSZXF1ZXN0Q291bnQiLCJjb3JrZWRSZXF1ZXN0c0ZyZWUiLCJnZXRCdWZmZXIiLCJfIiwicmVhbEhhc0luc3RhbmNlIiwid3JpdGV2IiwiX3dyaXRldiIsImZpbmFsIiwiX2ZpbmFsIiwid3JpdGVBZnRlckVuZCIsInZhbGlkQ2h1bmsiLCJ2YWxpZCIsImlzQnVmIiwid3JpdGVPckJ1ZmZlciIsImNsZWFyQnVmZmVyIiwic2V0RGVmYXVsdEVuY29kaW5nIiwiZGVjb2RlQ2h1bmsiLCJuZXdDaHVuayIsImxhc3QiLCJkb1dyaXRlIiwib253cml0ZUVycm9yIiwiZmluaXNoTWF5YmUiLCJvbndyaXRlU3RhdGVVcGRhdGUiLCJuZWVkRmluaXNoIiwiYWZ0ZXJXcml0ZSIsIm9ud3JpdGVEcmFpbiIsImhvbGRlciIsImFsbEJ1ZmZlcnMiLCJlbmRXcml0YWJsZSIsImNhbGxGaW5hbCIsIm5lZWQiLCJjb3JrUmVxIiwidGltZXJzIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsImNvcHlCdWZmZXIiLCJjdXN0b20iLCJyZWFkYWJsZURlc3Ryb3llZCIsIndyaXRhYmxlRGVzdHJveWVkIiwiZW1pdEVycm9yTlQiLCJfbm9ybWFsaXplRW5jb2RpbmciLCJyZXRyaWVkIiwibm9ybWFsaXplRW5jb2RpbmciLCJuZW5jIiwidGV4dCIsInV0ZjE2VGV4dCIsInV0ZjE2RW5kIiwiZmlsbExhc3QiLCJ1dGY4RmlsbExhc3QiLCJiYXNlNjRUZXh0IiwiYmFzZTY0RW5kIiwic2ltcGxlV3JpdGUiLCJzaW1wbGVFbmQiLCJsYXN0TmVlZCIsImxhc3RUb3RhbCIsImxhc3RDaGFyIiwidXRmOEVuZCIsInV0ZjhUZXh0IiwidXRmOENoZWNrQnl0ZSIsImJ5dGUiLCJ1dGY4Q2hlY2tJbmNvbXBsZXRlIiwidXRmOENoZWNrRXh0cmFCeXRlcyIsInRvdGFsIiwiUmVJbnRlcnZhbCIsImludGVydmFsIiwiX2FyZ3MiLCJfaW50ZXJ2YWwiLCJjb3B5UHJvcHMiLCJTYWZlQnVmZmVyIiwiZ2V0U3RhdGVMZW5ndGgiLCJjbGVhckltbWVkaWF0ZSIsImltbWVkaWF0ZUlkcyIsIm5leHRJbW1lZGlhdGVJZCIsIlRpbWVvdXQiLCJjbGVhckZuIiwiX2lkIiwiX2NsZWFyRm4iLCJ1bnJlZiIsInJlZiIsImVucm9sbCIsIml0ZW0iLCJtc2VjcyIsIl9pZGxlVGltZW91dElkIiwiX2lkbGVUaW1lb3V0IiwidW5lbnJvbGwiLCJfdW5yZWZBY3RpdmUiLCJhY3RpdmUiLCJvblRpbWVvdXQiLCJfb25UaW1lb3V0Iiwib25OZXh0VGljayIsInVybFBhcnNlIiwicmVzb2x2ZSIsInVybFJlc29sdmUiLCJyZXNvbHZlT2JqZWN0IiwidXJsUmVzb2x2ZU9iamVjdCIsImZvcm1hdCIsInVybEZvcm1hdCIsIlVybCIsInNsYXNoZXMiLCJoYXNoIiwicGF0aG5hbWUiLCJocmVmIiwicHJvdG9jb2xQYXR0ZXJuIiwicG9ydFBhdHRlcm4iLCJzaW1wbGVQYXRoUGF0dGVybiIsImRlbGltcyIsInVud2lzZSIsImF1dG9Fc2NhcGUiLCJub25Ib3N0Q2hhcnMiLCJob3N0RW5kaW5nQ2hhcnMiLCJob3N0bmFtZU1heExlbiIsImhvc3RuYW1lUGFydFBhdHRlcm4iLCJob3N0bmFtZVBhcnRTdGFydCIsInVuc2FmZVByb3RvY29sIiwiamF2YXNjcmlwdCIsImhvc3RsZXNzUHJvdG9jb2wiLCJzbGFzaGVkUHJvdG9jb2wiLCJodHRwIiwiaHR0cHMiLCJmdHAiLCJnb3BoZXIiLCJmaWxlIiwicXVlcnlzdHJpbmciLCJwYXJzZVF1ZXJ5U3RyaW5nIiwic2xhc2hlc0Rlbm90ZUhvc3QiLCJxdWVyeUluZGV4Iiwic3BsaXR0ZXIiLCJ1U3BsaXQiLCJzbGFzaFJlZ2V4IiwicmVzdCIsInNpbXBsZVBhdGgiLCJleGVjIiwibG93ZXJQcm90byIsImhvc3RFbmQiLCJoZWMiLCJhdFNpZ24iLCJwYXJzZUhvc3QiLCJpcHY2SG9zdG5hbWUiLCJob3N0cGFydHMiLCJwYXJ0IiwibmV3cGFydCIsInZhbGlkUGFydHMiLCJub3RIb3N0IiwiYml0IiwiaCIsImFlIiwiZXNjIiwiZXNjYXBlIiwicW0iLCJjaGFyQXQiLCJzb3VyY2UiLCJyZWxhdGl2ZSIsInJlbCIsInRrZXlzIiwidGsiLCJ0a2V5IiwicmtleXMiLCJyayIsInJrZXkiLCJyZWxQYXRoIiwiaXNTb3VyY2VBYnMiLCJpc1JlbEFicyIsIm11c3RFbmRBYnMiLCJyZW1vdmVBbGxEb3RzIiwic3JjUGF0aCIsInBzeWNob3RpYyIsImF1dGhJbkhvc3QiLCJoYXNUcmFpbGluZ1NsYXNoIiwidXAiLCJpc0Fic29sdXRlIiwibXNnIiwiY29uZmlnIiwiZGVwcmVjYXRlZCIsInRyYWNlIiwibG9jYWxTdG9yYWdlIiwiZm9ybWF0UmVnRXhwIiwib2JqZWN0cyIsIkpTT04iLCJub0RlcHJlY2F0aW9uIiwidGhyb3dEZXByZWNhdGlvbiIsInRyYWNlRGVwcmVjYXRpb24iLCJkZWJ1Z3MiLCJkZWJ1Z0Vudmlyb24iLCJOT0RFX0RFQlVHIiwidG9VcHBlckNhc2UiLCJSZWdFeHAiLCJwaWQiLCJjdHgiLCJzZWVuIiwic3R5bGl6ZSIsInN0eWxpemVOb0NvbG9yIiwiZGVwdGgiLCJjb2xvcnMiLCJzaG93SGlkZGVuIiwiX2V4dGVuZCIsImN1c3RvbUluc3BlY3QiLCJzdHlsaXplV2l0aENvbG9yIiwiZm9ybWF0VmFsdWUiLCJib2xkIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiaW52ZXJzZSIsIndoaXRlIiwiZ3JleSIsImJsYWNrIiwiYmx1ZSIsImN5YW4iLCJncmVlbiIsIm1hZ2VudGEiLCJyZWQiLCJ5ZWxsb3ciLCJzdHlsZXMiLCJzcGVjaWFsIiwiYm9vbGVhbiIsIm51bGwiLCJkYXRlIiwic3R5bGVUeXBlIiwic3R5bGUiLCJhcnJheVRvSGFzaCIsInJlY3Vyc2VUaW1lcyIsInByaW1pdGl2ZSIsImZvcm1hdFByaW1pdGl2ZSIsInZpc2libGVLZXlzIiwiZm9ybWF0RXJyb3IiLCJEYXRlIiwiYnJhY2VzIiwidG9VVENTdHJpbmciLCJmb3JtYXRBcnJheSIsImZvcm1hdFByb3BlcnR5IiwicmVkdWNlVG9TaW5nbGVTdHJpbmciLCJzaW1wbGUiLCJsaW5lIiwibnVtTGluZXNFc3QiLCJwcmV2IiwiY3VyIiwiYXIiLCJwYWQiLCJtb250aHMiLCJ0aW1lc3RhbXAiLCJ0aW1lIiwiZ2V0SG91cnMiLCJnZXRNaW51dGVzIiwiZ2V0U2Vjb25kcyIsImdldERhdGUiLCJnZXRNb250aCIsIm9yaWdpbiIsImFkZCIsIldTIiwiV2ViU29ja2V0U3RyZWFtIiwic29ja2V0V3JpdGUiLCJzb2NrZXQiLCJpc0Jyb3dzZXIiLCJXZWJTb2NrZXQiLCJzb2NrZXRXcml0ZUJyb3dzZXIiLCJzb2NrZXRXcml0ZU5vZGUiLCJiaW5hcnkiLCJidWZmZXJTaXplIiwiYnJvd3NlckJ1ZmZlclNpemUiLCJidWZmZXJUaW1lb3V0IiwiYnJvd3NlckJ1ZmZlclRpbWVvdXQiLCJiaW5hcnlUeXBlIiwicmVhZHlTdGF0ZSIsIk9QRU4iLCJvbm9wZW4iLCJvbm1lc3NhZ2UiLCJjb2VyY2VUb0J1ZmZlciIsImJ1ZmZlcmVkQW1vdW50IiwiY2h1bmtzIiwiTW96V2ViU29ja2V0IiwiZXh0ZW5kIl0sIm1hcHBpbmdzIjoiNkVBQUEsQ0FBQyxVQUFTQSxDQUFULEVBQVcsQ0FBQyxJQUFHLElBQUgsRUFBMEQsQ0FBQ0MsTUFBTSxDQUFDQyxPQUFQLEdBQWVGLENBQUMsRUFBaEIsQ0FBbUIsQ0FBOUUsTUFBbUYsVUFBNE4sQ0FBNVQsRUFBOFQsWUFBVSxDQUFDLElBQUlHLE1BQUosRUFBV0YsTUFBWCxFQUFrQkMsT0FBbEIsQ0FBMEIsT0FBTyxZQUFVLENBQUMsU0FBU0UsQ0FBVCxDQUFXQyxDQUFYLEVBQWFDLENBQWIsRUFBZUMsQ0FBZixFQUFpQixDQUFDLFNBQVNDLENBQVQsQ0FBV0MsQ0FBWCxFQUFhVCxDQUFiLEVBQWUsQ0FBQyxJQUFHLENBQUNNLENBQUMsQ0FBQ0csQ0FBRCxDQUFMLEVBQVMsQ0FBQyxJQUFHLENBQUNKLENBQUMsQ0FBQ0ksQ0FBRCxDQUFMLEVBQVMsQ0FBQyxJQUFJQyxDQUFDLEdBQUMsY0FBWSxPQUFPQyxPQUFuQixJQUE0QkEsT0FBbEMsQ0FBMEMsSUFBRyxDQUFDWCxDQUFELElBQUlVLENBQVAsRUFBUyxPQUFPQSxPQUFDLENBQUNELENB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LE1BQXhCLEVBQStCVCxDQUFDLEVBQWhDLEVBQW1DLENBQUMsSUFBSXU2QyxNQUFNLEdBQUNsMkMsU0FBUyxDQUFDckUsQ0FBRCxDQUFwQixDQUF3QixLQUFJLElBQUkrVCxHQUFSLElBQWV3bUMsTUFBZixFQUFzQixDQUFDLElBQUd0d0MsY0FBYyxDQUFDekosSUFBZixDQUFvQis1QyxNQUFwQixFQUEyQnhtQyxHQUEzQixDQUFILEVBQW1DLENBQUMwSSxNQUFNLENBQUMxSSxHQUFELENBQU4sR0FBWXdtQyxNQUFNLENBQUN4bUMsR0FBRCxDQUFsQixDQUF3QixDQUFDLENBQUMsUUFBTzBJLE1BQVAsQ0FBYyxDQUFDLENBQTNTLEVBQTRTLEVBQTVTLENBQTVxdlAsRUFBMWMsRUFBdTZ3UCxFQUF2NndQLEVBQTA2d1AsQ0FBQyxDQUFELENBQTE2d1AsRUFBKzZ3UCxDQUEvNndQLENBQVAsQ0FBeTd3UCxDQUE1eHhQLEUiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oZil7aWYodHlwZW9mIGV4cG9ydHM9PT1cIm9iamVjdFwiJiZ0eXBlb2YgbW9kdWxlIT09XCJ1bmRlZmluZWRcIil7bW9kdWxlLmV4cG9ydHM9ZigpfWVsc2UgaWYodHlwZW9mIGRlZmluZT09PVwiZnVuY3Rpb25cIiYmZGVmaW5lLmFtZCl7ZGVmaW5lKFtdLGYpfWVsc2V7dmFyIGc7aWYodHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCIpe2c9d2luZG93fWVsc2UgaWYodHlwZW9mIGdsb2JhbCE9PVwidW5kZWZpbmVkXCIpe2c9Z2xvYmFsfWVsc2UgaWYodHlwZW9mIHNlbGYhPT1cInVuZGVmaW5lZFwiKXtnPXNlbGZ9ZWxzZXtnPXRoaXN9Zy5tcXR0PWYoKX19KShmdW5jdGlvbigpe3ZhciBkZWZpbmUsbW9kdWxlLGV4cG9ydHM7cmV0dXJuIGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSgpKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24ocHJvY2VzcyxnbG9iYWwpe1widXNlIHN0cmljdFwiO3ZhciBldmVudHM9cmVxdWlyZShcImV2ZW50c1wiKTt2YXIgU3RvcmU9cmVxdWlyZShcIi4vc3RvcmVcIik7dmFyIG1xdHRQYWNrZXQ9cmVxdWlyZShcIm1xdHQtcGFja2V0XCIpO3ZhciBXcml0YWJsZT1yZXF1aXJlKFwicmVhZGFibGUtc3RyZWFtXCIpLldyaXRhYmxlO3ZhciBpbmhlcml0cz1yZXF1aXJlKFwiaW5oZXJpdHNcIik7dmFyIHJlSW50ZXJ2YWw9cmVxdWlyZShcInJlaW50ZXJ2YWxcIik7dmFyIHZhbGlkYXRpb25zPXJlcXVpcmUoXCIuL3ZhbGlkYXRpb25zXCIpO3ZhciB4dGVuZD1yZXF1aXJlKFwieHRlbmRcIik7dmFyIHNldEltbWVkaWF0ZT1nbG9iYWwuc2V0SW1tZWRpYXRlfHxmdW5jdGlvbihjYWxsYmFjayl7cHJvY2Vzcy5uZXh0VGljayhjYWxsYmFjayl9O3ZhciBkZWZhdWx0Q29ubmVjdE9wdGlvbnM9e2tlZXBhbGl2ZTo2MCxyZXNjaGVkdWxlUGluZ3M6dHJ1ZSxwcm90b2NvbElkOlwiTVFUVFwiLHByb3RvY29sVmVyc2lvbjo0LHJlY29ubmVjdFBlcmlvZDoxZTMsY29ubmVjdFRpbWVvdXQ6MzAqMWUzLGNsZWFuOnRydWUscmVzdWJzY3JpYmU6dHJ1ZX07dmFyIGVycm9ycz17MDpcIlwiLDE6XCJVbmFjY2VwdGFibGUgcHJvdG9jb2wgdmVyc2lvblwiLDI6XCJJZGVudGlmaWVyIHJlamVjdGVkXCIsMzpcIlNlcnZlciB1bmF2YWlsYWJsZVwiLDQ6XCJCYWQgdXNlcm5hbWUgb3IgcGFzc3dvcmRcIiw1OlwiTm90IGF1dGhvcml6ZWRcIiwxNjpcIk5vIG1hdGNoaW5nIHN1YnNjcmliZXJzXCIsMTc6XCJObyBzdWJzY3JpcHRpb24gZXhpc3RlZFwiLDEyODpcIlVuc3BlY2lmaWVkIGVycm9yXCIsMTI5OlwiTWFsZm9ybWVkIFBhY2tldFwiLDEzMDpcIlByb3RvY29sIEVycm9yXCIsMTMxOlwiSW1wbGVtZW50YXRpb24gc3BlY2lmaWMgZXJyb3JcIiwxMzI6XCJVbnN1cHBvcnRlZCBQcm90b2NvbCBWZXJzaW9uXCIsMTMzOlwiQ2xpZW50IElkZW50aWZpZXIgbm90IHZhbGlkXCIsMTM0OlwiQmFkIFVzZXIgTmFtZSBvciBQYXNzd29yZFwiLDEzNTpcIk5vdCBhdXRob3JpemVkXCIsMTM2OlwiU2VydmVyIHVuYXZhaWxhYmxlXCIsMTM3OlwiU2VydmVyIGJ1c3lcIiwxMzg6XCJCYW5uZWRcIiwxMzk6XCJTZXJ2ZXIgc2h1dHRpbmcgZG93blwiLDE0MDpcIkJhZCBhdXRoZW50aWNhdGlvbiBtZXRob2RcIiwxNDE6XCJLZWVwIEFsaXZlIHRpbWVvdXRcIiwxNDI6XCJTZXNzaW9uIHRha2VuIG92ZXJcIiwxNDM6XCJUb3BpYyBGaWx0ZXIgaW52YWxpZFwiLDE0NDpcIlRvcGljIE5hbWUgaW52YWxpZFwiLDE0NTpcIlBhY2tldCBpZGVudGlmaWVyIGluIHVzZVwiLDE0NjpcIlBhY2tldCBJZGVudGlmaWVyIG5vdCBmb3VuZFwiLDE0NzpcIlJlY2VpdmUgTWF4aW11bSBleGNlZWRlZFwiLDE0ODpcIlRvcGljIEFsaWFzIGludmFsaWRcIiwxNDk6XCJQYWNrZXQgdG9vIGxhcmdlXCIsMTUwOlwiTWVzc2FnZSByYXRlIHRvbyBoaWdoXCIsMTUxOlwiUXVvdGEgZXhjZWVkZWRcIiwxNTI6XCJBZG1pbmlzdHJhdGl2ZSBhY3Rpb25cIiwxNTM6XCJQYXlsb2FkIGZvcm1hdCBpbnZhbGlkXCIsMTU0OlwiUmV0YWluIG5vdCBzdXBwb3J0ZWRcIiwxNTU6XCJRb1Mgbm90IHN1cHBvcnRlZFwiLDE1NjpcIlVzZSBhbm90aGVyIHNlcnZlclwiLDE1NzpcIlNlcnZlciBtb3ZlZFwiLDE1ODpcIlNoYXJlZCBTdWJzY3JpcHRpb25zIG5vdCBzdXBwb3J0ZWRcIiwxNTk6XCJDb25uZWN0aW9uIHJhdGUgZXhjZWVkZWRcIiwxNjA6XCJNYXhpbXVtIGNvbm5lY3QgdGltZVwiLDE2MTpcIlN1YnNjcmlwdGlvbiBJZGVudGlmaWVycyBub3Qgc3VwcG9ydGVkXCIsMTYyOlwiV2lsZGNhcmQgU3Vic2NyaXB0aW9ucyBub3Qgc3VwcG9ydGVkXCJ9O2Z1bmN0aW9uIGRlZmF1bHRJZCgpe3JldHVyblwibXF0dGpzX1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMTYpLnN1YnN0cigyLDgpfWZ1bmN0aW9uIHNlbmRQYWNrZXQoY2xpZW50LHBhY2tldCxjYil7Y2xpZW50LmVtaXQoXCJwYWNrZXRzZW5kXCIscGFja2V0KTt2YXIgcmVzdWx0PW1xdHRQYWNrZXQud3JpdGVUb1N0cmVhbShwYWNrZXQsY2xpZW50LnN0cmVhbSxjbGllbnQub3B0aW9ucyk7aWYoIXJlc3VsdCYmY2Ipe2NsaWVudC5zdHJlYW0ub25jZShcImRyYWluXCIsY2IpfWVsc2UgaWYoY2Ipe2NiKCl9fWZ1bmN0aW9uIGZsdXNoKHF1ZXVlKXtpZihxdWV1ZSl7T2JqZWN0LmtleXMocXVldWUpLmZvckVhY2goZnVuY3Rpb24obWVzc2FnZUlkKXtpZih0eXBlb2YgcXVldWVbbWVzc2FnZUlkXS5jYj09PVwiZnVuY3Rpb25cIil7cXVldWVbbWVzc2FnZUlkXS5jYihuZXcgRXJyb3IoXCJDb25uZWN0aW9uIGNsb3NlZFwiKSk7ZGVsZXRlIHF1ZXVlW21lc3NhZ2VJZF19fSl9fWZ1bmN0aW9uIGZsdXNoVm9sYXRpbGUocXVldWUpe2lmKHF1ZXVlKXtPYmplY3Qua2V5cyhxdWV1ZSkuZm9yRWFjaChmdW5jdGlvbihtZXNzYWdlSWQpe2lmKHF1ZXVlW21lc3NhZ2VJZF0udm9sYXRpbGUmJnR5cGVvZiBxdWV1ZVttZXNzYWdlSWRdLmNiPT09XCJmdW5jdGlvblwiKXtxdWV1ZVttZXNzYWdlSWRdLmNiKG5ldyBFcnJvcihcIkNvbm5lY3Rpb24gY2xvc2VkXCIpKTtkZWxldGUgcXVldWVbbWVzc2FnZUlkXX19KX19ZnVuY3Rpb24gc3RvcmVBbmRTZW5kKGNsaWVudCxwYWNrZXQsY2IsY2JTdG9yZVB1dCl7Y2xpZW50Lm91dGdvaW5nU3RvcmUucHV0KHBhY2tldCxmdW5jdGlvbiBzdG9yZWRQYWNrZXQoZXJyKXtpZihlcnIpe3JldHVybiBjYiYmY2IoZXJyKX1jYlN0b3JlUHV0KCk7c2VuZFBhY2tldChjbGllbnQscGFja2V0LGNiKX0pfWZ1bmN0aW9uIG5vcCgpe31mdW5jdGlvbiBNcXR0Q2xpZW50KHN0cmVhbUJ1aWxkZXIsb3B0aW9ucyl7dmFyIGs7dmFyIHRoYXQ9dGhpcztpZighKHRoaXMgaW5zdGFuY2VvZiBNcXR0Q2xpZW50KSl7cmV0dXJuIG5ldyBNcXR0Q2xpZW50KHN0cmVhbUJ1aWxkZXIsb3B0aW9ucyl9dGhpcy5vcHRpb25zPW9wdGlvbnN8fHt9O2ZvcihrIGluIGRlZmF1bHRDb25uZWN0T3B0aW9ucyl7aWYodHlwZW9mIHRoaXMub3B0aW9uc1trXT09PVwidW5kZWZpbmVkXCIpe3RoaXMub3B0aW9uc1trXT1kZWZhdWx0Q29ubmVjdE9wdGlvbnNba119ZWxzZXt0aGlzLm9wdGlvbnNba109b3B0aW9uc1trXX19dGhpcy5vcHRpb25zLmNsaWVudElkPXR5cGVvZiBvcHRpb25zLmNsaWVudElkPT09XCJzdHJpbmdcIj9vcHRpb25zLmNsaWVudElkOmRlZmF1bHRJZCgpO3RoaXMub3B0aW9ucy5jdXN0b21IYW5kbGVBY2tzPW9wdGlvbnMucHJvdG9jb2xWZXJzaW9uPT09NSYmb3B0aW9ucy5jdXN0b21IYW5kbGVBY2tzP29wdGlvbnMuY3VzdG9tSGFuZGxlQWNrczpmdW5jdGlvbigpe2FyZ3VtZW50c1szXSgwKX07dGhpcy5zdHJlYW1CdWlsZGVyPXN0cmVhbUJ1aWxkZXI7dGhpcy5vdXRnb2luZ1N0b3JlPW9wdGlvbnMub3V0Z29pbmdTdG9yZXx8bmV3IFN0b3JlO3RoaXMuaW5jb21pbmdTdG9yZT1vcHRpb25zLmluY29taW5nU3RvcmV8fG5ldyBTdG9yZTt0aGlzLnF1ZXVlUW9TWmVybz1vcHRpb25zLnF1ZXVlUW9TWmVybz09PXVuZGVmaW5lZD90cnVlOm9wdGlvbnMucXVldWVRb1NaZXJvO3RoaXMuX3Jlc3Vic2NyaWJlVG9waWNzPXt9O3RoaXMubWVzc2FnZUlkVG9Ub3BpYz17fTt0aGlzLnBpbmdUaW1lcj1udWxsO3RoaXMuY29ubmVjdGVkPWZhbHNlO3RoaXMuZGlzY29ubmVjdGluZz1mYWxzZTt0aGlzLnF1ZXVlPVtdO3RoaXMuY29ubmFja1RpbWVyPW51bGw7dGhpcy5yZWNvbm5lY3RUaW1lcj1udWxsO3RoaXMuX3N0b3JlUHJvY2Vzc2luZz1mYWxzZTt0aGlzLl9wYWNrZXRJZHNEdXJpbmdTdG9yZVByb2Nlc3Npbmc9e307dGhpcy5uZXh0SWQ9TWF0aC5tYXgoMSxNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqNjU1MzUpKTt0aGlzLm91dGdvaW5nPXt9O3RoaXMuX2ZpcnN0Q29ubmVjdGlvbj10cnVlO3RoaXMub24oXCJjbG9zZVwiLGZ1bmN0aW9uKCl7dGhpcy5jb25uZWN0ZWQ9ZmFsc2U7Y2xlYXJUaW1lb3V0KHRoaXMuY29ubmFja1RpbWVyKX0pO3RoaXMub24oXCJjb25uZWN0XCIsZnVuY3Rpb24oKXt2YXIgcXVldWU9dGhpcy5xdWV1ZTtmdW5jdGlvbiBkZWxpdmVyKCl7dmFyIGVudHJ5PXF1ZXVlLnNoaWZ0KCk7dmFyIHBhY2tldD1udWxsO2lmKCFlbnRyeSl7cmV0dXJufXBhY2tldD1lbnRyeS5wYWNrZXQ7dGhhdC5fc2VuZFBhY2tldChwYWNrZXQsZnVuY3Rpb24oZXJyKXtpZihlbnRyeS5jYil7ZW50cnkuY2IoZXJyKX1kZWxpdmVyKCl9KX1kZWxpdmVyKCl9KTt0aGlzLm9uKFwiY2xvc2VcIixmdW5jdGlvbigpe2lmKHRoYXQucGluZ1RpbWVyIT09bnVsbCl7dGhhdC5waW5nVGltZXIuY2xlYXIoKTt0aGF0LnBpbmdUaW1lcj1udWxsfX0pO3RoaXMub24oXCJjbG9zZVwiLHRoaXMuX3NldHVwUmVjb25uZWN0KTtldmVudHMuRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7dGhpcy5fc2V0dXBTdHJlYW0oKX1pbmhlcml0cyhNcXR0Q2xpZW50LGV2ZW50cy5FdmVudEVtaXR0ZXIpO01xdHRDbGllbnQucHJvdG90eXBlLl9zZXR1cFN0cmVhbT1mdW5jdGlvbigpe3ZhciBjb25uZWN0UGFja2V0O3ZhciB0aGF0PXRoaXM7dmFyIHdyaXRhYmxlPW5ldyBXcml0YWJsZTt2YXIgcGFyc2VyPW1xdHRQYWNrZXQucGFyc2VyKHRoaXMub3B0aW9ucyk7dmFyIGNvbXBsZXRlUGFyc2U9bnVsbDt2YXIgcGFja2V0cz1bXTt0aGlzLl9jbGVhclJlY29ubmVjdCgpO3RoaXMuc3RyZWFtPXRoaXMuc3RyZWFtQnVpbGRlcih0aGlzKTtwYXJzZXIub24oXCJwYWNrZXRcIixmdW5jdGlvbihwYWNrZXQpe3BhY2tldHMucHVzaChwYWNrZXQpfSk7ZnVuY3Rpb24gbmV4dFRpY2tXb3JrKCl7aWYocGFja2V0cy5sZW5ndGgpe3Byb2Nlc3MubmV4dFRpY2sod29yayl9ZWxzZXt2YXIgZG9uZT1jb21wbGV0ZVBhcnNlO2NvbXBsZXRlUGFyc2U9bnVsbDtkb25lKCl9fWZ1bmN0aW9uIHdvcmsoKXt2YXIgcGFja2V0PXBhY2tldHMuc2hpZnQoKTtpZihwYWNrZXQpe3RoYXQuX2hhbmRsZVBhY2tldChwYWNrZXQsbmV4dFRpY2tXb3JrKX1lbHNle3ZhciBkb25lPWNvbXBsZXRlUGFyc2U7Y29tcGxldGVQYXJzZT1udWxsO2lmKGRvbmUpZG9uZSgpfX13cml0YWJsZS5fd3JpdGU9ZnVuY3Rpb24oYnVmLGVuYyxkb25lKXtjb21wbGV0ZVBhcnNlPWRvbmU7cGFyc2VyLnBhcnNlKGJ1Zik7d29yaygpfTt0aGlzLnN0cmVhbS5waXBlKHdyaXRhYmxlKTt0aGlzLnN0cmVhbS5vbihcImVycm9yXCIsbm9wKTt0aGlzLnN0cmVhbS5vbihcImNsb3NlXCIsZnVuY3Rpb24oKXtmbHVzaFZvbGF0aWxlKHRoYXQub3V0Z29pbmcpO3RoYXQuZW1pdChcImNsb3NlXCIpfSk7Y29ubmVjdFBhY2tldD1PYmplY3QuY3JlYXRlKHRoaXMub3B0aW9ucyk7Y29ubmVjdFBhY2tldC5jbWQ9XCJjb25uZWN0XCI7c2VuZFBhY2tldCh0aGlzLGNvbm5lY3RQYWNrZXQpO3BhcnNlci5vbihcImVycm9yXCIsdGhpcy5lbWl0LmJpbmQodGhpcyxcImVycm9yXCIpKTtpZih0aGlzLm9wdGlvbnMucHJvcGVydGllcyl7aWYoIXRoaXMub3B0aW9ucy5wcm9wZXJ0aWVzLmF1dGhlbnRpY2F0aW9uTWV0aG9kJiZ0aGlzLm9wdGlvbnMucHJvcGVydGllcy5hdXRoZW50aWNhdGlvbkRhdGEpe3RoaXMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiUGFja2V0IGhhcyBubyBBdXRoZW50aWNhdGlvbiBNZXRob2RcIikpO3JldHVybiB0aGlzfWlmKHRoaXMub3B0aW9ucy5wcm9wZXJ0aWVzLmF1dGhlbnRpY2F0aW9uTWV0aG9kJiZ0aGlzLm9wdGlvbnMuYXV0aFBhY2tldCYmdHlwZW9mIHRoaXMub3B0aW9ucy5hdXRoUGFja2V0PT09XCJvYmplY3RcIil7dmFyIGF1dGhQYWNrZXQ9eHRlbmQoe2NtZDpcImF1dGhcIixyZWFzb25Db2RlOjB9LHRoaXMub3B0aW9ucy5hdXRoUGFja2V0KTtzZW5kUGFja2V0KHRoaXMsYXV0aFBhY2tldCl9fXRoaXMuc3RyZWFtLnNldE1heExpc3RlbmVycygxZTMpO2NsZWFyVGltZW91dCh0aGlzLmNvbm5hY2tUaW1lcik7dGhpcy5jb25uYWNrVGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe3RoYXQuX2NsZWFuVXAodHJ1ZSl9LHRoaXMub3B0aW9ucy5jb25uZWN0VGltZW91dCl9O01xdHRDbGllbnQucHJvdG90eXBlLl9oYW5kbGVQYWNrZXQ9ZnVuY3Rpb24ocGFja2V0LGRvbmUpe3ZhciBvcHRpb25zPXRoaXMub3B0aW9ucztpZihvcHRpb25zLnByb3RvY29sVmVyc2lvbj09PTUmJm9wdGlvbnMucHJvcGVydGllcyYmb3B0aW9ucy5wcm9wZXJ0aWVzLm1heGltdW1QYWNrZXRTaXplJiZvcHRpb25zLnByb3BlcnRpZXMubWF4aW11bVBhY2tldFNpemU8cGFja2V0Lmxlbmd0aCl7dGhpcy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJleGNlZWRpbmcgcGFja2V0cyBzaXplIFwiK3BhY2tldC5jbWQpKTt0aGlzLmVuZCh7cmVhc29uQ29kZToxNDkscHJvcGVydGllczp7cmVhc29uU3RyaW5nOlwiTWF4aW11bSBwYWNrZXQgc2l6ZSB3YXMgZXhjZWVkZWRcIn19KTtyZXR1cm4gdGhpc310aGlzLmVtaXQoXCJwYWNrZXRyZWNlaXZlXCIscGFja2V0KTtzd2l0Y2gocGFja2V0LmNtZCl7Y2FzZVwicHVibGlzaFwiOnRoaXMuX2hhbmRsZVB1Ymxpc2gocGFja2V0LGRvbmUpO2JyZWFrO2Nhc2VcInB1YmFja1wiOmNhc2VcInB1YnJlY1wiOmNhc2VcInB1YmNvbXBcIjpjYXNlXCJzdWJhY2tcIjpjYXNlXCJ1bnN1YmFja1wiOnRoaXMuX2hhbmRsZUFjayhwYWNrZXQpO2RvbmUoKTticmVhaztjYXNlXCJwdWJyZWxcIjp0aGlzLl9oYW5kbGVQdWJyZWwocGFja2V0LGRvbmUpO2JyZWFrO2Nhc2VcImNvbm5hY2tcIjp0aGlzLl9oYW5kbGVDb25uYWNrKHBhY2tldCk7ZG9uZSgpO2JyZWFrO2Nhc2VcInBpbmdyZXNwXCI6dGhpcy5faGFuZGxlUGluZ3Jlc3AocGFja2V0KTtkb25lKCk7YnJlYWs7Y2FzZVwiZGlzY29ubmVjdFwiOnRoaXMuX2hhbmRsZURpc2Nvbm5lY3QocGFja2V0KTtkb25lKCk7YnJlYWs7ZGVmYXVsdDpicmVha319O01xdHRDbGllbnQucHJvdG90eXBlLl9jaGVja0Rpc2Nvbm5lY3Rpbmc9ZnVuY3Rpb24oY2FsbGJhY2spe2lmKHRoaXMuZGlzY29ubmVjdGluZyl7aWYoY2FsbGJhY2spe2NhbGxiYWNrKG5ldyBFcnJvcihcImNsaWVudCBkaXNjb25uZWN0aW5nXCIpKX1lbHNle3RoaXMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiY2xpZW50IGRpc2Nvbm5lY3RpbmdcIikpfX1yZXR1cm4gdGhpcy5kaXNjb25uZWN0aW5nfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5wdWJsaXNoPWZ1bmN0aW9uKHRvcGljLG1lc3NhZ2Usb3B0cyxjYWxsYmFjayl7dmFyIHBhY2tldDt2YXIgb3B0aW9ucz10aGlzLm9wdGlvbnM7aWYodHlwZW9mIG9wdHM9PT1cImZ1bmN0aW9uXCIpe2NhbGxiYWNrPW9wdHM7b3B0cz1udWxsfXZhciBkZWZhdWx0T3B0cz17cW9zOjAscmV0YWluOmZhbHNlLGR1cDpmYWxzZX07b3B0cz14dGVuZChkZWZhdWx0T3B0cyxvcHRzKTtpZih0aGlzLl9jaGVja0Rpc2Nvbm5lY3RpbmcoY2FsbGJhY2spKXtyZXR1cm4gdGhpc31wYWNrZXQ9e2NtZDpcInB1Ymxpc2hcIix0b3BpYzp0b3BpYyxwYXlsb2FkOm1lc3NhZ2UscW9zOm9wdHMucW9zLHJldGFpbjpvcHRzLnJldGFpbixtZXNzYWdlSWQ6dGhpcy5fbmV4dElkKCksZHVwOm9wdHMuZHVwfTtpZihvcHRpb25zLnByb3RvY29sVmVyc2lvbj09PTUpe3BhY2tldC5wcm9wZXJ0aWVzPW9wdHMucHJvcGVydGllcztpZighb3B0aW9ucy5wcm9wZXJ0aWVzJiZwYWNrZXQucHJvcGVydGllcyYmcGFja2V0LnByb3BlcnRpZXMudG9waWNBbGlhc3x8b3B0cy5wcm9wZXJ0aWVzJiZvcHRpb25zLnByb3BlcnRpZXMmJihvcHRzLnByb3BlcnRpZXMudG9waWNBbGlhcyYmb3B0aW9ucy5wcm9wZXJ0aWVzLnRvcGljQWxpYXNNYXhpbXVtJiZvcHRzLnByb3BlcnRpZXMudG9waWNBbGlhcz5vcHRpb25zLnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW18fCFvcHRpb25zLnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW0mJm9wdHMucHJvcGVydGllcy50b3BpY0FsaWFzKSl7ZGVsZXRlIHBhY2tldC5wcm9wZXJ0aWVzLnRvcGljQWxpYXN9fXN3aXRjaChvcHRzLnFvcyl7Y2FzZSAxOmNhc2UgMjp0aGlzLm91dGdvaW5nW3BhY2tldC5tZXNzYWdlSWRdPXt2b2xhdGlsZTpmYWxzZSxjYjpjYWxsYmFja3x8bm9wfTtpZih0aGlzLl9zdG9yZVByb2Nlc3Npbmcpe3RoaXMuX3BhY2tldElkc0R1cmluZ1N0b3JlUHJvY2Vzc2luZ1twYWNrZXQubWVzc2FnZUlkXT1mYWxzZTt0aGlzLl9zdG9yZVBhY2tldChwYWNrZXQsdW5kZWZpbmVkLG9wdHMuY2JTdG9yZVB1dCl9ZWxzZXt0aGlzLl9zZW5kUGFja2V0KHBhY2tldCx1bmRlZmluZWQsb3B0cy5jYlN0b3JlUHV0KX1icmVhaztkZWZhdWx0OmlmKHRoaXMuX3N0b3JlUHJvY2Vzc2luZyl7dGhpcy5fc3RvcmVQYWNrZXQocGFja2V0LGNhbGxiYWNrLG9wdHMuY2JTdG9yZVB1dCl9ZWxzZXt0aGlzLl9zZW5kUGFja2V0KHBhY2tldCxjYWxsYmFjayxvcHRzLmNiU3RvcmVQdXQpfWJyZWFrfXJldHVybiB0aGlzfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5zdWJzY3JpYmU9ZnVuY3Rpb24oKXt2YXIgcGFja2V0O3ZhciBhcmdzPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtmb3IodmFyIGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXthcmdzW2ldPWFyZ3VtZW50c1tpXX12YXIgc3Vicz1bXTt2YXIgb2JqPWFyZ3Muc2hpZnQoKTt2YXIgcmVzdWJzY3JpYmU9b2JqLnJlc3Vic2NyaWJlO3ZhciBjYWxsYmFjaz1hcmdzLnBvcCgpfHxub3A7dmFyIG9wdHM9YXJncy5wb3AoKTt2YXIgaW52YWxpZFRvcGljO3ZhciB0aGF0PXRoaXM7dmFyIHZlcnNpb249dGhpcy5vcHRpb25zLnByb3RvY29sVmVyc2lvbjtkZWxldGUgb2JqLnJlc3Vic2NyaWJlO2lmKHR5cGVvZiBvYmo9PT1cInN0cmluZ1wiKXtvYmo9W29ial19aWYodHlwZW9mIGNhbGxiYWNrIT09XCJmdW5jdGlvblwiKXtvcHRzPWNhbGxiYWNrO2NhbGxiYWNrPW5vcH1pbnZhbGlkVG9waWM9dmFsaWRhdGlvbnMudmFsaWRhdGVUb3BpY3Mob2JqKTtpZihpbnZhbGlkVG9waWMhPT1udWxsKXtzZXRJbW1lZGlhdGUoY2FsbGJhY2ssbmV3IEVycm9yKFwiSW52YWxpZCB0b3BpYyBcIitpbnZhbGlkVG9waWMpKTtyZXR1cm4gdGhpc31pZih0aGlzLl9jaGVja0Rpc2Nvbm5lY3RpbmcoY2FsbGJhY2spKXtyZXR1cm4gdGhpc312YXIgZGVmYXVsdE9wdHM9e3FvczowfTtpZih2ZXJzaW9uPT09NSl7ZGVmYXVsdE9wdHMubmw9ZmFsc2U7ZGVmYXVsdE9wdHMucmFwPWZhbHNlO2RlZmF1bHRPcHRzLnJoPTB9b3B0cz14dGVuZChkZWZhdWx0T3B0cyxvcHRzKTtpZihBcnJheS5pc0FycmF5KG9iaikpe29iai5mb3JFYWNoKGZ1bmN0aW9uKHRvcGljKXtpZighdGhhdC5fcmVzdWJzY3JpYmVUb3BpY3MuaGFzT3duUHJvcGVydHkodG9waWMpfHx0aGF0Ll9yZXN1YnNjcmliZVRvcGljc1t0b3BpY10ucW9zPG9wdHMucW9zfHxyZXN1YnNjcmliZSl7dmFyIGN1cnJlbnRPcHRzPXt0b3BpYzp0b3BpYyxxb3M6b3B0cy5xb3N9O2lmKHZlcnNpb249PT01KXtjdXJyZW50T3B0cy5ubD1vcHRzLm5sO2N1cnJlbnRPcHRzLnJhcD1vcHRzLnJhcDtjdXJyZW50T3B0cy5yaD1vcHRzLnJoO2N1cnJlbnRPcHRzLnByb3BlcnRpZXM9b3B0cy5wcm9wZXJ0aWVzfXN1YnMucHVzaChjdXJyZW50T3B0cyl9fSl9ZWxzZXtPYmplY3Qua2V5cyhvYmopLmZvckVhY2goZnVuY3Rpb24oayl7aWYoIXRoYXQuX3Jlc3Vic2NyaWJlVG9waWNzLmhhc093blByb3BlcnR5KGspfHx0aGF0Ll9yZXN1YnNjcmliZVRvcGljc1trXS5xb3M8b2JqW2tdLnFvc3x8cmVzdWJzY3JpYmUpe3ZhciBjdXJyZW50T3B0cz17dG9waWM6ayxxb3M6b2JqW2tdLnFvc307aWYodmVyc2lvbj09PTUpe2N1cnJlbnRPcHRzLm5sPW9ialtrXS5ubDtjdXJyZW50T3B0cy5yYXA9b2JqW2tdLnJhcDtjdXJyZW50T3B0cy5yaD1vYmpba10ucmg7Y3VycmVudE9wdHMucHJvcGVydGllcz1vcHRzLnByb3BlcnRpZXN9c3Vicy5wdXNoKGN1cnJlbnRPcHRzKX19KX1wYWNrZXQ9e2NtZDpcInN1YnNjcmliZVwiLHN1YnNjcmlwdGlvbnM6c3Vicyxxb3M6MSxyZXRhaW46ZmFsc2UsZHVwOmZhbHNlLG1lc3NhZ2VJZDp0aGlzLl9uZXh0SWQoKX07aWYob3B0cy5wcm9wZXJ0aWVzKXtwYWNrZXQucHJvcGVydGllcz1vcHRzLnByb3BlcnRpZXN9aWYoIXN1YnMubGVuZ3RoKXtjYWxsYmFjayhudWxsLFtdKTtyZXR1cm59aWYodGhpcy5vcHRpb25zLnJlc3Vic2NyaWJlKXt2YXIgdG9waWNzPVtdO3N1YnMuZm9yRWFjaChmdW5jdGlvbihzdWIpe2lmKHRoYXQub3B0aW9ucy5yZWNvbm5lY3RQZXJpb2Q+MCl7dmFyIHRvcGljPXtxb3M6c3ViLnFvc307aWYodmVyc2lvbj09PTUpe3RvcGljLm5sPXN1Yi5ubHx8ZmFsc2U7dG9waWMucmFwPXN1Yi5yYXB8fGZhbHNlO3RvcGljLnJoPXN1Yi5yaHx8MDt0b3BpYy5wcm9wZXJ0aWVzPXN1Yi5wcm9wZXJ0aWVzfXRoYXQuX3Jlc3Vic2NyaWJlVG9waWNzW3N1Yi50b3BpY109dG9waWM7dG9waWNzLnB1c2goc3ViLnRvcGljKX19KTt0aGF0Lm1lc3NhZ2VJZFRvVG9waWNbcGFja2V0Lm1lc3NhZ2VJZF09dG9waWNzfXRoaXMub3V0Z29pbmdbcGFja2V0Lm1lc3NhZ2VJZF09e3ZvbGF0aWxlOnRydWUsY2I6ZnVuY3Rpb24oZXJyLHBhY2tldCl7aWYoIWVycil7dmFyIGdyYW50ZWQ9cGFja2V0LmdyYW50ZWQ7Zm9yKHZhciBpPTA7aTxncmFudGVkLmxlbmd0aDtpKz0xKXtzdWJzW2ldLnFvcz1ncmFudGVkW2ldfX1jYWxsYmFjayhlcnIsc3Vicyl9fTt0aGlzLl9zZW5kUGFja2V0KHBhY2tldCk7cmV0dXJuIHRoaXN9O01xdHRDbGllbnQucHJvdG90eXBlLnVuc3Vic2NyaWJlPWZ1bmN0aW9uKCl7dmFyIHBhY2tldD17Y21kOlwidW5zdWJzY3JpYmVcIixxb3M6MSxtZXNzYWdlSWQ6dGhpcy5fbmV4dElkKCl9O3ZhciB0aGF0PXRoaXM7dmFyIGFyZ3M9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpO2Zvcih2YXIgaT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe2FyZ3NbaV09YXJndW1lbnRzW2ldfXZhciB0b3BpYz1hcmdzLnNoaWZ0KCk7dmFyIGNhbGxiYWNrPWFyZ3MucG9wKCl8fG5vcDt2YXIgb3B0cz1hcmdzLnBvcCgpO2lmKHR5cGVvZiB0b3BpYz09PVwic3RyaW5nXCIpe3RvcGljPVt0b3BpY119aWYodHlwZW9mIGNhbGxiYWNrIT09XCJmdW5jdGlvblwiKXtvcHRzPWNhbGxiYWNrO2NhbGxiYWNrPW5vcH1pZih0aGlzLl9jaGVja0Rpc2Nvbm5lY3RpbmcoY2FsbGJhY2spKXtyZXR1cm4gdGhpc31pZih0eXBlb2YgdG9waWM9PT1cInN0cmluZ1wiKXtwYWNrZXQudW5zdWJzY3JpcHRpb25zPVt0b3BpY119ZWxzZSBpZih0eXBlb2YgdG9waWM9PT1cIm9iamVjdFwiJiZ0b3BpYy5sZW5ndGgpe3BhY2tldC51bnN1YnNjcmlwdGlvbnM9dG9waWN9aWYodGhpcy5vcHRpb25zLnJlc3Vic2NyaWJlKXtwYWNrZXQudW5zdWJzY3JpcHRpb25zLmZvckVhY2goZnVuY3Rpb24odG9waWMpe2RlbGV0ZSB0aGF0Ll9yZXN1YnNjcmliZVRvcGljc1t0b3BpY119KX1pZih0eXBlb2Ygb3B0cz09PVwib2JqZWN0XCImJm9wdHMucHJvcGVydGllcyl7cGFja2V0LnByb3BlcnRpZXM9b3B0cy5wcm9wZXJ0aWVzfXRoaXMub3V0Z29pbmdbcGFja2V0Lm1lc3NhZ2VJZF09e3ZvbGF0aWxlOnRydWUsY2I6Y2FsbGJhY2t9O3RoaXMuX3NlbmRQYWNrZXQocGFja2V0KTtyZXR1cm4gdGhpc307TXF0dENsaWVudC5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKCl7dmFyIHRoYXQ9dGhpczt2YXIgZm9yY2U9YXJndW1lbnRzWzBdO3ZhciBvcHRzPWFyZ3VtZW50c1sxXTt2YXIgY2I9YXJndW1lbnRzWzJdO2lmKGZvcmNlPT1udWxsfHx0eXBlb2YgZm9yY2UhPT1cImJvb2xlYW5cIil7Y2I9b3B0c3x8bm9wO29wdHM9Zm9yY2U7Zm9yY2U9ZmFsc2U7aWYodHlwZW9mIG9wdHMhPT1cIm9iamVjdFwiKXtjYj1vcHRzO29wdHM9bnVsbDtpZih0eXBlb2YgY2IhPT1cImZ1bmN0aW9uXCIpe2NiPW5vcH19fWlmKHR5cGVvZiBvcHRzIT09XCJvYmplY3RcIil7Y2I9b3B0cztvcHRzPW51bGx9Y2I9Y2J8fG5vcDtmdW5jdGlvbiBjbG9zZVN0b3Jlcygpe3RoYXQuZGlzY29ubmVjdGVkPXRydWU7dGhhdC5pbmNvbWluZ1N0b3JlLmNsb3NlKGZ1bmN0aW9uKCl7dGhhdC5vdXRnb2luZ1N0b3JlLmNsb3NlKGZ1bmN0aW9uKCl7aWYoY2Ipe2NiLmFwcGx5KG51bGwsYXJndW1lbnRzKX10aGF0LmVtaXQoXCJlbmRcIil9KX0pO2lmKHRoYXQuX2RlZmVycmVkUmVjb25uZWN0KXt0aGF0Ll9kZWZlcnJlZFJlY29ubmVjdCgpfX1mdW5jdGlvbiBmaW5pc2goKXt0aGF0Ll9jbGVhblVwKGZvcmNlLHNldEltbWVkaWF0ZS5iaW5kKG51bGwsY2xvc2VTdG9yZXMpLG9wdHMpfWlmKHRoaXMuZGlzY29ubmVjdGluZyl7cmV0dXJuIHRoaXN9dGhpcy5fY2xlYXJSZWNvbm5lY3QoKTt0aGlzLmRpc2Nvbm5lY3Rpbmc9dHJ1ZTtpZighZm9yY2UmJk9iamVjdC5rZXlzKHRoaXMub3V0Z29pbmcpLmxlbmd0aD4wKXt0aGlzLm9uY2UoXCJvdXRnb2luZ0VtcHR5XCIsc2V0VGltZW91dC5iaW5kKG51bGwsZmluaXNoLDEwKSl9ZWxzZXtmaW5pc2goKX1yZXR1cm4gdGhpc307TXF0dENsaWVudC5wcm90b3R5cGUucmVtb3ZlT3V0Z29pbmdNZXNzYWdlPWZ1bmN0aW9uKG1pZCl7dmFyIGNiPXRoaXMub3V0Z29pbmdbbWlkXT90aGlzLm91dGdvaW5nW21pZF0uY2I6bnVsbDtkZWxldGUgdGhpcy5vdXRnb2luZ1ttaWRdO3RoaXMub3V0Z29pbmdTdG9yZS5kZWwoe21lc3NhZ2VJZDptaWR9LGZ1bmN0aW9uKCl7Y2IobmV3IEVycm9yKFwiTWVzc2FnZSByZW1vdmVkXCIpKX0pO3JldHVybiB0aGlzfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5yZWNvbm5lY3Q9ZnVuY3Rpb24ob3B0cyl7dmFyIHRoYXQ9dGhpczt2YXIgZj1mdW5jdGlvbigpe2lmKG9wdHMpe3RoYXQub3B0aW9ucy5pbmNvbWluZ1N0b3JlPW9wdHMuaW5jb21pbmdTdG9yZTt0aGF0Lm9wdGlvbnMub3V0Z29pbmdTdG9yZT1vcHRzLm91dGdvaW5nU3RvcmV9ZWxzZXt0aGF0Lm9wdGlvbnMuaW5jb21pbmdTdG9yZT1udWxsO3RoYXQub3B0aW9ucy5vdXRnb2luZ1N0b3JlPW51bGx9dGhhdC5pbmNvbWluZ1N0b3JlPXRoYXQub3B0aW9ucy5pbmNvbWluZ1N0b3JlfHxuZXcgU3RvcmU7dGhhdC5vdXRnb2luZ1N0b3JlPXRoYXQub3B0aW9ucy5vdXRnb2luZ1N0b3JlfHxuZXcgU3RvcmU7dGhhdC5kaXNjb25uZWN0aW5nPWZhbHNlO3RoYXQuZGlzY29ubmVjdGVkPWZhbHNlO3RoYXQuX2RlZmVycmVkUmVjb25uZWN0PW51bGw7dGhhdC5fcmVjb25uZWN0KCl9O2lmKHRoaXMuZGlzY29ubmVjdGluZyYmIXRoaXMuZGlzY29ubmVjdGVkKXt0aGlzLl9kZWZlcnJlZFJlY29ubmVjdD1mfWVsc2V7ZigpfXJldHVybiB0aGlzfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5fcmVjb25uZWN0PWZ1bmN0aW9uKCl7dGhpcy5lbWl0KFwicmVjb25uZWN0XCIpO3RoaXMuX3NldHVwU3RyZWFtKCl9O01xdHRDbGllbnQucHJvdG90eXBlLl9zZXR1cFJlY29ubmVjdD1mdW5jdGlvbigpe3ZhciB0aGF0PXRoaXM7aWYoIXRoYXQuZGlzY29ubmVjdGluZyYmIXRoYXQucmVjb25uZWN0VGltZXImJnRoYXQub3B0aW9ucy5yZWNvbm5lY3RQZXJpb2Q+MCl7aWYoIXRoaXMucmVjb25uZWN0aW5nKXt0aGlzLmVtaXQoXCJvZmZsaW5lXCIpO3RoaXMucmVjb25uZWN0aW5nPXRydWV9dGhhdC5yZWNvbm5lY3RUaW1lcj1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3RoYXQuX3JlY29ubmVjdCgpfSx0aGF0Lm9wdGlvbnMucmVjb25uZWN0UGVyaW9kKX19O01xdHRDbGllbnQucHJvdG90eXBlLl9jbGVhclJlY29ubmVjdD1mdW5jdGlvbigpe2lmKHRoaXMucmVjb25uZWN0VGltZXIpe2NsZWFySW50ZXJ2YWwodGhpcy5yZWNvbm5lY3RUaW1lcik7dGhpcy5yZWNvbm5lY3RUaW1lcj1udWxsfX07TXF0dENsaWVudC5wcm90b3R5cGUuX2NsZWFuVXA9ZnVuY3Rpb24oZm9yY2VkLGRvbmUpe3ZhciBvcHRzPWFyZ3VtZW50c1syXTtpZihkb25lKXt0aGlzLnN0cmVhbS5vbihcImNsb3NlXCIsZG9uZSl9aWYoZm9yY2VkKXtpZih0aGlzLm9wdGlvbnMucmVjb25uZWN0UGVyaW9kPT09MCYmdGhpcy5vcHRpb25zLmNsZWFuKXtmbHVzaCh0aGlzLm91dGdvaW5nKX10aGlzLnN0cmVhbS5kZXN0cm95KCl9ZWxzZXt2YXIgcGFja2V0PXh0ZW5kKHtjbWQ6XCJkaXNjb25uZWN0XCJ9LG9wdHMpO3RoaXMuX3NlbmRQYWNrZXQocGFja2V0LHNldEltbWVkaWF0ZS5iaW5kKG51bGwsdGhpcy5zdHJlYW0uZW5kLmJpbmQodGhpcy5zdHJlYW0pKSl9aWYoIXRoaXMuZGlzY29ubmVjdGluZyl7dGhpcy5fY2xlYXJSZWNvbm5lY3QoKTt0aGlzLl9zZXR1cFJlY29ubmVjdCgpfWlmKHRoaXMucGluZ1RpbWVyIT09bnVsbCl7dGhpcy5waW5nVGltZXIuY2xlYXIoKTt0aGlzLnBpbmdUaW1lcj1udWxsfWlmKGRvbmUmJiF0aGlzLmNvbm5lY3RlZCl7dGhpcy5zdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLGRvbmUpO2RvbmUoKX19O01xdHRDbGllbnQucHJvdG90eXBlLl9zZW5kUGFja2V0PWZ1bmN0aW9uKHBhY2tldCxjYixjYlN0b3JlUHV0KXtjYlN0b3JlUHV0PWNiU3RvcmVQdXR8fG5vcDtpZighdGhpcy5jb25uZWN0ZWQpe3RoaXMuX3N0b3JlUGFja2V0KHBhY2tldCxjYixjYlN0b3JlUHV0KTtyZXR1cm59dGhpcy5fc2hpZnRQaW5nSW50ZXJ2YWwoKTtzd2l0Y2gocGFja2V0LmNtZCl7Y2FzZVwicHVibGlzaFwiOmJyZWFrO2Nhc2VcInB1YnJlbFwiOnN0b3JlQW5kU2VuZCh0aGlzLHBhY2tldCxjYixjYlN0b3JlUHV0KTtyZXR1cm47ZGVmYXVsdDpzZW5kUGFja2V0KHRoaXMscGFja2V0LGNiKTtyZXR1cm59c3dpdGNoKHBhY2tldC5xb3Mpe2Nhc2UgMjpjYXNlIDE6c3RvcmVBbmRTZW5kKHRoaXMscGFja2V0LGNiLGNiU3RvcmVQdXQpO2JyZWFrO2Nhc2UgMDpkZWZhdWx0OnNlbmRQYWNrZXQodGhpcyxwYWNrZXQsY2IpO2JyZWFrfX07TXF0dENsaWVudC5wcm90b3R5cGUuX3N0b3JlUGFja2V0PWZ1bmN0aW9uKHBhY2tldCxjYixjYlN0b3JlUHV0KXtjYlN0b3JlUHV0PWNiU3RvcmVQdXR8fG5vcDtpZigocGFja2V0LnFvc3x8MCk9PT0wJiZ0aGlzLnF1ZXVlUW9TWmVyb3x8cGFja2V0LmNtZCE9PVwicHVibGlzaFwiKXt0aGlzLnF1ZXVlLnB1c2goe3BhY2tldDpwYWNrZXQsY2I6Y2J9KX1lbHNlIGlmKHBhY2tldC5xb3M+MCl7Y2I9dGhpcy5vdXRnb2luZ1twYWNrZXQubWVzc2FnZUlkXT90aGlzLm91dGdvaW5nW3BhY2tldC5tZXNzYWdlSWRdLmNiOm51bGw7dGhpcy5vdXRnb2luZ1N0b3JlLnB1dChwYWNrZXQsZnVuY3Rpb24oZXJyKXtpZihlcnIpe3JldHVybiBjYiYmY2IoZXJyKX1jYlN0b3JlUHV0KCl9KX1lbHNlIGlmKGNiKXtjYihuZXcgRXJyb3IoXCJObyBjb25uZWN0aW9uIHRvIGJyb2tlclwiKSl9fTtNcXR0Q2xpZW50LnByb3RvdHlwZS5fc2V0dXBQaW5nVGltZXI9ZnVuY3Rpb24oKXt2YXIgdGhhdD10aGlzO2lmKCF0aGlzLnBpbmdUaW1lciYmdGhpcy5vcHRpb25zLmtlZXBhbGl2ZSl7dGhpcy5waW5nUmVzcD10cnVlO3RoaXMucGluZ1RpbWVyPXJlSW50ZXJ2YWwoZnVuY3Rpb24oKXt0aGF0Ll9jaGVja1BpbmcoKX0sdGhpcy5vcHRpb25zLmtlZXBhbGl2ZSoxZTMpfX07TXF0dENsaWVudC5wcm90b3R5cGUuX3NoaWZ0UGluZ0ludGVydmFsPWZ1bmN0aW9uKCl7aWYodGhpcy5waW5nVGltZXImJnRoaXMub3B0aW9ucy5rZWVwYWxpdmUmJnRoaXMub3B0aW9ucy5yZXNjaGVkdWxlUGluZ3Mpe3RoaXMucGluZ1RpbWVyLnJlc2NoZWR1bGUodGhpcy5vcHRpb25zLmtlZXBhbGl2ZSoxZTMpfX07TXF0dENsaWVudC5wcm90b3R5cGUuX2NoZWNrUGluZz1mdW5jdGlvbigpe2lmKHRoaXMucGluZ1Jlc3Ape3RoaXMucGluZ1Jlc3A9ZmFsc2U7dGhpcy5fc2VuZFBhY2tldCh7Y21kOlwicGluZ3JlcVwifSl9ZWxzZXt0aGlzLl9jbGVhblVwKHRydWUpfX07TXF0dENsaWVudC5wcm90b3R5cGUuX2hhbmRsZVBpbmdyZXNwPWZ1bmN0aW9uKCl7dGhpcy5waW5nUmVzcD10cnVlfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5faGFuZGxlQ29ubmFjaz1mdW5jdGlvbihwYWNrZXQpe3ZhciBvcHRpb25zPXRoaXMub3B0aW9uczt2YXIgdmVyc2lvbj1vcHRpb25zLnByb3RvY29sVmVyc2lvbjt2YXIgcmM9dmVyc2lvbj09PTU/cGFja2V0LnJlYXNvbkNvZGU6cGFja2V0LnJldHVybkNvZGU7Y2xlYXJUaW1lb3V0KHRoaXMuY29ubmFja1RpbWVyKTtpZihwYWNrZXQucHJvcGVydGllcyl7aWYocGFja2V0LnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW0pe2lmKCFvcHRpb25zLnByb3BlcnRpZXMpe29wdGlvbnMucHJvcGVydGllcz17fX1vcHRpb25zLnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW09cGFja2V0LnByb3BlcnRpZXMudG9waWNBbGlhc01heGltdW19aWYocGFja2V0LnByb3BlcnRpZXMuc2VydmVyS2VlcEFsaXZlJiZvcHRpb25zLmtlZXBhbGl2ZSl7b3B0aW9ucy5rZWVwYWxpdmU9cGFja2V0LnByb3BlcnRpZXMuc2VydmVyS2VlcEFsaXZlO3RoaXMuX3NoaWZ0UGluZ0ludGVydmFsKCl9aWYocGFja2V0LnByb3BlcnRpZXMubWF4aW11bVBhY2tldFNpemUpe2lmKCFvcHRpb25zLnByb3BlcnRpZXMpe29wdGlvbnMucHJvcGVydGllcz17fX1vcHRpb25zLnByb3BlcnRpZXMubWF4aW11bVBhY2tldFNpemU9cGFja2V0LnByb3BlcnRpZXMubWF4aW11bVBhY2tldFNpemV9fWlmKHJjPT09MCl7dGhpcy5yZWNvbm5lY3Rpbmc9ZmFsc2U7dGhpcy5fb25Db25uZWN0KHBhY2tldCl9ZWxzZSBpZihyYz4wKXt2YXIgZXJyPW5ldyBFcnJvcihcIkNvbm5lY3Rpb24gcmVmdXNlZDogXCIrZXJyb3JzW3JjXSk7ZXJyLmNvZGU9cmM7dGhpcy5lbWl0KFwiZXJyb3JcIixlcnIpfX07TXF0dENsaWVudC5wcm90b3R5cGUuX2hhbmRsZVB1Ymxpc2g9ZnVuY3Rpb24ocGFja2V0LGRvbmUpe2RvbmU9dHlwZW9mIGRvbmUhPT1cInVuZGVmaW5lZFwiP2RvbmU6bm9wO3ZhciB0b3BpYz1wYWNrZXQudG9waWMudG9TdHJpbmcoKTt2YXIgbWVzc2FnZT1wYWNrZXQucGF5bG9hZDt2YXIgcW9zPXBhY2tldC5xb3M7dmFyIG1pZD1wYWNrZXQubWVzc2FnZUlkO3ZhciB0aGF0PXRoaXM7dmFyIG9wdGlvbnM9dGhpcy5vcHRpb25zO3ZhciB2YWxpZFJlYXNvbkNvZGVzPVswLDE2LDEyOCwxMzEsMTM1LDE0NCwxNDUsMTUxLDE1M107c3dpdGNoKHFvcyl7Y2FzZSAyOntvcHRpb25zLmN1c3RvbUhhbmRsZUFja3ModG9waWMsbWVzc2FnZSxwYWNrZXQsZnVuY3Rpb24oZXJyb3IsY29kZSl7aWYoIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSl7Y29kZT1lcnJvcjtlcnJvcj1udWxsfWlmKGVycm9yKXtyZXR1cm4gdGhhdC5lbWl0KFwiZXJyb3JcIixlcnJvcil9aWYodmFsaWRSZWFzb25Db2Rlcy5pbmRleE9mKGNvZGUpPT09LTEpe3JldHVybiB0aGF0LmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIldyb25nIHJlYXNvbiBjb2RlIGZvciBwdWJyZWNcIikpfWlmKGNvZGUpe3RoYXQuX3NlbmRQYWNrZXQoe2NtZDpcInB1YnJlY1wiLG1lc3NhZ2VJZDptaWQscmVhc29uQ29kZTpjb2RlfSxkb25lKX1lbHNle3RoYXQuaW5jb21pbmdTdG9yZS5wdXQocGFja2V0LGZ1bmN0aW9uKCl7dGhhdC5fc2VuZFBhY2tldCh7Y21kOlwicHVicmVjXCIsbWVzc2FnZUlkOm1pZH0sZG9uZSl9KX19KTticmVha31jYXNlIDE6e29wdGlvbnMuY3VzdG9tSGFuZGxlQWNrcyh0b3BpYyxtZXNzYWdlLHBhY2tldCxmdW5jdGlvbihlcnJvcixjb2RlKXtpZighKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpKXtjb2RlPWVycm9yO2Vycm9yPW51bGx9aWYoZXJyb3Ipe3JldHVybiB0aGF0LmVtaXQoXCJlcnJvclwiLGVycm9yKX1pZih2YWxpZFJlYXNvbkNvZGVzLmluZGV4T2YoY29kZSk9PT0tMSl7cmV0dXJuIHRoYXQuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiV3JvbmcgcmVhc29uIGNvZGUgZm9yIHB1YmFja1wiKSl9aWYoIWNvZGUpe3RoYXQuZW1pdChcIm1lc3NhZ2VcIix0b3BpYyxtZXNzYWdlLHBhY2tldCl9dGhhdC5oYW5kbGVNZXNzYWdlKHBhY2tldCxmdW5jdGlvbihlcnIpe2lmKGVycil7cmV0dXJuIGRvbmUmJmRvbmUoZXJyKX10aGF0Ll9zZW5kUGFja2V0KHtjbWQ6XCJwdWJhY2tcIixtZXNzYWdlSWQ6bWlkLHJlYXNvbkNvZGU6Y29kZX0sZG9uZSl9KX0pO2JyZWFrfWNhc2UgMDp0aGlzLmVtaXQoXCJtZXNzYWdlXCIsdG9waWMsbWVzc2FnZSxwYWNrZXQpO3RoaXMuaGFuZGxlTWVzc2FnZShwYWNrZXQsZG9uZSk7YnJlYWs7ZGVmYXVsdDpicmVha319O01xdHRDbGllbnQucHJvdG90eXBlLmhhbmRsZU1lc3NhZ2U9ZnVuY3Rpb24ocGFja2V0LGNhbGxiYWNrKXtjYWxsYmFjaygpfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5faGFuZGxlQWNrPWZ1bmN0aW9uKHBhY2tldCl7dmFyIG1pZD1wYWNrZXQubWVzc2FnZUlkO3ZhciB0eXBlPXBhY2tldC5jbWQ7dmFyIHJlc3BvbnNlPW51bGw7dmFyIGNiPXRoaXMub3V0Z29pbmdbbWlkXT90aGlzLm91dGdvaW5nW21pZF0uY2I6bnVsbDt2YXIgdGhhdD10aGlzO3ZhciBlcnI7aWYoIWNiKXtyZXR1cm59c3dpdGNoKHR5cGUpe2Nhc2VcInB1YmNvbXBcIjpjYXNlXCJwdWJhY2tcIjp2YXIgcHViYWNrUkM9cGFja2V0LnJlYXNvbkNvZGU7aWYocHViYWNrUkMmJnB1YmFja1JDPjAmJnB1YmFja1JDIT09MTYpe2Vycj1uZXcgRXJyb3IoXCJQdWJsaXNoIGVycm9yOiBcIitlcnJvcnNbcHViYWNrUkNdKTtlcnIuY29kZT1wdWJhY2tSQztjYihlcnIscGFja2V0KX1kZWxldGUgdGhpcy5vdXRnb2luZ1ttaWRdO3RoaXMub3V0Z29pbmdTdG9yZS5kZWwocGFja2V0LGNiKTticmVhaztjYXNlXCJwdWJyZWNcIjpyZXNwb25zZT17Y21kOlwicHVicmVsXCIscW9zOjIsbWVzc2FnZUlkOm1pZH07dmFyIHB1YnJlY1JDPXBhY2tldC5yZWFzb25Db2RlO2lmKHB1YnJlY1JDJiZwdWJyZWNSQz4wJiZwdWJyZWNSQyE9PTE2KXtlcnI9bmV3IEVycm9yKFwiUHVibGlzaCBlcnJvcjogXCIrZXJyb3JzW3B1YnJlY1JDXSk7ZXJyLmNvZGU9cHVicmVjUkM7Y2IoZXJyLHBhY2tldCl9ZWxzZXt0aGlzLl9zZW5kUGFja2V0KHJlc3BvbnNlKX1icmVhaztjYXNlXCJzdWJhY2tcIjpkZWxldGUgdGhpcy5vdXRnb2luZ1ttaWRdO2Zvcih2YXIgZ3JhbnRlZEk9MDtncmFudGVkSTxwYWNrZXQuZ3JhbnRlZC5sZW5ndGg7Z3JhbnRlZEkrKyl7aWYoKHBhY2tldC5ncmFudGVkW2dyYW50ZWRJXSYxMjgpIT09MCl7dmFyIHRvcGljcz10aGlzLm1lc3NhZ2VJZFRvVG9waWNbbWlkXTtpZih0b3BpY3Mpe3RvcGljcy5mb3JFYWNoKGZ1bmN0aW9uKHRvcGljKXtkZWxldGUgdGhhdC5fcmVzdWJzY3JpYmVUb3BpY3NbdG9waWNdfSl9fX1jYihudWxsLHBhY2tldCk7YnJlYWs7Y2FzZVwidW5zdWJhY2tcIjpkZWxldGUgdGhpcy5vdXRnb2luZ1ttaWRdO2NiKG51bGwpO2JyZWFrO2RlZmF1bHQ6dGhhdC5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJ1bnJlY29nbml6ZWQgcGFja2V0IHR5cGVcIikpfWlmKHRoaXMuZGlzY29ubmVjdGluZyYmT2JqZWN0LmtleXModGhpcy5vdXRnb2luZykubGVuZ3RoPT09MCl7dGhpcy5lbWl0KFwib3V0Z29pbmdFbXB0eVwiKX19O01xdHRDbGllbnQucHJvdG90eXBlLl9oYW5kbGVQdWJyZWw9ZnVuY3Rpb24ocGFja2V0LGNhbGxiYWNrKXtjYWxsYmFjaz10eXBlb2YgY2FsbGJhY2shPT1cInVuZGVmaW5lZFwiP2NhbGxiYWNrOm5vcDt2YXIgbWlkPXBhY2tldC5tZXNzYWdlSWQ7dmFyIHRoYXQ9dGhpczt2YXIgY29tcD17Y21kOlwicHViY29tcFwiLG1lc3NhZ2VJZDptaWR9O3RoYXQuaW5jb21pbmdTdG9yZS5nZXQocGFja2V0LGZ1bmN0aW9uKGVycixwdWIpe2lmKCFlcnIpe3RoYXQuZW1pdChcIm1lc3NhZ2VcIixwdWIudG9waWMscHViLnBheWxvYWQscHViKTt0aGF0LmhhbmRsZU1lc3NhZ2UocHViLGZ1bmN0aW9uKGVycil7aWYoZXJyKXtyZXR1cm4gY2FsbGJhY2soZXJyKX10aGF0LmluY29taW5nU3RvcmUuZGVsKHB1Yixub3ApO3RoYXQuX3NlbmRQYWNrZXQoY29tcCxjYWxsYmFjayl9KX1lbHNle3RoYXQuX3NlbmRQYWNrZXQoY29tcCxjYWxsYmFjayl9fSl9O01xdHRDbGllbnQucHJvdG90eXBlLl9oYW5kbGVEaXNjb25uZWN0PWZ1bmN0aW9uKHBhY2tldCl7dGhpcy5lbWl0KFwiZGlzY29ubmVjdFwiLHBhY2tldCl9O01xdHRDbGllbnQucHJvdG90eXBlLl9uZXh0SWQ9ZnVuY3Rpb24oKXt2YXIgaWQ9dGhpcy5uZXh0SWQrKztpZih0aGlzLm5leHRJZD09PTY1NTM2KXt0aGlzLm5leHRJZD0xfXJldHVybiBpZH07TXF0dENsaWVudC5wcm90b3R5cGUuZ2V0TGFzdE1lc3NhZ2VJZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5leHRJZD09PTE/NjU1MzU6dGhpcy5uZXh0SWQtMX07TXF0dENsaWVudC5wcm90b3R5cGUuX3Jlc3Vic2NyaWJlPWZ1bmN0aW9uKGNvbm5hY2spe3ZhciBfcmVzdWJzY3JpYmVUb3BpY3NLZXlzPU9iamVjdC5rZXlzKHRoaXMuX3Jlc3Vic2NyaWJlVG9waWNzKTtpZighdGhpcy5fZmlyc3RDb25uZWN0aW9uJiYodGhpcy5vcHRpb25zLmNsZWFufHx0aGlzLm9wdGlvbnMucHJvdG9jb2xWZXJzaW9uPT09NSYmIWNvbm5hY2suc2Vzc2lvblByZXNlbnQpJiZfcmVzdWJzY3JpYmVUb3BpY3NLZXlzLmxlbmd0aD4wKXtpZih0aGlzLm9wdGlvbnMucmVzdWJzY3JpYmUpe2lmKHRoaXMub3B0aW9ucy5wcm90b2NvbFZlcnNpb249PT01KXtmb3IodmFyIHRvcGljST0wO3RvcGljSTxfcmVzdWJzY3JpYmVUb3BpY3NLZXlzLmxlbmd0aDt0b3BpY0krKyl7dmFyIHJlc3Vic2NyaWJlVG9waWM9e307cmVzdWJzY3JpYmVUb3BpY1tfcmVzdWJzY3JpYmVUb3BpY3NLZXlzW3RvcGljSV1dPXRoaXMuX3Jlc3Vic2NyaWJlVG9waWNzW19yZXN1YnNjcmliZVRvcGljc0tleXNbdG9waWNJXV07cmVzdWJzY3JpYmVUb3BpYy5yZXN1YnNjcmliZT10cnVlO3RoaXMuc3Vic2NyaWJlKHJlc3Vic2NyaWJlVG9waWMse3Byb3BlcnRpZXM6cmVzdWJzY3JpYmVUb3BpY1tfcmVzdWJzY3JpYmVUb3BpY3NLZXlzW3RvcGljSV1dLnByb3BlcnRpZXN9KX19ZWxzZXt0aGlzLl9yZXN1YnNjcmliZVRvcGljcy5yZXN1YnNjcmliZT10cnVlO3RoaXMuc3Vic2NyaWJlKHRoaXMuX3Jlc3Vic2NyaWJlVG9waWNzKX19ZWxzZXt0aGlzLl9yZXN1YnNjcmliZVRvcGljcz17fX19dGhpcy5fZmlyc3RDb25uZWN0aW9uPWZhbHNlfTtNcXR0Q2xpZW50LnByb3RvdHlwZS5fb25Db25uZWN0PWZ1bmN0aW9uKHBhY2tldCl7aWYodGhpcy5kaXNjb25uZWN0ZWQpe3RoaXMuZW1pdChcImNvbm5lY3RcIixwYWNrZXQpO3JldHVybn12YXIgdGhhdD10aGlzO3RoaXMuX3NldHVwUGluZ1RpbWVyKCk7dGhpcy5fcmVzdWJzY3JpYmUocGFja2V0KTt0aGlzLmNvbm5lY3RlZD10cnVlO2Z1bmN0aW9uIHN0YXJ0U3RyZWFtUHJvY2Vzcygpe3ZhciBvdXRTdG9yZT10aGF0Lm91dGdvaW5nU3RvcmUuY3JlYXRlU3RyZWFtKCk7ZnVuY3Rpb24gY2xlYXJTdG9yZVByb2Nlc3NpbmcoKXt0aGF0Ll9zdG9yZVByb2Nlc3Npbmc9ZmFsc2U7dGhhdC5fcGFja2V0SWRzRHVyaW5nU3RvcmVQcm9jZXNzaW5nPXt9fXRoYXQub25jZShcImNsb3NlXCIscmVtb3ZlKTtvdXRTdG9yZS5vbihcImVycm9yXCIsZnVuY3Rpb24oZXJyKXtjbGVhclN0b3JlUHJvY2Vzc2luZygpO3RoYXQucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLHJlbW92ZSk7dGhhdC5lbWl0KFwiZXJyb3JcIixlcnIpfSk7ZnVuY3Rpb24gcmVtb3ZlKCl7b3V0U3RvcmUuZGVzdHJveSgpO291dFN0b3JlPW51bGw7Y2xlYXJTdG9yZVByb2Nlc3NpbmcoKX1mdW5jdGlvbiBzdG9yZURlbGl2ZXIoKXtpZighb3V0U3RvcmUpe3JldHVybn10aGF0Ll9zdG9yZVByb2Nlc3Npbmc9dHJ1ZTt2YXIgcGFja2V0PW91dFN0b3JlLnJlYWQoMSk7dmFyIGNiO2lmKCFwYWNrZXQpe291dFN0b3JlLm9uY2UoXCJyZWFkYWJsZVwiLHN0b3JlRGVsaXZlcik7cmV0dXJufWlmKHRoYXQuX3BhY2tldElkc0R1cmluZ1N0b3JlUHJvY2Vzc2luZ1twYWNrZXQubWVzc2FnZUlkXSl7c3RvcmVEZWxpdmVyKCk7cmV0dXJufWlmKCF0aGF0LmRpc2Nvbm5lY3RpbmcmJiF0aGF0LnJlY29ubmVjdFRpbWVyKXtjYj10aGF0Lm91dGdvaW5nW3BhY2tldC5tZXNzYWdlSWRdP3RoYXQub3V0Z29pbmdbcGFja2V0Lm1lc3NhZ2VJZF0uY2I6bnVsbDt0aGF0Lm91dGdvaW5nW3BhY2tldC5tZXNzYWdlSWRdPXt2b2xhdGlsZTpmYWxzZSxjYjpmdW5jdGlvbihlcnIsc3RhdHVzKXtpZihjYil7Y2IoZXJyLHN0YXR1cyl9c3RvcmVEZWxpdmVyKCl9fTt0aGF0Ll9wYWNrZXRJZHNEdXJpbmdTdG9yZVByb2Nlc3NpbmdbcGFja2V0Lm1lc3NhZ2VJZF09dHJ1ZTt0aGF0Ll9zZW5kUGFja2V0KHBhY2tldCl9ZWxzZSBpZihvdXRTdG9yZS5kZXN0cm95KXtvdXRTdG9yZS5kZXN0cm95KCl9fW91dFN0b3JlLm9uKFwiZW5kXCIsZnVuY3Rpb24oKXt2YXIgYWxsUHJvY2Vzc2VkPXRydWU7Zm9yKHZhciBpZCBpbiB0aGF0Ll9wYWNrZXRJZHNEdXJpbmdTdG9yZVByb2Nlc3Npbmcpe2lmKCF0aGF0Ll9wYWNrZXRJZHNEdXJpbmdTdG9yZVByb2Nlc3NpbmdbaWRdKXthbGxQcm9jZXNzZWQ9ZmFsc2U7YnJlYWt9fWlmKGFsbFByb2Nlc3NlZCl7Y2xlYXJTdG9yZVByb2Nlc3NpbmcoKTt0aGF0LnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixyZW1vdmUpO3RoYXQuZW1pdChcImNvbm5lY3RcIixwYWNrZXQpfWVsc2V7c3RhcnRTdHJlYW1Qcm9jZXNzKCl9fSk7c3RvcmVEZWxpdmVyKCl9c3RhcnRTdHJlYW1Qcm9jZXNzKCl9O21vZHVsZS5leHBvcnRzPU1xdHRDbGllbnR9KS5jYWxsKHRoaXMscmVxdWlyZShcIl9wcm9jZXNzXCIpLHR5cGVvZiBnbG9iYWwhPT1cInVuZGVmaW5lZFwiP2dsb2JhbDp0eXBlb2Ygc2VsZiE9PVwidW5kZWZpbmVkXCI/c2VsZjp0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIj93aW5kb3c6e30pfSx7XCIuL3N0b3JlXCI6NyxcIi4vdmFsaWRhdGlvbnNcIjo4LF9wcm9jZXNzOjkyLGV2ZW50czoxMyxpbmhlcml0czo4MCxcIm1xdHQtcGFja2V0XCI6ODQsXCJyZWFkYWJsZS1zdHJlYW1cIjoxMDgscmVpbnRlcnZhbDoxMDkseHRlbmQ6MTIxfV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7KGZ1bmN0aW9uKEJ1ZmZlcil7XCJ1c2Ugc3RyaWN0XCI7dmFyIFRyYW5zZm9ybT1yZXF1aXJlKFwicmVhZGFibGUtc3RyZWFtXCIpLlRyYW5zZm9ybTt2YXIgZHVwbGV4aWZ5PXJlcXVpcmUoXCJkdXBsZXhpZnlcIik7dmFyIGJhc2U2ND1yZXF1aXJlKFwiYmFzZTY0LWpzXCIpO3ZhciBteTt2YXIgcHJveHk7dmFyIHN0cmVhbTt2YXIgaXNJbml0aWFsaXplZD1mYWxzZTtmdW5jdGlvbiBidWlsZFByb3h5KCl7dmFyIHByb3h5PW5ldyBUcmFuc2Zvcm07cHJveHkuX3dyaXRlPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLG5leHQpe215LnNlbmRTb2NrZXRNZXNzYWdlKHtkYXRhOmNodW5rLmJ1ZmZlcixzdWNjZXNzOmZ1bmN0aW9uKCl7bmV4dCgpfSxmYWlsOmZ1bmN0aW9uKCl7bmV4dChuZXcgRXJyb3IpfX0pfTtwcm94eS5fZmx1c2g9ZnVuY3Rpb24gc29ja2V0RW5kKGRvbmUpe215LmNsb3NlU29ja2V0KHtzdWNjZXNzOmZ1bmN0aW9uKCl7ZG9uZSgpfX0pfTtyZXR1cm4gcHJveHl9ZnVuY3Rpb24gc2V0RGVmYXVsdE9wdHMob3B0cyl7aWYoIW9wdHMuaG9zdG5hbWUpe29wdHMuaG9zdG5hbWU9XCJsb2NhbGhvc3RcIn1pZighb3B0cy5wYXRoKXtvcHRzLnBhdGg9XCIvXCJ9aWYoIW9wdHMud3NPcHRpb25zKXtvcHRzLndzT3B0aW9ucz17fX19ZnVuY3Rpb24gYnVpbGRVcmwob3B0cyxjbGllbnQpe3ZhciBwcm90b2NvbD1vcHRzLnByb3RvY29sPT09XCJhbGlzXCI/XCJ3c3NcIjpcIndzXCI7dmFyIHVybD1wcm90b2NvbCtcIjovL1wiK29wdHMuaG9zdG5hbWUrb3B0cy5wYXRoO2lmKG9wdHMucG9ydCYmb3B0cy5wb3J0IT09ODAmJm9wdHMucG9ydCE9PTQ0Myl7dXJsPXByb3RvY29sK1wiOi8vXCIrb3B0cy5ob3N0bmFtZStcIjpcIitvcHRzLnBvcnQrb3B0cy5wYXRofWlmKHR5cGVvZiBvcHRzLnRyYW5zZm9ybVdzVXJsPT09XCJmdW5jdGlvblwiKXt1cmw9b3B0cy50cmFuc2Zvcm1Xc1VybCh1cmwsb3B0cyxjbGllbnQpfXJldHVybiB1cmx9ZnVuY3Rpb24gYmluZEV2ZW50SGFuZGxlcigpe2lmKGlzSW5pdGlhbGl6ZWQpcmV0dXJuO2lzSW5pdGlhbGl6ZWQ9dHJ1ZTtteS5vblNvY2tldE9wZW4oZnVuY3Rpb24oKXtzdHJlYW0uc2V0UmVhZGFibGUocHJveHkpO3N0cmVhbS5zZXRXcml0YWJsZShwcm94eSk7c3RyZWFtLmVtaXQoXCJjb25uZWN0XCIpfSk7bXkub25Tb2NrZXRNZXNzYWdlKGZ1bmN0aW9uKHJlcyl7aWYodHlwZW9mIHJlcy5kYXRhPT09XCJzdHJpbmdcIil7dmFyIGFycmF5PWJhc2U2NC50b0J5dGVBcnJheShyZXMuZGF0YSk7dmFyIGJ1ZmZlcj1CdWZmZXIuZnJvbShhcnJheSk7cHJveHkucHVzaChidWZmZXIpfWVsc2V7dmFyIHJlYWRlcj1uZXcgRmlsZVJlYWRlcjtyZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbigpe3ZhciBkYXRhPXJlYWRlci5yZXN1bHQ7aWYoZGF0YSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKWRhdGE9QnVmZmVyLmZyb20oZGF0YSk7ZWxzZSBkYXRhPUJ1ZmZlci5mcm9tKGRhdGEsXCJ1dGY4XCIpO3Byb3h5LnB1c2goZGF0YSl9KTtyZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIocmVzLmRhdGEpfX0pO215Lm9uU29ja2V0Q2xvc2UoZnVuY3Rpb24oKXtzdHJlYW0uZW5kKCk7c3RyZWFtLmRlc3Ryb3koKX0pO215Lm9uU29ja2V0RXJyb3IoZnVuY3Rpb24ocmVzKXtzdHJlYW0uZGVzdHJveShyZXMpfSl9ZnVuY3Rpb24gYnVpbGRTdHJlYW0oY2xpZW50LG9wdHMpe29wdHMuaG9zdG5hbWU9b3B0cy5ob3N0bmFtZXx8b3B0cy5ob3N0O2lmKCFvcHRzLmhvc3RuYW1lKXt0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZGV0ZXJtaW5lIGhvc3QuIFNwZWNpZnkgaG9zdCBtYW51YWxseS5cIil9dmFyIHdlYnNvY2tldFN1YlByb3RvY29sPW9wdHMucHJvdG9jb2xJZD09PVwiTVFJc2RwXCImJm9wdHMucHJvdG9jb2xWZXJzaW9uPT09Mz9cIm1xdHR2My4xXCI6XCJtcXR0XCI7c2V0RGVmYXVsdE9wdHMob3B0cyk7dmFyIHVybD1idWlsZFVybChvcHRzLGNsaWVudCk7bXk9b3B0cy5teTtteS5jb25uZWN0U29ja2V0KHt1cmw6dXJsLHByb3RvY29sczp3ZWJzb2NrZXRTdWJQcm90b2NvbH0pO3Byb3h5PWJ1aWxkUHJveHkoKTtzdHJlYW09ZHVwbGV4aWZ5Lm9iaigpO2JpbmRFdmVudEhhbmRsZXIoKTtyZXR1cm4gc3RyZWFtfW1vZHVsZS5leHBvcnRzPWJ1aWxkU3RyZWFtfSkuY2FsbCh0aGlzLHJlcXVpcmUoXCJidWZmZXJcIikuQnVmZmVyKX0se1wiYmFzZTY0LWpzXCI6MTAsYnVmZmVyOjEyLGR1cGxleGlmeToxNyxcInJlYWRhYmxlLXN0cmVhbVwiOjEwOH1dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBuZXQ9cmVxdWlyZShcIm5ldFwiKTtmdW5jdGlvbiBidWlsZEJ1aWxkZXIoY2xpZW50LG9wdHMpe3ZhciBwb3J0LGhvc3Q7b3B0cy5wb3J0PW9wdHMucG9ydHx8MTg4MztvcHRzLmhvc3RuYW1lPW9wdHMuaG9zdG5hbWV8fG9wdHMuaG9zdHx8XCJsb2NhbGhvc3RcIjtwb3J0PW9wdHMucG9ydDtob3N0PW9wdHMuaG9zdG5hbWU7cmV0dXJuIG5ldC5jcmVhdGVDb25uZWN0aW9uKHBvcnQsaG9zdCl9bW9kdWxlLmV4cG9ydHM9YnVpbGRCdWlsZGVyfSx7bmV0OjExfV0sNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHRscz1yZXF1aXJlKFwidGxzXCIpO2Z1bmN0aW9uIGJ1aWxkQnVpbGRlcihtcXR0Q2xpZW50LG9wdHMpe3ZhciBjb25uZWN0aW9uO29wdHMucG9ydD1vcHRzLnBvcnR8fDg4ODM7b3B0cy5ob3N0PW9wdHMuaG9zdG5hbWV8fG9wdHMuaG9zdHx8XCJsb2NhbGhvc3RcIjtvcHRzLnJlamVjdFVuYXV0aG9yaXplZD1vcHRzLnJlamVjdFVuYXV0aG9yaXplZCE9PWZhbHNlO2RlbGV0ZSBvcHRzLnBhdGg7Y29ubmVjdGlvbj10bHMuY29ubmVjdChvcHRzKTtjb25uZWN0aW9uLm9uKFwic2VjdXJlQ29ubmVjdFwiLGZ1bmN0aW9uKCl7aWYob3B0cy5yZWplY3RVbmF1dGhvcml6ZWQmJiFjb25uZWN0aW9uLmF1dGhvcml6ZWQpe2Nvbm5lY3Rpb24uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiVExTIG5vdCBhdXRob3JpemVkXCIpKX1lbHNle2Nvbm5lY3Rpb24ucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGhhbmRsZVRMU2Vycm9ycyl9fSk7ZnVuY3Rpb24gaGFuZGxlVExTZXJyb3JzKGVycil7aWYob3B0cy5yZWplY3RVbmF1dGhvcml6ZWQpe21xdHRDbGllbnQuZW1pdChcImVycm9yXCIsZXJyKX1jb25uZWN0aW9uLmVuZCgpfWNvbm5lY3Rpb24ub24oXCJlcnJvclwiLGhhbmRsZVRMU2Vycm9ycyk7cmV0dXJuIGNvbm5lY3Rpb259bW9kdWxlLmV4cG9ydHM9YnVpbGRCdWlsZGVyfSx7dGxzOjExfV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7KGZ1bmN0aW9uKHByb2Nlc3Mpe1widXNlIHN0cmljdFwiO3ZhciB3ZWJzb2NrZXQ9cmVxdWlyZShcIndlYnNvY2tldC1zdHJlYW1cIik7dmFyIHVybE1vZHVsZT1yZXF1aXJlKFwidXJsXCIpO3ZhciBXU1NfT1BUSU9OUz1bXCJyZWplY3RVbmF1dGhvcml6ZWRcIixcImNhXCIsXCJjZXJ0XCIsXCJrZXlcIixcInBmeFwiLFwicGFzc3BocmFzZVwiXTt2YXIgSVNfQlJPV1NFUj1wcm9jZXNzLnRpdGxlPT09XCJicm93c2VyXCI7ZnVuY3Rpb24gYnVpbGRVcmwob3B0cyxjbGllbnQpe3ZhciB1cmw9b3B0cy5wcm90b2NvbCtcIjovL1wiK29wdHMuaG9zdG5hbWUrXCI6XCIrb3B0cy5wb3J0K29wdHMucGF0aDtpZih0eXBlb2Ygb3B0cy50cmFuc2Zvcm1Xc1VybD09PVwiZnVuY3Rpb25cIil7dXJsPW9wdHMudHJhbnNmb3JtV3NVcmwodXJsLG9wdHMsY2xpZW50KX1yZXR1cm4gdXJsfWZ1bmN0aW9uIHNldERlZmF1bHRPcHRzKG9wdHMpe2lmKCFvcHRzLmhvc3RuYW1lKXtvcHRzLmhvc3RuYW1lPVwibG9jYWxob3N0XCJ9aWYoIW9wdHMucG9ydCl7aWYob3B0cy5wcm90b2NvbD09PVwid3NzXCIpe29wdHMucG9ydD00NDN9ZWxzZXtvcHRzLnBvcnQ9ODB9fWlmKCFvcHRzLnBhdGgpe29wdHMucGF0aD1cIi9cIn1pZighb3B0cy53c09wdGlvbnMpe29wdHMud3NPcHRpb25zPXt9fWlmKCFJU19CUk9XU0VSJiZvcHRzLnByb3RvY29sPT09XCJ3c3NcIil7V1NTX09QVElPTlMuZm9yRWFjaChmdW5jdGlvbihwcm9wKXtpZihvcHRzLmhhc093blByb3BlcnR5KHByb3ApJiYhb3B0cy53c09wdGlvbnMuaGFzT3duUHJvcGVydHkocHJvcCkpe29wdHMud3NPcHRpb25zW3Byb3BdPW9wdHNbcHJvcF19fSl9fWZ1bmN0aW9uIGNyZWF0ZVdlYlNvY2tldChjbGllbnQsb3B0cyl7dmFyIHdlYnNvY2tldFN1YlByb3RvY29sPW9wdHMucHJvdG9jb2xJZD09PVwiTVFJc2RwXCImJm9wdHMucHJvdG9jb2xWZXJzaW9uPT09Mz9cIm1xdHR2My4xXCI6XCJtcXR0XCI7c2V0RGVmYXVsdE9wdHMob3B0cyk7dmFyIHVybD1idWlsZFVybChvcHRzLGNsaWVudCk7cmV0dXJuIHdlYnNvY2tldCh1cmwsW3dlYnNvY2tldFN1YlByb3RvY29sXSxvcHRzLndzT3B0aW9ucyl9ZnVuY3Rpb24gYnVpbGRCdWlsZGVyKGNsaWVudCxvcHRzKXtyZXR1cm4gY3JlYXRlV2ViU29ja2V0KGNsaWVudCxvcHRzKX1mdW5jdGlvbiBidWlsZEJ1aWxkZXJCcm93c2VyKGNsaWVudCxvcHRzKXtpZighb3B0cy5ob3N0bmFtZSl7b3B0cy5ob3N0bmFtZT1vcHRzLmhvc3R9aWYoIW9wdHMuaG9zdG5hbWUpe2lmKHR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCIpe3Rocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBkZXRlcm1pbmUgaG9zdC4gU3BlY2lmeSBob3N0IG1hbnVhbGx5LlwiKX12YXIgcGFyc2VkPXVybE1vZHVsZS5wYXJzZShkb2N1bWVudC5VUkwpO29wdHMuaG9zdG5hbWU9cGFyc2VkLmhvc3RuYW1lO2lmKCFvcHRzLnBvcnQpe29wdHMucG9ydD1wYXJzZWQucG9ydH19cmV0dXJuIGNyZWF0ZVdlYlNvY2tldChjbGllbnQsb3B0cyl9aWYoSVNfQlJPV1NFUil7bW9kdWxlLmV4cG9ydHM9YnVpbGRCdWlsZGVyQnJvd3Nlcn1lbHNle21vZHVsZS5leHBvcnRzPWJ1aWxkQnVpbGRlcn19KS5jYWxsKHRoaXMscmVxdWlyZShcIl9wcm9jZXNzXCIpKX0se19wcm9jZXNzOjkyLHVybDoxMTMsXCJ3ZWJzb2NrZXQtc3RyZWFtXCI6MTE4fV0sNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7KGZ1bmN0aW9uKHByb2Nlc3MsQnVmZmVyKXtcInVzZSBzdHJpY3RcIjt2YXIgVHJhbnNmb3JtPXJlcXVpcmUoXCJyZWFkYWJsZS1zdHJlYW1cIikuVHJhbnNmb3JtO3ZhciBkdXBsZXhpZnk9cmVxdWlyZShcImR1cGxleGlmeVwiKTt2YXIgc29ja2V0VGFzazt2YXIgcHJveHk7dmFyIHN0cmVhbTtmdW5jdGlvbiBidWlsZFByb3h5KCl7dmFyIHByb3h5PW5ldyBUcmFuc2Zvcm07cHJveHkuX3dyaXRlPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLG5leHQpe3NvY2tldFRhc2suc2VuZCh7ZGF0YTpjaHVuay5idWZmZXIsc3VjY2VzczpmdW5jdGlvbigpe25leHQoKX0sZmFpbDpmdW5jdGlvbihlcnJNc2cpe25leHQobmV3IEVycm9yKGVyck1zZykpfX0pfTtwcm94eS5fZmx1c2g9ZnVuY3Rpb24gc29ja2V0RW5kKGRvbmUpe3NvY2tldFRhc2suY2xvc2Uoe3N1Y2Nlc3M6ZnVuY3Rpb24oKXtkb25lKCl9fSl9O3JldHVybiBwcm94eX1mdW5jdGlvbiBzZXREZWZhdWx0T3B0cyhvcHRzKXtpZighb3B0cy5ob3N0bmFtZSl7b3B0cy5ob3N0bmFtZT1cImxvY2FsaG9zdFwifWlmKCFvcHRzLnBhdGgpe29wdHMucGF0aD1cIi9cIn1pZighb3B0cy53c09wdGlvbnMpe29wdHMud3NPcHRpb25zPXt9fX1mdW5jdGlvbiBidWlsZFVybChvcHRzLGNsaWVudCl7dmFyIHByb3RvY29sPW9wdHMucHJvdG9jb2w9PT1cInd4c1wiP1wid3NzXCI6XCJ3c1wiO3ZhciB1cmw9cHJvdG9jb2wrXCI6Ly9cIitvcHRzLmhvc3RuYW1lK29wdHMucGF0aDtpZihvcHRzLnBvcnQmJm9wdHMucG9ydCE9PTgwJiZvcHRzLnBvcnQhPT00NDMpe3VybD1wcm90b2NvbCtcIjovL1wiK29wdHMuaG9zdG5hbWUrXCI6XCIrb3B0cy5wb3J0K29wdHMucGF0aH1pZih0eXBlb2Ygb3B0cy50cmFuc2Zvcm1Xc1VybD09PVwiZnVuY3Rpb25cIil7dXJsPW9wdHMudHJhbnNmb3JtV3NVcmwodXJsLG9wdHMsY2xpZW50KX1yZXR1cm4gdXJsfWZ1bmN0aW9uIGJpbmRFdmVudEhhbmRsZXIoKXtzb2NrZXRUYXNrLm9uT3BlbihmdW5jdGlvbigpe3N0cmVhbS5zZXRSZWFkYWJsZShwcm94eSk7c3RyZWFtLnNldFdyaXRhYmxlKHByb3h5KTtzdHJlYW0uZW1pdChcImNvbm5lY3RcIil9KTtzb2NrZXRUYXNrLm9uTWVzc2FnZShmdW5jdGlvbihyZXMpe3ZhciBkYXRhPXJlcy5kYXRhO2lmKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilkYXRhPUJ1ZmZlci5mcm9tKGRhdGEpO2Vsc2UgZGF0YT1CdWZmZXIuZnJvbShkYXRhLFwidXRmOFwiKTtwcm94eS5wdXNoKGRhdGEpfSk7c29ja2V0VGFzay5vbkNsb3NlKGZ1bmN0aW9uKCl7c3RyZWFtLmVuZCgpO3N0cmVhbS5kZXN0cm95KCl9KTtzb2NrZXRUYXNrLm9uRXJyb3IoZnVuY3Rpb24ocmVzKXtzdHJlYW0uZGVzdHJveShuZXcgRXJyb3IocmVzLmVyck1zZykpfSl9ZnVuY3Rpb24gYnVpbGRTdHJlYW0oY2xpZW50LG9wdHMpe29wdHMuaG9zdG5hbWU9b3B0cy5ob3N0bmFtZXx8b3B0cy5ob3N0O2lmKCFvcHRzLmhvc3RuYW1lKXt0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZGV0ZXJtaW5lIGhvc3QuIFNwZWNpZnkgaG9zdCBtYW51YWxseS5cIil9dmFyIHdlYnNvY2tldFN1YlByb3RvY29sPW9wdHMucHJvdG9jb2xJZD09PVwiTVFJc2RwXCImJm9wdHMucHJvdG9jb2xWZXJzaW9uPT09Mz9cIm1xdHR2My4xXCI6XCJtcXR0XCI7c2V0RGVmYXVsdE9wdHMob3B0cyk7dmFyIHVybD1idWlsZFVybChvcHRzLGNsaWVudCk7c29ja2V0VGFzaz13eC5jb25uZWN0U29ja2V0KHt1cmw6dXJsLHByb3RvY29sczp3ZWJzb2NrZXRTdWJQcm90b2NvbH0pO3Byb3h5PWJ1aWxkUHJveHkoKTtzdHJlYW09ZHVwbGV4aWZ5Lm9iaigpO3N0cmVhbS5fZGVzdHJveT1mdW5jdGlvbihlcnIsY2Ipe3NvY2tldFRhc2suY2xvc2Uoe3N1Y2Nlc3M6ZnVuY3Rpb24oKXtjYiYmY2IoZXJyKX19KX07dmFyIGRlc3Ryb3lSZWY9c3RyZWFtLmRlc3Ryb3k7c3RyZWFtLmRlc3Ryb3k9ZnVuY3Rpb24oKXtzdHJlYW0uZGVzdHJveT1kZXN0cm95UmVmO3ZhciBzZWxmPXRoaXM7cHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbigpe3NvY2tldFRhc2suY2xvc2Uoe2ZhaWw6ZnVuY3Rpb24oKXtzZWxmLl9kZXN0cm95KG5ldyBFcnJvcil9fSl9KX0uYmluZChzdHJlYW0pO2JpbmRFdmVudEhhbmRsZXIoKTtyZXR1cm4gc3RyZWFtfW1vZHVsZS5leHBvcnRzPWJ1aWxkU3RyZWFtfSkuY2FsbCh0aGlzLHJlcXVpcmUoXCJfcHJvY2Vzc1wiKSxyZXF1aXJlKFwiYnVmZmVyXCIpLkJ1ZmZlcil9LHtfcHJvY2Vzczo5MixidWZmZXI6MTIsZHVwbGV4aWZ5OjE3LFwicmVhZGFibGUtc3RyZWFtXCI6MTA4fV0sNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7KGZ1bmN0aW9uKHByb2Nlc3Mpe1widXNlIHN0cmljdFwiO3ZhciB4dGVuZD1yZXF1aXJlKFwieHRlbmRcIik7dmFyIFJlYWRhYmxlPXJlcXVpcmUoXCJyZWFkYWJsZS1zdHJlYW1cIikuUmVhZGFibGU7dmFyIHN0cmVhbXNPcHRzPXtvYmplY3RNb2RlOnRydWV9O3ZhciBkZWZhdWx0U3RvcmVPcHRpb25zPXtjbGVhbjp0cnVlfTt2YXIgTWFwPXJlcXVpcmUoXCJlczYtbWFwXCIpO2Z1bmN0aW9uIFN0b3JlKG9wdGlvbnMpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFN0b3JlKSl7cmV0dXJuIG5ldyBTdG9yZShvcHRpb25zKX10aGlzLm9wdGlvbnM9b3B0aW9uc3x8e307dGhpcy5vcHRpb25zPXh0ZW5kKGRlZmF1bHRTdG9yZU9wdGlvbnMsb3B0aW9ucyk7dGhpcy5faW5mbGlnaHRzPW5ldyBNYXB9U3RvcmUucHJvdG90eXBlLnB1dD1mdW5jdGlvbihwYWNrZXQsY2Ipe3RoaXMuX2luZmxpZ2h0cy5zZXQocGFja2V0Lm1lc3NhZ2VJZCxwYWNrZXQpO2lmKGNiKXtjYigpfXJldHVybiB0aGlzfTtTdG9yZS5wcm90b3R5cGUuY3JlYXRlU3RyZWFtPWZ1bmN0aW9uKCl7dmFyIHN0cmVhbT1uZXcgUmVhZGFibGUoc3RyZWFtc09wdHMpO3ZhciBkZXN0cm95ZWQ9ZmFsc2U7dmFyIHZhbHVlcz1bXTt2YXIgaT0wO3RoaXMuX2luZmxpZ2h0cy5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLGtleSl7dmFsdWVzLnB1c2godmFsdWUpfSk7c3RyZWFtLl9yZWFkPWZ1bmN0aW9uKCl7aWYoIWRlc3Ryb3llZCYmaTx2YWx1ZXMubGVuZ3RoKXt0aGlzLnB1c2godmFsdWVzW2krK10pfWVsc2V7dGhpcy5wdXNoKG51bGwpfX07c3RyZWFtLmRlc3Ryb3k9ZnVuY3Rpb24oKXtpZihkZXN0cm95ZWQpe3JldHVybn12YXIgc2VsZj10aGlzO2Rlc3Ryb3llZD10cnVlO3Byb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKXtzZWxmLmVtaXQoXCJjbG9zZVwiKX0pfTtyZXR1cm4gc3RyZWFtfTtTdG9yZS5wcm90b3R5cGUuZGVsPWZ1bmN0aW9uKHBhY2tldCxjYil7cGFja2V0PXRoaXMuX2luZmxpZ2h0cy5nZXQocGFja2V0Lm1lc3NhZ2VJZCk7aWYocGFja2V0KXt0aGlzLl9pbmZsaWdodHMuZGVsZXRlKHBhY2tldC5tZXNzYWdlSWQpO2NiKG51bGwscGFja2V0KX1lbHNlIGlmKGNiKXtjYihuZXcgRXJyb3IoXCJtaXNzaW5nIHBhY2tldFwiKSl9cmV0dXJuIHRoaXN9O1N0b3JlLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24ocGFja2V0LGNiKXtwYWNrZXQ9dGhpcy5faW5mbGlnaHRzLmdldChwYWNrZXQubWVzc2FnZUlkKTtpZihwYWNrZXQpe2NiKG51bGwscGFja2V0KX1lbHNlIGlmKGNiKXtjYihuZXcgRXJyb3IoXCJtaXNzaW5nIHBhY2tldFwiKSl9cmV0dXJuIHRoaXN9O1N0b3JlLnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbihjYil7aWYodGhpcy5vcHRpb25zLmNsZWFuKXt0aGlzLl9pbmZsaWdodHM9bnVsbH1pZihjYil7Y2IoKX19O21vZHVsZS5leHBvcnRzPVN0b3JlfSkuY2FsbCh0aGlzLHJlcXVpcmUoXCJfcHJvY2Vzc1wiKSl9LHtfcHJvY2Vzczo5MixcImVzNi1tYXBcIjo2NyxcInJlYWRhYmxlLXN0cmVhbVwiOjEwOCx4dGVuZDoxMjF9XSw4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB2YWxpZGF0ZVRvcGljKHRvcGljKXt2YXIgcGFydHM9dG9waWMuc3BsaXQoXCIvXCIpO2Zvcih2YXIgaT0wO2k8cGFydHMubGVuZ3RoO2krKyl7aWYocGFydHNbaV09PT1cIitcIil7Y29udGludWV9aWYocGFydHNbaV09PT1cIiNcIil7cmV0dXJuIGk9PT1wYXJ0cy5sZW5ndGgtMX1pZihwYXJ0c1tpXS5pbmRleE9mKFwiK1wiKSE9PS0xfHxwYXJ0c1tpXS5pbmRleE9mKFwiI1wiKSE9PS0xKXtyZXR1cm4gZmFsc2V9fXJldHVybiB0cnVlfWZ1bmN0aW9uIHZhbGlkYXRlVG9waWNzKHRvcGljcyl7aWYodG9waWNzLmxlbmd0aD09PTApe3JldHVyblwiZW1wdHlfdG9waWNfbGlzdFwifWZvcih2YXIgaT0wO2k8dG9waWNzLmxlbmd0aDtpKyspe2lmKCF2YWxpZGF0ZVRvcGljKHRvcGljc1tpXSkpe3JldHVybiB0b3BpY3NbaV19fXJldHVybiBudWxsfW1vZHVsZS5leHBvcnRzPXt2YWxpZGF0ZVRvcGljczp2YWxpZGF0ZVRvcGljc319LHt9XSw5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24ocHJvY2Vzcyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIE1xdHRDbGllbnQ9cmVxdWlyZShcIi4uL2NsaWVudFwiKTt2YXIgU3RvcmU9cmVxdWlyZShcIi4uL3N0b3JlXCIpO3ZhciB1cmw9cmVxdWlyZShcInVybFwiKTt2YXIgeHRlbmQ9cmVxdWlyZShcInh0ZW5kXCIpO3ZhciBwcm90b2NvbHM9e307aWYocHJvY2Vzcy50aXRsZSE9PVwiYnJvd3NlclwiKXtwcm90b2NvbHMubXF0dD1yZXF1aXJlKFwiLi90Y3BcIik7cHJvdG9jb2xzLnRjcD1yZXF1aXJlKFwiLi90Y3BcIik7cHJvdG9jb2xzLnNzbD1yZXF1aXJlKFwiLi90bHNcIik7cHJvdG9jb2xzLnRscz1yZXF1aXJlKFwiLi90bHNcIik7cHJvdG9jb2xzLm1xdHRzPXJlcXVpcmUoXCIuL3Rsc1wiKX1lbHNle3Byb3RvY29scy53eD1yZXF1aXJlKFwiLi93eFwiKTtwcm90b2NvbHMud3hzPXJlcXVpcmUoXCIuL3d4XCIpO3Byb3RvY29scy5hbGk9cmVxdWlyZShcIi4vYWxpXCIpO3Byb3RvY29scy5hbGlzPXJlcXVpcmUoXCIuL2FsaVwiKX1wcm90b2NvbHMud3M9cmVxdWlyZShcIi4vd3NcIik7cHJvdG9jb2xzLndzcz1yZXF1aXJlKFwiLi93c1wiKTtmdW5jdGlvbiBwYXJzZUF1dGhPcHRpb25zKG9wdHMpe3ZhciBtYXRjaGVzO2lmKG9wdHMuYXV0aCl7bWF0Y2hlcz1vcHRzLmF1dGgubWF0Y2goL14oLispOiguKykkLyk7aWYobWF0Y2hlcyl7b3B0cy51c2VybmFtZT1tYXRjaGVzWzFdO29wdHMucGFzc3dvcmQ9bWF0Y2hlc1syXX1lbHNle29wdHMudXNlcm5hbWU9b3B0cy5hdXRofX19ZnVuY3Rpb24gY29ubmVjdChicm9rZXJVcmwsb3B0cyl7aWYodHlwZW9mIGJyb2tlclVybD09PVwib2JqZWN0XCImJiFvcHRzKXtvcHRzPWJyb2tlclVybDticm9rZXJVcmw9bnVsbH1vcHRzPW9wdHN8fHt9O2lmKGJyb2tlclVybCl7dmFyIHBhcnNlZD11cmwucGFyc2UoYnJva2VyVXJsLHRydWUpO2lmKHBhcnNlZC5wb3J0IT1udWxsKXtwYXJzZWQucG9ydD1OdW1iZXIocGFyc2VkLnBvcnQpfW9wdHM9eHRlbmQocGFyc2VkLG9wdHMpO2lmKG9wdHMucHJvdG9jb2w9PT1udWxsKXt0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHByb3RvY29sXCIpfW9wdHMucHJvdG9jb2w9b3B0cy5wcm90b2NvbC5yZXBsYWNlKC86JC8sXCJcIil9cGFyc2VBdXRoT3B0aW9ucyhvcHRzKTtpZihvcHRzLnF1ZXJ5JiZ0eXBlb2Ygb3B0cy5xdWVyeS5jbGllbnRJZD09PVwic3RyaW5nXCIpe29wdHMuY2xpZW50SWQ9b3B0cy5xdWVyeS5jbGllbnRJZH1pZihvcHRzLmNlcnQmJm9wdHMua2V5KXtpZihvcHRzLnByb3RvY29sKXtpZihbXCJtcXR0c1wiLFwid3NzXCIsXCJ3eHNcIixcImFsaXNcIl0uaW5kZXhPZihvcHRzLnByb3RvY29sKT09PS0xKXtzd2l0Y2gob3B0cy5wcm90b2NvbCl7Y2FzZVwibXF0dFwiOm9wdHMucHJvdG9jb2w9XCJtcXR0c1wiO2JyZWFrO2Nhc2VcIndzXCI6b3B0cy5wcm90b2NvbD1cIndzc1wiO2JyZWFrO2Nhc2VcInd4XCI6b3B0cy5wcm90b2NvbD1cInd4c1wiO2JyZWFrO2Nhc2VcImFsaVwiOm9wdHMucHJvdG9jb2w9XCJhbGlzXCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gcHJvdG9jb2wgZm9yIHNlY3VyZSBjb25uZWN0aW9uOiBcIicrb3B0cy5wcm90b2NvbCsnXCIhJyl9fX1lbHNle3Rocm93IG5ldyBFcnJvcihcIk1pc3Npbmcgc2VjdXJlIHByb3RvY29sIGtleVwiKX19aWYoIXByb3RvY29sc1tvcHRzLnByb3RvY29sXSl7dmFyIGlzU2VjdXJlPVtcIm1xdHRzXCIsXCJ3c3NcIl0uaW5kZXhPZihvcHRzLnByb3RvY29sKSE9PS0xO29wdHMucHJvdG9jb2w9W1wibXF0dFwiLFwibXF0dHNcIixcIndzXCIsXCJ3c3NcIixcInd4XCIsXCJ3eHNcIixcImFsaVwiLFwiYWxpc1wiXS5maWx0ZXIoZnVuY3Rpb24oa2V5LGluZGV4KXtpZihpc1NlY3VyZSYmaW5kZXglMj09PTApe3JldHVybiBmYWxzZX1yZXR1cm4gdHlwZW9mIHByb3RvY29sc1trZXldPT09XCJmdW5jdGlvblwifSlbMF19aWYob3B0cy5jbGVhbj09PWZhbHNlJiYhb3B0cy5jbGllbnRJZCl7dGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBjbGllbnRJZCBmb3IgdW5jbGVhbiBjbGllbnRzXCIpfWlmKG9wdHMucHJvdG9jb2wpe29wdHMuZGVmYXVsdFByb3RvY29sPW9wdHMucHJvdG9jb2x9ZnVuY3Rpb24gd3JhcHBlcihjbGllbnQpe2lmKG9wdHMuc2VydmVycyl7aWYoIWNsaWVudC5fcmVjb25uZWN0Q291bnR8fGNsaWVudC5fcmVjb25uZWN0Q291bnQ9PT1vcHRzLnNlcnZlcnMubGVuZ3RoKXtjbGllbnQuX3JlY29ubmVjdENvdW50PTB9b3B0cy5ob3N0PW9wdHMuc2VydmVyc1tjbGllbnQuX3JlY29ubmVjdENvdW50XS5ob3N0O29wdHMucG9ydD1vcHRzLnNlcnZlcnNbY2xpZW50Ll9yZWNvbm5lY3RDb3VudF0ucG9ydDtvcHRzLnByb3RvY29sPSFvcHRzLnNlcnZlcnNbY2xpZW50Ll9yZWNvbm5lY3RDb3VudF0ucHJvdG9jb2w/b3B0cy5kZWZhdWx0UHJvdG9jb2w6b3B0cy5zZXJ2ZXJzW2NsaWVudC5fcmVjb25uZWN0Q291bnRdLnByb3RvY29sO29wdHMuaG9zdG5hbWU9b3B0cy5ob3N0O2NsaWVudC5fcmVjb25uZWN0Q291bnQrK31yZXR1cm4gcHJvdG9jb2xzW29wdHMucHJvdG9jb2xdKGNsaWVudCxvcHRzKX1yZXR1cm4gbmV3IE1xdHRDbGllbnQod3JhcHBlcixvcHRzKX1tb2R1bGUuZXhwb3J0cz1jb25uZWN0O21vZHVsZS5leHBvcnRzLmNvbm5lY3Q9Y29ubmVjdDttb2R1bGUuZXhwb3J0cy5NcXR0Q2xpZW50PU1xdHRDbGllbnQ7bW9kdWxlLmV4cG9ydHMuU3RvcmU9U3RvcmV9KS5jYWxsKHRoaXMscmVxdWlyZShcIl9wcm9jZXNzXCIpKX0se1wiLi4vY2xpZW50XCI6MSxcIi4uL3N0b3JlXCI6NyxcIi4vYWxpXCI6MixcIi4vdGNwXCI6MyxcIi4vdGxzXCI6NCxcIi4vd3NcIjo1LFwiLi93eFwiOjYsX3Byb2Nlc3M6OTIsdXJsOjExMyx4dGVuZDoxMjF9XSwxMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7ZXhwb3J0cy5ieXRlTGVuZ3RoPWJ5dGVMZW5ndGg7ZXhwb3J0cy50b0J5dGVBcnJheT10b0J5dGVBcnJheTtleHBvcnRzLmZyb21CeXRlQXJyYXk9ZnJvbUJ5dGVBcnJheTt2YXIgbG9va3VwPVtdO3ZhciByZXZMb29rdXA9W107dmFyIEFycj10eXBlb2YgVWludDhBcnJheSE9PVwidW5kZWZpbmVkXCI/VWludDhBcnJheTpBcnJheTt2YXIgY29kZT1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIjtmb3IodmFyIGk9MCxsZW49Y29kZS5sZW5ndGg7aTxsZW47KytpKXtsb29rdXBbaV09Y29kZVtpXTtyZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXT1pfXJldkxvb2t1cFtcIi1cIi5jaGFyQ29kZUF0KDApXT02MjtyZXZMb29rdXBbXCJfXCIuY2hhckNvZGVBdCgwKV09NjM7ZnVuY3Rpb24gZ2V0TGVucyhiNjQpe3ZhciBsZW49YjY0Lmxlbmd0aDtpZihsZW4lND4wKXt0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpfXZhciB2YWxpZExlbj1iNjQuaW5kZXhPZihcIj1cIik7aWYodmFsaWRMZW49PT0tMSl2YWxpZExlbj1sZW47dmFyIHBsYWNlSG9sZGVyc0xlbj12YWxpZExlbj09PWxlbj8wOjQtdmFsaWRMZW4lNDtyZXR1cm5bdmFsaWRMZW4scGxhY2VIb2xkZXJzTGVuXX1mdW5jdGlvbiBieXRlTGVuZ3RoKGI2NCl7dmFyIGxlbnM9Z2V0TGVucyhiNjQpO3ZhciB2YWxpZExlbj1sZW5zWzBdO3ZhciBwbGFjZUhvbGRlcnNMZW49bGVuc1sxXTtyZXR1cm4odmFsaWRMZW4rcGxhY2VIb2xkZXJzTGVuKSozLzQtcGxhY2VIb2xkZXJzTGVufWZ1bmN0aW9uIF9ieXRlTGVuZ3RoKGI2NCx2YWxpZExlbixwbGFjZUhvbGRlcnNMZW4pe3JldHVybih2YWxpZExlbitwbGFjZUhvbGRlcnNMZW4pKjMvNC1wbGFjZUhvbGRlcnNMZW59ZnVuY3Rpb24gdG9CeXRlQXJyYXkoYjY0KXt2YXIgdG1wO3ZhciBsZW5zPWdldExlbnMoYjY0KTt2YXIgdmFsaWRMZW49bGVuc1swXTt2YXIgcGxhY2VIb2xkZXJzTGVuPWxlbnNbMV07dmFyIGFycj1uZXcgQXJyKF9ieXRlTGVuZ3RoKGI2NCx2YWxpZExlbixwbGFjZUhvbGRlcnNMZW4pKTt2YXIgY3VyQnl0ZT0wO3ZhciBsZW49cGxhY2VIb2xkZXJzTGVuPjA/dmFsaWRMZW4tNDp2YWxpZExlbjtmb3IodmFyIGk9MDtpPGxlbjtpKz00KXt0bXA9cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXTw8MTh8cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkrMSldPDwxMnxyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSsyKV08PDZ8cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkrMyldO2FycltjdXJCeXRlKytdPXRtcD4+MTYmMjU1O2FycltjdXJCeXRlKytdPXRtcD4+OCYyNTU7YXJyW2N1ckJ5dGUrK109dG1wJjI1NX1pZihwbGFjZUhvbGRlcnNMZW49PT0yKXt0bXA9cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXTw8MnxyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSsxKV0+PjQ7YXJyW2N1ckJ5dGUrK109dG1wJjI1NX1pZihwbGFjZUhvbGRlcnNMZW49PT0xKXt0bXA9cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXTw8MTB8cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkrMSldPDw0fHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKzIpXT4+MjthcnJbY3VyQnl0ZSsrXT10bXA+PjgmMjU1O2FycltjdXJCeXRlKytdPXRtcCYyNTV9cmV0dXJuIGFycn1mdW5jdGlvbiB0cmlwbGV0VG9CYXNlNjQobnVtKXtyZXR1cm4gbG9va3VwW251bT4+MTgmNjNdK2xvb2t1cFtudW0+PjEyJjYzXStsb29rdXBbbnVtPj42JjYzXStsb29rdXBbbnVtJjYzXX1mdW5jdGlvbiBlbmNvZGVDaHVuayh1aW50OCxzdGFydCxlbmQpe3ZhciB0bXA7dmFyIG91dHB1dD1bXTtmb3IodmFyIGk9c3RhcnQ7aTxlbmQ7aSs9Myl7dG1wPSh1aW50OFtpXTw8MTYmMTY3MTE2ODApKyh1aW50OFtpKzFdPDw4JjY1MjgwKSsodWludDhbaSsyXSYyNTUpO291dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKX1yZXR1cm4gb3V0cHV0LmpvaW4oXCJcIil9ZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSh1aW50OCl7dmFyIHRtcDt2YXIgbGVuPXVpbnQ4Lmxlbmd0aDt2YXIgZXh0cmFCeXRlcz1sZW4lMzt2YXIgcGFydHM9W107dmFyIG1heENodW5rTGVuZ3RoPTE2MzgzO2Zvcih2YXIgaT0wLGxlbjI9bGVuLWV4dHJhQnl0ZXM7aTxsZW4yO2krPW1heENodW5rTGVuZ3RoKXtwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LGksaSttYXhDaHVua0xlbmd0aD5sZW4yP2xlbjI6aSttYXhDaHVua0xlbmd0aCkpfWlmKGV4dHJhQnl0ZXM9PT0xKXt0bXA9dWludDhbbGVuLTFdO3BhcnRzLnB1c2gobG9va3VwW3RtcD4+Ml0rbG9va3VwW3RtcDw8NCY2M10rXCI9PVwiKX1lbHNlIGlmKGV4dHJhQnl0ZXM9PT0yKXt0bXA9KHVpbnQ4W2xlbi0yXTw8OCkrdWludDhbbGVuLTFdO3BhcnRzLnB1c2gobG9va3VwW3RtcD4+MTBdK2xvb2t1cFt0bXA+PjQmNjNdK2xvb2t1cFt0bXA8PDImNjNdK1wiPVwiKX1yZXR1cm4gcGFydHMuam9pbihcIlwiKX19LHt9XSwxMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7fSx7fV0sMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBiYXNlNjQ9cmVxdWlyZShcImJhc2U2NC1qc1wiKTt2YXIgaWVlZTc1ND1yZXF1aXJlKFwiaWVlZTc1NFwiKTtleHBvcnRzLkJ1ZmZlcj1CdWZmZXI7ZXhwb3J0cy5TbG93QnVmZmVyPVNsb3dCdWZmZXI7ZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFUz01MDt2YXIgS19NQVhfTEVOR1RIPTIxNDc0ODM2NDc7ZXhwb3J0cy5rTWF4TGVuZ3RoPUtfTUFYX0xFTkdUSDtCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVD10eXBlZEFycmF5U3VwcG9ydCgpO2lmKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCYmdHlwZW9mIGNvbnNvbGUhPT1cInVuZGVmaW5lZFwiJiZ0eXBlb2YgY29uc29sZS5lcnJvcj09PVwiZnVuY3Rpb25cIil7Y29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBsYWNrcyB0eXBlZCBhcnJheSAoVWludDhBcnJheSkgc3VwcG9ydCB3aGljaCBpcyByZXF1aXJlZCBieSBcIitcImBidWZmZXJgIHY1LnguIFVzZSBgYnVmZmVyYCB2NC54IGlmIHlvdSByZXF1aXJlIG9sZCBicm93c2VyIHN1cHBvcnQuXCIpfWZ1bmN0aW9uIHR5cGVkQXJyYXlTdXBwb3J0KCl7dHJ5e3ZhciBhcnI9bmV3IFVpbnQ4QXJyYXkoMSk7YXJyLl9fcHJvdG9fXz17X19wcm90b19fOlVpbnQ4QXJyYXkucHJvdG90eXBlLGZvbzpmdW5jdGlvbigpe3JldHVybiA0Mn19O3JldHVybiBhcnIuZm9vKCk9PT00Mn1jYXRjaChlKXtyZXR1cm4gZmFsc2V9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShCdWZmZXIucHJvdG90eXBlLFwicGFyZW50XCIse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtpZighQnVmZmVyLmlzQnVmZmVyKHRoaXMpKXJldHVybiB1bmRlZmluZWQ7cmV0dXJuIHRoaXMuYnVmZmVyfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShCdWZmZXIucHJvdG90eXBlLFwib2Zmc2V0XCIse2VudW1lcmFibGU6dHJ1ZSxnZXQ6ZnVuY3Rpb24oKXtpZighQnVmZmVyLmlzQnVmZmVyKHRoaXMpKXJldHVybiB1bmRlZmluZWQ7cmV0dXJuIHRoaXMuYnl0ZU9mZnNldH19KTtmdW5jdGlvbiBjcmVhdGVCdWZmZXIobGVuZ3RoKXtpZihsZW5ndGg+S19NQVhfTEVOR1RIKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIFwiJytsZW5ndGgrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfXZhciBidWY9bmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtidWYuX19wcm90b19fPUJ1ZmZlci5wcm90b3R5cGU7cmV0dXJuIGJ1Zn1mdW5jdGlvbiBCdWZmZXIoYXJnLGVuY29kaW5nT3JPZmZzZXQsbGVuZ3RoKXtpZih0eXBlb2YgYXJnPT09XCJudW1iZXJcIil7aWYodHlwZW9mIGVuY29kaW5nT3JPZmZzZXQ9PT1cInN0cmluZ1wiKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJzdHJpbmdcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgc3RyaW5nLiBSZWNlaXZlZCB0eXBlIG51bWJlcicpfXJldHVybiBhbGxvY1Vuc2FmZShhcmcpfXJldHVybiBmcm9tKGFyZyxlbmNvZGluZ09yT2Zmc2V0LGxlbmd0aCl9aWYodHlwZW9mIFN5bWJvbCE9PVwidW5kZWZpbmVkXCImJlN5bWJvbC5zcGVjaWVzIT1udWxsJiZCdWZmZXJbU3ltYm9sLnNwZWNpZXNdPT09QnVmZmVyKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLFN5bWJvbC5zcGVjaWVzLHt2YWx1ZTpudWxsLGNvbmZpZ3VyYWJsZTp0cnVlLGVudW1lcmFibGU6ZmFsc2Usd3JpdGFibGU6ZmFsc2V9KX1CdWZmZXIucG9vbFNpemU9ODE5MjtmdW5jdGlvbiBmcm9tKHZhbHVlLGVuY29kaW5nT3JPZmZzZXQsbGVuZ3RoKXtpZih0eXBlb2YgdmFsdWU9PT1cInN0cmluZ1wiKXtyZXR1cm4gZnJvbVN0cmluZyh2YWx1ZSxlbmNvZGluZ09yT2Zmc2V0KX1pZihBcnJheUJ1ZmZlci5pc1ZpZXcodmFsdWUpKXtyZXR1cm4gZnJvbUFycmF5TGlrZSh2YWx1ZSl9aWYodmFsdWU9PW51bGwpe3Rocm93IFR5cGVFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIFwiK1wib3IgQXJyYXktbGlrZSBPYmplY3QuIFJlY2VpdmVkIHR5cGUgXCIrdHlwZW9mIHZhbHVlKX1pZihpc0luc3RhbmNlKHZhbHVlLEFycmF5QnVmZmVyKXx8dmFsdWUmJmlzSW5zdGFuY2UodmFsdWUuYnVmZmVyLEFycmF5QnVmZmVyKSl7cmV0dXJuIGZyb21BcnJheUJ1ZmZlcih2YWx1ZSxlbmNvZGluZ09yT2Zmc2V0LGxlbmd0aCl9aWYodHlwZW9mIHZhbHVlPT09XCJudW1iZXJcIil7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKX12YXIgdmFsdWVPZj12YWx1ZS52YWx1ZU9mJiZ2YWx1ZS52YWx1ZU9mKCk7aWYodmFsdWVPZiE9bnVsbCYmdmFsdWVPZiE9PXZhbHVlKXtyZXR1cm4gQnVmZmVyLmZyb20odmFsdWVPZixlbmNvZGluZ09yT2Zmc2V0LGxlbmd0aCl9dmFyIGI9ZnJvbU9iamVjdCh2YWx1ZSk7aWYoYilyZXR1cm4gYjtpZih0eXBlb2YgU3ltYm9sIT09XCJ1bmRlZmluZWRcIiYmU3ltYm9sLnRvUHJpbWl0aXZlIT1udWxsJiZ0eXBlb2YgdmFsdWVbU3ltYm9sLnRvUHJpbWl0aXZlXT09PVwiZnVuY3Rpb25cIil7cmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlW1N5bWJvbC50b1ByaW1pdGl2ZV0oXCJzdHJpbmdcIiksZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpfXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBcIitcIm9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiB2YWx1ZSl9QnVmZmVyLmZyb209ZnVuY3Rpb24odmFsdWUsZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpe3JldHVybiBmcm9tKHZhbHVlLGVuY29kaW5nT3JPZmZzZXQsbGVuZ3RoKX07QnVmZmVyLnByb3RvdHlwZS5fX3Byb3RvX189VWludDhBcnJheS5wcm90b3R5cGU7QnVmZmVyLl9fcHJvdG9fXz1VaW50OEFycmF5O2Z1bmN0aW9uIGFzc2VydFNpemUoc2l6ZSl7aWYodHlwZW9mIHNpemUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJyl9ZWxzZSBpZihzaXplPDApe3Rocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK3NpemUrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfX1mdW5jdGlvbiBhbGxvYyhzaXplLGZpbGwsZW5jb2Rpbmcpe2Fzc2VydFNpemUoc2l6ZSk7aWYoc2l6ZTw9MCl7cmV0dXJuIGNyZWF0ZUJ1ZmZlcihzaXplKX1pZihmaWxsIT09dW5kZWZpbmVkKXtyZXR1cm4gdHlwZW9mIGVuY29kaW5nPT09XCJzdHJpbmdcIj9jcmVhdGVCdWZmZXIoc2l6ZSkuZmlsbChmaWxsLGVuY29kaW5nKTpjcmVhdGVCdWZmZXIoc2l6ZSkuZmlsbChmaWxsKX1yZXR1cm4gY3JlYXRlQnVmZmVyKHNpemUpfUJ1ZmZlci5hbGxvYz1mdW5jdGlvbihzaXplLGZpbGwsZW5jb2Rpbmcpe3JldHVybiBhbGxvYyhzaXplLGZpbGwsZW5jb2RpbmcpfTtmdW5jdGlvbiBhbGxvY1Vuc2FmZShzaXplKXthc3NlcnRTaXplKHNpemUpO3JldHVybiBjcmVhdGVCdWZmZXIoc2l6ZTwwPzA6Y2hlY2tlZChzaXplKXwwKX1CdWZmZXIuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oc2l6ZSl7cmV0dXJuIGFsbG9jVW5zYWZlKHNpemUpfTtCdWZmZXIuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKHNpemUpe3JldHVybiBhbGxvY1Vuc2FmZShzaXplKX07ZnVuY3Rpb24gZnJvbVN0cmluZyhzdHJpbmcsZW5jb2Rpbmcpe2lmKHR5cGVvZiBlbmNvZGluZyE9PVwic3RyaW5nXCJ8fGVuY29kaW5nPT09XCJcIil7ZW5jb2Rpbmc9XCJ1dGY4XCJ9aWYoIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2VuY29kaW5nKX12YXIgbGVuZ3RoPWJ5dGVMZW5ndGgoc3RyaW5nLGVuY29kaW5nKXwwO3ZhciBidWY9Y3JlYXRlQnVmZmVyKGxlbmd0aCk7dmFyIGFjdHVhbD1idWYud3JpdGUoc3RyaW5nLGVuY29kaW5nKTtpZihhY3R1YWwhPT1sZW5ndGgpe2J1Zj1idWYuc2xpY2UoMCxhY3R1YWwpfXJldHVybiBidWZ9ZnVuY3Rpb24gZnJvbUFycmF5TGlrZShhcnJheSl7dmFyIGxlbmd0aD1hcnJheS5sZW5ndGg8MD8wOmNoZWNrZWQoYXJyYXkubGVuZ3RoKXwwO3ZhciBidWY9Y3JlYXRlQnVmZmVyKGxlbmd0aCk7Zm9yKHZhciBpPTA7aTxsZW5ndGg7aSs9MSl7YnVmW2ldPWFycmF5W2ldJjI1NX1yZXR1cm4gYnVmfWZ1bmN0aW9uIGZyb21BcnJheUJ1ZmZlcihhcnJheSxieXRlT2Zmc2V0LGxlbmd0aCl7aWYoYnl0ZU9mZnNldDwwfHxhcnJheS5ieXRlTGVuZ3RoPGJ5dGVPZmZzZXQpe3Rocm93IG5ldyBSYW5nZUVycm9yKCdcIm9mZnNldFwiIGlzIG91dHNpZGUgb2YgYnVmZmVyIGJvdW5kcycpfWlmKGFycmF5LmJ5dGVMZW5ndGg8Ynl0ZU9mZnNldCsobGVuZ3RofHwwKSl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wibGVuZ3RoXCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJyl9dmFyIGJ1ZjtpZihieXRlT2Zmc2V0PT09dW5kZWZpbmVkJiZsZW5ndGg9PT11bmRlZmluZWQpe2J1Zj1uZXcgVWludDhBcnJheShhcnJheSl9ZWxzZSBpZihsZW5ndGg9PT11bmRlZmluZWQpe2J1Zj1uZXcgVWludDhBcnJheShhcnJheSxieXRlT2Zmc2V0KX1lbHNle2J1Zj1uZXcgVWludDhBcnJheShhcnJheSxieXRlT2Zmc2V0LGxlbmd0aCl9YnVmLl9fcHJvdG9fXz1CdWZmZXIucHJvdG90eXBlO3JldHVybiBidWZ9ZnVuY3Rpb24gZnJvbU9iamVjdChvYmope2lmKEJ1ZmZlci5pc0J1ZmZlcihvYmopKXt2YXIgbGVuPWNoZWNrZWQob2JqLmxlbmd0aCl8MDt2YXIgYnVmPWNyZWF0ZUJ1ZmZlcihsZW4pO2lmKGJ1Zi5sZW5ndGg9PT0wKXtyZXR1cm4gYnVmfW9iai5jb3B5KGJ1ZiwwLDAsbGVuKTtyZXR1cm4gYnVmfWlmKG9iai5sZW5ndGghPT11bmRlZmluZWQpe2lmKHR5cGVvZiBvYmoubGVuZ3RoIT09XCJudW1iZXJcInx8bnVtYmVySXNOYU4ob2JqLmxlbmd0aCkpe3JldHVybiBjcmVhdGVCdWZmZXIoMCl9cmV0dXJuIGZyb21BcnJheUxpa2Uob2JqKX1pZihvYmoudHlwZT09PVwiQnVmZmVyXCImJkFycmF5LmlzQXJyYXkob2JqLmRhdGEpKXtyZXR1cm4gZnJvbUFycmF5TGlrZShvYmouZGF0YSl9fWZ1bmN0aW9uIGNoZWNrZWQobGVuZ3RoKXtpZihsZW5ndGg+PUtfTUFYX0xFTkdUSCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtIFwiK1wic2l6ZTogMHhcIitLX01BWF9MRU5HVEgudG9TdHJpbmcoMTYpK1wiIGJ5dGVzXCIpfXJldHVybiBsZW5ndGh8MH1mdW5jdGlvbiBTbG93QnVmZmVyKGxlbmd0aCl7aWYoK2xlbmd0aCE9bGVuZ3RoKXtsZW5ndGg9MH1yZXR1cm4gQnVmZmVyLmFsbG9jKCtsZW5ndGgpfUJ1ZmZlci5pc0J1ZmZlcj1mdW5jdGlvbiBpc0J1ZmZlcihiKXtyZXR1cm4gYiE9bnVsbCYmYi5faXNCdWZmZXI9PT10cnVlJiZiIT09QnVmZmVyLnByb3RvdHlwZX07QnVmZmVyLmNvbXBhcmU9ZnVuY3Rpb24gY29tcGFyZShhLGIpe2lmKGlzSW5zdGFuY2UoYSxVaW50OEFycmF5KSlhPUJ1ZmZlci5mcm9tKGEsYS5vZmZzZXQsYS5ieXRlTGVuZ3RoKTtpZihpc0luc3RhbmNlKGIsVWludDhBcnJheSkpYj1CdWZmZXIuZnJvbShiLGIub2Zmc2V0LGIuYnl0ZUxlbmd0aCk7aWYoIUJ1ZmZlci5pc0J1ZmZlcihhKXx8IUJ1ZmZlci5pc0J1ZmZlcihiKSl7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwiYnVmMVwiLCBcImJ1ZjJcIiBhcmd1bWVudHMgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheScpfWlmKGE9PT1iKXJldHVybiAwO3ZhciB4PWEubGVuZ3RoO3ZhciB5PWIubGVuZ3RoO2Zvcih2YXIgaT0wLGxlbj1NYXRoLm1pbih4LHkpO2k8bGVuOysraSl7aWYoYVtpXSE9PWJbaV0pe3g9YVtpXTt5PWJbaV07YnJlYWt9fWlmKHg8eSlyZXR1cm4tMTtpZih5PHgpcmV0dXJuIDE7cmV0dXJuIDB9O0J1ZmZlci5pc0VuY29kaW5nPWZ1bmN0aW9uIGlzRW5jb2RpbmcoZW5jb2Rpbmcpe3N3aXRjaChTdHJpbmcoZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCkpe2Nhc2VcImhleFwiOmNhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOmNhc2VcImFzY2lpXCI6Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6Y2FzZVwiYmFzZTY0XCI6Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIHRydWU7ZGVmYXVsdDpyZXR1cm4gZmFsc2V9fTtCdWZmZXIuY29uY2F0PWZ1bmN0aW9uIGNvbmNhdChsaXN0LGxlbmd0aCl7aWYoIUFycmF5LmlzQXJyYXkobGlzdCkpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpfWlmKGxpc3QubGVuZ3RoPT09MCl7cmV0dXJuIEJ1ZmZlci5hbGxvYygwKX12YXIgaTtpZihsZW5ndGg9PT11bmRlZmluZWQpe2xlbmd0aD0wO2ZvcihpPTA7aTxsaXN0Lmxlbmd0aDsrK2kpe2xlbmd0aCs9bGlzdFtpXS5sZW5ndGh9fXZhciBidWZmZXI9QnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7dmFyIHBvcz0wO2ZvcihpPTA7aTxsaXN0Lmxlbmd0aDsrK2kpe3ZhciBidWY9bGlzdFtpXTtpZihpc0luc3RhbmNlKGJ1ZixVaW50OEFycmF5KSl7YnVmPUJ1ZmZlci5mcm9tKGJ1Zil9aWYoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKX1idWYuY29weShidWZmZXIscG9zKTtwb3MrPWJ1Zi5sZW5ndGh9cmV0dXJuIGJ1ZmZlcn07ZnVuY3Rpb24gYnl0ZUxlbmd0aChzdHJpbmcsZW5jb2Rpbmcpe2lmKEJ1ZmZlci5pc0J1ZmZlcihzdHJpbmcpKXtyZXR1cm4gc3RyaW5nLmxlbmd0aH1pZihBcnJheUJ1ZmZlci5pc1ZpZXcoc3RyaW5nKXx8aXNJbnN0YW5jZShzdHJpbmcsQXJyYXlCdWZmZXIpKXtyZXR1cm4gc3RyaW5nLmJ5dGVMZW5ndGh9aWYodHlwZW9mIHN0cmluZyE9PVwic3RyaW5nXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIG9yIEFycmF5QnVmZmVyLiAnK1wiUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2Ygc3RyaW5nKX12YXIgbGVuPXN0cmluZy5sZW5ndGg7dmFyIG11c3RNYXRjaD1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXT09PXRydWU7aWYoIW11c3RNYXRjaCYmbGVuPT09MClyZXR1cm4gMDt2YXIgbG93ZXJlZENhc2U9ZmFsc2U7Zm9yKDs7KXtzd2l0Y2goZW5jb2Rpbmcpe2Nhc2VcImFzY2lpXCI6Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIGxlbjtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGg7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIGxlbioyO2Nhc2VcImhleFwiOnJldHVybiBsZW4+Pj4xO2Nhc2VcImJhc2U2NFwiOnJldHVybiBiYXNlNjRUb0J5dGVzKHN0cmluZykubGVuZ3RoO2RlZmF1bHQ6aWYobG93ZXJlZENhc2Upe3JldHVybiBtdXN0TWF0Y2g/LTE6dXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGh9ZW5jb2Rpbmc9KFwiXCIrZW5jb2RpbmcpLnRvTG93ZXJDYXNlKCk7bG93ZXJlZENhc2U9dHJ1ZX19fUJ1ZmZlci5ieXRlTGVuZ3RoPWJ5dGVMZW5ndGg7ZnVuY3Rpb24gc2xvd1RvU3RyaW5nKGVuY29kaW5nLHN0YXJ0LGVuZCl7dmFyIGxvd2VyZWRDYXNlPWZhbHNlO2lmKHN0YXJ0PT09dW5kZWZpbmVkfHxzdGFydDwwKXtzdGFydD0wfWlmKHN0YXJ0PnRoaXMubGVuZ3RoKXtyZXR1cm5cIlwifWlmKGVuZD09PXVuZGVmaW5lZHx8ZW5kPnRoaXMubGVuZ3RoKXtlbmQ9dGhpcy5sZW5ndGh9aWYoZW5kPD0wKXtyZXR1cm5cIlwifWVuZD4+Pj0wO3N0YXJ0Pj4+PTA7aWYoZW5kPD1zdGFydCl7cmV0dXJuXCJcIn1pZighZW5jb2RpbmcpZW5jb2Rpbmc9XCJ1dGY4XCI7d2hpbGUodHJ1ZSl7c3dpdGNoKGVuY29kaW5nKXtjYXNlXCJoZXhcIjpyZXR1cm4gaGV4U2xpY2UodGhpcyxzdGFydCxlbmQpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiB1dGY4U2xpY2UodGhpcyxzdGFydCxlbmQpO2Nhc2VcImFzY2lpXCI6cmV0dXJuIGFzY2lpU2xpY2UodGhpcyxzdGFydCxlbmQpO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiBsYXRpbjFTbGljZSh0aGlzLHN0YXJ0LGVuZCk7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIGJhc2U2NFNsaWNlKHRoaXMsc3RhcnQsZW5kKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdXRmMTZsZVNsaWNlKHRoaXMsc3RhcnQsZW5kKTtkZWZhdWx0OmlmKGxvd2VyZWRDYXNlKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIitlbmNvZGluZyk7ZW5jb2Rpbmc9KGVuY29kaW5nK1wiXCIpLnRvTG93ZXJDYXNlKCk7bG93ZXJlZENhc2U9dHJ1ZX19fUJ1ZmZlci5wcm90b3R5cGUuX2lzQnVmZmVyPXRydWU7ZnVuY3Rpb24gc3dhcChiLG4sbSl7dmFyIGk9YltuXTtiW25dPWJbbV07YlttXT1pfUJ1ZmZlci5wcm90b3R5cGUuc3dhcDE2PWZ1bmN0aW9uIHN3YXAxNigpe3ZhciBsZW49dGhpcy5sZW5ndGg7aWYobGVuJTIhPT0wKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzXCIpfWZvcih2YXIgaT0wO2k8bGVuO2krPTIpe3N3YXAodGhpcyxpLGkrMSl9cmV0dXJuIHRoaXN9O0J1ZmZlci5wcm90b3R5cGUuc3dhcDMyPWZ1bmN0aW9uIHN3YXAzMigpe3ZhciBsZW49dGhpcy5sZW5ndGg7aWYobGVuJTQhPT0wKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzXCIpfWZvcih2YXIgaT0wO2k8bGVuO2krPTQpe3N3YXAodGhpcyxpLGkrMyk7c3dhcCh0aGlzLGkrMSxpKzIpfXJldHVybiB0aGlzfTtCdWZmZXIucHJvdG90eXBlLnN3YXA2ND1mdW5jdGlvbiBzd2FwNjQoKXt2YXIgbGVuPXRoaXMubGVuZ3RoO2lmKGxlbiU4IT09MCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNjQtYml0c1wiKX1mb3IodmFyIGk9MDtpPGxlbjtpKz04KXtzd2FwKHRoaXMsaSxpKzcpO3N3YXAodGhpcyxpKzEsaSs2KTtzd2FwKHRoaXMsaSsyLGkrNSk7c3dhcCh0aGlzLGkrMyxpKzQpfXJldHVybiB0aGlzfTtCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uIHRvU3RyaW5nKCl7dmFyIGxlbmd0aD10aGlzLmxlbmd0aDtpZihsZW5ndGg9PT0wKXJldHVyblwiXCI7aWYoYXJndW1lbnRzLmxlbmd0aD09PTApcmV0dXJuIHV0ZjhTbGljZSh0aGlzLDAsbGVuZ3RoKTtyZXR1cm4gc2xvd1RvU3RyaW5nLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07QnVmZmVyLnByb3RvdHlwZS50b0xvY2FsZVN0cmluZz1CdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nO0J1ZmZlci5wcm90b3R5cGUuZXF1YWxzPWZ1bmN0aW9uIGVxdWFscyhiKXtpZighQnVmZmVyLmlzQnVmZmVyKGIpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyXCIpO2lmKHRoaXM9PT1iKXJldHVybiB0cnVlO3JldHVybiBCdWZmZXIuY29tcGFyZSh0aGlzLGIpPT09MH07QnVmZmVyLnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uIGluc3BlY3QoKXt2YXIgc3RyPVwiXCI7dmFyIG1heD1leHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTO3N0cj10aGlzLnRvU3RyaW5nKFwiaGV4XCIsMCxtYXgpLnJlcGxhY2UoLyguezJ9KS9nLFwiJDEgXCIpLnRyaW0oKTtpZih0aGlzLmxlbmd0aD5tYXgpc3RyKz1cIiAuLi4gXCI7cmV0dXJuXCI8QnVmZmVyIFwiK3N0citcIj5cIn07QnVmZmVyLnByb3RvdHlwZS5jb21wYXJlPWZ1bmN0aW9uIGNvbXBhcmUodGFyZ2V0LHN0YXJ0LGVuZCx0aGlzU3RhcnQsdGhpc0VuZCl7aWYoaXNJbnN0YW5jZSh0YXJnZXQsVWludDhBcnJheSkpe3RhcmdldD1CdWZmZXIuZnJvbSh0YXJnZXQsdGFyZ2V0Lm9mZnNldCx0YXJnZXQuYnl0ZUxlbmd0aCl9aWYoIUJ1ZmZlci5pc0J1ZmZlcih0YXJnZXQpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJ0YXJnZXRcIiBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIEJ1ZmZlciBvciBVaW50OEFycmF5LiAnK1wiUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgdGFyZ2V0KX1pZihzdGFydD09PXVuZGVmaW5lZCl7c3RhcnQ9MH1pZihlbmQ9PT11bmRlZmluZWQpe2VuZD10YXJnZXQ/dGFyZ2V0Lmxlbmd0aDowfWlmKHRoaXNTdGFydD09PXVuZGVmaW5lZCl7dGhpc1N0YXJ0PTB9aWYodGhpc0VuZD09PXVuZGVmaW5lZCl7dGhpc0VuZD10aGlzLmxlbmd0aH1pZihzdGFydDwwfHxlbmQ+dGFyZ2V0Lmxlbmd0aHx8dGhpc1N0YXJ0PDB8fHRoaXNFbmQ+dGhpcy5sZW5ndGgpe3Rocm93IG5ldyBSYW5nZUVycm9yKFwib3V0IG9mIHJhbmdlIGluZGV4XCIpfWlmKHRoaXNTdGFydD49dGhpc0VuZCYmc3RhcnQ+PWVuZCl7cmV0dXJuIDB9aWYodGhpc1N0YXJ0Pj10aGlzRW5kKXtyZXR1cm4tMX1pZihzdGFydD49ZW5kKXtyZXR1cm4gMX1zdGFydD4+Pj0wO2VuZD4+Pj0wO3RoaXNTdGFydD4+Pj0wO3RoaXNFbmQ+Pj49MDtpZih0aGlzPT09dGFyZ2V0KXJldHVybiAwO3ZhciB4PXRoaXNFbmQtdGhpc1N0YXJ0O3ZhciB5PWVuZC1zdGFydDt2YXIgbGVuPU1hdGgubWluKHgseSk7dmFyIHRoaXNDb3B5PXRoaXMuc2xpY2UodGhpc1N0YXJ0LHRoaXNFbmQpO3ZhciB0YXJnZXRDb3B5PXRhcmdldC5zbGljZShzdGFydCxlbmQpO2Zvcih2YXIgaT0wO2k8bGVuOysraSl7aWYodGhpc0NvcHlbaV0hPT10YXJnZXRDb3B5W2ldKXt4PXRoaXNDb3B5W2ldO3k9dGFyZ2V0Q29weVtpXTticmVha319aWYoeDx5KXJldHVybi0xO2lmKHk8eClyZXR1cm4gMTtyZXR1cm4gMH07ZnVuY3Rpb24gYmlkaXJlY3Rpb25hbEluZGV4T2YoYnVmZmVyLHZhbCxieXRlT2Zmc2V0LGVuY29kaW5nLGRpcil7aWYoYnVmZmVyLmxlbmd0aD09PTApcmV0dXJuLTE7aWYodHlwZW9mIGJ5dGVPZmZzZXQ9PT1cInN0cmluZ1wiKXtlbmNvZGluZz1ieXRlT2Zmc2V0O2J5dGVPZmZzZXQ9MH1lbHNlIGlmKGJ5dGVPZmZzZXQ+MjE0NzQ4MzY0Nyl7Ynl0ZU9mZnNldD0yMTQ3NDgzNjQ3fWVsc2UgaWYoYnl0ZU9mZnNldDwtMjE0NzQ4MzY0OCl7Ynl0ZU9mZnNldD0tMjE0NzQ4MzY0OH1ieXRlT2Zmc2V0PStieXRlT2Zmc2V0O2lmKG51bWJlcklzTmFOKGJ5dGVPZmZzZXQpKXtieXRlT2Zmc2V0PWRpcj8wOmJ1ZmZlci5sZW5ndGgtMX1pZihieXRlT2Zmc2V0PDApYnl0ZU9mZnNldD1idWZmZXIubGVuZ3RoK2J5dGVPZmZzZXQ7aWYoYnl0ZU9mZnNldD49YnVmZmVyLmxlbmd0aCl7aWYoZGlyKXJldHVybi0xO2Vsc2UgYnl0ZU9mZnNldD1idWZmZXIubGVuZ3RoLTF9ZWxzZSBpZihieXRlT2Zmc2V0PDApe2lmKGRpcilieXRlT2Zmc2V0PTA7ZWxzZSByZXR1cm4tMX1pZih0eXBlb2YgdmFsPT09XCJzdHJpbmdcIil7dmFsPUJ1ZmZlci5mcm9tKHZhbCxlbmNvZGluZyl9aWYoQnVmZmVyLmlzQnVmZmVyKHZhbCkpe2lmKHZhbC5sZW5ndGg9PT0wKXtyZXR1cm4tMX1yZXR1cm4gYXJyYXlJbmRleE9mKGJ1ZmZlcix2YWwsYnl0ZU9mZnNldCxlbmNvZGluZyxkaXIpfWVsc2UgaWYodHlwZW9mIHZhbD09PVwibnVtYmVyXCIpe3ZhbD12YWwmMjU1O2lmKHR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mPT09XCJmdW5jdGlvblwiKXtpZihkaXIpe3JldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoYnVmZmVyLHZhbCxieXRlT2Zmc2V0KX1lbHNle3JldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKGJ1ZmZlcix2YWwsYnl0ZU9mZnNldCl9fXJldHVybiBhcnJheUluZGV4T2YoYnVmZmVyLFt2YWxdLGJ5dGVPZmZzZXQsZW5jb2RpbmcsZGlyKX10aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWZ1bmN0aW9uIGFycmF5SW5kZXhPZihhcnIsdmFsLGJ5dGVPZmZzZXQsZW5jb2RpbmcsZGlyKXt2YXIgaW5kZXhTaXplPTE7dmFyIGFyckxlbmd0aD1hcnIubGVuZ3RoO3ZhciB2YWxMZW5ndGg9dmFsLmxlbmd0aDtpZihlbmNvZGluZyE9PXVuZGVmaW5lZCl7ZW5jb2Rpbmc9U3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpO2lmKGVuY29kaW5nPT09XCJ1Y3MyXCJ8fGVuY29kaW5nPT09XCJ1Y3MtMlwifHxlbmNvZGluZz09PVwidXRmMTZsZVwifHxlbmNvZGluZz09PVwidXRmLTE2bGVcIil7aWYoYXJyLmxlbmd0aDwyfHx2YWwubGVuZ3RoPDIpe3JldHVybi0xfWluZGV4U2l6ZT0yO2Fyckxlbmd0aC89Mjt2YWxMZW5ndGgvPTI7Ynl0ZU9mZnNldC89Mn19ZnVuY3Rpb24gcmVhZChidWYsaSl7aWYoaW5kZXhTaXplPT09MSl7cmV0dXJuIGJ1ZltpXX1lbHNle3JldHVybiBidWYucmVhZFVJbnQxNkJFKGkqaW5kZXhTaXplKX19dmFyIGk7aWYoZGlyKXt2YXIgZm91bmRJbmRleD0tMTtmb3IoaT1ieXRlT2Zmc2V0O2k8YXJyTGVuZ3RoO2krKyl7aWYocmVhZChhcnIsaSk9PT1yZWFkKHZhbCxmb3VuZEluZGV4PT09LTE/MDppLWZvdW5kSW5kZXgpKXtpZihmb3VuZEluZGV4PT09LTEpZm91bmRJbmRleD1pO2lmKGktZm91bmRJbmRleCsxPT09dmFsTGVuZ3RoKXJldHVybiBmb3VuZEluZGV4KmluZGV4U2l6ZX1lbHNle2lmKGZvdW5kSW5kZXghPT0tMSlpLT1pLWZvdW5kSW5kZXg7Zm91bmRJbmRleD0tMX19fWVsc2V7aWYoYnl0ZU9mZnNldCt2YWxMZW5ndGg+YXJyTGVuZ3RoKWJ5dGVPZmZzZXQ9YXJyTGVuZ3RoLXZhbExlbmd0aDtmb3IoaT1ieXRlT2Zmc2V0O2k+PTA7aS0tKXt2YXIgZm91bmQ9dHJ1ZTtmb3IodmFyIGo9MDtqPHZhbExlbmd0aDtqKyspe2lmKHJlYWQoYXJyLGkraikhPT1yZWFkKHZhbCxqKSl7Zm91bmQ9ZmFsc2U7YnJlYWt9fWlmKGZvdW5kKXJldHVybiBpfX1yZXR1cm4tMX1CdWZmZXIucHJvdG90eXBlLmluY2x1ZGVzPWZ1bmN0aW9uIGluY2x1ZGVzKHZhbCxieXRlT2Zmc2V0LGVuY29kaW5nKXtyZXR1cm4gdGhpcy5pbmRleE9mKHZhbCxieXRlT2Zmc2V0LGVuY29kaW5nKSE9PS0xfTtCdWZmZXIucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24gaW5kZXhPZih2YWwsYnl0ZU9mZnNldCxlbmNvZGluZyl7cmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsdmFsLGJ5dGVPZmZzZXQsZW5jb2RpbmcsdHJ1ZSl9O0J1ZmZlci5wcm90b3R5cGUubGFzdEluZGV4T2Y9ZnVuY3Rpb24gbGFzdEluZGV4T2YodmFsLGJ5dGVPZmZzZXQsZW5jb2Rpbmcpe3JldHVybiBiaWRpcmVjdGlvbmFsSW5kZXhPZih0aGlzLHZhbCxieXRlT2Zmc2V0LGVuY29kaW5nLGZhbHNlKX07ZnVuY3Rpb24gaGV4V3JpdGUoYnVmLHN0cmluZyxvZmZzZXQsbGVuZ3RoKXtvZmZzZXQ9TnVtYmVyKG9mZnNldCl8fDA7dmFyIHJlbWFpbmluZz1idWYubGVuZ3RoLW9mZnNldDtpZighbGVuZ3RoKXtsZW5ndGg9cmVtYWluaW5nfWVsc2V7bGVuZ3RoPU51bWJlcihsZW5ndGgpO2lmKGxlbmd0aD5yZW1haW5pbmcpe2xlbmd0aD1yZW1haW5pbmd9fXZhciBzdHJMZW49c3RyaW5nLmxlbmd0aDtpZihsZW5ndGg+c3RyTGVuLzIpe2xlbmd0aD1zdHJMZW4vMn1mb3IodmFyIGk9MDtpPGxlbmd0aDsrK2kpe3ZhciBwYXJzZWQ9cGFyc2VJbnQoc3RyaW5nLnN1YnN0cihpKjIsMiksMTYpO2lmKG51bWJlcklzTmFOKHBhcnNlZCkpcmV0dXJuIGk7YnVmW29mZnNldCtpXT1wYXJzZWR9cmV0dXJuIGl9ZnVuY3Rpb24gdXRmOFdyaXRlKGJ1ZixzdHJpbmcsb2Zmc2V0LGxlbmd0aCl7cmV0dXJuIGJsaXRCdWZmZXIodXRmOFRvQnl0ZXMoc3RyaW5nLGJ1Zi5sZW5ndGgtb2Zmc2V0KSxidWYsb2Zmc2V0LGxlbmd0aCl9ZnVuY3Rpb24gYXNjaWlXcml0ZShidWYsc3RyaW5nLG9mZnNldCxsZW5ndGgpe3JldHVybiBibGl0QnVmZmVyKGFzY2lpVG9CeXRlcyhzdHJpbmcpLGJ1ZixvZmZzZXQsbGVuZ3RoKX1mdW5jdGlvbiBsYXRpbjFXcml0ZShidWYsc3RyaW5nLG9mZnNldCxsZW5ndGgpe3JldHVybiBhc2NpaVdyaXRlKGJ1ZixzdHJpbmcsb2Zmc2V0LGxlbmd0aCl9ZnVuY3Rpb24gYmFzZTY0V3JpdGUoYnVmLHN0cmluZyxvZmZzZXQsbGVuZ3RoKXtyZXR1cm4gYmxpdEJ1ZmZlcihiYXNlNjRUb0J5dGVzKHN0cmluZyksYnVmLG9mZnNldCxsZW5ndGgpfWZ1bmN0aW9uIHVjczJXcml0ZShidWYsc3RyaW5nLG9mZnNldCxsZW5ndGgpe3JldHVybiBibGl0QnVmZmVyKHV0ZjE2bGVUb0J5dGVzKHN0cmluZyxidWYubGVuZ3RoLW9mZnNldCksYnVmLG9mZnNldCxsZW5ndGgpfUJ1ZmZlci5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24gd3JpdGUoc3RyaW5nLG9mZnNldCxsZW5ndGgsZW5jb2Rpbmcpe2lmKG9mZnNldD09PXVuZGVmaW5lZCl7ZW5jb2Rpbmc9XCJ1dGY4XCI7bGVuZ3RoPXRoaXMubGVuZ3RoO29mZnNldD0wfWVsc2UgaWYobGVuZ3RoPT09dW5kZWZpbmVkJiZ0eXBlb2Ygb2Zmc2V0PT09XCJzdHJpbmdcIil7ZW5jb2Rpbmc9b2Zmc2V0O2xlbmd0aD10aGlzLmxlbmd0aDtvZmZzZXQ9MH1lbHNlIGlmKGlzRmluaXRlKG9mZnNldCkpe29mZnNldD1vZmZzZXQ+Pj4wO2lmKGlzRmluaXRlKGxlbmd0aCkpe2xlbmd0aD1sZW5ndGg+Pj4wO2lmKGVuY29kaW5nPT09dW5kZWZpbmVkKWVuY29kaW5nPVwidXRmOFwifWVsc2V7ZW5jb2Rpbmc9bGVuZ3RoO2xlbmd0aD11bmRlZmluZWR9fWVsc2V7dGhyb3cgbmV3IEVycm9yKFwiQnVmZmVyLndyaXRlKHN0cmluZywgZW5jb2RpbmcsIG9mZnNldFssIGxlbmd0aF0pIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWRcIil9dmFyIHJlbWFpbmluZz10aGlzLmxlbmd0aC1vZmZzZXQ7aWYobGVuZ3RoPT09dW5kZWZpbmVkfHxsZW5ndGg+cmVtYWluaW5nKWxlbmd0aD1yZW1haW5pbmc7aWYoc3RyaW5nLmxlbmd0aD4wJiYobGVuZ3RoPDB8fG9mZnNldDwwKXx8b2Zmc2V0PnRoaXMubGVuZ3RoKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkF0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzXCIpfWlmKCFlbmNvZGluZyllbmNvZGluZz1cInV0ZjhcIjt2YXIgbG93ZXJlZENhc2U9ZmFsc2U7Zm9yKDs7KXtzd2l0Y2goZW5jb2Rpbmcpe2Nhc2VcImhleFwiOnJldHVybiBoZXhXcml0ZSh0aGlzLHN0cmluZyxvZmZzZXQsbGVuZ3RoKTtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm4gdXRmOFdyaXRlKHRoaXMsc3RyaW5nLG9mZnNldCxsZW5ndGgpO2Nhc2VcImFzY2lpXCI6cmV0dXJuIGFzY2lpV3JpdGUodGhpcyxzdHJpbmcsb2Zmc2V0LGxlbmd0aCk7Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIGxhdGluMVdyaXRlKHRoaXMsc3RyaW5nLG9mZnNldCxsZW5ndGgpO2Nhc2VcImJhc2U2NFwiOnJldHVybiBiYXNlNjRXcml0ZSh0aGlzLHN0cmluZyxvZmZzZXQsbGVuZ3RoKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdWNzMldyaXRlKHRoaXMsc3RyaW5nLG9mZnNldCxsZW5ndGgpO2RlZmF1bHQ6aWYobG93ZXJlZENhc2UpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2VuY29kaW5nKTtlbmNvZGluZz0oXCJcIitlbmNvZGluZykudG9Mb3dlckNhc2UoKTtsb3dlcmVkQ2FzZT10cnVlfX19O0J1ZmZlci5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uIHRvSlNPTigpe3JldHVybnt0eXBlOlwiQnVmZmVyXCIsZGF0YTpBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLl9hcnJ8fHRoaXMsMCl9fTtmdW5jdGlvbiBiYXNlNjRTbGljZShidWYsc3RhcnQsZW5kKXtpZihzdGFydD09PTAmJmVuZD09PWJ1Zi5sZW5ndGgpe3JldHVybiBiYXNlNjQuZnJvbUJ5dGVBcnJheShidWYpfWVsc2V7cmV0dXJuIGJhc2U2NC5mcm9tQnl0ZUFycmF5KGJ1Zi5zbGljZShzdGFydCxlbmQpKX19ZnVuY3Rpb24gdXRmOFNsaWNlKGJ1ZixzdGFydCxlbmQpe2VuZD1NYXRoLm1pbihidWYubGVuZ3RoLGVuZCk7dmFyIHJlcz1bXTt2YXIgaT1zdGFydDt3aGlsZShpPGVuZCl7dmFyIGZpcnN0Qnl0ZT1idWZbaV07dmFyIGNvZGVQb2ludD1udWxsO3ZhciBieXRlc1BlclNlcXVlbmNlPWZpcnN0Qnl0ZT4yMzk/NDpmaXJzdEJ5dGU+MjIzPzM6Zmlyc3RCeXRlPjE5MT8yOjE7aWYoaStieXRlc1BlclNlcXVlbmNlPD1lbmQpe3ZhciBzZWNvbmRCeXRlLHRoaXJkQnl0ZSxmb3VydGhCeXRlLHRlbXBDb2RlUG9pbnQ7c3dpdGNoKGJ5dGVzUGVyU2VxdWVuY2Upe2Nhc2UgMTppZihmaXJzdEJ5dGU8MTI4KXtjb2RlUG9pbnQ9Zmlyc3RCeXRlfWJyZWFrO2Nhc2UgMjpzZWNvbmRCeXRlPWJ1ZltpKzFdO2lmKChzZWNvbmRCeXRlJjE5Mik9PT0xMjgpe3RlbXBDb2RlUG9pbnQ9KGZpcnN0Qnl0ZSYzMSk8PDZ8c2Vjb25kQnl0ZSY2MztpZih0ZW1wQ29kZVBvaW50PjEyNyl7Y29kZVBvaW50PXRlbXBDb2RlUG9pbnR9fWJyZWFrO2Nhc2UgMzpzZWNvbmRCeXRlPWJ1ZltpKzFdO3RoaXJkQnl0ZT1idWZbaSsyXTtpZigoc2Vjb25kQnl0ZSYxOTIpPT09MTI4JiYodGhpcmRCeXRlJjE5Mik9PT0xMjgpe3RlbXBDb2RlUG9pbnQ9KGZpcnN0Qnl0ZSYxNSk8PDEyfChzZWNvbmRCeXRlJjYzKTw8Nnx0aGlyZEJ5dGUmNjM7aWYodGVtcENvZGVQb2ludD4yMDQ3JiYodGVtcENvZGVQb2ludDw1NTI5Nnx8dGVtcENvZGVQb2ludD41NzM0Mykpe2NvZGVQb2ludD10ZW1wQ29kZVBvaW50fX1icmVhaztjYXNlIDQ6c2Vjb25kQnl0ZT1idWZbaSsxXTt0aGlyZEJ5dGU9YnVmW2krMl07Zm91cnRoQnl0ZT1idWZbaSszXTtpZigoc2Vjb25kQnl0ZSYxOTIpPT09MTI4JiYodGhpcmRCeXRlJjE5Mik9PT0xMjgmJihmb3VydGhCeXRlJjE5Mik9PT0xMjgpe3RlbXBDb2RlUG9pbnQ9KGZpcnN0Qnl0ZSYxNSk8PDE4fChzZWNvbmRCeXRlJjYzKTw8MTJ8KHRoaXJkQnl0ZSY2Myk8PDZ8Zm91cnRoQnl0ZSY2MztpZih0ZW1wQ29kZVBvaW50PjY1NTM1JiZ0ZW1wQ29kZVBvaW50PDExMTQxMTIpe2NvZGVQb2ludD10ZW1wQ29kZVBvaW50fX19fWlmKGNvZGVQb2ludD09PW51bGwpe2NvZGVQb2ludD02NTUzMztieXRlc1BlclNlcXVlbmNlPTF9ZWxzZSBpZihjb2RlUG9pbnQ+NjU1MzUpe2NvZGVQb2ludC09NjU1MzY7cmVzLnB1c2goY29kZVBvaW50Pj4+MTAmMTAyM3w1NTI5Nik7Y29kZVBvaW50PTU2MzIwfGNvZGVQb2ludCYxMDIzfXJlcy5wdXNoKGNvZGVQb2ludCk7aSs9Ynl0ZXNQZXJTZXF1ZW5jZX1yZXR1cm4gZGVjb2RlQ29kZVBvaW50c0FycmF5KHJlcyl9dmFyIE1BWF9BUkdVTUVOVFNfTEVOR1RIPTQwOTY7ZnVuY3Rpb24gZGVjb2RlQ29kZVBvaW50c0FycmF5KGNvZGVQb2ludHMpe3ZhciBsZW49Y29kZVBvaW50cy5sZW5ndGg7aWYobGVuPD1NQVhfQVJHVU1FTlRTX0xFTkdUSCl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGNvZGVQb2ludHMpfXZhciByZXM9XCJcIjt2YXIgaT0wO3doaWxlKGk8bGVuKXtyZXMrPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGNvZGVQb2ludHMuc2xpY2UoaSxpKz1NQVhfQVJHVU1FTlRTX0xFTkdUSCkpfXJldHVybiByZXN9ZnVuY3Rpb24gYXNjaWlTbGljZShidWYsc3RhcnQsZW5kKXt2YXIgcmV0PVwiXCI7ZW5kPU1hdGgubWluKGJ1Zi5sZW5ndGgsZW5kKTtmb3IodmFyIGk9c3RhcnQ7aTxlbmQ7KytpKXtyZXQrPVN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldJjEyNyl9cmV0dXJuIHJldH1mdW5jdGlvbiBsYXRpbjFTbGljZShidWYsc3RhcnQsZW5kKXt2YXIgcmV0PVwiXCI7ZW5kPU1hdGgubWluKGJ1Zi5sZW5ndGgsZW5kKTtmb3IodmFyIGk9c3RhcnQ7aTxlbmQ7KytpKXtyZXQrPVN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldKX1yZXR1cm4gcmV0fWZ1bmN0aW9uIGhleFNsaWNlKGJ1ZixzdGFydCxlbmQpe3ZhciBsZW49YnVmLmxlbmd0aDtpZighc3RhcnR8fHN0YXJ0PDApc3RhcnQ9MDtpZighZW5kfHxlbmQ8MHx8ZW5kPmxlbillbmQ9bGVuO3ZhciBvdXQ9XCJcIjtmb3IodmFyIGk9c3RhcnQ7aTxlbmQ7KytpKXtvdXQrPXRvSGV4KGJ1ZltpXSl9cmV0dXJuIG91dH1mdW5jdGlvbiB1dGYxNmxlU2xpY2UoYnVmLHN0YXJ0LGVuZCl7dmFyIGJ5dGVzPWJ1Zi5zbGljZShzdGFydCxlbmQpO3ZhciByZXM9XCJcIjtmb3IodmFyIGk9MDtpPGJ5dGVzLmxlbmd0aDtpKz0yKXtyZXMrPVN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0rYnl0ZXNbaSsxXSoyNTYpfXJldHVybiByZXN9QnVmZmVyLnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbiBzbGljZShzdGFydCxlbmQpe3ZhciBsZW49dGhpcy5sZW5ndGg7c3RhcnQ9fn5zdGFydDtlbmQ9ZW5kPT09dW5kZWZpbmVkP2xlbjp+fmVuZDtpZihzdGFydDwwKXtzdGFydCs9bGVuO2lmKHN0YXJ0PDApc3RhcnQ9MH1lbHNlIGlmKHN0YXJ0Pmxlbil7c3RhcnQ9bGVufWlmKGVuZDwwKXtlbmQrPWxlbjtpZihlbmQ8MCllbmQ9MH1lbHNlIGlmKGVuZD5sZW4pe2VuZD1sZW59aWYoZW5kPHN0YXJ0KWVuZD1zdGFydDt2YXIgbmV3QnVmPXRoaXMuc3ViYXJyYXkoc3RhcnQsZW5kKTtuZXdCdWYuX19wcm90b19fPUJ1ZmZlci5wcm90b3R5cGU7cmV0dXJuIG5ld0J1Zn07ZnVuY3Rpb24gY2hlY2tPZmZzZXQob2Zmc2V0LGV4dCxsZW5ndGgpe2lmKG9mZnNldCUxIT09MHx8b2Zmc2V0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvZmZzZXQgaXMgbm90IHVpbnRcIik7aWYob2Zmc2V0K2V4dD5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpfUJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRMRT1mdW5jdGlvbiByZWFkVUludExFKG9mZnNldCxieXRlTGVuZ3RoLG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtieXRlTGVuZ3RoPWJ5dGVMZW5ndGg+Pj4wO2lmKCFub0Fzc2VydCljaGVja09mZnNldChvZmZzZXQsYnl0ZUxlbmd0aCx0aGlzLmxlbmd0aCk7dmFyIHZhbD10aGlzW29mZnNldF07dmFyIG11bD0xO3ZhciBpPTA7d2hpbGUoKytpPGJ5dGVMZW5ndGgmJihtdWwqPTI1Nikpe3ZhbCs9dGhpc1tvZmZzZXQraV0qbXVsfXJldHVybiB2YWx9O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRCRT1mdW5jdGlvbiByZWFkVUludEJFKG9mZnNldCxieXRlTGVuZ3RoLG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtieXRlTGVuZ3RoPWJ5dGVMZW5ndGg+Pj4wO2lmKCFub0Fzc2VydCl7Y2hlY2tPZmZzZXQob2Zmc2V0LGJ5dGVMZW5ndGgsdGhpcy5sZW5ndGgpfXZhciB2YWw9dGhpc1tvZmZzZXQrLS1ieXRlTGVuZ3RoXTt2YXIgbXVsPTE7d2hpbGUoYnl0ZUxlbmd0aD4wJiYobXVsKj0yNTYpKXt2YWwrPXRoaXNbb2Zmc2V0Ky0tYnl0ZUxlbmd0aF0qbXVsfXJldHVybiB2YWx9O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uIHJlYWRVSW50OChvZmZzZXQsbm9Bc3NlcnQpe29mZnNldD1vZmZzZXQ+Pj4wO2lmKCFub0Fzc2VydCljaGVja09mZnNldChvZmZzZXQsMSx0aGlzLmxlbmd0aCk7cmV0dXJuIHRoaXNbb2Zmc2V0XX07QnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2TEU9ZnVuY3Rpb24gcmVhZFVJbnQxNkxFKG9mZnNldCxub0Fzc2VydCl7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrT2Zmc2V0KG9mZnNldCwyLHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tvZmZzZXRdfHRoaXNbb2Zmc2V0KzFdPDw4fTtCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbiByZWFkVUludDE2QkUob2Zmc2V0LG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LDIsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW29mZnNldF08PDh8dGhpc1tvZmZzZXQrMV19O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkxFPWZ1bmN0aW9uIHJlYWRVSW50MzJMRShvZmZzZXQsbm9Bc3NlcnQpe29mZnNldD1vZmZzZXQ+Pj4wO2lmKCFub0Fzc2VydCljaGVja09mZnNldChvZmZzZXQsNCx0aGlzLmxlbmd0aCk7cmV0dXJuKHRoaXNbb2Zmc2V0XXx0aGlzW29mZnNldCsxXTw8OHx0aGlzW29mZnNldCsyXTw8MTYpK3RoaXNbb2Zmc2V0KzNdKjE2Nzc3MjE2fTtCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJCRT1mdW5jdGlvbiByZWFkVUludDMyQkUob2Zmc2V0LG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LDQsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW29mZnNldF0qMTY3NzcyMTYrKHRoaXNbb2Zmc2V0KzFdPDwxNnx0aGlzW29mZnNldCsyXTw8OHx0aGlzW29mZnNldCszXSl9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludExFPWZ1bmN0aW9uIHJlYWRJbnRMRShvZmZzZXQsYnl0ZUxlbmd0aCxub0Fzc2VydCl7b2Zmc2V0PW9mZnNldD4+PjA7Ynl0ZUxlbmd0aD1ieXRlTGVuZ3RoPj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LGJ5dGVMZW5ndGgsdGhpcy5sZW5ndGgpO3ZhciB2YWw9dGhpc1tvZmZzZXRdO3ZhciBtdWw9MTt2YXIgaT0wO3doaWxlKCsraTxieXRlTGVuZ3RoJiYobXVsKj0yNTYpKXt2YWwrPXRoaXNbb2Zmc2V0K2ldKm11bH1tdWwqPTEyODtpZih2YWw+PW11bCl2YWwtPU1hdGgucG93KDIsOCpieXRlTGVuZ3RoKTtyZXR1cm4gdmFsfTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnRCRT1mdW5jdGlvbiByZWFkSW50QkUob2Zmc2V0LGJ5dGVMZW5ndGgsbm9Bc3NlcnQpe29mZnNldD1vZmZzZXQ+Pj4wO2J5dGVMZW5ndGg9Ynl0ZUxlbmd0aD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrT2Zmc2V0KG9mZnNldCxieXRlTGVuZ3RoLHRoaXMubGVuZ3RoKTt2YXIgaT1ieXRlTGVuZ3RoO3ZhciBtdWw9MTt2YXIgdmFsPXRoaXNbb2Zmc2V0Ky0taV07d2hpbGUoaT4wJiYobXVsKj0yNTYpKXt2YWwrPXRoaXNbb2Zmc2V0Ky0taV0qbXVsfW11bCo9MTI4O2lmKHZhbD49bXVsKXZhbC09TWF0aC5wb3coMiw4KmJ5dGVMZW5ndGgpO3JldHVybiB2YWx9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludDg9ZnVuY3Rpb24gcmVhZEludDgob2Zmc2V0LG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LDEsdGhpcy5sZW5ndGgpO2lmKCEodGhpc1tvZmZzZXRdJjEyOCkpcmV0dXJuIHRoaXNbb2Zmc2V0XTtyZXR1cm4oMjU1LXRoaXNbb2Zmc2V0XSsxKSotMX07QnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZMRT1mdW5jdGlvbiByZWFkSW50MTZMRShvZmZzZXQsbm9Bc3NlcnQpe29mZnNldD1vZmZzZXQ+Pj4wO2lmKCFub0Fzc2VydCljaGVja09mZnNldChvZmZzZXQsMix0aGlzLmxlbmd0aCk7dmFyIHZhbD10aGlzW29mZnNldF18dGhpc1tvZmZzZXQrMV08PDg7cmV0dXJuIHZhbCYzMjc2OD92YWx8NDI5NDkwMTc2MDp2YWx9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludDE2QkU9ZnVuY3Rpb24gcmVhZEludDE2QkUob2Zmc2V0LG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LDIsdGhpcy5sZW5ndGgpO3ZhciB2YWw9dGhpc1tvZmZzZXQrMV18dGhpc1tvZmZzZXRdPDw4O3JldHVybiB2YWwmMzI3Njg/dmFsfDQyOTQ5MDE3NjA6dmFsfTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQzMkxFPWZ1bmN0aW9uIHJlYWRJbnQzMkxFKG9mZnNldCxub0Fzc2VydCl7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrT2Zmc2V0KG9mZnNldCw0LHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tvZmZzZXRdfHRoaXNbb2Zmc2V0KzFdPDw4fHRoaXNbb2Zmc2V0KzJdPDwxNnx0aGlzW29mZnNldCszXTw8MjR9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24gcmVhZEludDMyQkUob2Zmc2V0LG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LDQsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW29mZnNldF08PDI0fHRoaXNbb2Zmc2V0KzFdPDwxNnx0aGlzW29mZnNldCsyXTw8OHx0aGlzW29mZnNldCszXX07QnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRMRT1mdW5jdGlvbiByZWFkRmxvYXRMRShvZmZzZXQsbm9Bc3NlcnQpe29mZnNldD1vZmZzZXQ+Pj4wO2lmKCFub0Fzc2VydCljaGVja09mZnNldChvZmZzZXQsNCx0aGlzLmxlbmd0aCk7cmV0dXJuIGllZWU3NTQucmVhZCh0aGlzLG9mZnNldCx0cnVlLDIzLDQpfTtCdWZmZXIucHJvdG90eXBlLnJlYWRGbG9hdEJFPWZ1bmN0aW9uIHJlYWRGbG9hdEJFKG9mZnNldCxub0Fzc2VydCl7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrT2Zmc2V0KG9mZnNldCw0LHRoaXMubGVuZ3RoKTtyZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsb2Zmc2V0LGZhbHNlLDIzLDQpfTtCdWZmZXIucHJvdG90eXBlLnJlYWREb3VibGVMRT1mdW5jdGlvbiByZWFkRG91YmxlTEUob2Zmc2V0LG5vQXNzZXJ0KXtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tPZmZzZXQob2Zmc2V0LDgsdGhpcy5sZW5ndGgpO3JldHVybiBpZWVlNzU0LnJlYWQodGhpcyxvZmZzZXQsdHJ1ZSw1Miw4KX07QnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlQkU9ZnVuY3Rpb24gcmVhZERvdWJsZUJFKG9mZnNldCxub0Fzc2VydCl7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrT2Zmc2V0KG9mZnNldCw4LHRoaXMubGVuZ3RoKTtyZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsb2Zmc2V0LGZhbHNlLDUyLDgpfTtmdW5jdGlvbiBjaGVja0ludChidWYsdmFsdWUsb2Zmc2V0LGV4dCxtYXgsbWluKXtpZighQnVmZmVyLmlzQnVmZmVyKGJ1ZikpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJyk7aWYodmFsdWU+bWF4fHx2YWx1ZTxtaW4pdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJyk7aWYob2Zmc2V0K2V4dD5idWYubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfUJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24gd3JpdGVVSW50TEUodmFsdWUsb2Zmc2V0LGJ5dGVMZW5ndGgsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtieXRlTGVuZ3RoPWJ5dGVMZW5ndGg+Pj4wO2lmKCFub0Fzc2VydCl7dmFyIG1heEJ5dGVzPU1hdGgucG93KDIsOCpieXRlTGVuZ3RoKS0xO2NoZWNrSW50KHRoaXMsdmFsdWUsb2Zmc2V0LGJ5dGVMZW5ndGgsbWF4Qnl0ZXMsMCl9dmFyIG11bD0xO3ZhciBpPTA7dGhpc1tvZmZzZXRdPXZhbHVlJjI1NTt3aGlsZSgrK2k8Ynl0ZUxlbmd0aCYmKG11bCo9MjU2KSl7dGhpc1tvZmZzZXQraV09dmFsdWUvbXVsJjI1NX1yZXR1cm4gb2Zmc2V0K2J5dGVMZW5ndGh9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50QkU9ZnVuY3Rpb24gd3JpdGVVSW50QkUodmFsdWUsb2Zmc2V0LGJ5dGVMZW5ndGgsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtieXRlTGVuZ3RoPWJ5dGVMZW5ndGg+Pj4wO2lmKCFub0Fzc2VydCl7dmFyIG1heEJ5dGVzPU1hdGgucG93KDIsOCpieXRlTGVuZ3RoKS0xO2NoZWNrSW50KHRoaXMsdmFsdWUsb2Zmc2V0LGJ5dGVMZW5ndGgsbWF4Qnl0ZXMsMCl9dmFyIGk9Ynl0ZUxlbmd0aC0xO3ZhciBtdWw9MTt0aGlzW29mZnNldCtpXT12YWx1ZSYyNTU7d2hpbGUoLS1pPj0wJiYobXVsKj0yNTYpKXt0aGlzW29mZnNldCtpXT12YWx1ZS9tdWwmMjU1fXJldHVybiBvZmZzZXQrYnl0ZUxlbmd0aH07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQ4PWZ1bmN0aW9uIHdyaXRlVUludDgodmFsdWUsb2Zmc2V0LG5vQXNzZXJ0KXt2YWx1ZT0rdmFsdWU7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrSW50KHRoaXMsdmFsdWUsb2Zmc2V0LDEsMjU1LDApO3RoaXNbb2Zmc2V0XT12YWx1ZSYyNTU7cmV0dXJuIG9mZnNldCsxfTtCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2TEU9ZnVuY3Rpb24gd3JpdGVVSW50MTZMRSh2YWx1ZSxvZmZzZXQsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tJbnQodGhpcyx2YWx1ZSxvZmZzZXQsMiw2NTUzNSwwKTt0aGlzW29mZnNldF09dmFsdWUmMjU1O3RoaXNbb2Zmc2V0KzFdPXZhbHVlPj4+ODtyZXR1cm4gb2Zmc2V0KzJ9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1mdW5jdGlvbiB3cml0ZVVJbnQxNkJFKHZhbHVlLG9mZnNldCxub0Fzc2VydCl7dmFsdWU9K3ZhbHVlO29mZnNldD1vZmZzZXQ+Pj4wO2lmKCFub0Fzc2VydCljaGVja0ludCh0aGlzLHZhbHVlLG9mZnNldCwyLDY1NTM1LDApO3RoaXNbb2Zmc2V0XT12YWx1ZT4+Pjg7dGhpc1tvZmZzZXQrMV09dmFsdWUmMjU1O3JldHVybiBvZmZzZXQrMn07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uIHdyaXRlVUludDMyTEUodmFsdWUsb2Zmc2V0LG5vQXNzZXJ0KXt2YWx1ZT0rdmFsdWU7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrSW50KHRoaXMsdmFsdWUsb2Zmc2V0LDQsNDI5NDk2NzI5NSwwKTt0aGlzW29mZnNldCszXT12YWx1ZT4+PjI0O3RoaXNbb2Zmc2V0KzJdPXZhbHVlPj4+MTY7dGhpc1tvZmZzZXQrMV09dmFsdWU+Pj44O3RoaXNbb2Zmc2V0XT12YWx1ZSYyNTU7cmV0dXJuIG9mZnNldCs0fTtCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyQkU9ZnVuY3Rpb24gd3JpdGVVSW50MzJCRSh2YWx1ZSxvZmZzZXQsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tJbnQodGhpcyx2YWx1ZSxvZmZzZXQsNCw0Mjk0OTY3Mjk1LDApO3RoaXNbb2Zmc2V0XT12YWx1ZT4+PjI0O3RoaXNbb2Zmc2V0KzFdPXZhbHVlPj4+MTY7dGhpc1tvZmZzZXQrMl09dmFsdWU+Pj44O3RoaXNbb2Zmc2V0KzNdPXZhbHVlJjI1NTtyZXR1cm4gb2Zmc2V0KzR9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnRMRT1mdW5jdGlvbiB3cml0ZUludExFKHZhbHVlLG9mZnNldCxieXRlTGVuZ3RoLG5vQXNzZXJ0KXt2YWx1ZT0rdmFsdWU7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KXt2YXIgbGltaXQ9TWF0aC5wb3coMiw4KmJ5dGVMZW5ndGgtMSk7Y2hlY2tJbnQodGhpcyx2YWx1ZSxvZmZzZXQsYnl0ZUxlbmd0aCxsaW1pdC0xLC1saW1pdCl9dmFyIGk9MDt2YXIgbXVsPTE7dmFyIHN1Yj0wO3RoaXNbb2Zmc2V0XT12YWx1ZSYyNTU7d2hpbGUoKytpPGJ5dGVMZW5ndGgmJihtdWwqPTI1Nikpe2lmKHZhbHVlPDAmJnN1Yj09PTAmJnRoaXNbb2Zmc2V0K2ktMV0hPT0wKXtzdWI9MX10aGlzW29mZnNldCtpXT0odmFsdWUvbXVsPj4wKS1zdWImMjU1fXJldHVybiBvZmZzZXQrYnl0ZUxlbmd0aH07QnVmZmVyLnByb3RvdHlwZS53cml0ZUludEJFPWZ1bmN0aW9uIHdyaXRlSW50QkUodmFsdWUsb2Zmc2V0LGJ5dGVMZW5ndGgsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpe3ZhciBsaW1pdD1NYXRoLnBvdygyLDgqYnl0ZUxlbmd0aC0xKTtjaGVja0ludCh0aGlzLHZhbHVlLG9mZnNldCxieXRlTGVuZ3RoLGxpbWl0LTEsLWxpbWl0KX12YXIgaT1ieXRlTGVuZ3RoLTE7dmFyIG11bD0xO3ZhciBzdWI9MDt0aGlzW29mZnNldCtpXT12YWx1ZSYyNTU7d2hpbGUoLS1pPj0wJiYobXVsKj0yNTYpKXtpZih2YWx1ZTwwJiZzdWI9PT0wJiZ0aGlzW29mZnNldCtpKzFdIT09MCl7c3ViPTF9dGhpc1tvZmZzZXQraV09KHZhbHVlL211bD4+MCktc3ViJjI1NX1yZXR1cm4gb2Zmc2V0K2J5dGVMZW5ndGh9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQ4PWZ1bmN0aW9uIHdyaXRlSW50OCh2YWx1ZSxvZmZzZXQsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tJbnQodGhpcyx2YWx1ZSxvZmZzZXQsMSwxMjcsLTEyOCk7aWYodmFsdWU8MCl2YWx1ZT0yNTUrdmFsdWUrMTt0aGlzW29mZnNldF09dmFsdWUmMjU1O3JldHVybiBvZmZzZXQrMX07QnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2TEU9ZnVuY3Rpb24gd3JpdGVJbnQxNkxFKHZhbHVlLG9mZnNldCxub0Fzc2VydCl7dmFsdWU9K3ZhbHVlO29mZnNldD1vZmZzZXQ+Pj4wO2lmKCFub0Fzc2VydCljaGVja0ludCh0aGlzLHZhbHVlLG9mZnNldCwyLDMyNzY3LC0zMjc2OCk7dGhpc1tvZmZzZXRdPXZhbHVlJjI1NTt0aGlzW29mZnNldCsxXT12YWx1ZT4+Pjg7cmV0dXJuIG9mZnNldCsyfTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZCRT1mdW5jdGlvbiB3cml0ZUludDE2QkUodmFsdWUsb2Zmc2V0LG5vQXNzZXJ0KXt2YWx1ZT0rdmFsdWU7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrSW50KHRoaXMsdmFsdWUsb2Zmc2V0LDIsMzI3NjcsLTMyNzY4KTt0aGlzW29mZnNldF09dmFsdWU+Pj44O3RoaXNbb2Zmc2V0KzFdPXZhbHVlJjI1NTtyZXR1cm4gb2Zmc2V0KzJ9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQzMkxFPWZ1bmN0aW9uIHdyaXRlSW50MzJMRSh2YWx1ZSxvZmZzZXQsbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpY2hlY2tJbnQodGhpcyx2YWx1ZSxvZmZzZXQsNCwyMTQ3NDgzNjQ3LC0yMTQ3NDgzNjQ4KTt0aGlzW29mZnNldF09dmFsdWUmMjU1O3RoaXNbb2Zmc2V0KzFdPXZhbHVlPj4+ODt0aGlzW29mZnNldCsyXT12YWx1ZT4+PjE2O3RoaXNbb2Zmc2V0KzNdPXZhbHVlPj4+MjQ7cmV0dXJuIG9mZnNldCs0fTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJCRT1mdW5jdGlvbiB3cml0ZUludDMyQkUodmFsdWUsb2Zmc2V0LG5vQXNzZXJ0KXt2YWx1ZT0rdmFsdWU7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KWNoZWNrSW50KHRoaXMsdmFsdWUsb2Zmc2V0LDQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCk7aWYodmFsdWU8MCl2YWx1ZT00Mjk0OTY3Mjk1K3ZhbHVlKzE7dGhpc1tvZmZzZXRdPXZhbHVlPj4+MjQ7dGhpc1tvZmZzZXQrMV09dmFsdWU+Pj4xNjt0aGlzW29mZnNldCsyXT12YWx1ZT4+Pjg7dGhpc1tvZmZzZXQrM109dmFsdWUmMjU1O3JldHVybiBvZmZzZXQrNH07ZnVuY3Rpb24gY2hlY2tJRUVFNzU0KGJ1Zix2YWx1ZSxvZmZzZXQsZXh0LG1heCxtaW4pe2lmKG9mZnNldCtleHQ+YnVmLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKTtpZihvZmZzZXQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKX1mdW5jdGlvbiB3cml0ZUZsb2F0KGJ1Zix2YWx1ZSxvZmZzZXQsbGl0dGxlRW5kaWFuLG5vQXNzZXJ0KXt2YWx1ZT0rdmFsdWU7b2Zmc2V0PW9mZnNldD4+PjA7aWYoIW5vQXNzZXJ0KXtjaGVja0lFRUU3NTQoYnVmLHZhbHVlLG9mZnNldCw0LDM0MDI4MjM0NjYzODUyODg2ZTIyLC0zNDAyODIzNDY2Mzg1Mjg4NmUyMil9aWVlZTc1NC53cml0ZShidWYsdmFsdWUsb2Zmc2V0LGxpdHRsZUVuZGlhbiwyMyw0KTtyZXR1cm4gb2Zmc2V0KzR9QnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0TEU9ZnVuY3Rpb24gd3JpdGVGbG9hdExFKHZhbHVlLG9mZnNldCxub0Fzc2VydCl7cmV0dXJuIHdyaXRlRmxvYXQodGhpcyx2YWx1ZSxvZmZzZXQsdHJ1ZSxub0Fzc2VydCl9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdEJFPWZ1bmN0aW9uIHdyaXRlRmxvYXRCRSh2YWx1ZSxvZmZzZXQsbm9Bc3NlcnQpe3JldHVybiB3cml0ZUZsb2F0KHRoaXMsdmFsdWUsb2Zmc2V0LGZhbHNlLG5vQXNzZXJ0KX07ZnVuY3Rpb24gd3JpdGVEb3VibGUoYnVmLHZhbHVlLG9mZnNldCxsaXR0bGVFbmRpYW4sbm9Bc3NlcnQpe3ZhbHVlPSt2YWx1ZTtvZmZzZXQ9b2Zmc2V0Pj4+MDtpZighbm9Bc3NlcnQpe2NoZWNrSUVFRTc1NChidWYsdmFsdWUsb2Zmc2V0LDgsMTc5NzY5MzEzNDg2MjMxNTdlMjkyLC0xNzk3NjkzMTM0ODYyMzE1N2UyOTIpfWllZWU3NTQud3JpdGUoYnVmLHZhbHVlLG9mZnNldCxsaXR0bGVFbmRpYW4sNTIsOCk7cmV0dXJuIG9mZnNldCs4fUJ1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVMRT1mdW5jdGlvbiB3cml0ZURvdWJsZUxFKHZhbHVlLG9mZnNldCxub0Fzc2VydCl7cmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsdmFsdWUsb2Zmc2V0LHRydWUsbm9Bc3NlcnQpfTtCdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlQkU9ZnVuY3Rpb24gd3JpdGVEb3VibGVCRSh2YWx1ZSxvZmZzZXQsbm9Bc3NlcnQpe3JldHVybiB3cml0ZURvdWJsZSh0aGlzLHZhbHVlLG9mZnNldCxmYWxzZSxub0Fzc2VydCl9O0J1ZmZlci5wcm90b3R5cGUuY29weT1mdW5jdGlvbiBjb3B5KHRhcmdldCx0YXJnZXRTdGFydCxzdGFydCxlbmQpe2lmKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgc2hvdWxkIGJlIGEgQnVmZmVyXCIpO2lmKCFzdGFydClzdGFydD0wO2lmKCFlbmQmJmVuZCE9PTApZW5kPXRoaXMubGVuZ3RoO2lmKHRhcmdldFN0YXJ0Pj10YXJnZXQubGVuZ3RoKXRhcmdldFN0YXJ0PXRhcmdldC5sZW5ndGg7aWYoIXRhcmdldFN0YXJ0KXRhcmdldFN0YXJ0PTA7aWYoZW5kPjAmJmVuZDxzdGFydCllbmQ9c3RhcnQ7aWYoZW5kPT09c3RhcnQpcmV0dXJuIDA7aWYodGFyZ2V0Lmxlbmd0aD09PTB8fHRoaXMubGVuZ3RoPT09MClyZXR1cm4gMDtpZih0YXJnZXRTdGFydDwwKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInRhcmdldFN0YXJ0IG91dCBvZiBib3VuZHNcIil9aWYoc3RhcnQ8MHx8c3RhcnQ+PXRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKGVuZDwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwic291cmNlRW5kIG91dCBvZiBib3VuZHNcIik7aWYoZW5kPnRoaXMubGVuZ3RoKWVuZD10aGlzLmxlbmd0aDtpZih0YXJnZXQubGVuZ3RoLXRhcmdldFN0YXJ0PGVuZC1zdGFydCl7ZW5kPXRhcmdldC5sZW5ndGgtdGFyZ2V0U3RhcnQrc3RhcnR9dmFyIGxlbj1lbmQtc3RhcnQ7aWYodGhpcz09PXRhcmdldCYmdHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW49PT1cImZ1bmN0aW9uXCIpe3RoaXMuY29weVdpdGhpbih0YXJnZXRTdGFydCxzdGFydCxlbmQpfWVsc2UgaWYodGhpcz09PXRhcmdldCYmc3RhcnQ8dGFyZ2V0U3RhcnQmJnRhcmdldFN0YXJ0PGVuZCl7Zm9yKHZhciBpPWxlbi0xO2k+PTA7LS1pKXt0YXJnZXRbaSt0YXJnZXRTdGFydF09dGhpc1tpK3N0YXJ0XX19ZWxzZXtVaW50OEFycmF5LnByb3RvdHlwZS5zZXQuY2FsbCh0YXJnZXQsdGhpcy5zdWJhcnJheShzdGFydCxlbmQpLHRhcmdldFN0YXJ0KX1yZXR1cm4gbGVufTtCdWZmZXIucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24gZmlsbCh2YWwsc3RhcnQsZW5kLGVuY29kaW5nKXtpZih0eXBlb2YgdmFsPT09XCJzdHJpbmdcIil7aWYodHlwZW9mIHN0YXJ0PT09XCJzdHJpbmdcIil7ZW5jb2Rpbmc9c3RhcnQ7c3RhcnQ9MDtlbmQ9dGhpcy5sZW5ndGh9ZWxzZSBpZih0eXBlb2YgZW5kPT09XCJzdHJpbmdcIil7ZW5jb2Rpbmc9ZW5kO2VuZD10aGlzLmxlbmd0aH1pZihlbmNvZGluZyE9PXVuZGVmaW5lZCYmdHlwZW9mIGVuY29kaW5nIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcImVuY29kaW5nIG11c3QgYmUgYSBzdHJpbmdcIil9aWYodHlwZW9mIGVuY29kaW5nPT09XCJzdHJpbmdcIiYmIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2VuY29kaW5nKX1pZih2YWwubGVuZ3RoPT09MSl7dmFyIGNvZGU9dmFsLmNoYXJDb2RlQXQoMCk7aWYoZW5jb2Rpbmc9PT1cInV0ZjhcIiYmY29kZTwxMjh8fGVuY29kaW5nPT09XCJsYXRpbjFcIil7dmFsPWNvZGV9fX1lbHNlIGlmKHR5cGVvZiB2YWw9PT1cIm51bWJlclwiKXt2YWw9dmFsJjI1NX1pZihzdGFydDwwfHx0aGlzLmxlbmd0aDxzdGFydHx8dGhpcy5sZW5ndGg8ZW5kKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKX1pZihlbmQ8PXN0YXJ0KXtyZXR1cm4gdGhpc31zdGFydD1zdGFydD4+PjA7ZW5kPWVuZD09PXVuZGVmaW5lZD90aGlzLmxlbmd0aDplbmQ+Pj4wO2lmKCF2YWwpdmFsPTA7dmFyIGk7aWYodHlwZW9mIHZhbD09PVwibnVtYmVyXCIpe2ZvcihpPXN0YXJ0O2k8ZW5kOysraSl7dGhpc1tpXT12YWx9fWVsc2V7dmFyIGJ5dGVzPUJ1ZmZlci5pc0J1ZmZlcih2YWwpP3ZhbDpCdWZmZXIuZnJvbSh2YWwsZW5jb2RpbmcpO3ZhciBsZW49Ynl0ZXMubGVuZ3RoO2lmKGxlbj09PTApe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSB2YWx1ZSBcIicrdmFsKydcIiBpcyBpbnZhbGlkIGZvciBhcmd1bWVudCBcInZhbHVlXCInKX1mb3IoaT0wO2k8ZW5kLXN0YXJ0OysraSl7dGhpc1tpK3N0YXJ0XT1ieXRlc1tpJWxlbl19fXJldHVybiB0aGlzfTt2YXIgSU5WQUxJRF9CQVNFNjRfUkU9L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiBiYXNlNjRjbGVhbihzdHIpe3N0cj1zdHIuc3BsaXQoXCI9XCIpWzBdO3N0cj1zdHIudHJpbSgpLnJlcGxhY2UoSU5WQUxJRF9CQVNFNjRfUkUsXCJcIik7aWYoc3RyLmxlbmd0aDwyKXJldHVyblwiXCI7d2hpbGUoc3RyLmxlbmd0aCU0IT09MCl7c3RyPXN0citcIj1cIn1yZXR1cm4gc3RyfWZ1bmN0aW9uIHRvSGV4KG4pe2lmKG48MTYpcmV0dXJuXCIwXCIrbi50b1N0cmluZygxNik7cmV0dXJuIG4udG9TdHJpbmcoMTYpfWZ1bmN0aW9uIHV0ZjhUb0J5dGVzKHN0cmluZyx1bml0cyl7dW5pdHM9dW5pdHN8fEluZmluaXR5O3ZhciBjb2RlUG9pbnQ7dmFyIGxlbmd0aD1zdHJpbmcubGVuZ3RoO3ZhciBsZWFkU3Vycm9nYXRlPW51bGw7dmFyIGJ5dGVzPVtdO2Zvcih2YXIgaT0wO2k8bGVuZ3RoOysraSl7Y29kZVBvaW50PXN0cmluZy5jaGFyQ29kZUF0KGkpO2lmKGNvZGVQb2ludD41NTI5NSYmY29kZVBvaW50PDU3MzQ0KXtpZighbGVhZFN1cnJvZ2F0ZSl7aWYoY29kZVBvaW50PjU2MzE5KXtpZigodW5pdHMtPTMpPi0xKWJ5dGVzLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWVsc2UgaWYoaSsxPT09bGVuZ3RoKXtpZigodW5pdHMtPTMpPi0xKWJ5dGVzLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWxlYWRTdXJyb2dhdGU9Y29kZVBvaW50O2NvbnRpbnVlfWlmKGNvZGVQb2ludDw1NjMyMCl7aWYoKHVuaXRzLT0zKT4tMSlieXRlcy5wdXNoKDIzOSwxOTEsMTg5KTtsZWFkU3Vycm9nYXRlPWNvZGVQb2ludDtjb250aW51ZX1jb2RlUG9pbnQ9KGxlYWRTdXJyb2dhdGUtNTUyOTY8PDEwfGNvZGVQb2ludC01NjMyMCkrNjU1MzZ9ZWxzZSBpZihsZWFkU3Vycm9nYXRlKXtpZigodW5pdHMtPTMpPi0xKWJ5dGVzLnB1c2goMjM5LDE5MSwxODkpfWxlYWRTdXJyb2dhdGU9bnVsbDtpZihjb2RlUG9pbnQ8MTI4KXtpZigodW5pdHMtPTEpPDApYnJlYWs7Ynl0ZXMucHVzaChjb2RlUG9pbnQpfWVsc2UgaWYoY29kZVBvaW50PDIwNDgpe2lmKCh1bml0cy09Mik8MClicmVhaztieXRlcy5wdXNoKGNvZGVQb2ludD4+NnwxOTIsY29kZVBvaW50JjYzfDEyOCl9ZWxzZSBpZihjb2RlUG9pbnQ8NjU1MzYpe2lmKCh1bml0cy09Myk8MClicmVhaztieXRlcy5wdXNoKGNvZGVQb2ludD4+MTJ8MjI0LGNvZGVQb2ludD4+NiY2M3wxMjgsY29kZVBvaW50JjYzfDEyOCl9ZWxzZSBpZihjb2RlUG9pbnQ8MTExNDExMil7aWYoKHVuaXRzLT00KTwwKWJyZWFrO2J5dGVzLnB1c2goY29kZVBvaW50Pj4xOHwyNDAsY29kZVBvaW50Pj4xMiY2M3wxMjgsY29kZVBvaW50Pj42JjYzfDEyOCxjb2RlUG9pbnQmNjN8MTI4KX1lbHNle3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZSBwb2ludFwiKX19cmV0dXJuIGJ5dGVzfWZ1bmN0aW9uIGFzY2lpVG9CeXRlcyhzdHIpe3ZhciBieXRlQXJyYXk9W107Zm9yKHZhciBpPTA7aTxzdHIubGVuZ3RoOysraSl7Ynl0ZUFycmF5LnB1c2goc3RyLmNoYXJDb2RlQXQoaSkmMjU1KX1yZXR1cm4gYnl0ZUFycmF5fWZ1bmN0aW9uIHV0ZjE2bGVUb0J5dGVzKHN0cix1bml0cyl7dmFyIGMsaGksbG87dmFyIGJ5dGVBcnJheT1bXTtmb3IodmFyIGk9MDtpPHN0ci5sZW5ndGg7KytpKXtpZigodW5pdHMtPTIpPDApYnJlYWs7Yz1zdHIuY2hhckNvZGVBdChpKTtoaT1jPj44O2xvPWMlMjU2O2J5dGVBcnJheS5wdXNoKGxvKTtieXRlQXJyYXkucHVzaChoaSl9cmV0dXJuIGJ5dGVBcnJheX1mdW5jdGlvbiBiYXNlNjRUb0J5dGVzKHN0cil7cmV0dXJuIGJhc2U2NC50b0J5dGVBcnJheShiYXNlNjRjbGVhbihzdHIpKX1mdW5jdGlvbiBibGl0QnVmZmVyKHNyYyxkc3Qsb2Zmc2V0LGxlbmd0aCl7Zm9yKHZhciBpPTA7aTxsZW5ndGg7KytpKXtpZihpK29mZnNldD49ZHN0Lmxlbmd0aHx8aT49c3JjLmxlbmd0aClicmVhaztkc3RbaStvZmZzZXRdPXNyY1tpXX1yZXR1cm4gaX1mdW5jdGlvbiBpc0luc3RhbmNlKG9iaix0eXBlKXtyZXR1cm4gb2JqIGluc3RhbmNlb2YgdHlwZXx8b2JqIT1udWxsJiZvYmouY29uc3RydWN0b3IhPW51bGwmJm9iai5jb25zdHJ1Y3Rvci5uYW1lIT1udWxsJiZvYmouY29uc3RydWN0b3IubmFtZT09PXR5cGUubmFtZX1mdW5jdGlvbiBudW1iZXJJc05hTihvYmope3JldHVybiBvYmohPT1vYmp9fSx7XCJiYXNlNjQtanNcIjoxMCxpZWVlNzU0Ojc5fV0sMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBvYmplY3RDcmVhdGU9T2JqZWN0LmNyZWF0ZXx8b2JqZWN0Q3JlYXRlUG9seWZpbGw7dmFyIG9iamVjdEtleXM9T2JqZWN0LmtleXN8fG9iamVjdEtleXNQb2x5ZmlsbDt2YXIgYmluZD1GdW5jdGlvbi5wcm90b3R5cGUuYmluZHx8ZnVuY3Rpb25CaW5kUG9seWZpbGw7ZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCl7aWYoIXRoaXMuX2V2ZW50c3x8IU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLFwiX2V2ZW50c1wiKSl7dGhpcy5fZXZlbnRzPW9iamVjdENyZWF0ZShudWxsKTt0aGlzLl9ldmVudHNDb3VudD0wfXRoaXMuX21heExpc3RlbmVycz10aGlzLl9tYXhMaXN0ZW5lcnN8fHVuZGVmaW5lZH1tb2R1bGUuZXhwb3J0cz1FdmVudEVtaXR0ZXI7RXZlbnRFbWl0dGVyLkV2ZW50RW1pdHRlcj1FdmVudEVtaXR0ZXI7RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzPXVuZGVmaW5lZDtFdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnM9dW5kZWZpbmVkO3ZhciBkZWZhdWx0TWF4TGlzdGVuZXJzPTEwO3ZhciBoYXNEZWZpbmVQcm9wZXJ0eTt0cnl7dmFyIG89e307aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5KU9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLFwieFwiLHt2YWx1ZTowfSk7aGFzRGVmaW5lUHJvcGVydHk9by54PT09MH1jYXRjaChlcnIpe2hhc0RlZmluZVByb3BlcnR5PWZhbHNlfWlmKGhhc0RlZmluZVByb3BlcnR5KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoRXZlbnRFbWl0dGVyLFwiZGVmYXVsdE1heExpc3RlbmVyc1wiLHtlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGRlZmF1bHRNYXhMaXN0ZW5lcnN9LHNldDpmdW5jdGlvbihhcmcpe2lmKHR5cGVvZiBhcmchPT1cIm51bWJlclwifHxhcmc8MHx8YXJnIT09YXJnKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiZGVmYXVsdE1heExpc3RlbmVyc1wiIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXInKTtkZWZhdWx0TWF4TGlzdGVuZXJzPWFyZ319KX1lbHNle0V2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzPWRlZmF1bHRNYXhMaXN0ZW5lcnN9RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24gc2V0TWF4TGlzdGVuZXJzKG4pe2lmKHR5cGVvZiBuIT09XCJudW1iZXJcInx8bjwwfHxpc05hTihuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdcIm5cIiBhcmd1bWVudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyJyk7dGhpcy5fbWF4TGlzdGVuZXJzPW47cmV0dXJuIHRoaXN9O2Z1bmN0aW9uICRnZXRNYXhMaXN0ZW5lcnModGhhdCl7aWYodGhhdC5fbWF4TGlzdGVuZXJzPT09dW5kZWZpbmVkKXJldHVybiBFdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycztyZXR1cm4gdGhhdC5fbWF4TGlzdGVuZXJzfUV2ZW50RW1pdHRlci5wcm90b3R5cGUuZ2V0TWF4TGlzdGVuZXJzPWZ1bmN0aW9uIGdldE1heExpc3RlbmVycygpe3JldHVybiAkZ2V0TWF4TGlzdGVuZXJzKHRoaXMpfTtmdW5jdGlvbiBlbWl0Tm9uZShoYW5kbGVyLGlzRm4sc2VsZil7aWYoaXNGbiloYW5kbGVyLmNhbGwoc2VsZik7ZWxzZXt2YXIgbGVuPWhhbmRsZXIubGVuZ3RoO3ZhciBsaXN0ZW5lcnM9YXJyYXlDbG9uZShoYW5kbGVyLGxlbik7Zm9yKHZhciBpPTA7aTxsZW47KytpKWxpc3RlbmVyc1tpXS5jYWxsKHNlbGYpfX1mdW5jdGlvbiBlbWl0T25lKGhhbmRsZXIsaXNGbixzZWxmLGFyZzEpe2lmKGlzRm4paGFuZGxlci5jYWxsKHNlbGYsYXJnMSk7ZWxzZXt2YXIgbGVuPWhhbmRsZXIubGVuZ3RoO3ZhciBsaXN0ZW5lcnM9YXJyYXlDbG9uZShoYW5kbGVyLGxlbik7Zm9yKHZhciBpPTA7aTxsZW47KytpKWxpc3RlbmVyc1tpXS5jYWxsKHNlbGYsYXJnMSl9fWZ1bmN0aW9uIGVtaXRUd28oaGFuZGxlcixpc0ZuLHNlbGYsYXJnMSxhcmcyKXtpZihpc0ZuKWhhbmRsZXIuY2FsbChzZWxmLGFyZzEsYXJnMik7ZWxzZXt2YXIgbGVuPWhhbmRsZXIubGVuZ3RoO3ZhciBsaXN0ZW5lcnM9YXJyYXlDbG9uZShoYW5kbGVyLGxlbik7Zm9yKHZhciBpPTA7aTxsZW47KytpKWxpc3RlbmVyc1tpXS5jYWxsKHNlbGYsYXJnMSxhcmcyKX19ZnVuY3Rpb24gZW1pdFRocmVlKGhhbmRsZXIsaXNGbixzZWxmLGFyZzEsYXJnMixhcmczKXtpZihpc0ZuKWhhbmRsZXIuY2FsbChzZWxmLGFyZzEsYXJnMixhcmczKTtlbHNle3ZhciBsZW49aGFuZGxlci5sZW5ndGg7dmFyIGxpc3RlbmVycz1hcnJheUNsb25lKGhhbmRsZXIsbGVuKTtmb3IodmFyIGk9MDtpPGxlbjsrK2kpbGlzdGVuZXJzW2ldLmNhbGwoc2VsZixhcmcxLGFyZzIsYXJnMyl9fWZ1bmN0aW9uIGVtaXRNYW55KGhhbmRsZXIsaXNGbixzZWxmLGFyZ3Mpe2lmKGlzRm4paGFuZGxlci5hcHBseShzZWxmLGFyZ3MpO2Vsc2V7dmFyIGxlbj1oYW5kbGVyLmxlbmd0aDt2YXIgbGlzdGVuZXJzPWFycmF5Q2xvbmUoaGFuZGxlcixsZW4pO2Zvcih2YXIgaT0wO2k8bGVuOysraSlsaXN0ZW5lcnNbaV0uYXBwbHkoc2VsZixhcmdzKX19RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uIGVtaXQodHlwZSl7dmFyIGVyLGhhbmRsZXIsbGVuLGFyZ3MsaSxldmVudHM7dmFyIGRvRXJyb3I9dHlwZT09PVwiZXJyb3JcIjtldmVudHM9dGhpcy5fZXZlbnRzO2lmKGV2ZW50cylkb0Vycm9yPWRvRXJyb3ImJmV2ZW50cy5lcnJvcj09bnVsbDtlbHNlIGlmKCFkb0Vycm9yKXJldHVybiBmYWxzZTtpZihkb0Vycm9yKXtpZihhcmd1bWVudHMubGVuZ3RoPjEpZXI9YXJndW1lbnRzWzFdO2lmKGVyIGluc3RhbmNlb2YgRXJyb3Ipe3Rocm93IGVyfWVsc2V7dmFyIGVycj1uZXcgRXJyb3IoJ1VuaGFuZGxlZCBcImVycm9yXCIgZXZlbnQuICgnK2VyK1wiKVwiKTtlcnIuY29udGV4dD1lcjt0aHJvdyBlcnJ9cmV0dXJuIGZhbHNlfWhhbmRsZXI9ZXZlbnRzW3R5cGVdO2lmKCFoYW5kbGVyKXJldHVybiBmYWxzZTt2YXIgaXNGbj10eXBlb2YgaGFuZGxlcj09PVwiZnVuY3Rpb25cIjtsZW49YXJndW1lbnRzLmxlbmd0aDtzd2l0Y2gobGVuKXtjYXNlIDE6ZW1pdE5vbmUoaGFuZGxlcixpc0ZuLHRoaXMpO2JyZWFrO2Nhc2UgMjplbWl0T25lKGhhbmRsZXIsaXNGbix0aGlzLGFyZ3VtZW50c1sxXSk7YnJlYWs7Y2FzZSAzOmVtaXRUd28oaGFuZGxlcixpc0ZuLHRoaXMsYXJndW1lbnRzWzFdLGFyZ3VtZW50c1syXSk7YnJlYWs7Y2FzZSA0OmVtaXRUaHJlZShoYW5kbGVyLGlzRm4sdGhpcyxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdLGFyZ3VtZW50c1szXSk7YnJlYWs7ZGVmYXVsdDphcmdzPW5ldyBBcnJheShsZW4tMSk7Zm9yKGk9MTtpPGxlbjtpKyspYXJnc1tpLTFdPWFyZ3VtZW50c1tpXTtlbWl0TWFueShoYW5kbGVyLGlzRm4sdGhpcyxhcmdzKX1yZXR1cm4gdHJ1ZX07ZnVuY3Rpb24gX2FkZExpc3RlbmVyKHRhcmdldCx0eXBlLGxpc3RlbmVyLHByZXBlbmQpe3ZhciBtO3ZhciBldmVudHM7dmFyIGV4aXN0aW5nO2lmKHR5cGVvZiBsaXN0ZW5lciE9PVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7ZXZlbnRzPXRhcmdldC5fZXZlbnRzO2lmKCFldmVudHMpe2V2ZW50cz10YXJnZXQuX2V2ZW50cz1vYmplY3RDcmVhdGUobnVsbCk7dGFyZ2V0Ll9ldmVudHNDb3VudD0wfWVsc2V7aWYoZXZlbnRzLm5ld0xpc3RlbmVyKXt0YXJnZXQuZW1pdChcIm5ld0xpc3RlbmVyXCIsdHlwZSxsaXN0ZW5lci5saXN0ZW5lcj9saXN0ZW5lci5saXN0ZW5lcjpsaXN0ZW5lcik7ZXZlbnRzPXRhcmdldC5fZXZlbnRzfWV4aXN0aW5nPWV2ZW50c1t0eXBlXX1pZighZXhpc3Rpbmcpe2V4aXN0aW5nPWV2ZW50c1t0eXBlXT1saXN0ZW5lcjsrK3RhcmdldC5fZXZlbnRzQ291bnR9ZWxzZXtpZih0eXBlb2YgZXhpc3Rpbmc9PT1cImZ1bmN0aW9uXCIpe2V4aXN0aW5nPWV2ZW50c1t0eXBlXT1wcmVwZW5kP1tsaXN0ZW5lcixleGlzdGluZ106W2V4aXN0aW5nLGxpc3RlbmVyXX1lbHNle2lmKHByZXBlbmQpe2V4aXN0aW5nLnVuc2hpZnQobGlzdGVuZXIpfWVsc2V7ZXhpc3RpbmcucHVzaChsaXN0ZW5lcil9fWlmKCFleGlzdGluZy53YXJuZWQpe209JGdldE1heExpc3RlbmVycyh0YXJnZXQpO2lmKG0mJm0+MCYmZXhpc3RpbmcubGVuZ3RoPm0pe2V4aXN0aW5nLndhcm5lZD10cnVlO3ZhciB3PW5ldyBFcnJvcihcIlBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBkZXRlY3RlZC4gXCIrZXhpc3RpbmcubGVuZ3RoKycgXCInK1N0cmluZyh0eXBlKSsnXCIgbGlzdGVuZXJzICcrXCJhZGRlZC4gVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gXCIrXCJpbmNyZWFzZSBsaW1pdC5cIik7dy5uYW1lPVwiTWF4TGlzdGVuZXJzRXhjZWVkZWRXYXJuaW5nXCI7dy5lbWl0dGVyPXRhcmdldDt3LnR5cGU9dHlwZTt3LmNvdW50PWV4aXN0aW5nLmxlbmd0aDtpZih0eXBlb2YgY29uc29sZT09PVwib2JqZWN0XCImJmNvbnNvbGUud2Fybil7Y29uc29sZS53YXJuKFwiJXM6ICVzXCIsdy5uYW1lLHcubWVzc2FnZSl9fX19cmV0dXJuIHRhcmdldH1FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyPWZ1bmN0aW9uIGFkZExpc3RlbmVyKHR5cGUsbGlzdGVuZXIpe3JldHVybiBfYWRkTGlzdGVuZXIodGhpcyx0eXBlLGxpc3RlbmVyLGZhbHNlKX07RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbj1FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyO0V2ZW50RW1pdHRlci5wcm90b3R5cGUucHJlcGVuZExpc3RlbmVyPWZ1bmN0aW9uIHByZXBlbmRMaXN0ZW5lcih0eXBlLGxpc3RlbmVyKXtyZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsdHlwZSxsaXN0ZW5lcix0cnVlKX07ZnVuY3Rpb24gb25jZVdyYXBwZXIoKXtpZighdGhpcy5maXJlZCl7dGhpcy50YXJnZXQucmVtb3ZlTGlzdGVuZXIodGhpcy50eXBlLHRoaXMud3JhcEZuKTt0aGlzLmZpcmVkPXRydWU7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gdGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0KTtjYXNlIDE6cmV0dXJuIHRoaXMubGlzdGVuZXIuY2FsbCh0aGlzLnRhcmdldCxhcmd1bWVudHNbMF0pO2Nhc2UgMjpyZXR1cm4gdGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0LGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0pO2Nhc2UgMzpyZXR1cm4gdGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0LGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0sYXJndW1lbnRzWzJdKTtkZWZhdWx0OnZhciBhcmdzPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtmb3IodmFyIGk9MDtpPGFyZ3MubGVuZ3RoOysraSlhcmdzW2ldPWFyZ3VtZW50c1tpXTt0aGlzLmxpc3RlbmVyLmFwcGx5KHRoaXMudGFyZ2V0LGFyZ3MpfX19ZnVuY3Rpb24gX29uY2VXcmFwKHRhcmdldCx0eXBlLGxpc3RlbmVyKXt2YXIgc3RhdGU9e2ZpcmVkOmZhbHNlLHdyYXBGbjp1bmRlZmluZWQsdGFyZ2V0OnRhcmdldCx0eXBlOnR5cGUsbGlzdGVuZXI6bGlzdGVuZXJ9O3ZhciB3cmFwcGVkPWJpbmQuY2FsbChvbmNlV3JhcHBlcixzdGF0ZSk7d3JhcHBlZC5saXN0ZW5lcj1saXN0ZW5lcjtzdGF0ZS53cmFwRm49d3JhcHBlZDtyZXR1cm4gd3JhcHBlZH1FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uY2U9ZnVuY3Rpb24gb25jZSh0eXBlLGxpc3RlbmVyKXtpZih0eXBlb2YgbGlzdGVuZXIhPT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO3RoaXMub24odHlwZSxfb25jZVdyYXAodGhpcyx0eXBlLGxpc3RlbmVyKSk7cmV0dXJuIHRoaXN9O0V2ZW50RW1pdHRlci5wcm90b3R5cGUucHJlcGVuZE9uY2VMaXN0ZW5lcj1mdW5jdGlvbiBwcmVwZW5kT25jZUxpc3RlbmVyKHR5cGUsbGlzdGVuZXIpe2lmKHR5cGVvZiBsaXN0ZW5lciE9PVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RlbmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7dGhpcy5wcmVwZW5kTGlzdGVuZXIodHlwZSxfb25jZVdyYXAodGhpcyx0eXBlLGxpc3RlbmVyKSk7cmV0dXJuIHRoaXN9O0V2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXIodHlwZSxsaXN0ZW5lcil7dmFyIGxpc3QsZXZlbnRzLHBvc2l0aW9uLGksb3JpZ2luYWxMaXN0ZW5lcjtpZih0eXBlb2YgbGlzdGVuZXIhPT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO2V2ZW50cz10aGlzLl9ldmVudHM7aWYoIWV2ZW50cylyZXR1cm4gdGhpcztsaXN0PWV2ZW50c1t0eXBlXTtpZighbGlzdClyZXR1cm4gdGhpcztpZihsaXN0PT09bGlzdGVuZXJ8fGxpc3QubGlzdGVuZXI9PT1saXN0ZW5lcil7aWYoLS10aGlzLl9ldmVudHNDb3VudD09PTApdGhpcy5fZXZlbnRzPW9iamVjdENyZWF0ZShudWxsKTtlbHNle2RlbGV0ZSBldmVudHNbdHlwZV07aWYoZXZlbnRzLnJlbW92ZUxpc3RlbmVyKXRoaXMuZW1pdChcInJlbW92ZUxpc3RlbmVyXCIsdHlwZSxsaXN0Lmxpc3RlbmVyfHxsaXN0ZW5lcil9fWVsc2UgaWYodHlwZW9mIGxpc3QhPT1cImZ1bmN0aW9uXCIpe3Bvc2l0aW9uPS0xO2ZvcihpPWxpc3QubGVuZ3RoLTE7aT49MDtpLS0pe2lmKGxpc3RbaV09PT1saXN0ZW5lcnx8bGlzdFtpXS5saXN0ZW5lcj09PWxpc3RlbmVyKXtvcmlnaW5hbExpc3RlbmVyPWxpc3RbaV0ubGlzdGVuZXI7cG9zaXRpb249aTticmVha319aWYocG9zaXRpb248MClyZXR1cm4gdGhpcztpZihwb3NpdGlvbj09PTApbGlzdC5zaGlmdCgpO2Vsc2Ugc3BsaWNlT25lKGxpc3QscG9zaXRpb24pO2lmKGxpc3QubGVuZ3RoPT09MSlldmVudHNbdHlwZV09bGlzdFswXTtpZihldmVudHMucmVtb3ZlTGlzdGVuZXIpdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIix0eXBlLG9yaWdpbmFsTGlzdGVuZXJ8fGxpc3RlbmVyKX1yZXR1cm4gdGhpc307RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24gcmVtb3ZlQWxsTGlzdGVuZXJzKHR5cGUpe3ZhciBsaXN0ZW5lcnMsZXZlbnRzLGk7ZXZlbnRzPXRoaXMuX2V2ZW50cztpZighZXZlbnRzKXJldHVybiB0aGlzO2lmKCFldmVudHMucmVtb3ZlTGlzdGVuZXIpe2lmKGFyZ3VtZW50cy5sZW5ndGg9PT0wKXt0aGlzLl9ldmVudHM9b2JqZWN0Q3JlYXRlKG51bGwpO3RoaXMuX2V2ZW50c0NvdW50PTB9ZWxzZSBpZihldmVudHNbdHlwZV0pe2lmKC0tdGhpcy5fZXZlbnRzQ291bnQ9PT0wKXRoaXMuX2V2ZW50cz1vYmplY3RDcmVhdGUobnVsbCk7ZWxzZSBkZWxldGUgZXZlbnRzW3R5cGVdfXJldHVybiB0aGlzfWlmKGFyZ3VtZW50cy5sZW5ndGg9PT0wKXt2YXIga2V5cz1vYmplY3RLZXlzKGV2ZW50cyk7dmFyIGtleTtmb3IoaT0wO2k8a2V5cy5sZW5ndGg7KytpKXtrZXk9a2V5c1tpXTtpZihrZXk9PT1cInJlbW92ZUxpc3RlbmVyXCIpY29udGludWU7dGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoa2V5KX10aGlzLnJlbW92ZUFsbExpc3RlbmVycyhcInJlbW92ZUxpc3RlbmVyXCIpO3RoaXMuX2V2ZW50cz1vYmplY3RDcmVhdGUobnVsbCk7dGhpcy5fZXZlbnRzQ291bnQ9MDtyZXR1cm4gdGhpc31saXN0ZW5lcnM9ZXZlbnRzW3R5cGVdO2lmKHR5cGVvZiBsaXN0ZW5lcnM9PT1cImZ1bmN0aW9uXCIpe3RoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSxsaXN0ZW5lcnMpfWVsc2UgaWYobGlzdGVuZXJzKXtmb3IoaT1saXN0ZW5lcnMubGVuZ3RoLTE7aT49MDtpLS0pe3RoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSxsaXN0ZW5lcnNbaV0pfX1yZXR1cm4gdGhpc307ZnVuY3Rpb24gX2xpc3RlbmVycyh0YXJnZXQsdHlwZSx1bndyYXApe3ZhciBldmVudHM9dGFyZ2V0Ll9ldmVudHM7aWYoIWV2ZW50cylyZXR1cm5bXTt2YXIgZXZsaXN0ZW5lcj1ldmVudHNbdHlwZV07aWYoIWV2bGlzdGVuZXIpcmV0dXJuW107aWYodHlwZW9mIGV2bGlzdGVuZXI9PT1cImZ1bmN0aW9uXCIpcmV0dXJuIHVud3JhcD9bZXZsaXN0ZW5lci5saXN0ZW5lcnx8ZXZsaXN0ZW5lcl06W2V2bGlzdGVuZXJdO3JldHVybiB1bndyYXA/dW53cmFwTGlzdGVuZXJzKGV2bGlzdGVuZXIpOmFycmF5Q2xvbmUoZXZsaXN0ZW5lcixldmxpc3RlbmVyLmxlbmd0aCl9RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnM9ZnVuY3Rpb24gbGlzdGVuZXJzKHR5cGUpe3JldHVybiBfbGlzdGVuZXJzKHRoaXMsdHlwZSx0cnVlKX07RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yYXdMaXN0ZW5lcnM9ZnVuY3Rpb24gcmF3TGlzdGVuZXJzKHR5cGUpe3JldHVybiBfbGlzdGVuZXJzKHRoaXMsdHlwZSxmYWxzZSl9O0V2ZW50RW1pdHRlci5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKGVtaXR0ZXIsdHlwZSl7aWYodHlwZW9mIGVtaXR0ZXIubGlzdGVuZXJDb3VudD09PVwiZnVuY3Rpb25cIil7cmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJDb3VudCh0eXBlKX1lbHNle3JldHVybiBsaXN0ZW5lckNvdW50LmNhbGwoZW1pdHRlcix0eXBlKX19O0V2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudD1saXN0ZW5lckNvdW50O2Z1bmN0aW9uIGxpc3RlbmVyQ291bnQodHlwZSl7dmFyIGV2ZW50cz10aGlzLl9ldmVudHM7aWYoZXZlbnRzKXt2YXIgZXZsaXN0ZW5lcj1ldmVudHNbdHlwZV07aWYodHlwZW9mIGV2bGlzdGVuZXI9PT1cImZ1bmN0aW9uXCIpe3JldHVybiAxfWVsc2UgaWYoZXZsaXN0ZW5lcil7cmV0dXJuIGV2bGlzdGVuZXIubGVuZ3RofX1yZXR1cm4gMH1FdmVudEVtaXR0ZXIucHJvdG90eXBlLmV2ZW50TmFtZXM9ZnVuY3Rpb24gZXZlbnROYW1lcygpe3JldHVybiB0aGlzLl9ldmVudHNDb3VudD4wP1JlZmxlY3Qub3duS2V5cyh0aGlzLl9ldmVudHMpOltdfTtmdW5jdGlvbiBzcGxpY2VPbmUobGlzdCxpbmRleCl7Zm9yKHZhciBpPWluZGV4LGs9aSsxLG49bGlzdC5sZW5ndGg7azxuO2krPTEsays9MSlsaXN0W2ldPWxpc3Rba107bGlzdC5wb3AoKX1mdW5jdGlvbiBhcnJheUNsb25lKGFycixuKXt2YXIgY29weT1uZXcgQXJyYXkobik7Zm9yKHZhciBpPTA7aTxuOysraSljb3B5W2ldPWFycltpXTtyZXR1cm4gY29weX1mdW5jdGlvbiB1bndyYXBMaXN0ZW5lcnMoYXJyKXt2YXIgcmV0PW5ldyBBcnJheShhcnIubGVuZ3RoKTtmb3IodmFyIGk9MDtpPHJldC5sZW5ndGg7KytpKXtyZXRbaV09YXJyW2ldLmxpc3RlbmVyfHxhcnJbaV19cmV0dXJuIHJldH1mdW5jdGlvbiBvYmplY3RDcmVhdGVQb2x5ZmlsbChwcm90byl7dmFyIEY9ZnVuY3Rpb24oKXt9O0YucHJvdG90eXBlPXByb3RvO3JldHVybiBuZXcgRn1mdW5jdGlvbiBvYmplY3RLZXlzUG9seWZpbGwob2JqKXt2YXIga2V5cz1bXTtmb3IodmFyIGsgaW4gb2JqKWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosaykpe2tleXMucHVzaChrKX1yZXR1cm4ga31mdW5jdGlvbiBmdW5jdGlvbkJpbmRQb2x5ZmlsbChjb250ZXh0KXt2YXIgZm49dGhpcztyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZm4uYXBwbHkoY29udGV4dCxhcmd1bWVudHMpfX19LHt9XSwxNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7KGZ1bmN0aW9uKEJ1ZmZlcil7ZnVuY3Rpb24gaXNBcnJheShhcmcpe2lmKEFycmF5LmlzQXJyYXkpe3JldHVybiBBcnJheS5pc0FycmF5KGFyZyl9cmV0dXJuIG9iamVjdFRvU3RyaW5nKGFyZyk9PT1cIltvYmplY3QgQXJyYXldXCJ9ZXhwb3J0cy5pc0FycmF5PWlzQXJyYXk7ZnVuY3Rpb24gaXNCb29sZWFuKGFyZyl7cmV0dXJuIHR5cGVvZiBhcmc9PT1cImJvb2xlYW5cIn1leHBvcnRzLmlzQm9vbGVhbj1pc0Jvb2xlYW47ZnVuY3Rpb24gaXNOdWxsKGFyZyl7cmV0dXJuIGFyZz09PW51bGx9ZXhwb3J0cy5pc051bGw9aXNOdWxsO2Z1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZyl7cmV0dXJuIGFyZz09bnVsbH1leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkPWlzTnVsbE9yVW5kZWZpbmVkO2Z1bmN0aW9uIGlzTnVtYmVyKGFyZyl7cmV0dXJuIHR5cGVvZiBhcmc9PT1cIm51bWJlclwifWV4cG9ydHMuaXNOdW1iZXI9aXNOdW1iZXI7ZnVuY3Rpb24gaXNTdHJpbmcoYXJnKXtyZXR1cm4gdHlwZW9mIGFyZz09PVwic3RyaW5nXCJ9ZXhwb3J0cy5pc1N0cmluZz1pc1N0cmluZztmdW5jdGlvbiBpc1N5bWJvbChhcmcpe3JldHVybiB0eXBlb2YgYXJnPT09XCJzeW1ib2xcIn1leHBvcnRzLmlzU3ltYm9sPWlzU3ltYm9sO2Z1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZyl7cmV0dXJuIGFyZz09PXZvaWQgMH1leHBvcnRzLmlzVW5kZWZpbmVkPWlzVW5kZWZpbmVkO2Z1bmN0aW9uIGlzUmVnRXhwKHJlKXtyZXR1cm4gb2JqZWN0VG9TdHJpbmcocmUpPT09XCJbb2JqZWN0IFJlZ0V4cF1cIn1leHBvcnRzLmlzUmVnRXhwPWlzUmVnRXhwO2Z1bmN0aW9uIGlzT2JqZWN0KGFyZyl7cmV0dXJuIHR5cGVvZiBhcmc9PT1cIm9iamVjdFwiJiZhcmchPT1udWxsfWV4cG9ydHMuaXNPYmplY3Q9aXNPYmplY3Q7ZnVuY3Rpb24gaXNEYXRlKGQpe3JldHVybiBvYmplY3RUb1N0cmluZyhkKT09PVwiW29iamVjdCBEYXRlXVwifWV4cG9ydHMuaXNEYXRlPWlzRGF0ZTtmdW5jdGlvbiBpc0Vycm9yKGUpe3JldHVybiBvYmplY3RUb1N0cmluZyhlKT09PVwiW29iamVjdCBFcnJvcl1cInx8ZSBpbnN0YW5jZW9mIEVycm9yfWV4cG9ydHMuaXNFcnJvcj1pc0Vycm9yO2Z1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKXtyZXR1cm4gdHlwZW9mIGFyZz09PVwiZnVuY3Rpb25cIn1leHBvcnRzLmlzRnVuY3Rpb249aXNGdW5jdGlvbjtmdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpe3JldHVybiBhcmc9PT1udWxsfHx0eXBlb2YgYXJnPT09XCJib29sZWFuXCJ8fHR5cGVvZiBhcmc9PT1cIm51bWJlclwifHx0eXBlb2YgYXJnPT09XCJzdHJpbmdcInx8dHlwZW9mIGFyZz09PVwic3ltYm9sXCJ8fHR5cGVvZiBhcmc9PT1cInVuZGVmaW5lZFwifWV4cG9ydHMuaXNQcmltaXRpdmU9aXNQcmltaXRpdmU7ZXhwb3J0cy5pc0J1ZmZlcj1CdWZmZXIuaXNCdWZmZXI7ZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobyl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKX19KS5jYWxsKHRoaXMse2lzQnVmZmVyOnJlcXVpcmUoXCIuLi8uLi9pcy1idWZmZXIvaW5kZXguanNcIil9KX0se1wiLi4vLi4vaXMtYnVmZmVyL2luZGV4LmpzXCI6ODF9XSwxNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGNvcHk9cmVxdWlyZShcImVzNS1leHQvb2JqZWN0L2NvcHlcIiksbm9ybWFsaXplT3B0aW9ucz1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3Qvbm9ybWFsaXplLW9wdGlvbnNcIiksZW5zdXJlQ2FsbGFibGU9cmVxdWlyZShcImVzNS1leHQvb2JqZWN0L3ZhbGlkLWNhbGxhYmxlXCIpLG1hcD1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3QvbWFwXCIpLGNhbGxhYmxlPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC92YWxpZC1jYWxsYWJsZVwiKSx2YWxpZFZhbHVlPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC92YWxpZC12YWx1ZVwiKSxiaW5kPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLGRlZmluZVByb3BlcnR5PU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxoYXNPd25Qcm9wZXJ0eT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGRlZmluZTtkZWZpbmU9ZnVuY3Rpb24obmFtZSxkZXNjLG9wdGlvbnMpe3ZhciB2YWx1ZT12YWxpZFZhbHVlKGRlc2MpJiZjYWxsYWJsZShkZXNjLnZhbHVlKSxkZ3M7ZGdzPWNvcHkoZGVzYyk7ZGVsZXRlIGRncy53cml0YWJsZTtkZWxldGUgZGdzLnZhbHVlO2Rncy5nZXQ9ZnVuY3Rpb24oKXtpZighb3B0aW9ucy5vdmVyd3JpdGVEZWZpbml0aW9uJiZoYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMsbmFtZSkpcmV0dXJuIHZhbHVlO2Rlc2MudmFsdWU9YmluZC5jYWxsKHZhbHVlLG9wdGlvbnMucmVzb2x2ZUNvbnRleHQ/b3B0aW9ucy5yZXNvbHZlQ29udGV4dCh0aGlzKTp0aGlzKTtkZWZpbmVQcm9wZXJ0eSh0aGlzLG5hbWUsZGVzYyk7cmV0dXJuIHRoaXNbbmFtZV19O3JldHVybiBkZ3N9O21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHByb3BzKXt2YXIgb3B0aW9ucz1ub3JtYWxpemVPcHRpb25zKGFyZ3VtZW50c1sxXSk7aWYob3B0aW9ucy5yZXNvbHZlQ29udGV4dCE9bnVsbCllbnN1cmVDYWxsYWJsZShvcHRpb25zLnJlc29sdmVDb250ZXh0KTtyZXR1cm4gbWFwKHByb3BzLGZ1bmN0aW9uKGRlc2MsbmFtZSl7cmV0dXJuIGRlZmluZShuYW1lLGRlc2Msb3B0aW9ucyl9KX19LHtcImVzNS1leHQvb2JqZWN0L2NvcHlcIjozOSxcImVzNS1leHQvb2JqZWN0L21hcFwiOjQ4LFwiZXM1LWV4dC9vYmplY3Qvbm9ybWFsaXplLW9wdGlvbnNcIjo0OSxcImVzNS1leHQvb2JqZWN0L3ZhbGlkLWNhbGxhYmxlXCI6NTQsXCJlczUtZXh0L29iamVjdC92YWxpZC12YWx1ZVwiOjU1fV0sMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBhc3NpZ249cmVxdWlyZShcImVzNS1leHQvb2JqZWN0L2Fzc2lnblwiKSxub3JtYWxpemVPcHRzPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC9ub3JtYWxpemUtb3B0aW9uc1wiKSxpc0NhbGxhYmxlPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC9pcy1jYWxsYWJsZVwiKSxjb250YWlucz1yZXF1aXJlKFwiZXM1LWV4dC9zdHJpbmcvIy9jb250YWluc1wiKSxkO2Q9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZHNjcix2YWx1ZSl7dmFyIGMsZSx3LG9wdGlvbnMsZGVzYztpZihhcmd1bWVudHMubGVuZ3RoPDJ8fHR5cGVvZiBkc2NyIT09XCJzdHJpbmdcIil7b3B0aW9ucz12YWx1ZTt2YWx1ZT1kc2NyO2RzY3I9bnVsbH1lbHNle29wdGlvbnM9YXJndW1lbnRzWzJdfWlmKGRzY3I9PW51bGwpe2M9dz10cnVlO2U9ZmFsc2V9ZWxzZXtjPWNvbnRhaW5zLmNhbGwoZHNjcixcImNcIik7ZT1jb250YWlucy5jYWxsKGRzY3IsXCJlXCIpO3c9Y29udGFpbnMuY2FsbChkc2NyLFwid1wiKX1kZXNjPXt2YWx1ZTp2YWx1ZSxjb25maWd1cmFibGU6YyxlbnVtZXJhYmxlOmUsd3JpdGFibGU6d307cmV0dXJuIW9wdGlvbnM/ZGVzYzphc3NpZ24obm9ybWFsaXplT3B0cyhvcHRpb25zKSxkZXNjKX07ZC5ncz1mdW5jdGlvbihkc2NyLGdldCxzZXQpe3ZhciBjLGUsb3B0aW9ucyxkZXNjO2lmKHR5cGVvZiBkc2NyIT09XCJzdHJpbmdcIil7b3B0aW9ucz1zZXQ7c2V0PWdldDtnZXQ9ZHNjcjtkc2NyPW51bGx9ZWxzZXtvcHRpb25zPWFyZ3VtZW50c1szXX1pZihnZXQ9PW51bGwpe2dldD11bmRlZmluZWR9ZWxzZSBpZighaXNDYWxsYWJsZShnZXQpKXtvcHRpb25zPWdldDtnZXQ9c2V0PXVuZGVmaW5lZH1lbHNlIGlmKHNldD09bnVsbCl7c2V0PXVuZGVmaW5lZH1lbHNlIGlmKCFpc0NhbGxhYmxlKHNldCkpe29wdGlvbnM9c2V0O3NldD11bmRlZmluZWR9aWYoZHNjcj09bnVsbCl7Yz10cnVlO2U9ZmFsc2V9ZWxzZXtjPWNvbnRhaW5zLmNhbGwoZHNjcixcImNcIik7ZT1jb250YWlucy5jYWxsKGRzY3IsXCJlXCIpfWRlc2M9e2dldDpnZXQsc2V0OnNldCxjb25maWd1cmFibGU6YyxlbnVtZXJhYmxlOmV9O3JldHVybiFvcHRpb25zP2Rlc2M6YXNzaWduKG5vcm1hbGl6ZU9wdHMob3B0aW9ucyksZGVzYyl9fSx7XCJlczUtZXh0L29iamVjdC9hc3NpZ25cIjozNixcImVzNS1leHQvb2JqZWN0L2lzLWNhbGxhYmxlXCI6NDIsXCJlczUtZXh0L29iamVjdC9ub3JtYWxpemUtb3B0aW9uc1wiOjQ5LFwiZXM1LWV4dC9zdHJpbmcvIy9jb250YWluc1wiOjU2fV0sMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyhmdW5jdGlvbihwcm9jZXNzLEJ1ZmZlcil7dmFyIHN0cmVhbT1yZXF1aXJlKFwicmVhZGFibGUtc3RyZWFtXCIpO3ZhciBlb3M9cmVxdWlyZShcImVuZC1vZi1zdHJlYW1cIik7dmFyIGluaGVyaXRzPXJlcXVpcmUoXCJpbmhlcml0c1wiKTt2YXIgc2hpZnQ9cmVxdWlyZShcInN0cmVhbS1zaGlmdFwiKTt2YXIgU0lHTkFMX0ZMVVNIPUJ1ZmZlci5mcm9tJiZCdWZmZXIuZnJvbSE9PVVpbnQ4QXJyYXkuZnJvbT9CdWZmZXIuZnJvbShbMF0pOm5ldyBCdWZmZXIoWzBdKTt2YXIgb251bmNvcms9ZnVuY3Rpb24oc2VsZixmbil7aWYoc2VsZi5fY29ya2VkKXNlbGYub25jZShcInVuY29ya1wiLGZuKTtlbHNlIGZuKCl9O3ZhciBhdXRvRGVzdHJveT1mdW5jdGlvbihzZWxmLGVycil7aWYoc2VsZi5fYXV0b0Rlc3Ryb3kpc2VsZi5kZXN0cm95KGVycil9O3ZhciBkZXN0cm95ZXI9ZnVuY3Rpb24oc2VsZixlbmQpe3JldHVybiBmdW5jdGlvbihlcnIpe2lmKGVycilhdXRvRGVzdHJveShzZWxmLGVyci5tZXNzYWdlPT09XCJwcmVtYXR1cmUgY2xvc2VcIj9udWxsOmVycik7ZWxzZSBpZihlbmQmJiFzZWxmLl9lbmRlZClzZWxmLmVuZCgpfX07dmFyIGVuZD1mdW5jdGlvbih3cyxmbil7aWYoIXdzKXJldHVybiBmbigpO2lmKHdzLl93cml0YWJsZVN0YXRlJiZ3cy5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZClyZXR1cm4gZm4oKTtpZih3cy5fd3JpdGFibGVTdGF0ZSlyZXR1cm4gd3MuZW5kKGZuKTt3cy5lbmQoKTtmbigpfTt2YXIgdG9TdHJlYW1zMj1mdW5jdGlvbihycyl7cmV0dXJuIG5ldyBzdHJlYW0uUmVhZGFibGUoe29iamVjdE1vZGU6dHJ1ZSxoaWdoV2F0ZXJNYXJrOjE2fSkud3JhcChycyl9O3ZhciBEdXBsZXhpZnk9ZnVuY3Rpb24od3JpdGFibGUscmVhZGFibGUsb3B0cyl7aWYoISh0aGlzIGluc3RhbmNlb2YgRHVwbGV4aWZ5KSlyZXR1cm4gbmV3IER1cGxleGlmeSh3cml0YWJsZSxyZWFkYWJsZSxvcHRzKTtzdHJlYW0uRHVwbGV4LmNhbGwodGhpcyxvcHRzKTt0aGlzLl93cml0YWJsZT1udWxsO3RoaXMuX3JlYWRhYmxlPW51bGw7dGhpcy5fcmVhZGFibGUyPW51bGw7dGhpcy5fYXV0b0Rlc3Ryb3k9IW9wdHN8fG9wdHMuYXV0b0Rlc3Ryb3khPT1mYWxzZTt0aGlzLl9mb3J3YXJkRGVzdHJveT0hb3B0c3x8b3B0cy5kZXN0cm95IT09ZmFsc2U7dGhpcy5fZm9yd2FyZEVuZD0hb3B0c3x8b3B0cy5lbmQhPT1mYWxzZTt0aGlzLl9jb3JrZWQ9MTt0aGlzLl9vbmRyYWluPW51bGw7dGhpcy5fZHJhaW5lZD1mYWxzZTt0aGlzLl9mb3J3YXJkaW5nPWZhbHNlO3RoaXMuX3Vud3JpdGU9bnVsbDt0aGlzLl91bnJlYWQ9bnVsbDt0aGlzLl9lbmRlZD1mYWxzZTt0aGlzLmRlc3Ryb3llZD1mYWxzZTtpZih3cml0YWJsZSl0aGlzLnNldFdyaXRhYmxlKHdyaXRhYmxlKTtpZihyZWFkYWJsZSl0aGlzLnNldFJlYWRhYmxlKHJlYWRhYmxlKX07aW5oZXJpdHMoRHVwbGV4aWZ5LHN0cmVhbS5EdXBsZXgpO0R1cGxleGlmeS5vYmo9ZnVuY3Rpb24od3JpdGFibGUscmVhZGFibGUsb3B0cyl7aWYoIW9wdHMpb3B0cz17fTtvcHRzLm9iamVjdE1vZGU9dHJ1ZTtvcHRzLmhpZ2hXYXRlck1hcms9MTY7cmV0dXJuIG5ldyBEdXBsZXhpZnkod3JpdGFibGUscmVhZGFibGUsb3B0cyl9O0R1cGxleGlmeS5wcm90b3R5cGUuY29yaz1mdW5jdGlvbigpe2lmKCsrdGhpcy5fY29ya2VkPT09MSl0aGlzLmVtaXQoXCJjb3JrXCIpfTtEdXBsZXhpZnkucHJvdG90eXBlLnVuY29yaz1mdW5jdGlvbigpe2lmKHRoaXMuX2NvcmtlZCYmLS10aGlzLl9jb3JrZWQ9PT0wKXRoaXMuZW1pdChcInVuY29ya1wiKX07RHVwbGV4aWZ5LnByb3RvdHlwZS5zZXRXcml0YWJsZT1mdW5jdGlvbih3cml0YWJsZSl7aWYodGhpcy5fdW53cml0ZSl0aGlzLl91bndyaXRlKCk7aWYodGhpcy5kZXN0cm95ZWQpe2lmKHdyaXRhYmxlJiZ3cml0YWJsZS5kZXN0cm95KXdyaXRhYmxlLmRlc3Ryb3koKTtyZXR1cm59aWYod3JpdGFibGU9PT1udWxsfHx3cml0YWJsZT09PWZhbHNlKXt0aGlzLmVuZCgpO3JldHVybn12YXIgc2VsZj10aGlzO3ZhciB1bmVuZD1lb3Mod3JpdGFibGUse3dyaXRhYmxlOnRydWUscmVhZGFibGU6ZmFsc2V9LGRlc3Ryb3llcih0aGlzLHRoaXMuX2ZvcndhcmRFbmQpKTt2YXIgb25kcmFpbj1mdW5jdGlvbigpe3ZhciBvbmRyYWluPXNlbGYuX29uZHJhaW47c2VsZi5fb25kcmFpbj1udWxsO2lmKG9uZHJhaW4pb25kcmFpbigpfTt2YXIgY2xlYXI9ZnVuY3Rpb24oKXtzZWxmLl93cml0YWJsZS5yZW1vdmVMaXN0ZW5lcihcImRyYWluXCIsb25kcmFpbik7dW5lbmQoKX07aWYodGhpcy5fdW53cml0ZSlwcm9jZXNzLm5leHRUaWNrKG9uZHJhaW4pO3RoaXMuX3dyaXRhYmxlPXdyaXRhYmxlO3RoaXMuX3dyaXRhYmxlLm9uKFwiZHJhaW5cIixvbmRyYWluKTt0aGlzLl91bndyaXRlPWNsZWFyO3RoaXMudW5jb3JrKCl9O0R1cGxleGlmeS5wcm90b3R5cGUuc2V0UmVhZGFibGU9ZnVuY3Rpb24ocmVhZGFibGUpe2lmKHRoaXMuX3VucmVhZCl0aGlzLl91bnJlYWQoKTtpZih0aGlzLmRlc3Ryb3llZCl7aWYocmVhZGFibGUmJnJlYWRhYmxlLmRlc3Ryb3kpcmVhZGFibGUuZGVzdHJveSgpO3JldHVybn1pZihyZWFkYWJsZT09PW51bGx8fHJlYWRhYmxlPT09ZmFsc2Upe3RoaXMucHVzaChudWxsKTt0aGlzLnJlc3VtZSgpO3JldHVybn12YXIgc2VsZj10aGlzO3ZhciB1bmVuZD1lb3MocmVhZGFibGUse3dyaXRhYmxlOmZhbHNlLHJlYWRhYmxlOnRydWV9LGRlc3Ryb3llcih0aGlzKSk7dmFyIG9ucmVhZGFibGU9ZnVuY3Rpb24oKXtzZWxmLl9mb3J3YXJkKCl9O3ZhciBvbmVuZD1mdW5jdGlvbigpe3NlbGYucHVzaChudWxsKX07dmFyIGNsZWFyPWZ1bmN0aW9uKCl7c2VsZi5fcmVhZGFibGUyLnJlbW92ZUxpc3RlbmVyKFwicmVhZGFibGVcIixvbnJlYWRhYmxlKTtzZWxmLl9yZWFkYWJsZTIucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixvbmVuZCk7dW5lbmQoKX07dGhpcy5fZHJhaW5lZD10cnVlO3RoaXMuX3JlYWRhYmxlPXJlYWRhYmxlO3RoaXMuX3JlYWRhYmxlMj1yZWFkYWJsZS5fcmVhZGFibGVTdGF0ZT9yZWFkYWJsZTp0b1N0cmVhbXMyKHJlYWRhYmxlKTt0aGlzLl9yZWFkYWJsZTIub24oXCJyZWFkYWJsZVwiLG9ucmVhZGFibGUpO3RoaXMuX3JlYWRhYmxlMi5vbihcImVuZFwiLG9uZW5kKTt0aGlzLl91bnJlYWQ9Y2xlYXI7dGhpcy5fZm9yd2FyZCgpfTtEdXBsZXhpZnkucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKCl7dGhpcy5fZHJhaW5lZD10cnVlO3RoaXMuX2ZvcndhcmQoKX07RHVwbGV4aWZ5LnByb3RvdHlwZS5fZm9yd2FyZD1mdW5jdGlvbigpe2lmKHRoaXMuX2ZvcndhcmRpbmd8fCF0aGlzLl9yZWFkYWJsZTJ8fCF0aGlzLl9kcmFpbmVkKXJldHVybjt0aGlzLl9mb3J3YXJkaW5nPXRydWU7dmFyIGRhdGE7d2hpbGUodGhpcy5fZHJhaW5lZCYmKGRhdGE9c2hpZnQodGhpcy5fcmVhZGFibGUyKSkhPT1udWxsKXtpZih0aGlzLmRlc3Ryb3llZCljb250aW51ZTt0aGlzLl9kcmFpbmVkPXRoaXMucHVzaChkYXRhKX10aGlzLl9mb3J3YXJkaW5nPWZhbHNlfTtEdXBsZXhpZnkucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oZXJyKXtpZih0aGlzLmRlc3Ryb3llZClyZXR1cm47dGhpcy5kZXN0cm95ZWQ9dHJ1ZTt2YXIgc2VsZj10aGlzO3Byb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKXtzZWxmLl9kZXN0cm95KGVycil9KX07RHVwbGV4aWZ5LnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbihlcnIpe2lmKGVycil7dmFyIG9uZHJhaW49dGhpcy5fb25kcmFpbjt0aGlzLl9vbmRyYWluPW51bGw7aWYob25kcmFpbilvbmRyYWluKGVycik7ZWxzZSB0aGlzLmVtaXQoXCJlcnJvclwiLGVycil9aWYodGhpcy5fZm9yd2FyZERlc3Ryb3kpe2lmKHRoaXMuX3JlYWRhYmxlJiZ0aGlzLl9yZWFkYWJsZS5kZXN0cm95KXRoaXMuX3JlYWRhYmxlLmRlc3Ryb3koKTtpZih0aGlzLl93cml0YWJsZSYmdGhpcy5fd3JpdGFibGUuZGVzdHJveSl0aGlzLl93cml0YWJsZS5kZXN0cm95KCl9dGhpcy5lbWl0KFwiY2xvc2VcIil9O0R1cGxleGlmeS5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKGRhdGEsZW5jLGNiKXtpZih0aGlzLmRlc3Ryb3llZClyZXR1cm4gY2IoKTtpZih0aGlzLl9jb3JrZWQpcmV0dXJuIG9udW5jb3JrKHRoaXMsdGhpcy5fd3JpdGUuYmluZCh0aGlzLGRhdGEsZW5jLGNiKSk7aWYoZGF0YT09PVNJR05BTF9GTFVTSClyZXR1cm4gdGhpcy5fZmluaXNoKGNiKTtpZighdGhpcy5fd3JpdGFibGUpcmV0dXJuIGNiKCk7aWYodGhpcy5fd3JpdGFibGUud3JpdGUoZGF0YSk9PT1mYWxzZSl0aGlzLl9vbmRyYWluPWNiO2Vsc2UgY2IoKX07RHVwbGV4aWZ5LnByb3RvdHlwZS5fZmluaXNoPWZ1bmN0aW9uKGNiKXt2YXIgc2VsZj10aGlzO3RoaXMuZW1pdChcInByZWVuZFwiKTtvbnVuY29yayh0aGlzLGZ1bmN0aW9uKCl7ZW5kKHNlbGYuX2ZvcndhcmRFbmQmJnNlbGYuX3dyaXRhYmxlLGZ1bmN0aW9uKCl7aWYoc2VsZi5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZD09PWZhbHNlKXNlbGYuX3dyaXRhYmxlU3RhdGUucHJlZmluaXNoZWQ9dHJ1ZTtzZWxmLmVtaXQoXCJwcmVmaW5pc2hcIik7b251bmNvcmsoc2VsZixjYil9KX0pfTtEdXBsZXhpZnkucHJvdG90eXBlLmVuZD1mdW5jdGlvbihkYXRhLGVuYyxjYil7aWYodHlwZW9mIGRhdGE9PT1cImZ1bmN0aW9uXCIpcmV0dXJuIHRoaXMuZW5kKG51bGwsbnVsbCxkYXRhKTtpZih0eXBlb2YgZW5jPT09XCJmdW5jdGlvblwiKXJldHVybiB0aGlzLmVuZChkYXRhLG51bGwsZW5jKTt0aGlzLl9lbmRlZD10cnVlO2lmKGRhdGEpdGhpcy53cml0ZShkYXRhKTtpZighdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRpbmcpdGhpcy53cml0ZShTSUdOQUxfRkxVU0gpO3JldHVybiBzdHJlYW0uV3JpdGFibGUucHJvdG90eXBlLmVuZC5jYWxsKHRoaXMsY2IpfTttb2R1bGUuZXhwb3J0cz1EdXBsZXhpZnl9KS5jYWxsKHRoaXMscmVxdWlyZShcIl9wcm9jZXNzXCIpLHJlcXVpcmUoXCJidWZmZXJcIikuQnVmZmVyKX0se19wcm9jZXNzOjkyLGJ1ZmZlcjoxMixcImVuZC1vZi1zdHJlYW1cIjoxOCxpbmhlcml0czo4MCxcInJlYWRhYmxlLXN0cmVhbVwiOjEwOCxcInN0cmVhbS1zaGlmdFwiOjExMX1dLDE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXt2YXIgb25jZT1yZXF1aXJlKFwib25jZVwiKTt2YXIgbm9vcD1mdW5jdGlvbigpe307dmFyIGlzUmVxdWVzdD1mdW5jdGlvbihzdHJlYW0pe3JldHVybiBzdHJlYW0uc2V0SGVhZGVyJiZ0eXBlb2Ygc3RyZWFtLmFib3J0PT09XCJmdW5jdGlvblwifTt2YXIgaXNDaGlsZFByb2Nlc3M9ZnVuY3Rpb24oc3RyZWFtKXtyZXR1cm4gc3RyZWFtLnN0ZGlvJiZBcnJheS5pc0FycmF5KHN0cmVhbS5zdGRpbykmJnN0cmVhbS5zdGRpby5sZW5ndGg9PT0zfTt2YXIgZW9zPWZ1bmN0aW9uKHN0cmVhbSxvcHRzLGNhbGxiYWNrKXtpZih0eXBlb2Ygb3B0cz09PVwiZnVuY3Rpb25cIilyZXR1cm4gZW9zKHN0cmVhbSxudWxsLG9wdHMpO2lmKCFvcHRzKW9wdHM9e307Y2FsbGJhY2s9b25jZShjYWxsYmFja3x8bm9vcCk7dmFyIHdzPXN0cmVhbS5fd3JpdGFibGVTdGF0ZTt2YXIgcnM9c3RyZWFtLl9yZWFkYWJsZVN0YXRlO3ZhciByZWFkYWJsZT1vcHRzLnJlYWRhYmxlfHxvcHRzLnJlYWRhYmxlIT09ZmFsc2UmJnN0cmVhbS5yZWFkYWJsZTt2YXIgd3JpdGFibGU9b3B0cy53cml0YWJsZXx8b3B0cy53cml0YWJsZSE9PWZhbHNlJiZzdHJlYW0ud3JpdGFibGU7dmFyIG9ubGVnYWN5ZmluaXNoPWZ1bmN0aW9uKCl7aWYoIXN0cmVhbS53cml0YWJsZSlvbmZpbmlzaCgpfTt2YXIgb25maW5pc2g9ZnVuY3Rpb24oKXt3cml0YWJsZT1mYWxzZTtpZighcmVhZGFibGUpY2FsbGJhY2suY2FsbChzdHJlYW0pfTt2YXIgb25lbmQ9ZnVuY3Rpb24oKXtyZWFkYWJsZT1mYWxzZTtpZighd3JpdGFibGUpY2FsbGJhY2suY2FsbChzdHJlYW0pfTt2YXIgb25leGl0PWZ1bmN0aW9uKGV4aXRDb2RlKXtjYWxsYmFjay5jYWxsKHN0cmVhbSxleGl0Q29kZT9uZXcgRXJyb3IoXCJleGl0ZWQgd2l0aCBlcnJvciBjb2RlOiBcIitleGl0Q29kZSk6bnVsbCl9O3ZhciBvbmVycm9yPWZ1bmN0aW9uKGVycil7Y2FsbGJhY2suY2FsbChzdHJlYW0sZXJyKX07dmFyIG9uY2xvc2U9ZnVuY3Rpb24oKXtpZihyZWFkYWJsZSYmIShycyYmcnMuZW5kZWQpKXJldHVybiBjYWxsYmFjay5jYWxsKHN0cmVhbSxuZXcgRXJyb3IoXCJwcmVtYXR1cmUgY2xvc2VcIikpO2lmKHdyaXRhYmxlJiYhKHdzJiZ3cy5lbmRlZCkpcmV0dXJuIGNhbGxiYWNrLmNhbGwoc3RyZWFtLG5ldyBFcnJvcihcInByZW1hdHVyZSBjbG9zZVwiKSl9O3ZhciBvbnJlcXVlc3Q9ZnVuY3Rpb24oKXtzdHJlYW0ucmVxLm9uKFwiZmluaXNoXCIsb25maW5pc2gpfTtpZihpc1JlcXVlc3Qoc3RyZWFtKSl7c3RyZWFtLm9uKFwiY29tcGxldGVcIixvbmZpbmlzaCk7c3RyZWFtLm9uKFwiYWJvcnRcIixvbmNsb3NlKTtpZihzdHJlYW0ucmVxKW9ucmVxdWVzdCgpO2Vsc2Ugc3RyZWFtLm9uKFwicmVxdWVzdFwiLG9ucmVxdWVzdCl9ZWxzZSBpZih3cml0YWJsZSYmIXdzKXtzdHJlYW0ub24oXCJlbmRcIixvbmxlZ2FjeWZpbmlzaCk7c3RyZWFtLm9uKFwiY2xvc2VcIixvbmxlZ2FjeWZpbmlzaCl9aWYoaXNDaGlsZFByb2Nlc3Moc3RyZWFtKSlzdHJlYW0ub24oXCJleGl0XCIsb25leGl0KTtzdHJlYW0ub24oXCJlbmRcIixvbmVuZCk7c3RyZWFtLm9uKFwiZmluaXNoXCIsb25maW5pc2gpO2lmKG9wdHMuZXJyb3IhPT1mYWxzZSlzdHJlYW0ub24oXCJlcnJvclwiLG9uZXJyb3IpO3N0cmVhbS5vbihcImNsb3NlXCIsb25jbG9zZSk7cmV0dXJuIGZ1bmN0aW9uKCl7c3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiY29tcGxldGVcIixvbmZpbmlzaCk7c3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiYWJvcnRcIixvbmNsb3NlKTtzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJyZXF1ZXN0XCIsb25yZXF1ZXN0KTtpZihzdHJlYW0ucmVxKXN0cmVhbS5yZXEucmVtb3ZlTGlzdGVuZXIoXCJmaW5pc2hcIixvbmZpbmlzaCk7c3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsb25sZWdhY3lmaW5pc2gpO3N0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsb25sZWdhY3lmaW5pc2gpO3N0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLG9uZmluaXNoKTtzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJleGl0XCIsb25leGl0KTtzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixvbmVuZCk7c3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIixvbmVycm9yKTtzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLG9uY2xvc2UpfX07bW9kdWxlLmV4cG9ydHM9ZW9zfSx7b25jZTo5MH1dLDE5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgdmFsdWU9cmVxdWlyZShcIi4uLy4uL29iamVjdC92YWxpZC12YWx1ZVwiKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhbHVlKHRoaXMpLmxlbmd0aD0wO3JldHVybiB0aGlzfX0se1wiLi4vLi4vb2JqZWN0L3ZhbGlkLXZhbHVlXCI6NTV9XSwyMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG51bWJlcklzTmFOPXJlcXVpcmUoXCIuLi8uLi9udW1iZXIvaXMtbmFuXCIpLHRvUG9zSW50PXJlcXVpcmUoXCIuLi8uLi9udW1iZXIvdG8tcG9zLWludGVnZXJcIiksdmFsdWU9cmVxdWlyZShcIi4uLy4uL29iamVjdC92YWxpZC12YWx1ZVwiKSxpbmRleE9mPUFycmF5LnByb3RvdHlwZS5pbmRleE9mLG9iakhhc093blByb3BlcnR5PU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksYWJzPU1hdGguYWJzLGZsb29yPU1hdGguZmxvb3I7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oc2VhcmNoRWxlbWVudCl7dmFyIGksbGVuZ3RoLGZyb21JbmRleCx2YWw7aWYoIW51bWJlcklzTmFOKHNlYXJjaEVsZW1lbnQpKXJldHVybiBpbmRleE9mLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtsZW5ndGg9dG9Qb3NJbnQodmFsdWUodGhpcykubGVuZ3RoKTtmcm9tSW5kZXg9YXJndW1lbnRzWzFdO2lmKGlzTmFOKGZyb21JbmRleCkpZnJvbUluZGV4PTA7ZWxzZSBpZihmcm9tSW5kZXg+PTApZnJvbUluZGV4PWZsb29yKGZyb21JbmRleCk7ZWxzZSBmcm9tSW5kZXg9dG9Qb3NJbnQodGhpcy5sZW5ndGgpLWZsb29yKGFicyhmcm9tSW5kZXgpKTtmb3IoaT1mcm9tSW5kZXg7aTxsZW5ndGg7KytpKXtpZihvYmpIYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMsaSkpe3ZhbD10aGlzW2ldO2lmKG51bWJlcklzTmFOKHZhbCkpcmV0dXJuIGl9fXJldHVybi0xfX0se1wiLi4vLi4vbnVtYmVyL2lzLW5hblwiOjMwLFwiLi4vLi4vbnVtYmVyL3RvLXBvcy1pbnRlZ2VyXCI6MzQsXCIuLi8uLi9vYmplY3QvdmFsaWQtdmFsdWVcIjo1NX1dLDIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiLi9pcy1pbXBsZW1lbnRlZFwiKSgpP0FycmF5LmZyb206cmVxdWlyZShcIi4vc2hpbVwiKX0se1wiLi9pcy1pbXBsZW1lbnRlZFwiOjIyLFwiLi9zaGltXCI6MjN9XSwyMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZnJvbT1BcnJheS5mcm9tLGFycixyZXN1bHQ7aWYodHlwZW9mIGZyb20hPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGZhbHNlO2Fycj1bXCJyYXpcIixcImR3YVwiXTtyZXN1bHQ9ZnJvbShhcnIpO3JldHVybiBCb29sZWFuKHJlc3VsdCYmcmVzdWx0IT09YXJyJiZyZXN1bHRbMV09PT1cImR3YVwiKX19LHt9XSwyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGl0ZXJhdG9yU3ltYm9sPXJlcXVpcmUoXCJlczYtc3ltYm9sXCIpLml0ZXJhdG9yLGlzQXJndW1lbnRzPXJlcXVpcmUoXCIuLi8uLi9mdW5jdGlvbi9pcy1hcmd1bWVudHNcIiksaXNGdW5jdGlvbj1yZXF1aXJlKFwiLi4vLi4vZnVuY3Rpb24vaXMtZnVuY3Rpb25cIiksdG9Qb3NJbnQ9cmVxdWlyZShcIi4uLy4uL251bWJlci90by1wb3MtaW50ZWdlclwiKSxjYWxsYWJsZT1yZXF1aXJlKFwiLi4vLi4vb2JqZWN0L3ZhbGlkLWNhbGxhYmxlXCIpLHZhbGlkVmFsdWU9cmVxdWlyZShcIi4uLy4uL29iamVjdC92YWxpZC12YWx1ZVwiKSxpc1ZhbHVlPXJlcXVpcmUoXCIuLi8uLi9vYmplY3QvaXMtdmFsdWVcIiksaXNTdHJpbmc9cmVxdWlyZShcIi4uLy4uL3N0cmluZy9pcy1zdHJpbmdcIiksaXNBcnJheT1BcnJheS5pc0FycmF5LGNhbGw9RnVuY3Rpb24ucHJvdG90eXBlLmNhbGwsZGVzYz17Y29uZmlndXJhYmxlOnRydWUsZW51bWVyYWJsZTp0cnVlLHdyaXRhYmxlOnRydWUsdmFsdWU6bnVsbH0sZGVmaW5lUHJvcGVydHk9T2JqZWN0LmRlZmluZVByb3BlcnR5O21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGFycmF5TGlrZSl7dmFyIG1hcEZuPWFyZ3VtZW50c1sxXSx0aGlzQXJnPWFyZ3VtZW50c1syXSxDb250ZXh0LGksaixhcnIsbGVuZ3RoLGNvZGUsaXRlcmF0b3IscmVzdWx0LGdldEl0ZXJhdG9yLHZhbHVlO2FycmF5TGlrZT1PYmplY3QodmFsaWRWYWx1ZShhcnJheUxpa2UpKTtpZihpc1ZhbHVlKG1hcEZuKSljYWxsYWJsZShtYXBGbik7aWYoIXRoaXN8fHRoaXM9PT1BcnJheXx8IWlzRnVuY3Rpb24odGhpcykpe2lmKCFtYXBGbil7aWYoaXNBcmd1bWVudHMoYXJyYXlMaWtlKSl7bGVuZ3RoPWFycmF5TGlrZS5sZW5ndGg7aWYobGVuZ3RoIT09MSlyZXR1cm4gQXJyYXkuYXBwbHkobnVsbCxhcnJheUxpa2UpO2Fycj1uZXcgQXJyYXkoMSk7YXJyWzBdPWFycmF5TGlrZVswXTtyZXR1cm4gYXJyfWlmKGlzQXJyYXkoYXJyYXlMaWtlKSl7YXJyPW5ldyBBcnJheShsZW5ndGg9YXJyYXlMaWtlLmxlbmd0aCk7Zm9yKGk9MDtpPGxlbmd0aDsrK2kpYXJyW2ldPWFycmF5TGlrZVtpXTtyZXR1cm4gYXJyfX1hcnI9W119ZWxzZXtDb250ZXh0PXRoaXN9aWYoIWlzQXJyYXkoYXJyYXlMaWtlKSl7aWYoKGdldEl0ZXJhdG9yPWFycmF5TGlrZVtpdGVyYXRvclN5bWJvbF0pIT09dW5kZWZpbmVkKXtpdGVyYXRvcj1jYWxsYWJsZShnZXRJdGVyYXRvcikuY2FsbChhcnJheUxpa2UpO2lmKENvbnRleHQpYXJyPW5ldyBDb250ZXh0O3Jlc3VsdD1pdGVyYXRvci5uZXh0KCk7aT0wO3doaWxlKCFyZXN1bHQuZG9uZSl7dmFsdWU9bWFwRm4/Y2FsbC5jYWxsKG1hcEZuLHRoaXNBcmcscmVzdWx0LnZhbHVlLGkpOnJlc3VsdC52YWx1ZTtpZihDb250ZXh0KXtkZXNjLnZhbHVlPXZhbHVlO2RlZmluZVByb3BlcnR5KGFycixpLGRlc2MpfWVsc2V7YXJyW2ldPXZhbHVlfXJlc3VsdD1pdGVyYXRvci5uZXh0KCk7KytpfWxlbmd0aD1pfWVsc2UgaWYoaXNTdHJpbmcoYXJyYXlMaWtlKSl7bGVuZ3RoPWFycmF5TGlrZS5sZW5ndGg7aWYoQ29udGV4dClhcnI9bmV3IENvbnRleHQ7Zm9yKGk9MCxqPTA7aTxsZW5ndGg7KytpKXt2YWx1ZT1hcnJheUxpa2VbaV07aWYoaSsxPGxlbmd0aCl7Y29kZT12YWx1ZS5jaGFyQ29kZUF0KDApO2lmKGNvZGU+PTU1Mjk2JiZjb2RlPD01NjMxOSl2YWx1ZSs9YXJyYXlMaWtlWysraV19dmFsdWU9bWFwRm4/Y2FsbC5jYWxsKG1hcEZuLHRoaXNBcmcsdmFsdWUsaik6dmFsdWU7aWYoQ29udGV4dCl7ZGVzYy52YWx1ZT12YWx1ZTtkZWZpbmVQcm9wZXJ0eShhcnIsaixkZXNjKX1lbHNle2FycltqXT12YWx1ZX0rK2p9bGVuZ3RoPWp9fWlmKGxlbmd0aD09PXVuZGVmaW5lZCl7bGVuZ3RoPXRvUG9zSW50KGFycmF5TGlrZS5sZW5ndGgpO2lmKENvbnRleHQpYXJyPW5ldyBDb250ZXh0KGxlbmd0aCk7Zm9yKGk9MDtpPGxlbmd0aDsrK2kpe3ZhbHVlPW1hcEZuP2NhbGwuY2FsbChtYXBGbix0aGlzQXJnLGFycmF5TGlrZVtpXSxpKTphcnJheUxpa2VbaV07aWYoQ29udGV4dCl7ZGVzYy52YWx1ZT12YWx1ZTtkZWZpbmVQcm9wZXJ0eShhcnIsaSxkZXNjKX1lbHNle2FycltpXT12YWx1ZX19fWlmKENvbnRleHQpe2Rlc2MudmFsdWU9bnVsbDthcnIubGVuZ3RoPWxlbmd0aH1yZXR1cm4gYXJyfX0se1wiLi4vLi4vZnVuY3Rpb24vaXMtYXJndW1lbnRzXCI6MjQsXCIuLi8uLi9mdW5jdGlvbi9pcy1mdW5jdGlvblwiOjI1LFwiLi4vLi4vbnVtYmVyL3RvLXBvcy1pbnRlZ2VyXCI6MzQsXCIuLi8uLi9vYmplY3QvaXMtdmFsdWVcIjo0NCxcIi4uLy4uL29iamVjdC92YWxpZC1jYWxsYWJsZVwiOjU0LFwiLi4vLi4vb2JqZWN0L3ZhbGlkLXZhbHVlXCI6NTUsXCIuLi8uLi9zdHJpbmcvaXMtc3RyaW5nXCI6NTksXCJlczYtc3ltYm9sXCI6NzN9XSwyNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG9ialRvU3RyaW5nPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsaWQ9b2JqVG9TdHJpbmcuY2FsbChmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gb2JqVG9TdHJpbmcuY2FsbCh2YWx1ZSk9PT1pZH19LHt9XSwyNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG9ialRvU3RyaW5nPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsaWQ9b2JqVG9TdHJpbmcuY2FsbChyZXF1aXJlKFwiLi9ub29wXCIpKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHR5cGVvZiB2YWx1ZT09PVwiZnVuY3Rpb25cIiYmb2JqVG9TdHJpbmcuY2FsbCh2YWx1ZSk9PT1pZH19LHtcIi4vbm9vcFwiOjI2fV0sMjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7fX0se31dLDI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiLi9pcy1pbXBsZW1lbnRlZFwiKSgpP01hdGguc2lnbjpyZXF1aXJlKFwiLi9zaGltXCIpfSx7XCIuL2lzLWltcGxlbWVudGVkXCI6MjgsXCIuL3NoaW1cIjoyOX1dLDI4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBzaWduPU1hdGguc2lnbjtpZih0eXBlb2Ygc2lnbiE9PVwiZnVuY3Rpb25cIilyZXR1cm4gZmFsc2U7cmV0dXJuIHNpZ24oMTApPT09MSYmc2lnbigtMjApPT09LTF9fSx7fV0sMjk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHZhbHVlKXt2YWx1ZT1OdW1iZXIodmFsdWUpO2lmKGlzTmFOKHZhbHVlKXx8dmFsdWU9PT0wKXJldHVybiB2YWx1ZTtyZXR1cm4gdmFsdWU+MD8xOi0xfX0se31dLDMwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiLi9pcy1pbXBsZW1lbnRlZFwiKSgpP051bWJlci5pc05hTjpyZXF1aXJlKFwiLi9zaGltXCIpfSx7XCIuL2lzLWltcGxlbWVudGVkXCI6MzEsXCIuL3NoaW1cIjozMn1dLDMxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBudW1iZXJJc05hTj1OdW1iZXIuaXNOYU47aWYodHlwZW9mIG51bWJlcklzTmFOIT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtyZXR1cm4hbnVtYmVySXNOYU4oe30pJiZudW1iZXJJc05hTihOYU4pJiYhbnVtYmVySXNOYU4oMzQpfX0se31dLDMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHZhbHVlIT09dmFsdWV9fSx7fV0sMzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBzaWduPXJlcXVpcmUoXCIuLi9tYXRoL3NpZ25cIiksYWJzPU1hdGguYWJzLGZsb29yPU1hdGguZmxvb3I7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odmFsdWUpe2lmKGlzTmFOKHZhbHVlKSlyZXR1cm4gMDt2YWx1ZT1OdW1iZXIodmFsdWUpO2lmKHZhbHVlPT09MHx8IWlzRmluaXRlKHZhbHVlKSlyZXR1cm4gdmFsdWU7cmV0dXJuIHNpZ24odmFsdWUpKmZsb29yKGFicyh2YWx1ZSkpfX0se1wiLi4vbWF0aC9zaWduXCI6Mjd9XSwzNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHRvSW50ZWdlcj1yZXF1aXJlKFwiLi90by1pbnRlZ2VyXCIpLG1heD1NYXRoLm1heDttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIG1heCgwLHRvSW50ZWdlcih2YWx1ZSkpfX0se1wiLi90by1pbnRlZ2VyXCI6MzN9XSwzNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGNhbGxhYmxlPXJlcXVpcmUoXCIuL3ZhbGlkLWNhbGxhYmxlXCIpLHZhbHVlPXJlcXVpcmUoXCIuL3ZhbGlkLXZhbHVlXCIpLGJpbmQ9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQsY2FsbD1GdW5jdGlvbi5wcm90b3R5cGUuY2FsbCxrZXlzPU9iamVjdC5rZXlzLG9ialByb3BlcnR5SXNFbnVtZXJhYmxlPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24obWV0aG9kLGRlZlZhbCl7cmV0dXJuIGZ1bmN0aW9uKG9iaixjYil7dmFyIGxpc3QsdGhpc0FyZz1hcmd1bWVudHNbMl0sY29tcGFyZUZuPWFyZ3VtZW50c1szXTtvYmo9T2JqZWN0KHZhbHVlKG9iaikpO2NhbGxhYmxlKGNiKTtsaXN0PWtleXMob2JqKTtpZihjb21wYXJlRm4pe2xpc3Quc29ydCh0eXBlb2YgY29tcGFyZUZuPT09XCJmdW5jdGlvblwiP2JpbmQuY2FsbChjb21wYXJlRm4sb2JqKTp1bmRlZmluZWQpfWlmKHR5cGVvZiBtZXRob2QhPT1cImZ1bmN0aW9uXCIpbWV0aG9kPWxpc3RbbWV0aG9kXTtyZXR1cm4gY2FsbC5jYWxsKG1ldGhvZCxsaXN0LGZ1bmN0aW9uKGtleSxpbmRleCl7aWYoIW9ialByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqLGtleSkpcmV0dXJuIGRlZlZhbDtyZXR1cm4gY2FsbC5jYWxsKGNiLHRoaXNBcmcsb2JqW2tleV0sa2V5LG9iaixpbmRleCl9KX19fSx7XCIuL3ZhbGlkLWNhbGxhYmxlXCI6NTQsXCIuL3ZhbGlkLXZhbHVlXCI6NTV9XSwzNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vaXMtaW1wbGVtZW50ZWRcIikoKT9PYmplY3QuYXNzaWduOnJlcXVpcmUoXCIuL3NoaW1cIil9LHtcIi4vaXMtaW1wbGVtZW50ZWRcIjozNyxcIi4vc2hpbVwiOjM4fV0sMzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGFzc2lnbj1PYmplY3QuYXNzaWduLG9iajtpZih0eXBlb2YgYXNzaWduIT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtvYmo9e2ZvbzpcInJhelwifTthc3NpZ24ob2JqLHtiYXI6XCJkd2FcIn0se3Ryenk6XCJ0cnp5XCJ9KTtyZXR1cm4gb2JqLmZvbytvYmouYmFyK29iai50cnp5PT09XCJyYXpkd2F0cnp5XCJ9fSx7fV0sMzg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBrZXlzPXJlcXVpcmUoXCIuLi9rZXlzXCIpLHZhbHVlPXJlcXVpcmUoXCIuLi92YWxpZC12YWx1ZVwiKSxtYXg9TWF0aC5tYXg7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZGVzdCxzcmMpe3ZhciBlcnJvcixpLGxlbmd0aD1tYXgoYXJndW1lbnRzLmxlbmd0aCwyKSxhc3NpZ247ZGVzdD1PYmplY3QodmFsdWUoZGVzdCkpO2Fzc2lnbj1mdW5jdGlvbihrZXkpe3RyeXtkZXN0W2tleV09c3JjW2tleV19Y2F0Y2goZSl7aWYoIWVycm9yKWVycm9yPWV9fTtmb3IoaT0xO2k8bGVuZ3RoOysraSl7c3JjPWFyZ3VtZW50c1tpXTtrZXlzKHNyYykuZm9yRWFjaChhc3NpZ24pfWlmKGVycm9yIT09dW5kZWZpbmVkKXRocm93IGVycm9yO3JldHVybiBkZXN0fX0se1wiLi4va2V5c1wiOjQ1LFwiLi4vdmFsaWQtdmFsdWVcIjo1NX1dLDM5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgYUZyb209cmVxdWlyZShcIi4uL2FycmF5L2Zyb21cIiksYXNzaWduPXJlcXVpcmUoXCIuL2Fzc2lnblwiKSx2YWx1ZT1yZXF1aXJlKFwiLi92YWxpZC12YWx1ZVwiKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihvYmope3ZhciBjb3B5PU9iamVjdCh2YWx1ZShvYmopKSxwcm9wZXJ0eU5hbWVzPWFyZ3VtZW50c1sxXSxvcHRpb25zPU9iamVjdChhcmd1bWVudHNbMl0pO2lmKGNvcHkhPT1vYmomJiFwcm9wZXJ0eU5hbWVzKXJldHVybiBjb3B5O3ZhciByZXN1bHQ9e307aWYocHJvcGVydHlOYW1lcyl7YUZyb20ocHJvcGVydHlOYW1lcyxmdW5jdGlvbihwcm9wZXJ0eU5hbWUpe2lmKG9wdGlvbnMuZW5zdXJlfHxwcm9wZXJ0eU5hbWUgaW4gb2JqKXJlc3VsdFtwcm9wZXJ0eU5hbWVdPW9ialtwcm9wZXJ0eU5hbWVdfSl9ZWxzZXthc3NpZ24ocmVzdWx0LG9iail9cmV0dXJuIHJlc3VsdH19LHtcIi4uL2FycmF5L2Zyb21cIjoyMSxcIi4vYXNzaWduXCI6MzYsXCIuL3ZhbGlkLXZhbHVlXCI6NTV9XSw0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGNyZWF0ZT1PYmplY3QuY3JlYXRlLHNoaW07aWYoIXJlcXVpcmUoXCIuL3NldC1wcm90b3R5cGUtb2YvaXMtaW1wbGVtZW50ZWRcIikoKSl7c2hpbT1yZXF1aXJlKFwiLi9zZXQtcHJvdG90eXBlLW9mL3NoaW1cIil9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgbnVsbE9iamVjdCxwb2x5UHJvcHMsZGVzYztpZighc2hpbSlyZXR1cm4gY3JlYXRlO2lmKHNoaW0ubGV2ZWwhPT0xKXJldHVybiBjcmVhdGU7bnVsbE9iamVjdD17fTtwb2x5UHJvcHM9e307ZGVzYz17Y29uZmlndXJhYmxlOmZhbHNlLGVudW1lcmFibGU6ZmFsc2Usd3JpdGFibGU6dHJ1ZSx2YWx1ZTp1bmRlZmluZWR9O09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE9iamVjdC5wcm90b3R5cGUpLmZvckVhY2goZnVuY3Rpb24obmFtZSl7aWYobmFtZT09PVwiX19wcm90b19fXCIpe3BvbHlQcm9wc1tuYW1lXT17Y29uZmlndXJhYmxlOnRydWUsZW51bWVyYWJsZTpmYWxzZSx3cml0YWJsZTp0cnVlLHZhbHVlOnVuZGVmaW5lZH07cmV0dXJufXBvbHlQcm9wc1tuYW1lXT1kZXNjfSk7T2JqZWN0LmRlZmluZVByb3BlcnRpZXMobnVsbE9iamVjdCxwb2x5UHJvcHMpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShzaGltLFwibnVsbFBvbHlmaWxsXCIse2NvbmZpZ3VyYWJsZTpmYWxzZSxlbnVtZXJhYmxlOmZhbHNlLHdyaXRhYmxlOmZhbHNlLHZhbHVlOm51bGxPYmplY3R9KTtyZXR1cm4gZnVuY3Rpb24ocHJvdG90eXBlLHByb3BzKXtyZXR1cm4gY3JlYXRlKHByb3RvdHlwZT09PW51bGw/bnVsbE9iamVjdDpwcm90b3R5cGUscHJvcHMpfX0oKX0se1wiLi9zZXQtcHJvdG90eXBlLW9mL2lzLWltcGxlbWVudGVkXCI6NTIsXCIuL3NldC1wcm90b3R5cGUtb2Yvc2hpbVwiOjUzfV0sNDE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPXJlcXVpcmUoXCIuL19pdGVyYXRlXCIpKFwiZm9yRWFjaFwiKX0se1wiLi9faXRlcmF0ZVwiOjM1fV0sNDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKG9iail7cmV0dXJuIHR5cGVvZiBvYmo9PT1cImZ1bmN0aW9uXCJ9fSx7fV0sNDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBpc1ZhbHVlPXJlcXVpcmUoXCIuL2lzLXZhbHVlXCIpO3ZhciBtYXA9e2Z1bmN0aW9uOnRydWUsb2JqZWN0OnRydWV9O21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gaXNWYWx1ZSh2YWx1ZSkmJm1hcFt0eXBlb2YgdmFsdWVdfHxmYWxzZX19LHtcIi4vaXMtdmFsdWVcIjo0NH1dLDQ0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgX3VuZGVmaW5lZD1yZXF1aXJlKFwiLi4vZnVuY3Rpb24vbm9vcFwiKSgpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHZhbCl7cmV0dXJuIHZhbCE9PV91bmRlZmluZWQmJnZhbCE9PW51bGx9fSx7XCIuLi9mdW5jdGlvbi9ub29wXCI6MjZ9XSw0NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vaXMtaW1wbGVtZW50ZWRcIikoKT9PYmplY3Qua2V5czpyZXF1aXJlKFwiLi9zaGltXCIpfSx7XCIuL2lzLWltcGxlbWVudGVkXCI6NDYsXCIuL3NoaW1cIjo0N31dLDQ2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3RyeXtPYmplY3Qua2V5cyhcInByaW1pdGl2ZVwiKTtyZXR1cm4gdHJ1ZX1jYXRjaChlKXtyZXR1cm4gZmFsc2V9fX0se31dLDQ3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgaXNWYWx1ZT1yZXF1aXJlKFwiLi4vaXMtdmFsdWVcIik7dmFyIGtleXM9T2JqZWN0LmtleXM7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24ob2JqZWN0KXtyZXR1cm4ga2V5cyhpc1ZhbHVlKG9iamVjdCk/T2JqZWN0KG9iamVjdCk6b2JqZWN0KX19LHtcIi4uL2lzLXZhbHVlXCI6NDR9XSw0ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGNhbGxhYmxlPXJlcXVpcmUoXCIuL3ZhbGlkLWNhbGxhYmxlXCIpLGZvckVhY2g9cmVxdWlyZShcIi4vZm9yLWVhY2hcIiksY2FsbD1GdW5jdGlvbi5wcm90b3R5cGUuY2FsbDttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihvYmosY2Ipe3ZhciByZXN1bHQ9e30sdGhpc0FyZz1hcmd1bWVudHNbMl07Y2FsbGFibGUoY2IpO2ZvckVhY2gob2JqLGZ1bmN0aW9uKHZhbHVlLGtleSx0YXJnZXRPYmosaW5kZXgpe3Jlc3VsdFtrZXldPWNhbGwuY2FsbChjYix0aGlzQXJnLHZhbHVlLGtleSx0YXJnZXRPYmosaW5kZXgpfSk7cmV0dXJuIHJlc3VsdH19LHtcIi4vZm9yLWVhY2hcIjo0MSxcIi4vdmFsaWQtY2FsbGFibGVcIjo1NH1dLDQ5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgaXNWYWx1ZT1yZXF1aXJlKFwiLi9pcy12YWx1ZVwiKTt2YXIgZm9yRWFjaD1BcnJheS5wcm90b3R5cGUuZm9yRWFjaCxjcmVhdGU9T2JqZWN0LmNyZWF0ZTt2YXIgcHJvY2Vzcz1mdW5jdGlvbihzcmMsb2JqKXt2YXIga2V5O2ZvcihrZXkgaW4gc3JjKW9ialtrZXldPXNyY1trZXldfTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihvcHRzMSl7dmFyIHJlc3VsdD1jcmVhdGUobnVsbCk7Zm9yRWFjaC5jYWxsKGFyZ3VtZW50cyxmdW5jdGlvbihvcHRpb25zKXtpZighaXNWYWx1ZShvcHRpb25zKSlyZXR1cm47cHJvY2VzcyhPYmplY3Qob3B0aW9ucykscmVzdWx0KX0pO3JldHVybiByZXN1bHR9fSx7XCIuL2lzLXZhbHVlXCI6NDR9XSw1MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGZvckVhY2g9QXJyYXkucHJvdG90eXBlLmZvckVhY2gsY3JlYXRlPU9iamVjdC5jcmVhdGU7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oYXJnKXt2YXIgc2V0PWNyZWF0ZShudWxsKTtmb3JFYWNoLmNhbGwoYXJndW1lbnRzLGZ1bmN0aW9uKG5hbWUpe3NldFtuYW1lXT10cnVlfSk7cmV0dXJuIHNldH19LHt9XSw1MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vaXMtaW1wbGVtZW50ZWRcIikoKT9PYmplY3Quc2V0UHJvdG90eXBlT2Y6cmVxdWlyZShcIi4vc2hpbVwiKX0se1wiLi9pcy1pbXBsZW1lbnRlZFwiOjUyLFwiLi9zaGltXCI6NTN9XSw1MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGNyZWF0ZT1PYmplY3QuY3JlYXRlLGdldFByb3RvdHlwZU9mPU9iamVjdC5nZXRQcm90b3R5cGVPZixwbGFpbk9iamVjdD17fTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBzZXRQcm90b3R5cGVPZj1PYmplY3Quc2V0UHJvdG90eXBlT2YsY3VzdG9tQ3JlYXRlPWFyZ3VtZW50c1swXXx8Y3JlYXRlO2lmKHR5cGVvZiBzZXRQcm90b3R5cGVPZiE9PVwiZnVuY3Rpb25cIilyZXR1cm4gZmFsc2U7cmV0dXJuIGdldFByb3RvdHlwZU9mKHNldFByb3RvdHlwZU9mKGN1c3RvbUNyZWF0ZShudWxsKSxwbGFpbk9iamVjdCkpPT09cGxhaW5PYmplY3R9fSx7fV0sNTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBpc09iamVjdD1yZXF1aXJlKFwiLi4vaXMtb2JqZWN0XCIpLHZhbHVlPXJlcXVpcmUoXCIuLi92YWxpZC12YWx1ZVwiKSxvYmpJc1Byb3RvdHlwZU9mPU9iamVjdC5wcm90b3R5cGUuaXNQcm90b3R5cGVPZixkZWZpbmVQcm9wZXJ0eT1PYmplY3QuZGVmaW5lUHJvcGVydHksbnVsbERlc2M9e2NvbmZpZ3VyYWJsZTp0cnVlLGVudW1lcmFibGU6ZmFsc2Usd3JpdGFibGU6dHJ1ZSx2YWx1ZTp1bmRlZmluZWR9LHZhbGlkYXRlO3ZhbGlkYXRlPWZ1bmN0aW9uKG9iaixwcm90b3R5cGUpe3ZhbHVlKG9iaik7aWYocHJvdG90eXBlPT09bnVsbHx8aXNPYmplY3QocHJvdG90eXBlKSlyZXR1cm4gb2JqO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJQcm90b3R5cGUgbXVzdCBiZSBudWxsIG9yIGFuIG9iamVjdFwiKX07bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oc3RhdHVzKXt2YXIgZm4sc2V0O2lmKCFzdGF0dXMpcmV0dXJuIG51bGw7aWYoc3RhdHVzLmxldmVsPT09Mil7aWYoc3RhdHVzLnNldCl7c2V0PXN0YXR1cy5zZXQ7Zm49ZnVuY3Rpb24ob2JqLHByb3RvdHlwZSl7c2V0LmNhbGwodmFsaWRhdGUob2JqLHByb3RvdHlwZSkscHJvdG90eXBlKTtyZXR1cm4gb2JqfX1lbHNle2ZuPWZ1bmN0aW9uKG9iaixwcm90b3R5cGUpe3ZhbGlkYXRlKG9iaixwcm90b3R5cGUpLl9fcHJvdG9fXz1wcm90b3R5cGU7cmV0dXJuIG9ian19fWVsc2V7Zm49ZnVuY3Rpb24gc2VsZihvYmoscHJvdG90eXBlKXt2YXIgaXNOdWxsQmFzZTt2YWxpZGF0ZShvYmoscHJvdG90eXBlKTtpc051bGxCYXNlPW9iaklzUHJvdG90eXBlT2YuY2FsbChzZWxmLm51bGxQb2x5ZmlsbCxvYmopO2lmKGlzTnVsbEJhc2UpZGVsZXRlIHNlbGYubnVsbFBvbHlmaWxsLl9fcHJvdG9fXztpZihwcm90b3R5cGU9PT1udWxsKXByb3RvdHlwZT1zZWxmLm51bGxQb2x5ZmlsbDtvYmouX19wcm90b19fPXByb3RvdHlwZTtpZihpc051bGxCYXNlKWRlZmluZVByb3BlcnR5KHNlbGYubnVsbFBvbHlmaWxsLFwiX19wcm90b19fXCIsbnVsbERlc2MpO3JldHVybiBvYmp9fXJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sXCJsZXZlbFwiLHtjb25maWd1cmFibGU6ZmFsc2UsZW51bWVyYWJsZTpmYWxzZSx3cml0YWJsZTpmYWxzZSx2YWx1ZTpzdGF0dXMubGV2ZWx9KX0oZnVuY3Rpb24oKXt2YXIgdG1wT2JqMT1PYmplY3QuY3JlYXRlKG51bGwpLHRtcE9iajI9e30sc2V0LGRlc2M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPYmplY3QucHJvdG90eXBlLFwiX19wcm90b19fXCIpO2lmKGRlc2Mpe3RyeXtzZXQ9ZGVzYy5zZXQ7c2V0LmNhbGwodG1wT2JqMSx0bXBPYmoyKX1jYXRjaChpZ25vcmUpe31pZihPYmplY3QuZ2V0UHJvdG90eXBlT2YodG1wT2JqMSk9PT10bXBPYmoyKXJldHVybntzZXQ6c2V0LGxldmVsOjJ9fXRtcE9iajEuX19wcm90b19fPXRtcE9iajI7aWYoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRtcE9iajEpPT09dG1wT2JqMilyZXR1cm57bGV2ZWw6Mn07dG1wT2JqMT17fTt0bXBPYmoxLl9fcHJvdG9fXz10bXBPYmoyO2lmKE9iamVjdC5nZXRQcm90b3R5cGVPZih0bXBPYmoxKT09PXRtcE9iajIpcmV0dXJue2xldmVsOjF9O3JldHVybiBmYWxzZX0oKSk7cmVxdWlyZShcIi4uL2NyZWF0ZVwiKX0se1wiLi4vY3JlYXRlXCI6NDAsXCIuLi9pcy1vYmplY3RcIjo0MyxcIi4uL3ZhbGlkLXZhbHVlXCI6NTV9XSw1NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZm4pe2lmKHR5cGVvZiBmbiE9PVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgVHlwZUVycm9yKGZuK1wiIGlzIG5vdCBhIGZ1bmN0aW9uXCIpO3JldHVybiBmbn19LHt9XSw1NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGlzVmFsdWU9cmVxdWlyZShcIi4vaXMtdmFsdWVcIik7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odmFsdWUpe2lmKCFpc1ZhbHVlKHZhbHVlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHVzZSBudWxsIG9yIHVuZGVmaW5lZFwiKTtyZXR1cm4gdmFsdWV9fSx7XCIuL2lzLXZhbHVlXCI6NDR9XSw1NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vaXMtaW1wbGVtZW50ZWRcIikoKT9TdHJpbmcucHJvdG90eXBlLmNvbnRhaW5zOnJlcXVpcmUoXCIuL3NoaW1cIil9LHtcIi4vaXMtaW1wbGVtZW50ZWRcIjo1NyxcIi4vc2hpbVwiOjU4fV0sNTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBzdHI9XCJyYXpkd2F0cnp5XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oKXtpZih0eXBlb2Ygc3RyLmNvbnRhaW5zIT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtyZXR1cm4gc3RyLmNvbnRhaW5zKFwiZHdhXCIpPT09dHJ1ZSYmc3RyLmNvbnRhaW5zKFwiZm9vXCIpPT09ZmFsc2V9fSx7fV0sNTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBpbmRleE9mPVN0cmluZy5wcm90b3R5cGUuaW5kZXhPZjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihzZWFyY2hTdHJpbmcpe3JldHVybiBpbmRleE9mLmNhbGwodGhpcyxzZWFyY2hTdHJpbmcsYXJndW1lbnRzWzFdKT4tMX19LHt9XSw1OTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG9ialRvU3RyaW5nPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsaWQ9b2JqVG9TdHJpbmcuY2FsbChcIlwiKTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHR5cGVvZiB2YWx1ZT09PVwic3RyaW5nXCJ8fHZhbHVlJiZ0eXBlb2YgdmFsdWU9PT1cIm9iamVjdFwiJiYodmFsdWUgaW5zdGFuY2VvZiBTdHJpbmd8fG9ialRvU3RyaW5nLmNhbGwodmFsdWUpPT09aWQpfHxmYWxzZX19LHt9XSw2MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHNldFByb3RvdHlwZU9mPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpLGNvbnRhaW5zPXJlcXVpcmUoXCJlczUtZXh0L3N0cmluZy8jL2NvbnRhaW5zXCIpLGQ9cmVxdWlyZShcImRcIiksU3ltYm9sPXJlcXVpcmUoXCJlczYtc3ltYm9sXCIpLEl0ZXJhdG9yPXJlcXVpcmUoXCIuL1wiKTt2YXIgZGVmaW5lUHJvcGVydHk9T2JqZWN0LmRlZmluZVByb3BlcnR5LEFycmF5SXRlcmF0b3I7QXJyYXlJdGVyYXRvcj1tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihhcnIsa2luZCl7aWYoISh0aGlzIGluc3RhbmNlb2YgQXJyYXlJdGVyYXRvcikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNvbnN0cnVjdG9yIHJlcXVpcmVzICduZXcnXCIpO0l0ZXJhdG9yLmNhbGwodGhpcyxhcnIpO2lmKCFraW5kKWtpbmQ9XCJ2YWx1ZVwiO2Vsc2UgaWYoY29udGFpbnMuY2FsbChraW5kLFwia2V5K3ZhbHVlXCIpKWtpbmQ9XCJrZXkrdmFsdWVcIjtlbHNlIGlmKGNvbnRhaW5zLmNhbGwoa2luZCxcImtleVwiKSlraW5kPVwia2V5XCI7ZWxzZSBraW5kPVwidmFsdWVcIjtkZWZpbmVQcm9wZXJ0eSh0aGlzLFwiX19raW5kX19cIixkKFwiXCIsa2luZCkpfTtpZihzZXRQcm90b3R5cGVPZilzZXRQcm90b3R5cGVPZihBcnJheUl0ZXJhdG9yLEl0ZXJhdG9yKTtkZWxldGUgQXJyYXlJdGVyYXRvci5wcm90b3R5cGUuY29uc3RydWN0b3I7QXJyYXlJdGVyYXRvci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShJdGVyYXRvci5wcm90b3R5cGUse19yZXNvbHZlOmQoZnVuY3Rpb24oaSl7aWYodGhpcy5fX2tpbmRfXz09PVwidmFsdWVcIilyZXR1cm4gdGhpcy5fX2xpc3RfX1tpXTtpZih0aGlzLl9fa2luZF9fPT09XCJrZXkrdmFsdWVcIilyZXR1cm5baSx0aGlzLl9fbGlzdF9fW2ldXTtyZXR1cm4gaX0pfSk7ZGVmaW5lUHJvcGVydHkoQXJyYXlJdGVyYXRvci5wcm90b3R5cGUsU3ltYm9sLnRvU3RyaW5nVGFnLGQoXCJjXCIsXCJBcnJheSBJdGVyYXRvclwiKSl9LHtcIi4vXCI6NjMsZDoxNixcImVzNS1leHQvb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIjo1MSxcImVzNS1leHQvc3RyaW5nLyMvY29udGFpbnNcIjo1NixcImVzNi1zeW1ib2xcIjo3M31dLDYxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgaXNBcmd1bWVudHM9cmVxdWlyZShcImVzNS1leHQvZnVuY3Rpb24vaXMtYXJndW1lbnRzXCIpLGNhbGxhYmxlPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC92YWxpZC1jYWxsYWJsZVwiKSxpc1N0cmluZz1yZXF1aXJlKFwiZXM1LWV4dC9zdHJpbmcvaXMtc3RyaW5nXCIpLGdldD1yZXF1aXJlKFwiLi9nZXRcIik7dmFyIGlzQXJyYXk9QXJyYXkuaXNBcnJheSxjYWxsPUZ1bmN0aW9uLnByb3RvdHlwZS5jYWxsLHNvbWU9QXJyYXkucHJvdG90eXBlLnNvbWU7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oaXRlcmFibGUsY2Ipe3ZhciBtb2RlLHRoaXNBcmc9YXJndW1lbnRzWzJdLHJlc3VsdCxkb0JyZWFrLGJyb2tlbixpLGxlbmd0aCxjaGFyLGNvZGU7aWYoaXNBcnJheShpdGVyYWJsZSl8fGlzQXJndW1lbnRzKGl0ZXJhYmxlKSltb2RlPVwiYXJyYXlcIjtlbHNlIGlmKGlzU3RyaW5nKGl0ZXJhYmxlKSltb2RlPVwic3RyaW5nXCI7ZWxzZSBpdGVyYWJsZT1nZXQoaXRlcmFibGUpO2NhbGxhYmxlKGNiKTtkb0JyZWFrPWZ1bmN0aW9uKCl7YnJva2VuPXRydWV9O2lmKG1vZGU9PT1cImFycmF5XCIpe3NvbWUuY2FsbChpdGVyYWJsZSxmdW5jdGlvbih2YWx1ZSl7Y2FsbC5jYWxsKGNiLHRoaXNBcmcsdmFsdWUsZG9CcmVhayk7cmV0dXJuIGJyb2tlbn0pO3JldHVybn1pZihtb2RlPT09XCJzdHJpbmdcIil7bGVuZ3RoPWl0ZXJhYmxlLmxlbmd0aDtmb3IoaT0wO2k8bGVuZ3RoOysraSl7Y2hhcj1pdGVyYWJsZVtpXTtpZihpKzE8bGVuZ3RoKXtjb2RlPWNoYXIuY2hhckNvZGVBdCgwKTtpZihjb2RlPj01NTI5NiYmY29kZTw9NTYzMTkpY2hhcis9aXRlcmFibGVbKytpXX1jYWxsLmNhbGwoY2IsdGhpc0FyZyxjaGFyLGRvQnJlYWspO2lmKGJyb2tlbilicmVha31yZXR1cm59cmVzdWx0PWl0ZXJhYmxlLm5leHQoKTt3aGlsZSghcmVzdWx0LmRvbmUpe2NhbGwuY2FsbChjYix0aGlzQXJnLHJlc3VsdC52YWx1ZSxkb0JyZWFrKTtpZihicm9rZW4pcmV0dXJuO3Jlc3VsdD1pdGVyYWJsZS5uZXh0KCl9fX0se1wiLi9nZXRcIjo2MixcImVzNS1leHQvZnVuY3Rpb24vaXMtYXJndW1lbnRzXCI6MjQsXCJlczUtZXh0L29iamVjdC92YWxpZC1jYWxsYWJsZVwiOjU0LFwiZXM1LWV4dC9zdHJpbmcvaXMtc3RyaW5nXCI6NTl9XSw2MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGlzQXJndW1lbnRzPXJlcXVpcmUoXCJlczUtZXh0L2Z1bmN0aW9uL2lzLWFyZ3VtZW50c1wiKSxpc1N0cmluZz1yZXF1aXJlKFwiZXM1LWV4dC9zdHJpbmcvaXMtc3RyaW5nXCIpLEFycmF5SXRlcmF0b3I9cmVxdWlyZShcIi4vYXJyYXlcIiksU3RyaW5nSXRlcmF0b3I9cmVxdWlyZShcIi4vc3RyaW5nXCIpLGl0ZXJhYmxlPXJlcXVpcmUoXCIuL3ZhbGlkLWl0ZXJhYmxlXCIpLGl0ZXJhdG9yU3ltYm9sPXJlcXVpcmUoXCJlczYtc3ltYm9sXCIpLml0ZXJhdG9yO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKG9iail7aWYodHlwZW9mIGl0ZXJhYmxlKG9iailbaXRlcmF0b3JTeW1ib2xdPT09XCJmdW5jdGlvblwiKXJldHVybiBvYmpbaXRlcmF0b3JTeW1ib2xdKCk7aWYoaXNBcmd1bWVudHMob2JqKSlyZXR1cm4gbmV3IEFycmF5SXRlcmF0b3Iob2JqKTtpZihpc1N0cmluZyhvYmopKXJldHVybiBuZXcgU3RyaW5nSXRlcmF0b3Iob2JqKTtyZXR1cm4gbmV3IEFycmF5SXRlcmF0b3Iob2JqKX19LHtcIi4vYXJyYXlcIjo2MCxcIi4vc3RyaW5nXCI6NjUsXCIuL3ZhbGlkLWl0ZXJhYmxlXCI6NjYsXCJlczUtZXh0L2Z1bmN0aW9uL2lzLWFyZ3VtZW50c1wiOjI0LFwiZXM1LWV4dC9zdHJpbmcvaXMtc3RyaW5nXCI6NTksXCJlczYtc3ltYm9sXCI6NzN9XSw2MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGNsZWFyPXJlcXVpcmUoXCJlczUtZXh0L2FycmF5LyMvY2xlYXJcIiksYXNzaWduPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC9hc3NpZ25cIiksY2FsbGFibGU9cmVxdWlyZShcImVzNS1leHQvb2JqZWN0L3ZhbGlkLWNhbGxhYmxlXCIpLHZhbHVlPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC92YWxpZC12YWx1ZVwiKSxkPXJlcXVpcmUoXCJkXCIpLGF1dG9CaW5kPXJlcXVpcmUoXCJkL2F1dG8tYmluZFwiKSxTeW1ib2w9cmVxdWlyZShcImVzNi1zeW1ib2xcIik7dmFyIGRlZmluZVByb3BlcnR5PU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxkZWZpbmVQcm9wZXJ0aWVzPU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLEl0ZXJhdG9yO21vZHVsZS5leHBvcnRzPUl0ZXJhdG9yPWZ1bmN0aW9uKGxpc3QsY29udGV4dCl7aWYoISh0aGlzIGluc3RhbmNlb2YgSXRlcmF0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDb25zdHJ1Y3RvciByZXF1aXJlcyAnbmV3J1wiKTtkZWZpbmVQcm9wZXJ0aWVzKHRoaXMse19fbGlzdF9fOmQoXCJ3XCIsdmFsdWUobGlzdCkpLF9fY29udGV4dF9fOmQoXCJ3XCIsY29udGV4dCksX19uZXh0SW5kZXhfXzpkKFwid1wiLDApfSk7aWYoIWNvbnRleHQpcmV0dXJuO2NhbGxhYmxlKGNvbnRleHQub24pO2NvbnRleHQub24oXCJfYWRkXCIsdGhpcy5fb25BZGQpO2NvbnRleHQub24oXCJfZGVsZXRlXCIsdGhpcy5fb25EZWxldGUpO2NvbnRleHQub24oXCJfY2xlYXJcIix0aGlzLl9vbkNsZWFyKX07ZGVsZXRlIEl0ZXJhdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvcjtkZWZpbmVQcm9wZXJ0aWVzKEl0ZXJhdG9yLnByb3RvdHlwZSxhc3NpZ24oe19uZXh0OmQoZnVuY3Rpb24oKXt2YXIgaTtpZighdGhpcy5fX2xpc3RfXylyZXR1cm4gdW5kZWZpbmVkO2lmKHRoaXMuX19yZWRvX18pe2k9dGhpcy5fX3JlZG9fXy5zaGlmdCgpO2lmKGkhPT11bmRlZmluZWQpcmV0dXJuIGl9aWYodGhpcy5fX25leHRJbmRleF9fPHRoaXMuX19saXN0X18ubGVuZ3RoKXJldHVybiB0aGlzLl9fbmV4dEluZGV4X18rKzt0aGlzLl91bkJpbmQoKTtyZXR1cm4gdW5kZWZpbmVkfSksbmV4dDpkKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZVJlc3VsdCh0aGlzLl9uZXh0KCkpfSksX2NyZWF0ZVJlc3VsdDpkKGZ1bmN0aW9uKGkpe2lmKGk9PT11bmRlZmluZWQpcmV0dXJue2RvbmU6dHJ1ZSx2YWx1ZTp1bmRlZmluZWR9O3JldHVybntkb25lOmZhbHNlLHZhbHVlOnRoaXMuX3Jlc29sdmUoaSl9fSksX3Jlc29sdmU6ZChmdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5fX2xpc3RfX1tpXX0pLF91bkJpbmQ6ZChmdW5jdGlvbigpe3RoaXMuX19saXN0X189bnVsbDtkZWxldGUgdGhpcy5fX3JlZG9fXztpZighdGhpcy5fX2NvbnRleHRfXylyZXR1cm47dGhpcy5fX2NvbnRleHRfXy5vZmYoXCJfYWRkXCIsdGhpcy5fb25BZGQpO3RoaXMuX19jb250ZXh0X18ub2ZmKFwiX2RlbGV0ZVwiLHRoaXMuX29uRGVsZXRlKTt0aGlzLl9fY29udGV4dF9fLm9mZihcIl9jbGVhclwiLHRoaXMuX29uQ2xlYXIpO3RoaXMuX19jb250ZXh0X189bnVsbH0pLHRvU3RyaW5nOmQoZnVuY3Rpb24oKXtyZXR1cm5cIltvYmplY3QgXCIrKHRoaXNbU3ltYm9sLnRvU3RyaW5nVGFnXXx8XCJPYmplY3RcIikrXCJdXCJ9KX0sYXV0b0JpbmQoe19vbkFkZDpkKGZ1bmN0aW9uKGluZGV4KXtpZihpbmRleD49dGhpcy5fX25leHRJbmRleF9fKXJldHVybjsrK3RoaXMuX19uZXh0SW5kZXhfXztpZighdGhpcy5fX3JlZG9fXyl7ZGVmaW5lUHJvcGVydHkodGhpcyxcIl9fcmVkb19fXCIsZChcImNcIixbaW5kZXhdKSk7cmV0dXJufXRoaXMuX19yZWRvX18uZm9yRWFjaChmdW5jdGlvbihyZWRvLGkpe2lmKHJlZG8+PWluZGV4KXRoaXMuX19yZWRvX19baV09KytyZWRvfSx0aGlzKTt0aGlzLl9fcmVkb19fLnB1c2goaW5kZXgpfSksX29uRGVsZXRlOmQoZnVuY3Rpb24oaW5kZXgpe3ZhciBpO2lmKGluZGV4Pj10aGlzLl9fbmV4dEluZGV4X18pcmV0dXJuOy0tdGhpcy5fX25leHRJbmRleF9fO2lmKCF0aGlzLl9fcmVkb19fKXJldHVybjtpPXRoaXMuX19yZWRvX18uaW5kZXhPZihpbmRleCk7aWYoaSE9PS0xKXRoaXMuX19yZWRvX18uc3BsaWNlKGksMSk7dGhpcy5fX3JlZG9fXy5mb3JFYWNoKGZ1bmN0aW9uKHJlZG8sail7aWYocmVkbz5pbmRleCl0aGlzLl9fcmVkb19fW2pdPS0tcmVkb30sdGhpcyl9KSxfb25DbGVhcjpkKGZ1bmN0aW9uKCl7aWYodGhpcy5fX3JlZG9fXyljbGVhci5jYWxsKHRoaXMuX19yZWRvX18pO3RoaXMuX19uZXh0SW5kZXhfXz0wfSl9KSkpO2RlZmluZVByb3BlcnR5KEl0ZXJhdG9yLnByb3RvdHlwZSxTeW1ib2wuaXRlcmF0b3IsZChmdW5jdGlvbigpe3JldHVybiB0aGlzfSkpfSx7ZDoxNixcImQvYXV0by1iaW5kXCI6MTUsXCJlczUtZXh0L2FycmF5LyMvY2xlYXJcIjoxOSxcImVzNS1leHQvb2JqZWN0L2Fzc2lnblwiOjM2LFwiZXM1LWV4dC9vYmplY3QvdmFsaWQtY2FsbGFibGVcIjo1NCxcImVzNS1leHQvb2JqZWN0L3ZhbGlkLXZhbHVlXCI6NTUsXCJlczYtc3ltYm9sXCI6NzN9XSw2NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGlzQXJndW1lbnRzPXJlcXVpcmUoXCJlczUtZXh0L2Z1bmN0aW9uL2lzLWFyZ3VtZW50c1wiKSxpc1ZhbHVlPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC9pcy12YWx1ZVwiKSxpc1N0cmluZz1yZXF1aXJlKFwiZXM1LWV4dC9zdHJpbmcvaXMtc3RyaW5nXCIpO3ZhciBpdGVyYXRvclN5bWJvbD1yZXF1aXJlKFwiZXM2LXN5bWJvbFwiKS5pdGVyYXRvcixpc0FycmF5PUFycmF5LmlzQXJyYXk7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odmFsdWUpe2lmKCFpc1ZhbHVlKHZhbHVlKSlyZXR1cm4gZmFsc2U7aWYoaXNBcnJheSh2YWx1ZSkpcmV0dXJuIHRydWU7aWYoaXNTdHJpbmcodmFsdWUpKXJldHVybiB0cnVlO2lmKGlzQXJndW1lbnRzKHZhbHVlKSlyZXR1cm4gdHJ1ZTtyZXR1cm4gdHlwZW9mIHZhbHVlW2l0ZXJhdG9yU3ltYm9sXT09PVwiZnVuY3Rpb25cIn19LHtcImVzNS1leHQvZnVuY3Rpb24vaXMtYXJndW1lbnRzXCI6MjQsXCJlczUtZXh0L29iamVjdC9pcy12YWx1ZVwiOjQ0LFwiZXM1LWV4dC9zdHJpbmcvaXMtc3RyaW5nXCI6NTksXCJlczYtc3ltYm9sXCI6NzN9XSw2NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHNldFByb3RvdHlwZU9mPXJlcXVpcmUoXCJlczUtZXh0L29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpLGQ9cmVxdWlyZShcImRcIiksU3ltYm9sPXJlcXVpcmUoXCJlczYtc3ltYm9sXCIpLEl0ZXJhdG9yPXJlcXVpcmUoXCIuL1wiKTt2YXIgZGVmaW5lUHJvcGVydHk9T2JqZWN0LmRlZmluZVByb3BlcnR5LFN0cmluZ0l0ZXJhdG9yO1N0cmluZ0l0ZXJhdG9yPW1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHN0cil7aWYoISh0aGlzIGluc3RhbmNlb2YgU3RyaW5nSXRlcmF0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDb25zdHJ1Y3RvciByZXF1aXJlcyAnbmV3J1wiKTtzdHI9U3RyaW5nKHN0cik7SXRlcmF0b3IuY2FsbCh0aGlzLHN0cik7ZGVmaW5lUHJvcGVydHkodGhpcyxcIl9fbGVuZ3RoX19cIixkKFwiXCIsc3RyLmxlbmd0aCkpfTtpZihzZXRQcm90b3R5cGVPZilzZXRQcm90b3R5cGVPZihTdHJpbmdJdGVyYXRvcixJdGVyYXRvcik7ZGVsZXRlIFN0cmluZ0l0ZXJhdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvcjtTdHJpbmdJdGVyYXRvci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShJdGVyYXRvci5wcm90b3R5cGUse19uZXh0OmQoZnVuY3Rpb24oKXtpZighdGhpcy5fX2xpc3RfXylyZXR1cm4gdW5kZWZpbmVkO2lmKHRoaXMuX19uZXh0SW5kZXhfXzx0aGlzLl9fbGVuZ3RoX18pcmV0dXJuIHRoaXMuX19uZXh0SW5kZXhfXysrO3RoaXMuX3VuQmluZCgpO3JldHVybiB1bmRlZmluZWR9KSxfcmVzb2x2ZTpkKGZ1bmN0aW9uKGkpe3ZhciBjaGFyPXRoaXMuX19saXN0X19baV0sY29kZTtpZih0aGlzLl9fbmV4dEluZGV4X189PT10aGlzLl9fbGVuZ3RoX18pcmV0dXJuIGNoYXI7Y29kZT1jaGFyLmNoYXJDb2RlQXQoMCk7aWYoY29kZT49NTUyOTYmJmNvZGU8PTU2MzE5KXJldHVybiBjaGFyK3RoaXMuX19saXN0X19bdGhpcy5fX25leHRJbmRleF9fKytdO3JldHVybiBjaGFyfSl9KTtkZWZpbmVQcm9wZXJ0eShTdHJpbmdJdGVyYXRvci5wcm90b3R5cGUsU3ltYm9sLnRvU3RyaW5nVGFnLGQoXCJjXCIsXCJTdHJpbmcgSXRlcmF0b3JcIikpfSx7XCIuL1wiOjYzLGQ6MTYsXCJlczUtZXh0L29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCI6NTEsXCJlczYtc3ltYm9sXCI6NzN9XSw2NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGlzSXRlcmFibGU9cmVxdWlyZShcIi4vaXMtaXRlcmFibGVcIik7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odmFsdWUpe2lmKCFpc0l0ZXJhYmxlKHZhbHVlKSl0aHJvdyBuZXcgVHlwZUVycm9yKHZhbHVlK1wiIGlzIG5vdCBpdGVyYWJsZVwiKTtyZXR1cm4gdmFsdWV9fSx7XCIuL2lzLWl0ZXJhYmxlXCI6NjR9XSw2NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vaXMtaW1wbGVtZW50ZWRcIikoKT9NYXA6cmVxdWlyZShcIi4vcG9seWZpbGxcIil9LHtcIi4vaXMtaW1wbGVtZW50ZWRcIjo2OCxcIi4vcG9seWZpbGxcIjo3Mn1dLDY4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBtYXAsaXRlcmF0b3IscmVzdWx0O2lmKHR5cGVvZiBNYXAhPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGZhbHNlO3RyeXttYXA9bmV3IE1hcChbW1wicmF6XCIsXCJvbmVcIl0sW1wiZHdhXCIsXCJ0d29cIl0sW1widHJ6eVwiLFwidGhyZWVcIl1dKX1jYXRjaChlKXtyZXR1cm4gZmFsc2V9aWYoU3RyaW5nKG1hcCkhPT1cIltvYmplY3QgTWFwXVwiKXJldHVybiBmYWxzZTtpZihtYXAuc2l6ZSE9PTMpcmV0dXJuIGZhbHNlO2lmKHR5cGVvZiBtYXAuY2xlYXIhPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGZhbHNlO2lmKHR5cGVvZiBtYXAuZGVsZXRlIT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtpZih0eXBlb2YgbWFwLmVudHJpZXMhPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGZhbHNlO2lmKHR5cGVvZiBtYXAuZm9yRWFjaCE9PVwiZnVuY3Rpb25cIilyZXR1cm4gZmFsc2U7aWYodHlwZW9mIG1hcC5nZXQhPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGZhbHNlO2lmKHR5cGVvZiBtYXAuaGFzIT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtpZih0eXBlb2YgbWFwLmtleXMhPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGZhbHNlO2lmKHR5cGVvZiBtYXAuc2V0IT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtpZih0eXBlb2YgbWFwLnZhbHVlcyE9PVwiZnVuY3Rpb25cIilyZXR1cm4gZmFsc2U7aXRlcmF0b3I9bWFwLmVudHJpZXMoKTtyZXN1bHQ9aXRlcmF0b3IubmV4dCgpO2lmKHJlc3VsdC5kb25lIT09ZmFsc2UpcmV0dXJuIGZhbHNlO2lmKCFyZXN1bHQudmFsdWUpcmV0dXJuIGZhbHNlO2lmKHJlc3VsdC52YWx1ZVswXSE9PVwicmF6XCIpcmV0dXJuIGZhbHNlO2lmKHJlc3VsdC52YWx1ZVsxXSE9PVwib25lXCIpcmV0dXJuIGZhbHNlO3JldHVybiB0cnVlfX0se31dLDY5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe2lmKHR5cGVvZiBNYXA9PT1cInVuZGVmaW5lZFwiKXJldHVybiBmYWxzZTtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ldyBNYXApPT09XCJbb2JqZWN0IE1hcF1cIn0oKX0se31dLDcwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3QvcHJpbWl0aXZlLXNldFwiKShcImtleVwiLFwidmFsdWVcIixcImtleSt2YWx1ZVwiKX0se1wiZXM1LWV4dC9vYmplY3QvcHJpbWl0aXZlLXNldFwiOjUwfV0sNzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBzZXRQcm90b3R5cGVPZj1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZlwiKSxkPXJlcXVpcmUoXCJkXCIpLEl0ZXJhdG9yPXJlcXVpcmUoXCJlczYtaXRlcmF0b3JcIiksdG9TdHJpbmdUYWdTeW1ib2w9cmVxdWlyZShcImVzNi1zeW1ib2xcIikudG9TdHJpbmdUYWcsa2luZHM9cmVxdWlyZShcIi4vaXRlcmF0b3Ita2luZHNcIiksZGVmaW5lUHJvcGVydGllcz1PYmplY3QuZGVmaW5lUHJvcGVydGllcyx1bkJpbmQ9SXRlcmF0b3IucHJvdG90eXBlLl91bkJpbmQsTWFwSXRlcmF0b3I7TWFwSXRlcmF0b3I9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24obWFwLGtpbmQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIE1hcEl0ZXJhdG9yKSlyZXR1cm4gbmV3IE1hcEl0ZXJhdG9yKG1hcCxraW5kKTtJdGVyYXRvci5jYWxsKHRoaXMsbWFwLl9fbWFwS2V5c0RhdGFfXyxtYXApO2lmKCFraW5kfHwha2luZHNba2luZF0pa2luZD1cImtleSt2YWx1ZVwiO2RlZmluZVByb3BlcnRpZXModGhpcyx7X19raW5kX186ZChcIlwiLGtpbmQpLF9fdmFsdWVzX186ZChcIndcIixtYXAuX19tYXBWYWx1ZXNEYXRhX18pfSl9O2lmKHNldFByb3RvdHlwZU9mKXNldFByb3RvdHlwZU9mKE1hcEl0ZXJhdG9yLEl0ZXJhdG9yKTtNYXBJdGVyYXRvci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShJdGVyYXRvci5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmQoTWFwSXRlcmF0b3IpLF9yZXNvbHZlOmQoZnVuY3Rpb24oaSl7aWYodGhpcy5fX2tpbmRfXz09PVwidmFsdWVcIilyZXR1cm4gdGhpcy5fX3ZhbHVlc19fW2ldO2lmKHRoaXMuX19raW5kX189PT1cImtleVwiKXJldHVybiB0aGlzLl9fbGlzdF9fW2ldO3JldHVyblt0aGlzLl9fbGlzdF9fW2ldLHRoaXMuX192YWx1ZXNfX1tpXV19KSxfdW5CaW5kOmQoZnVuY3Rpb24oKXt0aGlzLl9fdmFsdWVzX189bnVsbDt1bkJpbmQuY2FsbCh0aGlzKX0pLHRvU3RyaW5nOmQoZnVuY3Rpb24oKXtyZXR1cm5cIltvYmplY3QgTWFwIEl0ZXJhdG9yXVwifSl9KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWFwSXRlcmF0b3IucHJvdG90eXBlLHRvU3RyaW5nVGFnU3ltYm9sLGQoXCJjXCIsXCJNYXAgSXRlcmF0b3JcIikpfSx7XCIuL2l0ZXJhdG9yLWtpbmRzXCI6NzAsZDoxNixcImVzNS1leHQvb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIjo1MSxcImVzNi1pdGVyYXRvclwiOjYzLFwiZXM2LXN5bWJvbFwiOjczfV0sNzI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBjbGVhcj1yZXF1aXJlKFwiZXM1LWV4dC9hcnJheS8jL2NsZWFyXCIpLGVJbmRleE9mPXJlcXVpcmUoXCJlczUtZXh0L2FycmF5LyMvZS1pbmRleC1vZlwiKSxzZXRQcm90b3R5cGVPZj1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZlwiKSxjYWxsYWJsZT1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3QvdmFsaWQtY2FsbGFibGVcIiksdmFsaWRWYWx1ZT1yZXF1aXJlKFwiZXM1LWV4dC9vYmplY3QvdmFsaWQtdmFsdWVcIiksZD1yZXF1aXJlKFwiZFwiKSxlZT1yZXF1aXJlKFwiZXZlbnQtZW1pdHRlclwiKSxTeW1ib2w9cmVxdWlyZShcImVzNi1zeW1ib2xcIiksaXRlcmF0b3I9cmVxdWlyZShcImVzNi1pdGVyYXRvci92YWxpZC1pdGVyYWJsZVwiKSxmb3JPZj1yZXF1aXJlKFwiZXM2LWl0ZXJhdG9yL2Zvci1vZlwiKSxJdGVyYXRvcj1yZXF1aXJlKFwiLi9saWIvaXRlcmF0b3JcIiksaXNOYXRpdmU9cmVxdWlyZShcIi4vaXMtbmF0aXZlLWltcGxlbWVudGVkXCIpLGNhbGw9RnVuY3Rpb24ucHJvdG90eXBlLmNhbGwsZGVmaW5lUHJvcGVydGllcz1PYmplY3QuZGVmaW5lUHJvcGVydGllcyxnZXRQcm90b3R5cGVPZj1PYmplY3QuZ2V0UHJvdG90eXBlT2YsTWFwUG9seTttb2R1bGUuZXhwb3J0cz1NYXBQb2x5PWZ1bmN0aW9uKCl7dmFyIGl0ZXJhYmxlPWFyZ3VtZW50c1swXSxrZXlzLHZhbHVlcyxzZWxmO2lmKCEodGhpcyBpbnN0YW5jZW9mIE1hcFBvbHkpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDb25zdHJ1Y3RvciByZXF1aXJlcyAnbmV3J1wiKTtpZihpc05hdGl2ZSYmc2V0UHJvdG90eXBlT2YmJk1hcCE9PU1hcFBvbHkpe3NlbGY9c2V0UHJvdG90eXBlT2YobmV3IE1hcCxnZXRQcm90b3R5cGVPZih0aGlzKSl9ZWxzZXtzZWxmPXRoaXN9aWYoaXRlcmFibGUhPW51bGwpaXRlcmF0b3IoaXRlcmFibGUpO2RlZmluZVByb3BlcnRpZXMoc2VsZix7X19tYXBLZXlzRGF0YV9fOmQoXCJjXCIsa2V5cz1bXSksX19tYXBWYWx1ZXNEYXRhX186ZChcImNcIix2YWx1ZXM9W10pfSk7aWYoIWl0ZXJhYmxlKXJldHVybiBzZWxmO2Zvck9mKGl0ZXJhYmxlLGZ1bmN0aW9uKHZhbHVlKXt2YXIga2V5PXZhbGlkVmFsdWUodmFsdWUpWzBdO3ZhbHVlPXZhbHVlWzFdO2lmKGVJbmRleE9mLmNhbGwoa2V5cyxrZXkpIT09LTEpcmV0dXJuO2tleXMucHVzaChrZXkpO3ZhbHVlcy5wdXNoKHZhbHVlKX0sc2VsZik7cmV0dXJuIHNlbGZ9O2lmKGlzTmF0aXZlKXtpZihzZXRQcm90b3R5cGVPZilzZXRQcm90b3R5cGVPZihNYXBQb2x5LE1hcCk7TWFwUG9seS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShNYXAucHJvdG90eXBlLHtjb25zdHJ1Y3RvcjpkKE1hcFBvbHkpfSl9ZWUoZGVmaW5lUHJvcGVydGllcyhNYXBQb2x5LnByb3RvdHlwZSx7Y2xlYXI6ZChmdW5jdGlvbigpe2lmKCF0aGlzLl9fbWFwS2V5c0RhdGFfXy5sZW5ndGgpcmV0dXJuO2NsZWFyLmNhbGwodGhpcy5fX21hcEtleXNEYXRhX18pO2NsZWFyLmNhbGwodGhpcy5fX21hcFZhbHVlc0RhdGFfXyk7dGhpcy5lbWl0KFwiX2NsZWFyXCIpfSksZGVsZXRlOmQoZnVuY3Rpb24oa2V5KXt2YXIgaW5kZXg9ZUluZGV4T2YuY2FsbCh0aGlzLl9fbWFwS2V5c0RhdGFfXyxrZXkpO2lmKGluZGV4PT09LTEpcmV0dXJuIGZhbHNlO3RoaXMuX19tYXBLZXlzRGF0YV9fLnNwbGljZShpbmRleCwxKTt0aGlzLl9fbWFwVmFsdWVzRGF0YV9fLnNwbGljZShpbmRleCwxKTt0aGlzLmVtaXQoXCJfZGVsZXRlXCIsaW5kZXgsa2V5KTtyZXR1cm4gdHJ1ZX0pLGVudHJpZXM6ZChmdW5jdGlvbigpe3JldHVybiBuZXcgSXRlcmF0b3IodGhpcyxcImtleSt2YWx1ZVwiKX0pLGZvckVhY2g6ZChmdW5jdGlvbihjYil7dmFyIHRoaXNBcmc9YXJndW1lbnRzWzFdLGl0ZXJhdG9yLHJlc3VsdDtjYWxsYWJsZShjYik7aXRlcmF0b3I9dGhpcy5lbnRyaWVzKCk7cmVzdWx0PWl0ZXJhdG9yLl9uZXh0KCk7d2hpbGUocmVzdWx0IT09dW5kZWZpbmVkKXtjYWxsLmNhbGwoY2IsdGhpc0FyZyx0aGlzLl9fbWFwVmFsdWVzRGF0YV9fW3Jlc3VsdF0sdGhpcy5fX21hcEtleXNEYXRhX19bcmVzdWx0XSx0aGlzKTtyZXN1bHQ9aXRlcmF0b3IuX25leHQoKX19KSxnZXQ6ZChmdW5jdGlvbihrZXkpe3ZhciBpbmRleD1lSW5kZXhPZi5jYWxsKHRoaXMuX19tYXBLZXlzRGF0YV9fLGtleSk7aWYoaW5kZXg9PT0tMSlyZXR1cm47cmV0dXJuIHRoaXMuX19tYXBWYWx1ZXNEYXRhX19baW5kZXhdfSksaGFzOmQoZnVuY3Rpb24oa2V5KXtyZXR1cm4gZUluZGV4T2YuY2FsbCh0aGlzLl9fbWFwS2V5c0RhdGFfXyxrZXkpIT09LTF9KSxrZXlzOmQoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEl0ZXJhdG9yKHRoaXMsXCJrZXlcIil9KSxzZXQ6ZChmdW5jdGlvbihrZXksdmFsdWUpe3ZhciBpbmRleD1lSW5kZXhPZi5jYWxsKHRoaXMuX19tYXBLZXlzRGF0YV9fLGtleSksZW1pdDtpZihpbmRleD09PS0xKXtpbmRleD10aGlzLl9fbWFwS2V5c0RhdGFfXy5wdXNoKGtleSktMTtlbWl0PXRydWV9dGhpcy5fX21hcFZhbHVlc0RhdGFfX1tpbmRleF09dmFsdWU7aWYoZW1pdCl0aGlzLmVtaXQoXCJfYWRkXCIsaW5kZXgsa2V5KTtyZXR1cm4gdGhpc30pLHNpemU6ZC5ncyhmdW5jdGlvbigpe3JldHVybiB0aGlzLl9fbWFwS2V5c0RhdGFfXy5sZW5ndGh9KSx2YWx1ZXM6ZChmdW5jdGlvbigpe3JldHVybiBuZXcgSXRlcmF0b3IodGhpcyxcInZhbHVlXCIpfSksdG9TdHJpbmc6ZChmdW5jdGlvbigpe3JldHVyblwiW29iamVjdCBNYXBdXCJ9KX0pKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWFwUG9seS5wcm90b3R5cGUsU3ltYm9sLml0ZXJhdG9yLGQoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbnRyaWVzKCl9KSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1hcFBvbHkucHJvdG90eXBlLFN5bWJvbC50b1N0cmluZ1RhZyxkKFwiY1wiLFwiTWFwXCIpKX0se1wiLi9pcy1uYXRpdmUtaW1wbGVtZW50ZWRcIjo2OSxcIi4vbGliL2l0ZXJhdG9yXCI6NzEsZDoxNixcImVzNS1leHQvYXJyYXkvIy9jbGVhclwiOjE5LFwiZXM1LWV4dC9hcnJheS8jL2UtaW5kZXgtb2ZcIjoyMCxcImVzNS1leHQvb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIjo1MSxcImVzNS1leHQvb2JqZWN0L3ZhbGlkLWNhbGxhYmxlXCI6NTQsXCJlczUtZXh0L29iamVjdC92YWxpZC12YWx1ZVwiOjU1LFwiZXM2LWl0ZXJhdG9yL2Zvci1vZlwiOjYxLFwiZXM2LWl0ZXJhdG9yL3ZhbGlkLWl0ZXJhYmxlXCI6NjYsXCJlczYtc3ltYm9sXCI6NzMsXCJldmVudC1lbWl0dGVyXCI6Nzh9XSw3MzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vaXMtaW1wbGVtZW50ZWRcIikoKT9TeW1ib2w6cmVxdWlyZShcIi4vcG9seWZpbGxcIil9LHtcIi4vaXMtaW1wbGVtZW50ZWRcIjo3NCxcIi4vcG9seWZpbGxcIjo3Nn1dLDc0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgdmFsaWRUeXBlcz17b2JqZWN0OnRydWUsc3ltYm9sOnRydWV9O21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIHN5bWJvbDtpZih0eXBlb2YgU3ltYm9sIT09XCJmdW5jdGlvblwiKXJldHVybiBmYWxzZTtzeW1ib2w9U3ltYm9sKFwidGVzdCBzeW1ib2xcIik7dHJ5e1N0cmluZyhzeW1ib2wpfWNhdGNoKGUpe3JldHVybiBmYWxzZX1pZighdmFsaWRUeXBlc1t0eXBlb2YgU3ltYm9sLml0ZXJhdG9yXSlyZXR1cm4gZmFsc2U7aWYoIXZhbGlkVHlwZXNbdHlwZW9mIFN5bWJvbC50b1ByaW1pdGl2ZV0pcmV0dXJuIGZhbHNlO2lmKCF2YWxpZFR5cGVzW3R5cGVvZiBTeW1ib2wudG9TdHJpbmdUYWddKXJldHVybiBmYWxzZTtyZXR1cm4gdHJ1ZX19LHt9XSw3NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oeCl7aWYoIXgpcmV0dXJuIGZhbHNlO2lmKHR5cGVvZiB4PT09XCJzeW1ib2xcIilyZXR1cm4gdHJ1ZTtpZigheC5jb25zdHJ1Y3RvcilyZXR1cm4gZmFsc2U7aWYoeC5jb25zdHJ1Y3Rvci5uYW1lIT09XCJTeW1ib2xcIilyZXR1cm4gZmFsc2U7cmV0dXJuIHhbeC5jb25zdHJ1Y3Rvci50b1N0cmluZ1RhZ109PT1cIlN5bWJvbFwifX0se31dLDc2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgZD1yZXF1aXJlKFwiZFwiKSx2YWxpZGF0ZVN5bWJvbD1yZXF1aXJlKFwiLi92YWxpZGF0ZS1zeW1ib2xcIiksY3JlYXRlPU9iamVjdC5jcmVhdGUsZGVmaW5lUHJvcGVydGllcz1PYmplY3QuZGVmaW5lUHJvcGVydGllcyxkZWZpbmVQcm9wZXJ0eT1PYmplY3QuZGVmaW5lUHJvcGVydHksb2JqUHJvdG90eXBlPU9iamVjdC5wcm90b3R5cGUsTmF0aXZlU3ltYm9sLFN5bWJvbFBvbHlmaWxsLEhpZGRlblN5bWJvbCxnbG9iYWxTeW1ib2xzPWNyZWF0ZShudWxsKSxpc05hdGl2ZVNhZmU7aWYodHlwZW9mIFN5bWJvbD09PVwiZnVuY3Rpb25cIil7TmF0aXZlU3ltYm9sPVN5bWJvbDt0cnl7U3RyaW5nKE5hdGl2ZVN5bWJvbCgpKTtpc05hdGl2ZVNhZmU9dHJ1ZX1jYXRjaChpZ25vcmUpe319dmFyIGdlbmVyYXRlTmFtZT1mdW5jdGlvbigpe3ZhciBjcmVhdGVkPWNyZWF0ZShudWxsKTtyZXR1cm4gZnVuY3Rpb24oZGVzYyl7dmFyIHBvc3RmaXg9MCxuYW1lLGllMTFCdWdXb3JrYXJvdW5kO3doaWxlKGNyZWF0ZWRbZGVzYysocG9zdGZpeHx8XCJcIildKSsrcG9zdGZpeDtkZXNjKz1wb3N0Zml4fHxcIlwiO2NyZWF0ZWRbZGVzY109dHJ1ZTtuYW1lPVwiQEBcIitkZXNjO2RlZmluZVByb3BlcnR5KG9ialByb3RvdHlwZSxuYW1lLGQuZ3MobnVsbCxmdW5jdGlvbih2YWx1ZSl7aWYoaWUxMUJ1Z1dvcmthcm91bmQpcmV0dXJuO2llMTFCdWdXb3JrYXJvdW5kPXRydWU7ZGVmaW5lUHJvcGVydHkodGhpcyxuYW1lLGQodmFsdWUpKTtpZTExQnVnV29ya2Fyb3VuZD1mYWxzZX0pKTtyZXR1cm4gbmFtZX19KCk7SGlkZGVuU3ltYm9sPWZ1bmN0aW9uIFN5bWJvbChkZXNjcmlwdGlvbil7aWYodGhpcyBpbnN0YW5jZW9mIEhpZGRlblN5bWJvbCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yXCIpO3JldHVybiBTeW1ib2xQb2x5ZmlsbChkZXNjcmlwdGlvbil9O21vZHVsZS5leHBvcnRzPVN5bWJvbFBvbHlmaWxsPWZ1bmN0aW9uIFN5bWJvbChkZXNjcmlwdGlvbil7dmFyIHN5bWJvbDtpZih0aGlzIGluc3RhbmNlb2YgU3ltYm9sKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3JcIik7aWYoaXNOYXRpdmVTYWZlKXJldHVybiBOYXRpdmVTeW1ib2woZGVzY3JpcHRpb24pO3N5bWJvbD1jcmVhdGUoSGlkZGVuU3ltYm9sLnByb3RvdHlwZSk7ZGVzY3JpcHRpb249ZGVzY3JpcHRpb249PT11bmRlZmluZWQ/XCJcIjpTdHJpbmcoZGVzY3JpcHRpb24pO3JldHVybiBkZWZpbmVQcm9wZXJ0aWVzKHN5bWJvbCx7X19kZXNjcmlwdGlvbl9fOmQoXCJcIixkZXNjcmlwdGlvbiksX19uYW1lX186ZChcIlwiLGdlbmVyYXRlTmFtZShkZXNjcmlwdGlvbikpfSl9O2RlZmluZVByb3BlcnRpZXMoU3ltYm9sUG9seWZpbGwse2ZvcjpkKGZ1bmN0aW9uKGtleSl7aWYoZ2xvYmFsU3ltYm9sc1trZXldKXJldHVybiBnbG9iYWxTeW1ib2xzW2tleV07cmV0dXJuIGdsb2JhbFN5bWJvbHNba2V5XT1TeW1ib2xQb2x5ZmlsbChTdHJpbmcoa2V5KSl9KSxrZXlGb3I6ZChmdW5jdGlvbihzKXt2YXIga2V5O3ZhbGlkYXRlU3ltYm9sKHMpO2ZvcihrZXkgaW4gZ2xvYmFsU3ltYm9scylpZihnbG9iYWxTeW1ib2xzW2tleV09PT1zKXJldHVybiBrZXl9KSxoYXNJbnN0YW5jZTpkKFwiXCIsTmF0aXZlU3ltYm9sJiZOYXRpdmVTeW1ib2wuaGFzSW5zdGFuY2V8fFN5bWJvbFBvbHlmaWxsKFwiaGFzSW5zdGFuY2VcIikpLGlzQ29uY2F0U3ByZWFkYWJsZTpkKFwiXCIsTmF0aXZlU3ltYm9sJiZOYXRpdmVTeW1ib2wuaXNDb25jYXRTcHJlYWRhYmxlfHxTeW1ib2xQb2x5ZmlsbChcImlzQ29uY2F0U3ByZWFkYWJsZVwiKSksaXRlcmF0b3I6ZChcIlwiLE5hdGl2ZVN5bWJvbCYmTmF0aXZlU3ltYm9sLml0ZXJhdG9yfHxTeW1ib2xQb2x5ZmlsbChcIml0ZXJhdG9yXCIpKSxtYXRjaDpkKFwiXCIsTmF0aXZlU3ltYm9sJiZOYXRpdmVTeW1ib2wubWF0Y2h8fFN5bWJvbFBvbHlmaWxsKFwibWF0Y2hcIikpLHJlcGxhY2U6ZChcIlwiLE5hdGl2ZVN5bWJvbCYmTmF0aXZlU3ltYm9sLnJlcGxhY2V8fFN5bWJvbFBvbHlmaWxsKFwicmVwbGFjZVwiKSksc2VhcmNoOmQoXCJcIixOYXRpdmVTeW1ib2wmJk5hdGl2ZVN5bWJvbC5zZWFyY2h8fFN5bWJvbFBvbHlmaWxsKFwic2VhcmNoXCIpKSxzcGVjaWVzOmQoXCJcIixOYXRpdmVTeW1ib2wmJk5hdGl2ZVN5bWJvbC5zcGVjaWVzfHxTeW1ib2xQb2x5ZmlsbChcInNwZWNpZXNcIikpLHNwbGl0OmQoXCJcIixOYXRpdmVTeW1ib2wmJk5hdGl2ZVN5bWJvbC5zcGxpdHx8U3ltYm9sUG9seWZpbGwoXCJzcGxpdFwiKSksdG9QcmltaXRpdmU6ZChcIlwiLE5hdGl2ZVN5bWJvbCYmTmF0aXZlU3ltYm9sLnRvUHJpbWl0aXZlfHxTeW1ib2xQb2x5ZmlsbChcInRvUHJpbWl0aXZlXCIpKSx0b1N0cmluZ1RhZzpkKFwiXCIsTmF0aXZlU3ltYm9sJiZOYXRpdmVTeW1ib2wudG9TdHJpbmdUYWd8fFN5bWJvbFBvbHlmaWxsKFwidG9TdHJpbmdUYWdcIikpLHVuc2NvcGFibGVzOmQoXCJcIixOYXRpdmVTeW1ib2wmJk5hdGl2ZVN5bWJvbC51bnNjb3BhYmxlc3x8U3ltYm9sUG9seWZpbGwoXCJ1bnNjb3BhYmxlc1wiKSl9KTtkZWZpbmVQcm9wZXJ0aWVzKEhpZGRlblN5bWJvbC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOmQoU3ltYm9sUG9seWZpbGwpLHRvU3RyaW5nOmQoXCJcIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9fbmFtZV9ffSl9KTtkZWZpbmVQcm9wZXJ0aWVzKFN5bWJvbFBvbHlmaWxsLnByb3RvdHlwZSx7dG9TdHJpbmc6ZChmdW5jdGlvbigpe3JldHVyblwiU3ltYm9sIChcIit2YWxpZGF0ZVN5bWJvbCh0aGlzKS5fX2Rlc2NyaXB0aW9uX18rXCIpXCJ9KSx2YWx1ZU9mOmQoZnVuY3Rpb24oKXtyZXR1cm4gdmFsaWRhdGVTeW1ib2wodGhpcyl9KX0pO2RlZmluZVByb3BlcnR5KFN5bWJvbFBvbHlmaWxsLnByb3RvdHlwZSxTeW1ib2xQb2x5ZmlsbC50b1ByaW1pdGl2ZSxkKFwiXCIsZnVuY3Rpb24oKXt2YXIgc3ltYm9sPXZhbGlkYXRlU3ltYm9sKHRoaXMpO2lmKHR5cGVvZiBzeW1ib2w9PT1cInN5bWJvbFwiKXJldHVybiBzeW1ib2w7cmV0dXJuIHN5bWJvbC50b1N0cmluZygpfSkpO2RlZmluZVByb3BlcnR5KFN5bWJvbFBvbHlmaWxsLnByb3RvdHlwZSxTeW1ib2xQb2x5ZmlsbC50b1N0cmluZ1RhZyxkKFwiY1wiLFwiU3ltYm9sXCIpKTtkZWZpbmVQcm9wZXJ0eShIaWRkZW5TeW1ib2wucHJvdG90eXBlLFN5bWJvbFBvbHlmaWxsLnRvU3RyaW5nVGFnLGQoXCJjXCIsU3ltYm9sUG9seWZpbGwucHJvdG90eXBlW1N5bWJvbFBvbHlmaWxsLnRvU3RyaW5nVGFnXSkpO2RlZmluZVByb3BlcnR5KEhpZGRlblN5bWJvbC5wcm90b3R5cGUsU3ltYm9sUG9seWZpbGwudG9QcmltaXRpdmUsZChcImNcIixTeW1ib2xQb2x5ZmlsbC5wcm90b3R5cGVbU3ltYm9sUG9seWZpbGwudG9QcmltaXRpdmVdKSl9LHtcIi4vdmFsaWRhdGUtc3ltYm9sXCI6NzcsZDoxNn1dLDc3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgaXNTeW1ib2w9cmVxdWlyZShcIi4vaXMtc3ltYm9sXCIpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHZhbHVlKXtpZighaXNTeW1ib2wodmFsdWUpKXRocm93IG5ldyBUeXBlRXJyb3IodmFsdWUrXCIgaXMgbm90IGEgc3ltYm9sXCIpO3JldHVybiB2YWx1ZX19LHtcIi4vaXMtc3ltYm9sXCI6NzV9XSw3ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGQ9cmVxdWlyZShcImRcIiksY2FsbGFibGU9cmVxdWlyZShcImVzNS1leHQvb2JqZWN0L3ZhbGlkLWNhbGxhYmxlXCIpLGFwcGx5PUZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseSxjYWxsPUZ1bmN0aW9uLnByb3RvdHlwZS5jYWxsLGNyZWF0ZT1PYmplY3QuY3JlYXRlLGRlZmluZVByb3BlcnR5PU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxkZWZpbmVQcm9wZXJ0aWVzPU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLGhhc093blByb3BlcnR5PU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksZGVzY3JpcHRvcj17Y29uZmlndXJhYmxlOnRydWUsZW51bWVyYWJsZTpmYWxzZSx3cml0YWJsZTp0cnVlfSxvbixvbmNlLG9mZixlbWl0LG1ldGhvZHMsZGVzY3JpcHRvcnMsYmFzZTtvbj1mdW5jdGlvbih0eXBlLGxpc3RlbmVyKXt2YXIgZGF0YTtjYWxsYWJsZShsaXN0ZW5lcik7aWYoIWhhc093blByb3BlcnR5LmNhbGwodGhpcyxcIl9fZWVfX1wiKSl7ZGF0YT1kZXNjcmlwdG9yLnZhbHVlPWNyZWF0ZShudWxsKTtkZWZpbmVQcm9wZXJ0eSh0aGlzLFwiX19lZV9fXCIsZGVzY3JpcHRvcik7ZGVzY3JpcHRvci52YWx1ZT1udWxsfWVsc2V7ZGF0YT10aGlzLl9fZWVfX31pZighZGF0YVt0eXBlXSlkYXRhW3R5cGVdPWxpc3RlbmVyO2Vsc2UgaWYodHlwZW9mIGRhdGFbdHlwZV09PT1cIm9iamVjdFwiKWRhdGFbdHlwZV0ucHVzaChsaXN0ZW5lcik7ZWxzZSBkYXRhW3R5cGVdPVtkYXRhW3R5cGVdLGxpc3RlbmVyXTtyZXR1cm4gdGhpc307b25jZT1mdW5jdGlvbih0eXBlLGxpc3RlbmVyKXt2YXIgb25jZSxzZWxmO2NhbGxhYmxlKGxpc3RlbmVyKTtzZWxmPXRoaXM7b24uY2FsbCh0aGlzLHR5cGUsb25jZT1mdW5jdGlvbigpe29mZi5jYWxsKHNlbGYsdHlwZSxvbmNlKTthcHBseS5jYWxsKGxpc3RlbmVyLHRoaXMsYXJndW1lbnRzKX0pO29uY2UuX19lZU9uY2VMaXN0ZW5lcl9fPWxpc3RlbmVyO3JldHVybiB0aGlzfTtvZmY9ZnVuY3Rpb24odHlwZSxsaXN0ZW5lcil7dmFyIGRhdGEsbGlzdGVuZXJzLGNhbmRpZGF0ZSxpO2NhbGxhYmxlKGxpc3RlbmVyKTtpZighaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLFwiX19lZV9fXCIpKXJldHVybiB0aGlzO2RhdGE9dGhpcy5fX2VlX187aWYoIWRhdGFbdHlwZV0pcmV0dXJuIHRoaXM7bGlzdGVuZXJzPWRhdGFbdHlwZV07aWYodHlwZW9mIGxpc3RlbmVycz09PVwib2JqZWN0XCIpe2ZvcihpPTA7Y2FuZGlkYXRlPWxpc3RlbmVyc1tpXTsrK2kpe2lmKGNhbmRpZGF0ZT09PWxpc3RlbmVyfHxjYW5kaWRhdGUuX19lZU9uY2VMaXN0ZW5lcl9fPT09bGlzdGVuZXIpe2lmKGxpc3RlbmVycy5sZW5ndGg9PT0yKWRhdGFbdHlwZV09bGlzdGVuZXJzW2k/MDoxXTtlbHNlIGxpc3RlbmVycy5zcGxpY2UoaSwxKX19fWVsc2V7aWYobGlzdGVuZXJzPT09bGlzdGVuZXJ8fGxpc3RlbmVycy5fX2VlT25jZUxpc3RlbmVyX189PT1saXN0ZW5lcil7ZGVsZXRlIGRhdGFbdHlwZV19fXJldHVybiB0aGlzfTtlbWl0PWZ1bmN0aW9uKHR5cGUpe3ZhciBpLGwsbGlzdGVuZXIsbGlzdGVuZXJzLGFyZ3M7aWYoIWhhc093blByb3BlcnR5LmNhbGwodGhpcyxcIl9fZWVfX1wiKSlyZXR1cm47bGlzdGVuZXJzPXRoaXMuX19lZV9fW3R5cGVdO2lmKCFsaXN0ZW5lcnMpcmV0dXJuO2lmKHR5cGVvZiBsaXN0ZW5lcnM9PT1cIm9iamVjdFwiKXtsPWFyZ3VtZW50cy5sZW5ndGg7YXJncz1uZXcgQXJyYXkobC0xKTtmb3IoaT0xO2k8bDsrK2kpYXJnc1tpLTFdPWFyZ3VtZW50c1tpXTtsaXN0ZW5lcnM9bGlzdGVuZXJzLnNsaWNlKCk7Zm9yKGk9MDtsaXN0ZW5lcj1saXN0ZW5lcnNbaV07KytpKXthcHBseS5jYWxsKGxpc3RlbmVyLHRoaXMsYXJncyl9fWVsc2V7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMTpjYWxsLmNhbGwobGlzdGVuZXJzLHRoaXMpO2JyZWFrO2Nhc2UgMjpjYWxsLmNhbGwobGlzdGVuZXJzLHRoaXMsYXJndW1lbnRzWzFdKTticmVhaztjYXNlIDM6Y2FsbC5jYWxsKGxpc3RlbmVycyx0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0pO2JyZWFrO2RlZmF1bHQ6bD1hcmd1bWVudHMubGVuZ3RoO2FyZ3M9bmV3IEFycmF5KGwtMSk7Zm9yKGk9MTtpPGw7KytpKXthcmdzW2ktMV09YXJndW1lbnRzW2ldfWFwcGx5LmNhbGwobGlzdGVuZXJzLHRoaXMsYXJncyl9fX07bWV0aG9kcz17b246b24sb25jZTpvbmNlLG9mZjpvZmYsZW1pdDplbWl0fTtkZXNjcmlwdG9ycz17b246ZChvbiksb25jZTpkKG9uY2UpLG9mZjpkKG9mZiksZW1pdDpkKGVtaXQpfTtiYXNlPWRlZmluZVByb3BlcnRpZXMoe30sZGVzY3JpcHRvcnMpO21vZHVsZS5leHBvcnRzPWV4cG9ydHM9ZnVuY3Rpb24obyl7cmV0dXJuIG89PW51bGw/Y3JlYXRlKGJhc2UpOmRlZmluZVByb3BlcnRpZXMoT2JqZWN0KG8pLGRlc2NyaXB0b3JzKX07ZXhwb3J0cy5tZXRob2RzPW1ldGhvZHN9LHtkOjE2LFwiZXM1LWV4dC9vYmplY3QvdmFsaWQtY2FsbGFibGVcIjo1NH1dLDc5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtleHBvcnRzLnJlYWQ9ZnVuY3Rpb24oYnVmZmVyLG9mZnNldCxpc0xFLG1MZW4sbkJ5dGVzKXt2YXIgZSxtO3ZhciBlTGVuPW5CeXRlcyo4LW1MZW4tMTt2YXIgZU1heD0oMTw8ZUxlbiktMTt2YXIgZUJpYXM9ZU1heD4+MTt2YXIgbkJpdHM9LTc7dmFyIGk9aXNMRT9uQnl0ZXMtMTowO3ZhciBkPWlzTEU/LTE6MTt2YXIgcz1idWZmZXJbb2Zmc2V0K2ldO2krPWQ7ZT1zJigxPDwtbkJpdHMpLTE7cz4+PS1uQml0cztuQml0cys9ZUxlbjtmb3IoO25CaXRzPjA7ZT1lKjI1NitidWZmZXJbb2Zmc2V0K2ldLGkrPWQsbkJpdHMtPTgpe31tPWUmKDE8PC1uQml0cyktMTtlPj49LW5CaXRzO25CaXRzKz1tTGVuO2Zvcig7bkJpdHM+MDttPW0qMjU2K2J1ZmZlcltvZmZzZXQraV0saSs9ZCxuQml0cy09OCl7fWlmKGU9PT0wKXtlPTEtZUJpYXN9ZWxzZSBpZihlPT09ZU1heCl7cmV0dXJuIG0/TmFOOihzPy0xOjEpKkluZmluaXR5fWVsc2V7bT1tK01hdGgucG93KDIsbUxlbik7ZT1lLWVCaWFzfXJldHVybihzPy0xOjEpKm0qTWF0aC5wb3coMixlLW1MZW4pfTtleHBvcnRzLndyaXRlPWZ1bmN0aW9uKGJ1ZmZlcix2YWx1ZSxvZmZzZXQsaXNMRSxtTGVuLG5CeXRlcyl7dmFyIGUsbSxjO3ZhciBlTGVuPW5CeXRlcyo4LW1MZW4tMTt2YXIgZU1heD0oMTw8ZUxlbiktMTt2YXIgZUJpYXM9ZU1heD4+MTt2YXIgcnQ9bUxlbj09PTIzP01hdGgucG93KDIsLTI0KS1NYXRoLnBvdygyLC03Nyk6MDt2YXIgaT1pc0xFPzA6bkJ5dGVzLTE7dmFyIGQ9aXNMRT8xOi0xO3ZhciBzPXZhbHVlPDB8fHZhbHVlPT09MCYmMS92YWx1ZTwwPzE6MDt2YWx1ZT1NYXRoLmFicyh2YWx1ZSk7aWYoaXNOYU4odmFsdWUpfHx2YWx1ZT09PUluZmluaXR5KXttPWlzTmFOKHZhbHVlKT8xOjA7ZT1lTWF4fWVsc2V7ZT1NYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKS9NYXRoLkxOMik7aWYodmFsdWUqKGM9TWF0aC5wb3coMiwtZSkpPDEpe2UtLTtjKj0yfWlmKGUrZUJpYXM+PTEpe3ZhbHVlKz1ydC9jfWVsc2V7dmFsdWUrPXJ0Kk1hdGgucG93KDIsMS1lQmlhcyl9aWYodmFsdWUqYz49Mil7ZSsrO2MvPTJ9aWYoZStlQmlhcz49ZU1heCl7bT0wO2U9ZU1heH1lbHNlIGlmKGUrZUJpYXM+PTEpe209KHZhbHVlKmMtMSkqTWF0aC5wb3coMixtTGVuKTtlPWUrZUJpYXN9ZWxzZXttPXZhbHVlKk1hdGgucG93KDIsZUJpYXMtMSkqTWF0aC5wb3coMixtTGVuKTtlPTB9fWZvcig7bUxlbj49ODtidWZmZXJbb2Zmc2V0K2ldPW0mMjU1LGkrPWQsbS89MjU2LG1MZW4tPTgpe31lPWU8PG1MZW58bTtlTGVuKz1tTGVuO2Zvcig7ZUxlbj4wO2J1ZmZlcltvZmZzZXQraV09ZSYyNTUsaSs9ZCxlLz0yNTYsZUxlbi09OCl7fWJ1ZmZlcltvZmZzZXQraS1kXXw9cyoxMjh9fSx7fV0sODA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe2lmKHR5cGVvZiBPYmplY3QuY3JlYXRlPT09XCJmdW5jdGlvblwiKXttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbiBpbmhlcml0cyhjdG9yLHN1cGVyQ3Rvcil7Y3Rvci5zdXBlcl89c3VwZXJDdG9yO2N0b3IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmN0b3IsZW51bWVyYWJsZTpmYWxzZSx3cml0YWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlfX0pfX1lbHNle21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uIGluaGVyaXRzKGN0b3Isc3VwZXJDdG9yKXtjdG9yLnN1cGVyXz1zdXBlckN0b3I7dmFyIFRlbXBDdG9yPWZ1bmN0aW9uKCl7fTtUZW1wQ3Rvci5wcm90b3R5cGU9c3VwZXJDdG9yLnByb3RvdHlwZTtjdG9yLnByb3RvdHlwZT1uZXcgVGVtcEN0b3I7Y3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3I9Y3Rvcn19fSx7fV0sODE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKG9iail7cmV0dXJuIG9iaiE9bnVsbCYmKGlzQnVmZmVyKG9iail8fGlzU2xvd0J1ZmZlcihvYmopfHwhIW9iai5faXNCdWZmZXIpfTtmdW5jdGlvbiBpc0J1ZmZlcihvYmope3JldHVybiEhb2JqLmNvbnN0cnVjdG9yJiZ0eXBlb2Ygb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyPT09XCJmdW5jdGlvblwiJiZvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKX1mdW5jdGlvbiBpc1Nsb3dCdWZmZXIob2JqKXtyZXR1cm4gdHlwZW9mIG9iai5yZWFkRmxvYXRMRT09PVwiZnVuY3Rpb25cIiYmdHlwZW9mIG9iai5zbGljZT09PVwiZnVuY3Rpb25cIiYmaXNCdWZmZXIob2JqLnNsaWNlKDAsMCkpfX0se31dLDgyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjt2YXIgQnVmZmVyPXJlcXVpcmUoXCJzYWZlLWJ1ZmZlclwiKS5CdWZmZXI7dmFyIHByb3RvY29sPW1vZHVsZS5leHBvcnRzO3Byb3RvY29sLnR5cGVzPXswOlwicmVzZXJ2ZWRcIiwxOlwiY29ubmVjdFwiLDI6XCJjb25uYWNrXCIsMzpcInB1Ymxpc2hcIiw0OlwicHViYWNrXCIsNTpcInB1YnJlY1wiLDY6XCJwdWJyZWxcIiw3OlwicHViY29tcFwiLDg6XCJzdWJzY3JpYmVcIiw5Olwic3ViYWNrXCIsMTA6XCJ1bnN1YnNjcmliZVwiLDExOlwidW5zdWJhY2tcIiwxMjpcInBpbmdyZXFcIiwxMzpcInBpbmdyZXNwXCIsMTQ6XCJkaXNjb25uZWN0XCIsMTU6XCJhdXRoXCJ9O3Byb3RvY29sLmNvZGVzPXt9O2Zvcih2YXIgayBpbiBwcm90b2NvbC50eXBlcyl7dmFyIHY9cHJvdG9jb2wudHlwZXNba107cHJvdG9jb2wuY29kZXNbdl09a31wcm90b2NvbC5DTURfU0hJRlQ9NDtwcm90b2NvbC5DTURfTUFTSz0yNDA7cHJvdG9jb2wuRFVQX01BU0s9ODtwcm90b2NvbC5RT1NfTUFTSz0zO3Byb3RvY29sLlFPU19TSElGVD0xO3Byb3RvY29sLlJFVEFJTl9NQVNLPTE7cHJvdG9jb2wuTEVOR1RIX01BU0s9MTI3O3Byb3RvY29sLkxFTkdUSF9GSU5fTUFTSz0xMjg7cHJvdG9jb2wuU0VTU0lPTlBSRVNFTlRfTUFTSz0xO3Byb3RvY29sLlNFU1NJT05QUkVTRU5UX0hFQURFUj1CdWZmZXIuZnJvbShbcHJvdG9jb2wuU0VTU0lPTlBSRVNFTlRfTUFTS10pO3Byb3RvY29sLkNPTk5BQ0tfSEVBREVSPUJ1ZmZlci5mcm9tKFtwcm90b2NvbC5jb2Rlc1tcImNvbm5hY2tcIl08PHByb3RvY29sLkNNRF9TSElGVF0pO3Byb3RvY29sLlVTRVJOQU1FX01BU0s9MTI4O3Byb3RvY29sLlBBU1NXT1JEX01BU0s9NjQ7cHJvdG9jb2wuV0lMTF9SRVRBSU5fTUFTSz0zMjtwcm90b2NvbC5XSUxMX1FPU19NQVNLPTI0O3Byb3RvY29sLldJTExfUU9TX1NISUZUPTM7cHJvdG9jb2wuV0lMTF9GTEFHX01BU0s9NDtwcm90b2NvbC5DTEVBTl9TRVNTSU9OX01BU0s9Mjtwcm90b2NvbC5DT05ORUNUX0hFQURFUj1CdWZmZXIuZnJvbShbcHJvdG9jb2wuY29kZXNbXCJjb25uZWN0XCJdPDxwcm90b2NvbC5DTURfU0hJRlRdKTtwcm90b2NvbC5wcm9wZXJ0aWVzPXtzZXNzaW9uRXhwaXJ5SW50ZXJ2YWw6MTcsd2lsbERlbGF5SW50ZXJ2YWw6MjQscmVjZWl2ZU1heGltdW06MzMsbWF4aW11bVBhY2tldFNpemU6MzksdG9waWNBbGlhc01heGltdW06MzQscmVxdWVzdFJlc3BvbnNlSW5mb3JtYXRpb246MjUscmVxdWVzdFByb2JsZW1JbmZvcm1hdGlvbjoyMyx1c2VyUHJvcGVydGllczozOCxhdXRoZW50aWNhdGlvbk1ldGhvZDoyMSxhdXRoZW50aWNhdGlvbkRhdGE6MjIscGF5bG9hZEZvcm1hdEluZGljYXRvcjoxLG1lc3NhZ2VFeHBpcnlJbnRlcnZhbDoyLGNvbnRlbnRUeXBlOjMscmVzcG9uc2VUb3BpYzo4LGNvcnJlbGF0aW9uRGF0YTo5LG1heGltdW1Rb1M6MzYscmV0YWluQXZhaWxhYmxlOjM3LGFzc2lnbmVkQ2xpZW50SWRlbnRpZmllcjoxOCxyZWFzb25TdHJpbmc6MzEsd2lsZGNhcmRTdWJzY3JpcHRpb25BdmFpbGFibGU6NDAsc3Vic2NyaXB0aW9uSWRlbnRpZmllcnNBdmFpbGFibGU6NDEsc2hhcmVkU3Vic2NyaXB0aW9uQXZhaWxhYmxlOjQyLHNlcnZlcktlZXBBbGl2ZToxOSxyZXNwb25zZUluZm9ybWF0aW9uOjI2LHNlcnZlclJlZmVyZW5jZToyOCx0b3BpY0FsaWFzOjM1LHN1YnNjcmlwdGlvbklkZW50aWZpZXI6MTF9O3Byb3RvY29sLnByb3BlcnRpZXNDb2Rlcz17fTtmb3IodmFyIHByb3AgaW4gcHJvdG9jb2wucHJvcGVydGllcyl7dmFyIGlkPXByb3RvY29sLnByb3BlcnRpZXNbcHJvcF07cHJvdG9jb2wucHJvcGVydGllc0NvZGVzW2lkXT1wcm9wfXByb3RvY29sLnByb3BlcnRpZXNUeXBlcz17c2Vzc2lvbkV4cGlyeUludGVydmFsOlwiaW50MzJcIix3aWxsRGVsYXlJbnRlcnZhbDpcImludDMyXCIscmVjZWl2ZU1heGltdW06XCJpbnQxNlwiLG1heGltdW1QYWNrZXRTaXplOlwiaW50MzJcIix0b3BpY0FsaWFzTWF4aW11bTpcImludDE2XCIscmVxdWVzdFJlc3BvbnNlSW5mb3JtYXRpb246XCJieXRlXCIscmVxdWVzdFByb2JsZW1JbmZvcm1hdGlvbjpcImJ5dGVcIix1c2VyUHJvcGVydGllczpcInBhaXJcIixhdXRoZW50aWNhdGlvbk1ldGhvZDpcInN0cmluZ1wiLGF1dGhlbnRpY2F0aW9uRGF0YTpcImJpbmFyeVwiLHBheWxvYWRGb3JtYXRJbmRpY2F0b3I6XCJieXRlXCIsbWVzc2FnZUV4cGlyeUludGVydmFsOlwiaW50MzJcIixjb250ZW50VHlwZTpcInN0cmluZ1wiLHJlc3BvbnNlVG9waWM6XCJzdHJpbmdcIixjb3JyZWxhdGlvbkRhdGE6XCJiaW5hcnlcIixtYXhpbXVtUW9TOlwiaW50OFwiLHJldGFpbkF2YWlsYWJsZTpcImJ5dGVcIixhc3NpZ25lZENsaWVudElkZW50aWZpZXI6XCJzdHJpbmdcIixyZWFzb25TdHJpbmc6XCJzdHJpbmdcIix3aWxkY2FyZFN1YnNjcmlwdGlvbkF2YWlsYWJsZTpcImJ5dGVcIixzdWJzY3JpcHRpb25JZGVudGlmaWVyc0F2YWlsYWJsZTpcImJ5dGVcIixzaGFyZWRTdWJzY3JpcHRpb25BdmFpbGFibGU6XCJieXRlXCIsc2VydmVyS2VlcEFsaXZlOlwiaW50MzJcIixyZXNwb25zZUluZm9ybWF0aW9uOlwic3RyaW5nXCIsc2VydmVyUmVmZXJlbmNlOlwic3RyaW5nXCIsdG9waWNBbGlhczpcImludDE2XCIsc3Vic2NyaXB0aW9uSWRlbnRpZmllcjpcInZhclwifTtmdW5jdGlvbiBnZW5IZWFkZXIodHlwZSl7cmV0dXJuWzAsMSwyXS5tYXAoZnVuY3Rpb24ocW9zKXtyZXR1cm5bMCwxXS5tYXAoZnVuY3Rpb24oZHVwKXtyZXR1cm5bMCwxXS5tYXAoZnVuY3Rpb24ocmV0YWluKXt2YXIgYnVmPW5ldyBCdWZmZXIoMSk7YnVmLndyaXRlVUludDgocHJvdG9jb2wuY29kZXNbdHlwZV08PHByb3RvY29sLkNNRF9TSElGVHwoZHVwP3Byb3RvY29sLkRVUF9NQVNLOjApfHFvczw8cHJvdG9jb2wuUU9TX1NISUZUfHJldGFpbiwwLHRydWUpO3JldHVybiBidWZ9KX0pfSl9cHJvdG9jb2wuUFVCTElTSF9IRUFERVI9Z2VuSGVhZGVyKFwicHVibGlzaFwiKTtwcm90b2NvbC5TVUJTQ1JJQkVfSEVBREVSPWdlbkhlYWRlcihcInN1YnNjcmliZVwiKTtwcm90b2NvbC5TVUJTQ1JJQkVfT1BUSU9OU19RT1NfTUFTSz0zO3Byb3RvY29sLlNVQlNDUklCRV9PUFRJT05TX05MX01BU0s9MTtwcm90b2NvbC5TVUJTQ1JJQkVfT1BUSU9OU19OTF9TSElGVD0yO3Byb3RvY29sLlNVQlNDUklCRV9PUFRJT05TX1JBUF9NQVNLPTE7cHJvdG9jb2wuU1VCU0NSSUJFX09QVElPTlNfUkFQX1NISUZUPTM7cHJvdG9jb2wuU1VCU0NSSUJFX09QVElPTlNfUkhfTUFTSz0zO3Byb3RvY29sLlNVQlNDUklCRV9PUFRJT05TX1JIX1NISUZUPTQ7cHJvdG9jb2wuU1VCU0NSSUJFX09QVElPTlNfUkg9WzAsMTYsMzJdO3Byb3RvY29sLlNVQlNDUklCRV9PUFRJT05TX05MPTQ7cHJvdG9jb2wuU1VCU0NSSUJFX09QVElPTlNfUkFQPTg7cHJvdG9jb2wuU1VCU0NSSUJFX09QVElPTlNfUU9TPVswLDEsMl07cHJvdG9jb2wuVU5TVUJTQ1JJQkVfSEVBREVSPWdlbkhlYWRlcihcInVuc3Vic2NyaWJlXCIpO3Byb3RvY29sLkFDS1M9e3Vuc3ViYWNrOmdlbkhlYWRlcihcInVuc3ViYWNrXCIpLHB1YmFjazpnZW5IZWFkZXIoXCJwdWJhY2tcIikscHViY29tcDpnZW5IZWFkZXIoXCJwdWJjb21wXCIpLHB1YnJlbDpnZW5IZWFkZXIoXCJwdWJyZWxcIikscHVicmVjOmdlbkhlYWRlcihcInB1YnJlY1wiKX07cHJvdG9jb2wuU1VCQUNLX0hFQURFUj1CdWZmZXIuZnJvbShbcHJvdG9jb2wuY29kZXNbXCJzdWJhY2tcIl08PHByb3RvY29sLkNNRF9TSElGVF0pO3Byb3RvY29sLlZFUlNJT04zPUJ1ZmZlci5mcm9tKFszXSk7cHJvdG9jb2wuVkVSU0lPTjQ9QnVmZmVyLmZyb20oWzRdKTtwcm90b2NvbC5WRVJTSU9ONT1CdWZmZXIuZnJvbShbNV0pO3Byb3RvY29sLlFPUz1bMCwxLDJdLm1hcChmdW5jdGlvbihxb3Mpe3JldHVybiBCdWZmZXIuZnJvbShbcW9zXSl9KTtwcm90b2NvbC5FTVBUWT17cGluZ3JlcTpCdWZmZXIuZnJvbShbcHJvdG9jb2wuY29kZXNbXCJwaW5ncmVxXCJdPDw0LDBdKSxwaW5ncmVzcDpCdWZmZXIuZnJvbShbcHJvdG9jb2wuY29kZXNbXCJwaW5ncmVzcFwiXTw8NCwwXSksZGlzY29ubmVjdDpCdWZmZXIuZnJvbShbcHJvdG9jb2wuY29kZXNbXCJkaXNjb25uZWN0XCJdPDw0LDBdKX19LHtcInNhZmUtYnVmZmVyXCI6MTEwfV0sODM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBCdWZmZXI9cmVxdWlyZShcInNhZmUtYnVmZmVyXCIpLkJ1ZmZlcjt2YXIgd3JpdGVUb1N0cmVhbT1yZXF1aXJlKFwiLi93cml0ZVRvU3RyZWFtXCIpO3ZhciBFRT1yZXF1aXJlKFwiZXZlbnRzXCIpLkV2ZW50RW1pdHRlcjt2YXIgaW5oZXJpdHM9cmVxdWlyZShcImluaGVyaXRzXCIpO2Z1bmN0aW9uIGdlbmVyYXRlKHBhY2tldCxvcHRzKXt2YXIgc3RyZWFtPW5ldyBBY2N1bXVsYXRvcjt3cml0ZVRvU3RyZWFtKHBhY2tldCxzdHJlYW0sb3B0cyk7cmV0dXJuIHN0cmVhbS5jb25jYXQoKX1mdW5jdGlvbiBBY2N1bXVsYXRvcigpe3RoaXMuX2FycmF5PW5ldyBBcnJheSgyMCk7dGhpcy5faT0wfWluaGVyaXRzKEFjY3VtdWxhdG9yLEVFKTtBY2N1bXVsYXRvci5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oY2h1bmspe3RoaXMuX2FycmF5W3RoaXMuX2krK109Y2h1bms7cmV0dXJuIHRydWV9O0FjY3VtdWxhdG9yLnByb3RvdHlwZS5jb25jYXQ9ZnVuY3Rpb24oKXt2YXIgbGVuZ3RoPTA7dmFyIGxlbmd0aHM9bmV3IEFycmF5KHRoaXMuX2FycmF5Lmxlbmd0aCk7dmFyIGxpc3Q9dGhpcy5fYXJyYXk7dmFyIHBvcz0wO3ZhciBpO3ZhciByZXN1bHQ7Zm9yKGk9MDtpPGxpc3QubGVuZ3RoJiZsaXN0W2ldIT09dW5kZWZpbmVkO2krKyl7aWYodHlwZW9mIGxpc3RbaV0hPT1cInN0cmluZ1wiKWxlbmd0aHNbaV09bGlzdFtpXS5sZW5ndGg7ZWxzZSBsZW5ndGhzW2ldPUJ1ZmZlci5ieXRlTGVuZ3RoKGxpc3RbaV0pO2xlbmd0aCs9bGVuZ3Roc1tpXX1yZXN1bHQ9QnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7Zm9yKGk9MDtpPGxpc3QubGVuZ3RoJiZsaXN0W2ldIT09dW5kZWZpbmVkO2krKyl7aWYodHlwZW9mIGxpc3RbaV0hPT1cInN0cmluZ1wiKXtsaXN0W2ldLmNvcHkocmVzdWx0LHBvcyk7cG9zKz1sZW5ndGhzW2ldfWVsc2V7cmVzdWx0LndyaXRlKGxpc3RbaV0scG9zKTtwb3MrPWxlbmd0aHNbaV19fXJldHVybiByZXN1bHR9O21vZHVsZS5leHBvcnRzPWdlbmVyYXRlfSx7XCIuL3dyaXRlVG9TdHJlYW1cIjo4OSxldmVudHM6MTMsaW5oZXJpdHM6ODAsXCJzYWZlLWJ1ZmZlclwiOjExMH1dLDg0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjtleHBvcnRzLnBhcnNlcj1yZXF1aXJlKFwiLi9wYXJzZXJcIik7ZXhwb3J0cy5nZW5lcmF0ZT1yZXF1aXJlKFwiLi9nZW5lcmF0ZVwiKTtleHBvcnRzLndyaXRlVG9TdHJlYW09cmVxdWlyZShcIi4vd3JpdGVUb1N0cmVhbVwiKX0se1wiLi9nZW5lcmF0ZVwiOjgzLFwiLi9wYXJzZXJcIjo4OCxcIi4vd3JpdGVUb1N0cmVhbVwiOjg5fV0sODU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciBEdXBsZXhTdHJlYW09cmVxdWlyZShcInJlYWRhYmxlLXN0cmVhbS9kdXBsZXhcIiksdXRpbD1yZXF1aXJlKFwidXRpbFwiKSxCdWZmZXI9cmVxdWlyZShcInNhZmUtYnVmZmVyXCIpLkJ1ZmZlcjtmdW5jdGlvbiBCdWZmZXJMaXN0KGNhbGxiYWNrKXtpZighKHRoaXMgaW5zdGFuY2VvZiBCdWZmZXJMaXN0KSlyZXR1cm4gbmV3IEJ1ZmZlckxpc3QoY2FsbGJhY2spO3RoaXMuX2J1ZnM9W107dGhpcy5sZW5ndGg9MDtpZih0eXBlb2YgY2FsbGJhY2s9PVwiZnVuY3Rpb25cIil7dGhpcy5fY2FsbGJhY2s9Y2FsbGJhY2s7dmFyIHBpcGVyPWZ1bmN0aW9uIHBpcGVyKGVycil7aWYodGhpcy5fY2FsbGJhY2spe3RoaXMuX2NhbGxiYWNrKGVycik7dGhpcy5fY2FsbGJhY2s9bnVsbH19LmJpbmQodGhpcyk7dGhpcy5vbihcInBpcGVcIixmdW5jdGlvbiBvblBpcGUoc3JjKXtzcmMub24oXCJlcnJvclwiLHBpcGVyKX0pO3RoaXMub24oXCJ1bnBpcGVcIixmdW5jdGlvbiBvblVucGlwZShzcmMpe3NyYy5yZW1vdmVMaXN0ZW5lcihcImVycm9yXCIscGlwZXIpfSl9ZWxzZXt0aGlzLmFwcGVuZChjYWxsYmFjayl9RHVwbGV4U3RyZWFtLmNhbGwodGhpcyl9dXRpbC5pbmhlcml0cyhCdWZmZXJMaXN0LER1cGxleFN0cmVhbSk7QnVmZmVyTGlzdC5wcm90b3R5cGUuX29mZnNldD1mdW5jdGlvbiBfb2Zmc2V0KG9mZnNldCl7dmFyIHRvdD0wLGk9MCxfdDtpZihvZmZzZXQ9PT0wKXJldHVyblswLDBdO2Zvcig7aTx0aGlzLl9idWZzLmxlbmd0aDtpKyspe190PXRvdCt0aGlzLl9idWZzW2ldLmxlbmd0aDtpZihvZmZzZXQ8X3R8fGk9PXRoaXMuX2J1ZnMubGVuZ3RoLTEpcmV0dXJuW2ksb2Zmc2V0LXRvdF07dG90PV90fX07QnVmZmVyTGlzdC5wcm90b3R5cGUuYXBwZW5kPWZ1bmN0aW9uIGFwcGVuZChidWYpe3ZhciBpPTA7aWYoQnVmZmVyLmlzQnVmZmVyKGJ1Zikpe3RoaXMuX2FwcGVuZEJ1ZmZlcihidWYpfWVsc2UgaWYoQXJyYXkuaXNBcnJheShidWYpKXtmb3IoO2k8YnVmLmxlbmd0aDtpKyspdGhpcy5hcHBlbmQoYnVmW2ldKX1lbHNlIGlmKGJ1ZiBpbnN0YW5jZW9mIEJ1ZmZlckxpc3Qpe2Zvcig7aTxidWYuX2J1ZnMubGVuZ3RoO2krKyl0aGlzLmFwcGVuZChidWYuX2J1ZnNbaV0pfWVsc2UgaWYoYnVmIT1udWxsKXtpZih0eXBlb2YgYnVmPT1cIm51bWJlclwiKWJ1Zj1idWYudG9TdHJpbmcoKTt0aGlzLl9hcHBlbmRCdWZmZXIoQnVmZmVyLmZyb20oYnVmKSl9cmV0dXJuIHRoaXN9O0J1ZmZlckxpc3QucHJvdG90eXBlLl9hcHBlbmRCdWZmZXI9ZnVuY3Rpb24gYXBwZW5kQnVmZmVyKGJ1Zil7dGhpcy5fYnVmcy5wdXNoKGJ1Zik7dGhpcy5sZW5ndGgrPWJ1Zi5sZW5ndGh9O0J1ZmZlckxpc3QucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbiBfd3JpdGUoYnVmLGVuY29kaW5nLGNhbGxiYWNrKXt0aGlzLl9hcHBlbmRCdWZmZXIoYnVmKTtpZih0eXBlb2YgY2FsbGJhY2s9PVwiZnVuY3Rpb25cIiljYWxsYmFjaygpfTtCdWZmZXJMaXN0LnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbiBfcmVhZChzaXplKXtpZighdGhpcy5sZW5ndGgpcmV0dXJuIHRoaXMucHVzaChudWxsKTtzaXplPU1hdGgubWluKHNpemUsdGhpcy5sZW5ndGgpO3RoaXMucHVzaCh0aGlzLnNsaWNlKDAsc2l6ZSkpO3RoaXMuY29uc3VtZShzaXplKX07QnVmZmVyTGlzdC5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uIGVuZChjaHVuayl7RHVwbGV4U3RyZWFtLnByb3RvdHlwZS5lbmQuY2FsbCh0aGlzLGNodW5rKTtpZih0aGlzLl9jYWxsYmFjayl7dGhpcy5fY2FsbGJhY2sobnVsbCx0aGlzLnNsaWNlKCkpO3RoaXMuX2NhbGxiYWNrPW51bGx9fTtCdWZmZXJMaXN0LnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24gZ2V0KGluZGV4KXtyZXR1cm4gdGhpcy5zbGljZShpbmRleCxpbmRleCsxKVswXX07QnVmZmVyTGlzdC5wcm90b3R5cGUuc2xpY2U9ZnVuY3Rpb24gc2xpY2Uoc3RhcnQsZW5kKXtpZih0eXBlb2Ygc3RhcnQ9PVwibnVtYmVyXCImJnN0YXJ0PDApc3RhcnQrPXRoaXMubGVuZ3RoO2lmKHR5cGVvZiBlbmQ9PVwibnVtYmVyXCImJmVuZDwwKWVuZCs9dGhpcy5sZW5ndGg7cmV0dXJuIHRoaXMuY29weShudWxsLDAsc3RhcnQsZW5kKX07QnVmZmVyTGlzdC5wcm90b3R5cGUuY29weT1mdW5jdGlvbiBjb3B5KGRzdCxkc3RTdGFydCxzcmNTdGFydCxzcmNFbmQpe2lmKHR5cGVvZiBzcmNTdGFydCE9XCJudW1iZXJcInx8c3JjU3RhcnQ8MClzcmNTdGFydD0wO2lmKHR5cGVvZiBzcmNFbmQhPVwibnVtYmVyXCJ8fHNyY0VuZD50aGlzLmxlbmd0aClzcmNFbmQ9dGhpcy5sZW5ndGg7aWYoc3JjU3RhcnQ+PXRoaXMubGVuZ3RoKXJldHVybiBkc3R8fEJ1ZmZlci5hbGxvYygwKTtpZihzcmNFbmQ8PTApcmV0dXJuIGRzdHx8QnVmZmVyLmFsbG9jKDApO3ZhciBjb3B5PSEhZHN0LG9mZj10aGlzLl9vZmZzZXQoc3JjU3RhcnQpLGxlbj1zcmNFbmQtc3JjU3RhcnQsYnl0ZXM9bGVuLGJ1Zm9mZj1jb3B5JiZkc3RTdGFydHx8MCxzdGFydD1vZmZbMV0sbCxpO2lmKHNyY1N0YXJ0PT09MCYmc3JjRW5kPT10aGlzLmxlbmd0aCl7aWYoIWNvcHkpe3JldHVybiB0aGlzLl9idWZzLmxlbmd0aD09PTE/dGhpcy5fYnVmc1swXTpCdWZmZXIuY29uY2F0KHRoaXMuX2J1ZnMsdGhpcy5sZW5ndGgpfWZvcihpPTA7aTx0aGlzLl9idWZzLmxlbmd0aDtpKyspe3RoaXMuX2J1ZnNbaV0uY29weShkc3QsYnVmb2ZmKTtidWZvZmYrPXRoaXMuX2J1ZnNbaV0ubGVuZ3RofXJldHVybiBkc3R9aWYoYnl0ZXM8PXRoaXMuX2J1ZnNbb2ZmWzBdXS5sZW5ndGgtc3RhcnQpe3JldHVybiBjb3B5P3RoaXMuX2J1ZnNbb2ZmWzBdXS5jb3B5KGRzdCxkc3RTdGFydCxzdGFydCxzdGFydCtieXRlcyk6dGhpcy5fYnVmc1tvZmZbMF1dLnNsaWNlKHN0YXJ0LHN0YXJ0K2J5dGVzKX1pZighY29weSlkc3Q9QnVmZmVyLmFsbG9jVW5zYWZlKGxlbik7Zm9yKGk9b2ZmWzBdO2k8dGhpcy5fYnVmcy5sZW5ndGg7aSsrKXtsPXRoaXMuX2J1ZnNbaV0ubGVuZ3RoLXN0YXJ0O2lmKGJ5dGVzPmwpe3RoaXMuX2J1ZnNbaV0uY29weShkc3QsYnVmb2ZmLHN0YXJ0KX1lbHNle3RoaXMuX2J1ZnNbaV0uY29weShkc3QsYnVmb2ZmLHN0YXJ0LHN0YXJ0K2J5dGVzKTticmVha31idWZvZmYrPWw7Ynl0ZXMtPWw7aWYoc3RhcnQpc3RhcnQ9MH1yZXR1cm4gZHN0fTtCdWZmZXJMaXN0LnByb3RvdHlwZS5zaGFsbG93U2xpY2U9ZnVuY3Rpb24gc2hhbGxvd1NsaWNlKHN0YXJ0LGVuZCl7c3RhcnQ9c3RhcnR8fDA7ZW5kPWVuZHx8dGhpcy5sZW5ndGg7aWYoc3RhcnQ8MClzdGFydCs9dGhpcy5sZW5ndGg7aWYoZW5kPDApZW5kKz10aGlzLmxlbmd0aDt2YXIgc3RhcnRPZmZzZXQ9dGhpcy5fb2Zmc2V0KHN0YXJ0KSxlbmRPZmZzZXQ9dGhpcy5fb2Zmc2V0KGVuZCksYnVmZmVycz10aGlzLl9idWZzLnNsaWNlKHN0YXJ0T2Zmc2V0WzBdLGVuZE9mZnNldFswXSsxKTtpZihlbmRPZmZzZXRbMV09PTApYnVmZmVycy5wb3AoKTtlbHNlIGJ1ZmZlcnNbYnVmZmVycy5sZW5ndGgtMV09YnVmZmVyc1tidWZmZXJzLmxlbmd0aC0xXS5zbGljZSgwLGVuZE9mZnNldFsxXSk7aWYoc3RhcnRPZmZzZXRbMV0hPTApYnVmZmVyc1swXT1idWZmZXJzWzBdLnNsaWNlKHN0YXJ0T2Zmc2V0WzFdKTtyZXR1cm4gbmV3IEJ1ZmZlckxpc3QoYnVmZmVycyl9O0J1ZmZlckxpc3QucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uIHRvU3RyaW5nKGVuY29kaW5nLHN0YXJ0LGVuZCl7cmV0dXJuIHRoaXMuc2xpY2Uoc3RhcnQsZW5kKS50b1N0cmluZyhlbmNvZGluZyl9O0J1ZmZlckxpc3QucHJvdG90eXBlLmNvbnN1bWU9ZnVuY3Rpb24gY29uc3VtZShieXRlcyl7d2hpbGUodGhpcy5fYnVmcy5sZW5ndGgpe2lmKGJ5dGVzPj10aGlzLl9idWZzWzBdLmxlbmd0aCl7Ynl0ZXMtPXRoaXMuX2J1ZnNbMF0ubGVuZ3RoO3RoaXMubGVuZ3RoLT10aGlzLl9idWZzWzBdLmxlbmd0aDt0aGlzLl9idWZzLnNoaWZ0KCl9ZWxzZXt0aGlzLl9idWZzWzBdPXRoaXMuX2J1ZnNbMF0uc2xpY2UoYnl0ZXMpO3RoaXMubGVuZ3RoLT1ieXRlczticmVha319cmV0dXJuIHRoaXN9O0J1ZmZlckxpc3QucHJvdG90eXBlLmR1cGxpY2F0ZT1mdW5jdGlvbiBkdXBsaWNhdGUoKXt2YXIgaT0wLGNvcHk9bmV3IEJ1ZmZlckxpc3Q7Zm9yKDtpPHRoaXMuX2J1ZnMubGVuZ3RoO2krKyljb3B5LmFwcGVuZCh0aGlzLl9idWZzW2ldKTtyZXR1cm4gY29weX07QnVmZmVyTGlzdC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbiBkZXN0cm95KCl7dGhpcy5fYnVmcy5sZW5ndGg9MDt0aGlzLmxlbmd0aD0wO3RoaXMucHVzaChudWxsKX07KGZ1bmN0aW9uKCl7dmFyIG1ldGhvZHM9e3JlYWREb3VibGVCRTo4LHJlYWREb3VibGVMRTo4LHJlYWRGbG9hdEJFOjQscmVhZEZsb2F0TEU6NCxyZWFkSW50MzJCRTo0LHJlYWRJbnQzMkxFOjQscmVhZFVJbnQzMkJFOjQscmVhZFVJbnQzMkxFOjQscmVhZEludDE2QkU6MixyZWFkSW50MTZMRToyLHJlYWRVSW50MTZCRToyLHJlYWRVSW50MTZMRToyLHJlYWRJbnQ4OjEscmVhZFVJbnQ4OjF9O2Zvcih2YXIgbSBpbiBtZXRob2RzKXsoZnVuY3Rpb24obSl7QnVmZmVyTGlzdC5wcm90b3R5cGVbbV09ZnVuY3Rpb24ob2Zmc2V0KXtyZXR1cm4gdGhpcy5zbGljZShvZmZzZXQsb2Zmc2V0K21ldGhvZHNbbV0pW21dKDApfX0pKG0pfX0pKCk7bW9kdWxlLmV4cG9ydHM9QnVmZmVyTGlzdH0se1wicmVhZGFibGUtc3RyZWFtL2R1cGxleFwiOjk3LFwic2FmZS1idWZmZXJcIjoxMTAsdXRpbDoxMTd9XSw4NjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIEJ1ZmZlcj1yZXF1aXJlKFwic2FmZS1idWZmZXJcIikuQnVmZmVyO3ZhciBtYXg9NjU1MzY7dmFyIGNhY2hlPXt9O2Z1bmN0aW9uIGdlbmVyYXRlQnVmZmVyKGkpe3ZhciBidWZmZXI9QnVmZmVyLmFsbG9jVW5zYWZlKDIpO2J1ZmZlci53cml0ZVVJbnQ4KGk+PjgsMCk7YnVmZmVyLndyaXRlVUludDgoaSYyNTUsMCsxKTtyZXR1cm4gYnVmZmVyfWZ1bmN0aW9uIGdlbmVyYXRlQ2FjaGUoKXtmb3IodmFyIGk9MDtpPG1heDtpKyspe2NhY2hlW2ldPWdlbmVyYXRlQnVmZmVyKGkpfX1mdW5jdGlvbiBjYWxjVmFyaWFibGVCeXRlSW50TGVuZ3RoKGxlbmd0aCl7aWYobGVuZ3RoPj0wJiZsZW5ndGg8MTI4KXJldHVybiAxO2Vsc2UgaWYobGVuZ3RoPj0xMjgmJmxlbmd0aDwxNjM4NClyZXR1cm4gMjtlbHNlIGlmKGxlbmd0aD49MTYzODQmJmxlbmd0aDwyMDk3MTUyKXJldHVybiAzO2Vsc2UgaWYobGVuZ3RoPj0yMDk3MTUyJiZsZW5ndGg8MjY4NDM1NDU2KXJldHVybiA0O2Vsc2UgcmV0dXJuIDB9ZnVuY3Rpb24gZ2VuQnVmVmFyaWFibGVCeXRlSW50KG51bSl7dmFyIGRpZ2l0PTA7dmFyIHBvcz0wO3ZhciBsZW5ndGg9Y2FsY1ZhcmlhYmxlQnl0ZUludExlbmd0aChudW0pO3ZhciBidWZmZXI9QnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7ZG97ZGlnaXQ9bnVtJTEyOHwwO251bT1udW0vMTI4fDA7aWYobnVtPjApZGlnaXQ9ZGlnaXR8MTI4O2J1ZmZlci53cml0ZVVJbnQ4KGRpZ2l0LHBvcysrKX13aGlsZShudW0+MCk7cmV0dXJue2RhdGE6YnVmZmVyLGxlbmd0aDpsZW5ndGh9fWZ1bmN0aW9uIGdlbmVyYXRlNEJ5dGVCdWZmZXIobnVtKXt2YXIgYnVmZmVyPUJ1ZmZlci5hbGxvY1Vuc2FmZSg0KTtidWZmZXIud3JpdGVVSW50MzJCRShudW0sMCk7cmV0dXJuIGJ1ZmZlcn1tb2R1bGUuZXhwb3J0cz17Y2FjaGU6Y2FjaGUsZ2VuZXJhdGVDYWNoZTpnZW5lcmF0ZUNhY2hlLGdlbmVyYXRlTnVtYmVyOmdlbmVyYXRlQnVmZmVyLGdlbkJ1ZlZhcmlhYmxlQnl0ZUludDpnZW5CdWZWYXJpYWJsZUJ5dGVJbnQsZ2VuZXJhdGU0Qnl0ZUJ1ZmZlcjpnZW5lcmF0ZTRCeXRlQnVmZmVyfX0se1wic2FmZS1idWZmZXJcIjoxMTB9XSw4NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7ZnVuY3Rpb24gUGFja2V0KCl7dGhpcy5jbWQ9bnVsbDt0aGlzLnJldGFpbj1mYWxzZTt0aGlzLnFvcz0wO3RoaXMuZHVwPWZhbHNlO3RoaXMubGVuZ3RoPS0xO3RoaXMudG9waWM9bnVsbDt0aGlzLnBheWxvYWQ9bnVsbH1tb2R1bGUuZXhwb3J0cz1QYWNrZXR9LHt9XSw4ODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGJsPXJlcXVpcmUoXCJibFwiKTt2YXIgaW5oZXJpdHM9cmVxdWlyZShcImluaGVyaXRzXCIpO3ZhciBFRT1yZXF1aXJlKFwiZXZlbnRzXCIpLkV2ZW50RW1pdHRlcjt2YXIgUGFja2V0PXJlcXVpcmUoXCIuL3BhY2tldFwiKTt2YXIgY29uc3RhbnRzPXJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtmdW5jdGlvbiBQYXJzZXIob3B0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBQYXJzZXIpKXJldHVybiBuZXcgUGFyc2VyKG9wdCk7dGhpcy5zZXR0aW5ncz1vcHR8fHt9O3RoaXMuX3N0YXRlcz1bXCJfcGFyc2VIZWFkZXJcIixcIl9wYXJzZUxlbmd0aFwiLFwiX3BhcnNlUGF5bG9hZFwiLFwiX25ld1BhY2tldFwiXTt0aGlzLl9yZXNldFN0YXRlKCl9aW5oZXJpdHMoUGFyc2VyLEVFKTtQYXJzZXIucHJvdG90eXBlLl9yZXNldFN0YXRlPWZ1bmN0aW9uKCl7dGhpcy5wYWNrZXQ9bmV3IFBhY2tldDt0aGlzLmVycm9yPW51bGw7dGhpcy5fbGlzdD1ibCgpO3RoaXMuX3N0YXRlQ291bnRlcj0wfTtQYXJzZXIucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKGJ1Zil7aWYodGhpcy5lcnJvcil0aGlzLl9yZXNldFN0YXRlKCk7dGhpcy5fbGlzdC5hcHBlbmQoYnVmKTt3aGlsZSgodGhpcy5wYWNrZXQubGVuZ3RoIT09LTF8fHRoaXMuX2xpc3QubGVuZ3RoPjApJiZ0aGlzW3RoaXMuX3N0YXRlc1t0aGlzLl9zdGF0ZUNvdW50ZXJdXSgpJiYhdGhpcy5lcnJvcil7dGhpcy5fc3RhdGVDb3VudGVyKys7aWYodGhpcy5fc3RhdGVDb3VudGVyPj10aGlzLl9zdGF0ZXMubGVuZ3RoKXRoaXMuX3N0YXRlQ291bnRlcj0wfXJldHVybiB0aGlzLl9saXN0Lmxlbmd0aH07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VIZWFkZXI9ZnVuY3Rpb24oKXt2YXIgemVybz10aGlzLl9saXN0LnJlYWRVSW50OCgwKTt0aGlzLnBhY2tldC5jbWQ9Y29uc3RhbnRzLnR5cGVzW3plcm8+PmNvbnN0YW50cy5DTURfU0hJRlRdO3RoaXMucGFja2V0LnJldGFpbj0oemVybyZjb25zdGFudHMuUkVUQUlOX01BU0spIT09MDt0aGlzLnBhY2tldC5xb3M9emVybz4+Y29uc3RhbnRzLlFPU19TSElGVCZjb25zdGFudHMuUU9TX01BU0s7dGhpcy5wYWNrZXQuZHVwPSh6ZXJvJmNvbnN0YW50cy5EVVBfTUFTSykhPT0wO3RoaXMuX2xpc3QuY29uc3VtZSgxKTtyZXR1cm4gdHJ1ZX07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VMZW5ndGg9ZnVuY3Rpb24oKXt2YXIgcmVzdWx0PXRoaXMuX3BhcnNlVmFyQnl0ZU51bSh0cnVlKTtpZihyZXN1bHQpe3RoaXMucGFja2V0Lmxlbmd0aD1yZXN1bHQudmFsdWU7dGhpcy5fbGlzdC5jb25zdW1lKHJlc3VsdC5ieXRlcyl9cmV0dXJuISFyZXN1bHR9O1BhcnNlci5wcm90b3R5cGUuX3BhcnNlUGF5bG9hZD1mdW5jdGlvbigpe3ZhciByZXN1bHQ9ZmFsc2U7aWYodGhpcy5wYWNrZXQubGVuZ3RoPT09MHx8dGhpcy5fbGlzdC5sZW5ndGg+PXRoaXMucGFja2V0Lmxlbmd0aCl7dGhpcy5fcG9zPTA7c3dpdGNoKHRoaXMucGFja2V0LmNtZCl7Y2FzZVwiY29ubmVjdFwiOnRoaXMuX3BhcnNlQ29ubmVjdCgpO2JyZWFrO2Nhc2VcImNvbm5hY2tcIjp0aGlzLl9wYXJzZUNvbm5hY2soKTticmVhaztjYXNlXCJwdWJsaXNoXCI6dGhpcy5fcGFyc2VQdWJsaXNoKCk7YnJlYWs7Y2FzZVwicHViYWNrXCI6Y2FzZVwicHVicmVjXCI6Y2FzZVwicHVicmVsXCI6Y2FzZVwicHViY29tcFwiOnRoaXMuX3BhcnNlQ29uZmlybWF0aW9uKCk7YnJlYWs7Y2FzZVwic3Vic2NyaWJlXCI6dGhpcy5fcGFyc2VTdWJzY3JpYmUoKTticmVhaztjYXNlXCJzdWJhY2tcIjp0aGlzLl9wYXJzZVN1YmFjaygpO2JyZWFrO2Nhc2VcInVuc3Vic2NyaWJlXCI6dGhpcy5fcGFyc2VVbnN1YnNjcmliZSgpO2JyZWFrO2Nhc2VcInVuc3ViYWNrXCI6dGhpcy5fcGFyc2VVbnN1YmFjaygpO2JyZWFrO2Nhc2VcInBpbmdyZXFcIjpjYXNlXCJwaW5ncmVzcFwiOmJyZWFrO2Nhc2VcImRpc2Nvbm5lY3RcIjp0aGlzLl9wYXJzZURpc2Nvbm5lY3QoKTticmVhaztjYXNlXCJhdXRoXCI6dGhpcy5fcGFyc2VBdXRoKCk7YnJlYWs7ZGVmYXVsdDp0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiTm90IHN1cHBvcnRlZFwiKSl9cmVzdWx0PXRydWV9cmV0dXJuIHJlc3VsdH07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VDb25uZWN0PWZ1bmN0aW9uKCl7dmFyIHByb3RvY29sSWQ7dmFyIGNsaWVudElkO3ZhciB0b3BpYzt2YXIgcGF5bG9hZDt2YXIgcGFzc3dvcmQ7dmFyIHVzZXJuYW1lO3ZhciBmbGFncz17fTt2YXIgcGFja2V0PXRoaXMucGFja2V0O3Byb3RvY29sSWQ9dGhpcy5fcGFyc2VTdHJpbmcoKTtpZihwcm90b2NvbElkPT09bnVsbClyZXR1cm4gdGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIkNhbm5vdCBwYXJzZSBwcm90b2NvbElkXCIpKTtpZihwcm90b2NvbElkIT09XCJNUVRUXCImJnByb3RvY29sSWQhPT1cIk1RSXNkcFwiKXtyZXR1cm4gdGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIkludmFsaWQgcHJvdG9jb2xJZFwiKSl9cGFja2V0LnByb3RvY29sSWQ9cHJvdG9jb2xJZDtpZih0aGlzLl9wb3M+PXRoaXMuX2xpc3QubGVuZ3RoKXJldHVybiB0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiUGFja2V0IHRvbyBzaG9ydFwiKSk7cGFja2V0LnByb3RvY29sVmVyc2lvbj10aGlzLl9saXN0LnJlYWRVSW50OCh0aGlzLl9wb3MpO2lmKHBhY2tldC5wcm90b2NvbFZlcnNpb24hPT0zJiZwYWNrZXQucHJvdG9jb2xWZXJzaW9uIT09NCYmcGFja2V0LnByb3RvY29sVmVyc2lvbiE9PTUpe3JldHVybiB0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiSW52YWxpZCBwcm90b2NvbCB2ZXJzaW9uXCIpKX10aGlzLl9wb3MrKztpZih0aGlzLl9wb3M+PXRoaXMuX2xpc3QubGVuZ3RoKXtyZXR1cm4gdGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIlBhY2tldCB0b28gc2hvcnRcIikpfWZsYWdzLnVzZXJuYW1lPXRoaXMuX2xpc3QucmVhZFVJbnQ4KHRoaXMuX3BvcykmY29uc3RhbnRzLlVTRVJOQU1FX01BU0s7ZmxhZ3MucGFzc3dvcmQ9dGhpcy5fbGlzdC5yZWFkVUludDgodGhpcy5fcG9zKSZjb25zdGFudHMuUEFTU1dPUkRfTUFTSztmbGFncy53aWxsPXRoaXMuX2xpc3QucmVhZFVJbnQ4KHRoaXMuX3BvcykmY29uc3RhbnRzLldJTExfRkxBR19NQVNLO2lmKGZsYWdzLndpbGwpe3BhY2tldC53aWxsPXt9O3BhY2tldC53aWxsLnJldGFpbj0odGhpcy5fbGlzdC5yZWFkVUludDgodGhpcy5fcG9zKSZjb25zdGFudHMuV0lMTF9SRVRBSU5fTUFTSykhPT0wO3BhY2tldC53aWxsLnFvcz0odGhpcy5fbGlzdC5yZWFkVUludDgodGhpcy5fcG9zKSZjb25zdGFudHMuV0lMTF9RT1NfTUFTSyk+PmNvbnN0YW50cy5XSUxMX1FPU19TSElGVH1wYWNrZXQuY2xlYW49KHRoaXMuX2xpc3QucmVhZFVJbnQ4KHRoaXMuX3BvcykmY29uc3RhbnRzLkNMRUFOX1NFU1NJT05fTUFTSykhPT0wO3RoaXMuX3BvcysrO3BhY2tldC5rZWVwYWxpdmU9dGhpcy5fcGFyc2VOdW0oKTtpZihwYWNrZXQua2VlcGFsaXZlPT09LTEpcmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJQYWNrZXQgdG9vIHNob3J0XCIpKTtpZihwYWNrZXQucHJvdG9jb2xWZXJzaW9uPT09NSl7dmFyIHByb3BlcnRpZXM9dGhpcy5fcGFyc2VQcm9wZXJ0aWVzKCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvcGVydGllcykubGVuZ3RoKXtwYWNrZXQucHJvcGVydGllcz1wcm9wZXJ0aWVzfX1jbGllbnRJZD10aGlzLl9wYXJzZVN0cmluZygpO2lmKGNsaWVudElkPT09bnVsbClyZXR1cm4gdGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIlBhY2tldCB0b28gc2hvcnRcIikpO3BhY2tldC5jbGllbnRJZD1jbGllbnRJZDtpZihmbGFncy53aWxsKXtpZihwYWNrZXQucHJvdG9jb2xWZXJzaW9uPT09NSl7dmFyIHdpbGxQcm9wZXJ0aWVzPXRoaXMuX3BhcnNlUHJvcGVydGllcygpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbGxQcm9wZXJ0aWVzKS5sZW5ndGgpe3BhY2tldC53aWxsLnByb3BlcnRpZXM9d2lsbFByb3BlcnRpZXN9fXRvcGljPXRoaXMuX3BhcnNlU3RyaW5nKCk7aWYodG9waWM9PT1udWxsKXJldHVybiB0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiQ2Fubm90IHBhcnNlIHdpbGwgdG9waWNcIikpO3BhY2tldC53aWxsLnRvcGljPXRvcGljO3BheWxvYWQ9dGhpcy5fcGFyc2VCdWZmZXIoKTtpZihwYXlsb2FkPT09bnVsbClyZXR1cm4gdGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIkNhbm5vdCBwYXJzZSB3aWxsIHBheWxvYWRcIikpO3BhY2tldC53aWxsLnBheWxvYWQ9cGF5bG9hZH1pZihmbGFncy51c2VybmFtZSl7dXNlcm5hbWU9dGhpcy5fcGFyc2VTdHJpbmcoKTtpZih1c2VybmFtZT09PW51bGwpcmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJDYW5ub3QgcGFyc2UgdXNlcm5hbWVcIikpO3BhY2tldC51c2VybmFtZT11c2VybmFtZX1pZihmbGFncy5wYXNzd29yZCl7cGFzc3dvcmQ9dGhpcy5fcGFyc2VCdWZmZXIoKTtpZihwYXNzd29yZD09PW51bGwpcmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJDYW5ub3QgcGFyc2UgcGFzc3dvcmRcIikpO3BhY2tldC5wYXNzd29yZD1wYXNzd29yZH10aGlzLnNldHRpbmdzPXBhY2tldDtyZXR1cm4gcGFja2V0fTtQYXJzZXIucHJvdG90eXBlLl9wYXJzZUNvbm5hY2s9ZnVuY3Rpb24oKXt2YXIgcGFja2V0PXRoaXMucGFja2V0O2lmKHRoaXMuX2xpc3QubGVuZ3RoPDIpcmV0dXJuIG51bGw7cGFja2V0LnNlc3Npb25QcmVzZW50PSEhKHRoaXMuX2xpc3QucmVhZFVJbnQ4KHRoaXMuX3BvcysrKSZjb25zdGFudHMuU0VTU0lPTlBSRVNFTlRfTUFTSyk7aWYodGhpcy5zZXR0aW5ncy5wcm90b2NvbFZlcnNpb249PT01KXtwYWNrZXQucmVhc29uQ29kZT10aGlzLl9saXN0LnJlYWRVSW50OCh0aGlzLl9wb3MrKyl9ZWxzZXtwYWNrZXQucmV0dXJuQ29kZT10aGlzLl9saXN0LnJlYWRVSW50OCh0aGlzLl9wb3MrKyl9aWYocGFja2V0LnJldHVybkNvZGU9PT0tMXx8cGFja2V0LnJlYXNvbkNvZGU9PT0tMSlyZXR1cm4gdGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIkNhbm5vdCBwYXJzZSByZXR1cm4gY29kZVwiKSk7aWYodGhpcy5zZXR0aW5ncy5wcm90b2NvbFZlcnNpb249PT01KXt2YXIgcHJvcGVydGllcz10aGlzLl9wYXJzZVByb3BlcnRpZXMoKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwcm9wZXJ0aWVzKS5sZW5ndGgpe3BhY2tldC5wcm9wZXJ0aWVzPXByb3BlcnRpZXN9fX07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VQdWJsaXNoPWZ1bmN0aW9uKCl7dmFyIHBhY2tldD10aGlzLnBhY2tldDtwYWNrZXQudG9waWM9dGhpcy5fcGFyc2VTdHJpbmcoKTtpZihwYWNrZXQudG9waWM9PT1udWxsKXJldHVybiB0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiQ2Fubm90IHBhcnNlIHRvcGljXCIpKTtpZihwYWNrZXQucW9zPjApaWYoIXRoaXMuX3BhcnNlTWVzc2FnZUlkKCkpe3JldHVybn1pZih0aGlzLnNldHRpbmdzLnByb3RvY29sVmVyc2lvbj09PTUpe3ZhciBwcm9wZXJ0aWVzPXRoaXMuX3BhcnNlUHJvcGVydGllcygpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHByb3BlcnRpZXMpLmxlbmd0aCl7cGFja2V0LnByb3BlcnRpZXM9cHJvcGVydGllc319cGFja2V0LnBheWxvYWQ9dGhpcy5fbGlzdC5zbGljZSh0aGlzLl9wb3MscGFja2V0Lmxlbmd0aCl9O1BhcnNlci5wcm90b3R5cGUuX3BhcnNlU3Vic2NyaWJlPWZ1bmN0aW9uKCl7dmFyIHBhY2tldD10aGlzLnBhY2tldDt2YXIgdG9waWM7dmFyIG9wdGlvbnM7dmFyIHFvczt2YXIgcmg7dmFyIHJhcDt2YXIgbmw7dmFyIHN1YnNjcmlwdGlvbjtpZihwYWNrZXQucW9zIT09MSl7cmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJXcm9uZyBzdWJzY3JpYmUgaGVhZGVyXCIpKX1wYWNrZXQuc3Vic2NyaXB0aW9ucz1bXTtpZighdGhpcy5fcGFyc2VNZXNzYWdlSWQoKSl7cmV0dXJufWlmKHRoaXMuc2V0dGluZ3MucHJvdG9jb2xWZXJzaW9uPT09NSl7dmFyIHByb3BlcnRpZXM9dGhpcy5fcGFyc2VQcm9wZXJ0aWVzKCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvcGVydGllcykubGVuZ3RoKXtwYWNrZXQucHJvcGVydGllcz1wcm9wZXJ0aWVzfX13aGlsZSh0aGlzLl9wb3M8cGFja2V0Lmxlbmd0aCl7dG9waWM9dGhpcy5fcGFyc2VTdHJpbmcoKTtpZih0b3BpYz09PW51bGwpcmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJDYW5ub3QgcGFyc2UgdG9waWNcIikpO29wdGlvbnM9dGhpcy5fcGFyc2VCeXRlKCk7cW9zPW9wdGlvbnMmY29uc3RhbnRzLlNVQlNDUklCRV9PUFRJT05TX1FPU19NQVNLO25sPShvcHRpb25zPj5jb25zdGFudHMuU1VCU0NSSUJFX09QVElPTlNfTkxfU0hJRlQmY29uc3RhbnRzLlNVQlNDUklCRV9PUFRJT05TX05MX01BU0spIT09MDtyYXA9KG9wdGlvbnM+PmNvbnN0YW50cy5TVUJTQ1JJQkVfT1BUSU9OU19SQVBfU0hJRlQmY29uc3RhbnRzLlNVQlNDUklCRV9PUFRJT05TX1JBUF9NQVNLKSE9PTA7cmg9b3B0aW9ucz4+Y29uc3RhbnRzLlNVQlNDUklCRV9PUFRJT05TX1JIX1NISUZUJmNvbnN0YW50cy5TVUJTQ1JJQkVfT1BUSU9OU19SSF9NQVNLO3N1YnNjcmlwdGlvbj17dG9waWM6dG9waWMscW9zOnFvc307aWYodGhpcy5zZXR0aW5ncy5wcm90b2NvbFZlcnNpb249PT01KXtzdWJzY3JpcHRpb24ubmw9bmw7c3Vic2NyaXB0aW9uLnJhcD1yYXA7c3Vic2NyaXB0aW9uLnJoPXJofXBhY2tldC5zdWJzY3JpcHRpb25zLnB1c2goc3Vic2NyaXB0aW9uKX19O1BhcnNlci5wcm90b3R5cGUuX3BhcnNlU3ViYWNrPWZ1bmN0aW9uKCl7dmFyIHBhY2tldD10aGlzLnBhY2tldDt0aGlzLnBhY2tldC5ncmFudGVkPVtdO2lmKCF0aGlzLl9wYXJzZU1lc3NhZ2VJZCgpKXtyZXR1cm59aWYodGhpcy5zZXR0aW5ncy5wcm90b2NvbFZlcnNpb249PT01KXt2YXIgcHJvcGVydGllcz10aGlzLl9wYXJzZVByb3BlcnRpZXMoKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwcm9wZXJ0aWVzKS5sZW5ndGgpe3BhY2tldC5wcm9wZXJ0aWVzPXByb3BlcnRpZXN9fXdoaWxlKHRoaXMuX3Bvczx0aGlzLnBhY2tldC5sZW5ndGgpe3RoaXMucGFja2V0LmdyYW50ZWQucHVzaCh0aGlzLl9saXN0LnJlYWRVSW50OCh0aGlzLl9wb3MrKykpfX07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VVbnN1YnNjcmliZT1mdW5jdGlvbigpe3ZhciBwYWNrZXQ9dGhpcy5wYWNrZXQ7cGFja2V0LnVuc3Vic2NyaXB0aW9ucz1bXTtpZighdGhpcy5fcGFyc2VNZXNzYWdlSWQoKSl7cmV0dXJufWlmKHRoaXMuc2V0dGluZ3MucHJvdG9jb2xWZXJzaW9uPT09NSl7dmFyIHByb3BlcnRpZXM9dGhpcy5fcGFyc2VQcm9wZXJ0aWVzKCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvcGVydGllcykubGVuZ3RoKXtwYWNrZXQucHJvcGVydGllcz1wcm9wZXJ0aWVzfX13aGlsZSh0aGlzLl9wb3M8cGFja2V0Lmxlbmd0aCl7dmFyIHRvcGljO3RvcGljPXRoaXMuX3BhcnNlU3RyaW5nKCk7aWYodG9waWM9PT1udWxsKXJldHVybiB0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiQ2Fubm90IHBhcnNlIHRvcGljXCIpKTtwYWNrZXQudW5zdWJzY3JpcHRpb25zLnB1c2godG9waWMpfX07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VVbnN1YmFjaz1mdW5jdGlvbigpe3ZhciBwYWNrZXQ9dGhpcy5wYWNrZXQ7aWYoIXRoaXMuX3BhcnNlTWVzc2FnZUlkKCkpcmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJDYW5ub3QgcGFyc2UgbWVzc2FnZUlkXCIpKTtpZih0aGlzLnNldHRpbmdzLnByb3RvY29sVmVyc2lvbj09PTUpe3ZhciBwcm9wZXJ0aWVzPXRoaXMuX3BhcnNlUHJvcGVydGllcygpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHByb3BlcnRpZXMpLmxlbmd0aCl7cGFja2V0LnByb3BlcnRpZXM9cHJvcGVydGllc31wYWNrZXQuZ3JhbnRlZD1bXTt3aGlsZSh0aGlzLl9wb3M8dGhpcy5wYWNrZXQubGVuZ3RoKXt0aGlzLnBhY2tldC5ncmFudGVkLnB1c2godGhpcy5fbGlzdC5yZWFkVUludDgodGhpcy5fcG9zKyspKX19fTtQYXJzZXIucHJvdG90eXBlLl9wYXJzZUNvbmZpcm1hdGlvbj1mdW5jdGlvbigpe3ZhciBwYWNrZXQ9dGhpcy5wYWNrZXQ7dGhpcy5fcGFyc2VNZXNzYWdlSWQoKTtpZih0aGlzLnNldHRpbmdzLnByb3RvY29sVmVyc2lvbj09PTUpe2lmKHBhY2tldC5sZW5ndGg+Mil7cGFja2V0LnJlYXNvbkNvZGU9dGhpcy5fcGFyc2VCeXRlKCk7dmFyIHByb3BlcnRpZXM9dGhpcy5fcGFyc2VQcm9wZXJ0aWVzKCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvcGVydGllcykubGVuZ3RoKXtwYWNrZXQucHJvcGVydGllcz1wcm9wZXJ0aWVzfX19cmV0dXJuIHRydWV9O1BhcnNlci5wcm90b3R5cGUuX3BhcnNlRGlzY29ubmVjdD1mdW5jdGlvbigpe3ZhciBwYWNrZXQ9dGhpcy5wYWNrZXQ7aWYodGhpcy5zZXR0aW5ncy5wcm90b2NvbFZlcnNpb249PT01KXtwYWNrZXQucmVhc29uQ29kZT10aGlzLl9wYXJzZUJ5dGUoKTt2YXIgcHJvcGVydGllcz10aGlzLl9wYXJzZVByb3BlcnRpZXMoKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwcm9wZXJ0aWVzKS5sZW5ndGgpe3BhY2tldC5wcm9wZXJ0aWVzPXByb3BlcnRpZXN9fXJldHVybiB0cnVlfTtQYXJzZXIucHJvdG90eXBlLl9wYXJzZUF1dGg9ZnVuY3Rpb24oKXt2YXIgcGFja2V0PXRoaXMucGFja2V0O2lmKHRoaXMuc2V0dGluZ3MucHJvdG9jb2xWZXJzaW9uIT09NSl7cmV0dXJuIHRoaXMuX2VtaXRFcnJvcihuZXcgRXJyb3IoXCJOb3Qgc3VwcG9ydGVkIGF1dGggcGFja2V0IGZvciB0aGlzIHZlcnNpb24gTVFUVFwiKSl9cGFja2V0LnJlYXNvbkNvZGU9dGhpcy5fcGFyc2VCeXRlKCk7dmFyIHByb3BlcnRpZXM9dGhpcy5fcGFyc2VQcm9wZXJ0aWVzKCk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvcGVydGllcykubGVuZ3RoKXtwYWNrZXQucHJvcGVydGllcz1wcm9wZXJ0aWVzfXJldHVybiB0cnVlfTtQYXJzZXIucHJvdG90eXBlLl9wYXJzZU1lc3NhZ2VJZD1mdW5jdGlvbigpe3ZhciBwYWNrZXQ9dGhpcy5wYWNrZXQ7cGFja2V0Lm1lc3NhZ2VJZD10aGlzLl9wYXJzZU51bSgpO2lmKHBhY2tldC5tZXNzYWdlSWQ9PT1udWxsKXt0aGlzLl9lbWl0RXJyb3IobmV3IEVycm9yKFwiQ2Fubm90IHBhcnNlIG1lc3NhZ2VJZFwiKSk7cmV0dXJuIGZhbHNlfXJldHVybiB0cnVlfTtQYXJzZXIucHJvdG90eXBlLl9wYXJzZVN0cmluZz1mdW5jdGlvbihtYXliZUJ1ZmZlcil7dmFyIGxlbmd0aD10aGlzLl9wYXJzZU51bSgpO3ZhciByZXN1bHQ7dmFyIGVuZD1sZW5ndGgrdGhpcy5fcG9zO2lmKGxlbmd0aD09PS0xfHxlbmQ+dGhpcy5fbGlzdC5sZW5ndGh8fGVuZD50aGlzLnBhY2tldC5sZW5ndGgpcmV0dXJuIG51bGw7cmVzdWx0PXRoaXMuX2xpc3QudG9TdHJpbmcoXCJ1dGY4XCIsdGhpcy5fcG9zLGVuZCk7dGhpcy5fcG9zKz1sZW5ndGg7cmV0dXJuIHJlc3VsdH07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VTdHJpbmdQYWlyPWZ1bmN0aW9uKCl7cmV0dXJue25hbWU6dGhpcy5fcGFyc2VTdHJpbmcoKSx2YWx1ZTp0aGlzLl9wYXJzZVN0cmluZygpfX07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VCdWZmZXI9ZnVuY3Rpb24oKXt2YXIgbGVuZ3RoPXRoaXMuX3BhcnNlTnVtKCk7dmFyIHJlc3VsdDt2YXIgZW5kPWxlbmd0aCt0aGlzLl9wb3M7aWYobGVuZ3RoPT09LTF8fGVuZD50aGlzLl9saXN0Lmxlbmd0aHx8ZW5kPnRoaXMucGFja2V0Lmxlbmd0aClyZXR1cm4gbnVsbDtyZXN1bHQ9dGhpcy5fbGlzdC5zbGljZSh0aGlzLl9wb3MsZW5kKTt0aGlzLl9wb3MrPWxlbmd0aDtyZXR1cm4gcmVzdWx0fTtQYXJzZXIucHJvdG90eXBlLl9wYXJzZU51bT1mdW5jdGlvbigpe2lmKHRoaXMuX2xpc3QubGVuZ3RoLXRoaXMuX3BvczwyKXJldHVybi0xO3ZhciByZXN1bHQ9dGhpcy5fbGlzdC5yZWFkVUludDE2QkUodGhpcy5fcG9zKTt0aGlzLl9wb3MrPTI7cmV0dXJuIHJlc3VsdH07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2U0Qnl0ZU51bT1mdW5jdGlvbigpe2lmKHRoaXMuX2xpc3QubGVuZ3RoLXRoaXMuX3Bvczw0KXJldHVybi0xO3ZhciByZXN1bHQ9dGhpcy5fbGlzdC5yZWFkVUludDMyQkUodGhpcy5fcG9zKTt0aGlzLl9wb3MrPTQ7cmV0dXJuIHJlc3VsdH07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VWYXJCeXRlTnVtPWZ1bmN0aW9uKGZ1bGxJbmZvRmxhZyl7dmFyIGJ5dGVzPTA7dmFyIG11bD0xO3ZhciBsZW5ndGg9MDt2YXIgcmVzdWx0PXRydWU7dmFyIGN1cnJlbnQ7dmFyIHBhZGRpbmc9dGhpcy5fcG9zP3RoaXMuX3BvczowO3doaWxlKGJ5dGVzPDUpe2N1cnJlbnQ9dGhpcy5fbGlzdC5yZWFkVUludDgocGFkZGluZytieXRlcysrKTtsZW5ndGgrPW11bCooY3VycmVudCZjb25zdGFudHMuTEVOR1RIX01BU0spO211bCo9MTI4O2lmKChjdXJyZW50JmNvbnN0YW50cy5MRU5HVEhfRklOX01BU0spPT09MClicmVhaztpZih0aGlzLl9saXN0Lmxlbmd0aDw9Ynl0ZXMpe3Jlc3VsdD1mYWxzZTticmVha319aWYocGFkZGluZyl7dGhpcy5fcG9zKz1ieXRlc31yZXN1bHQ9cmVzdWx0P2Z1bGxJbmZvRmxhZz97Ynl0ZXM6Ynl0ZXMsdmFsdWU6bGVuZ3RofTpsZW5ndGg6ZmFsc2U7cmV0dXJuIHJlc3VsdH07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VCeXRlPWZ1bmN0aW9uKCl7dmFyIHJlc3VsdD10aGlzLl9saXN0LnJlYWRVSW50OCh0aGlzLl9wb3MpO3RoaXMuX3BvcysrO3JldHVybiByZXN1bHR9O1BhcnNlci5wcm90b3R5cGUuX3BhcnNlQnlUeXBlPWZ1bmN0aW9uKHR5cGUpe3N3aXRjaCh0eXBlKXtjYXNlXCJieXRlXCI6e3JldHVybiB0aGlzLl9wYXJzZUJ5dGUoKSE9PTB9Y2FzZVwiaW50OFwiOntyZXR1cm4gdGhpcy5fcGFyc2VCeXRlKCl9Y2FzZVwiaW50MTZcIjp7cmV0dXJuIHRoaXMuX3BhcnNlTnVtKCl9Y2FzZVwiaW50MzJcIjp7cmV0dXJuIHRoaXMuX3BhcnNlNEJ5dGVOdW0oKX1jYXNlXCJ2YXJcIjp7cmV0dXJuIHRoaXMuX3BhcnNlVmFyQnl0ZU51bSgpfWNhc2VcInN0cmluZ1wiOntyZXR1cm4gdGhpcy5fcGFyc2VTdHJpbmcoKX1jYXNlXCJwYWlyXCI6e3JldHVybiB0aGlzLl9wYXJzZVN0cmluZ1BhaXIoKX1jYXNlXCJiaW5hcnlcIjp7cmV0dXJuIHRoaXMuX3BhcnNlQnVmZmVyKCl9fX07UGFyc2VyLnByb3RvdHlwZS5fcGFyc2VQcm9wZXJ0aWVzPWZ1bmN0aW9uKCl7dmFyIGxlbmd0aD10aGlzLl9wYXJzZVZhckJ5dGVOdW0oKTt2YXIgc3RhcnQ9dGhpcy5fcG9zO3ZhciBlbmQ9c3RhcnQrbGVuZ3RoO3ZhciByZXN1bHQ9e307d2hpbGUodGhpcy5fcG9zPGVuZCl7dmFyIHR5cGU9dGhpcy5fcGFyc2VCeXRlKCk7dmFyIG5hbWU9Y29uc3RhbnRzLnByb3BlcnRpZXNDb2Rlc1t0eXBlXTtpZighbmFtZSl7dGhpcy5fZW1pdEVycm9yKG5ldyBFcnJvcihcIlVua25vd24gcHJvcGVydHlcIikpO3JldHVybiBmYWxzZX1pZihuYW1lPT09XCJ1c2VyUHJvcGVydGllc1wiKXtpZighcmVzdWx0W25hbWVdKXtyZXN1bHRbbmFtZV09e319dmFyIGN1cnJlbnRVc2VyUHJvcGVydHk9dGhpcy5fcGFyc2VCeVR5cGUoY29uc3RhbnRzLnByb3BlcnRpZXNUeXBlc1tuYW1lXSk7cmVzdWx0W25hbWVdW2N1cnJlbnRVc2VyUHJvcGVydHkubmFtZV09Y3VycmVudFVzZXJQcm9wZXJ0eS52YWx1ZTtjb250aW51ZX1yZXN1bHRbbmFtZV09dGhpcy5fcGFyc2VCeVR5cGUoY29uc3RhbnRzLnByb3BlcnRpZXNUeXBlc1tuYW1lXSl9cmV0dXJuIHJlc3VsdH07UGFyc2VyLnByb3RvdHlwZS5fbmV3UGFja2V0PWZ1bmN0aW9uKCl7aWYodGhpcy5wYWNrZXQpe3RoaXMuX2xpc3QuY29uc3VtZSh0aGlzLnBhY2tldC5sZW5ndGgpO3RoaXMuZW1pdChcInBhY2tldFwiLHRoaXMucGFja2V0KX10aGlzLnBhY2tldD1uZXcgUGFja2V0O3RoaXMuX3Bvcz0wO3JldHVybiB0cnVlfTtQYXJzZXIucHJvdG90eXBlLl9lbWl0RXJyb3I9ZnVuY3Rpb24oZXJyKXt0aGlzLmVycm9yPWVycjt0aGlzLmVtaXQoXCJlcnJvclwiLGVycil9O21vZHVsZS5leHBvcnRzPVBhcnNlcn0se1wiLi9jb25zdGFudHNcIjo4MixcIi4vcGFja2V0XCI6ODcsYmw6ODUsZXZlbnRzOjEzLGluaGVyaXRzOjgwfV0sODk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBwcm90b2NvbD1yZXF1aXJlKFwiLi9jb25zdGFudHNcIik7dmFyIEJ1ZmZlcj1yZXF1aXJlKFwic2FmZS1idWZmZXJcIikuQnVmZmVyO3ZhciBlbXB0eT1CdWZmZXIuYWxsb2NVbnNhZmUoMCk7dmFyIHplcm9CdWY9QnVmZmVyLmZyb20oWzBdKTt2YXIgbnVtYmVycz1yZXF1aXJlKFwiLi9udW1iZXJzXCIpO3ZhciBuZXh0VGljaz1yZXF1aXJlKFwicHJvY2Vzcy1uZXh0aWNrLWFyZ3NcIikubmV4dFRpY2s7dmFyIG51bUNhY2hlPW51bWJlcnMuY2FjaGU7dmFyIGdlbmVyYXRlTnVtYmVyPW51bWJlcnMuZ2VuZXJhdGVOdW1iZXI7dmFyIGdlbmVyYXRlQ2FjaGU9bnVtYmVycy5nZW5lcmF0ZUNhY2hlO3ZhciBnZW5CdWZWYXJpYWJsZUJ5dGVJbnQ9bnVtYmVycy5nZW5CdWZWYXJpYWJsZUJ5dGVJbnQ7dmFyIGdlbmVyYXRlNEJ5dGVCdWZmZXI9bnVtYmVycy5nZW5lcmF0ZTRCeXRlQnVmZmVyO3ZhciB3cml0ZU51bWJlcj13cml0ZU51bWJlckNhY2hlZDt2YXIgdG9HZW5lcmF0ZT10cnVlO2Z1bmN0aW9uIGdlbmVyYXRlKHBhY2tldCxzdHJlYW0sb3B0cyl7aWYoc3RyZWFtLmNvcmspe3N0cmVhbS5jb3JrKCk7bmV4dFRpY2sodW5jb3JrLHN0cmVhbSl9aWYodG9HZW5lcmF0ZSl7dG9HZW5lcmF0ZT1mYWxzZTtnZW5lcmF0ZUNhY2hlKCl9c3dpdGNoKHBhY2tldC5jbWQpe2Nhc2VcImNvbm5lY3RcIjpyZXR1cm4gY29ubmVjdChwYWNrZXQsc3RyZWFtLG9wdHMpO2Nhc2VcImNvbm5hY2tcIjpyZXR1cm4gY29ubmFjayhwYWNrZXQsc3RyZWFtLG9wdHMpO2Nhc2VcInB1Ymxpc2hcIjpyZXR1cm4gcHVibGlzaChwYWNrZXQsc3RyZWFtLG9wdHMpO2Nhc2VcInB1YmFja1wiOmNhc2VcInB1YnJlY1wiOmNhc2VcInB1YnJlbFwiOmNhc2VcInB1YmNvbXBcIjpyZXR1cm4gY29uZmlybWF0aW9uKHBhY2tldCxzdHJlYW0sb3B0cyk7Y2FzZVwic3Vic2NyaWJlXCI6cmV0dXJuIHN1YnNjcmliZShwYWNrZXQsc3RyZWFtLG9wdHMpO2Nhc2VcInN1YmFja1wiOnJldHVybiBzdWJhY2socGFja2V0LHN0cmVhbSxvcHRzKTtjYXNlXCJ1bnN1YnNjcmliZVwiOnJldHVybiB1bnN1YnNjcmliZShwYWNrZXQsc3RyZWFtLG9wdHMpO2Nhc2VcInVuc3ViYWNrXCI6cmV0dXJuIHVuc3ViYWNrKHBhY2tldCxzdHJlYW0sb3B0cyk7Y2FzZVwicGluZ3JlcVwiOmNhc2VcInBpbmdyZXNwXCI6cmV0dXJuIGVtcHR5UGFja2V0KHBhY2tldCxzdHJlYW0sb3B0cyk7Y2FzZVwiZGlzY29ubmVjdFwiOnJldHVybiBkaXNjb25uZWN0KHBhY2tldCxzdHJlYW0sb3B0cyk7Y2FzZVwiYXV0aFwiOnJldHVybiBhdXRoKHBhY2tldCxzdHJlYW0sb3B0cyk7ZGVmYXVsdDpzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiVW5rbm93biBjb21tYW5kXCIpKTtyZXR1cm4gZmFsc2V9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShnZW5lcmF0ZSxcImNhY2hlTnVtYmVyc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gd3JpdGVOdW1iZXI9PT13cml0ZU51bWJlckNhY2hlZH0sc2V0OmZ1bmN0aW9uKHZhbHVlKXtpZih2YWx1ZSl7aWYoIW51bUNhY2hlfHxPYmplY3Qua2V5cyhudW1DYWNoZSkubGVuZ3RoPT09MCl0b0dlbmVyYXRlPXRydWU7d3JpdGVOdW1iZXI9d3JpdGVOdW1iZXJDYWNoZWR9ZWxzZXt0b0dlbmVyYXRlPWZhbHNlO3dyaXRlTnVtYmVyPXdyaXRlTnVtYmVyR2VuZXJhdGVkfX19KTtmdW5jdGlvbiB1bmNvcmsoc3RyZWFtKXtzdHJlYW0udW5jb3JrKCl9ZnVuY3Rpb24gY29ubmVjdChwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciBzZXR0aW5ncz1wYWNrZXR8fHt9O3ZhciBwcm90b2NvbElkPXNldHRpbmdzLnByb3RvY29sSWR8fFwiTVFUVFwiO3ZhciBwcm90b2NvbFZlcnNpb249c2V0dGluZ3MucHJvdG9jb2xWZXJzaW9ufHw0O3ZhciB3aWxsPXNldHRpbmdzLndpbGw7dmFyIGNsZWFuPXNldHRpbmdzLmNsZWFuO3ZhciBrZWVwYWxpdmU9c2V0dGluZ3Mua2VlcGFsaXZlfHwwO3ZhciBjbGllbnRJZD1zZXR0aW5ncy5jbGllbnRJZHx8XCJcIjt2YXIgdXNlcm5hbWU9c2V0dGluZ3MudXNlcm5hbWU7dmFyIHBhc3N3b3JkPXNldHRpbmdzLnBhc3N3b3JkO3ZhciBwcm9wZXJ0aWVzPXNldHRpbmdzLnByb3BlcnRpZXM7aWYoY2xlYW49PT11bmRlZmluZWQpY2xlYW49dHJ1ZTt2YXIgbGVuZ3RoPTA7aWYoIXByb3RvY29sSWR8fHR5cGVvZiBwcm90b2NvbElkIT09XCJzdHJpbmdcIiYmIUJ1ZmZlci5pc0J1ZmZlcihwcm90b2NvbElkKSl7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgcHJvdG9jb2xJZFwiKSk7cmV0dXJuIGZhbHNlfWVsc2UgbGVuZ3RoKz1wcm90b2NvbElkLmxlbmd0aCsyO2lmKHByb3RvY29sVmVyc2lvbiE9PTMmJnByb3RvY29sVmVyc2lvbiE9PTQmJnByb3RvY29sVmVyc2lvbiE9PTUpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3RvY29sIHZlcnNpb25cIikpO3JldHVybiBmYWxzZX1lbHNlIGxlbmd0aCs9MTtpZigodHlwZW9mIGNsaWVudElkPT09XCJzdHJpbmdcInx8QnVmZmVyLmlzQnVmZmVyKGNsaWVudElkKSkmJihjbGllbnRJZHx8cHJvdG9jb2xWZXJzaW9uPT09NCkmJihjbGllbnRJZHx8Y2xlYW4pKXtsZW5ndGgrPWNsaWVudElkLmxlbmd0aCsyfWVsc2V7aWYocHJvdG9jb2xWZXJzaW9uPDQpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJjbGllbnRJZCBtdXN0IGJlIHN1cHBsaWVkIGJlZm9yZSAzLjEuMVwiKSk7cmV0dXJuIGZhbHNlfWlmKGNsZWFuKjE9PT0wKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiY2xpZW50SWQgbXVzdCBiZSBnaXZlbiBpZiBjbGVhblNlc3Npb24gc2V0IHRvIDBcIikpO3JldHVybiBmYWxzZX19aWYodHlwZW9mIGtlZXBhbGl2ZSE9PVwibnVtYmVyXCJ8fGtlZXBhbGl2ZTwwfHxrZWVwYWxpdmU+NjU1MzV8fGtlZXBhbGl2ZSUxIT09MCl7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQga2VlcGFsaXZlXCIpKTtyZXR1cm4gZmFsc2V9ZWxzZSBsZW5ndGgrPTI7bGVuZ3RoKz0xO2lmKHByb3RvY29sVmVyc2lvbj09PTUpe3ZhciBwcm9wZXJ0aWVzRGF0YT1nZXRQcm9wZXJ0aWVzKHN0cmVhbSxwcm9wZXJ0aWVzKTtsZW5ndGgrPXByb3BlcnRpZXNEYXRhLmxlbmd0aH1pZih3aWxsKXtpZih0eXBlb2Ygd2lsbCE9PVwib2JqZWN0XCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHdpbGxcIikpO3JldHVybiBmYWxzZX1pZighd2lsbC50b3BpY3x8dHlwZW9mIHdpbGwudG9waWMhPT1cInN0cmluZ1wiKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCB3aWxsIHRvcGljXCIpKTtyZXR1cm4gZmFsc2V9ZWxzZXtsZW5ndGgrPUJ1ZmZlci5ieXRlTGVuZ3RoKHdpbGwudG9waWMpKzJ9aWYod2lsbC5wYXlsb2FkKXtpZih3aWxsLnBheWxvYWQubGVuZ3RoPj0wKXtpZih0eXBlb2Ygd2lsbC5wYXlsb2FkPT09XCJzdHJpbmdcIil7bGVuZ3RoKz1CdWZmZXIuYnl0ZUxlbmd0aCh3aWxsLnBheWxvYWQpKzJ9ZWxzZXtsZW5ndGgrPXdpbGwucGF5bG9hZC5sZW5ndGgrMn19ZWxzZXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCB3aWxsIHBheWxvYWRcIikpO3JldHVybiBmYWxzZX12YXIgd2lsbFByb3BlcnRpZXM9e307aWYocHJvdG9jb2xWZXJzaW9uPT09NSl7d2lsbFByb3BlcnRpZXM9Z2V0UHJvcGVydGllcyhzdHJlYW0sd2lsbC5wcm9wZXJ0aWVzKTtsZW5ndGgrPXdpbGxQcm9wZXJ0aWVzLmxlbmd0aH19fXZhciBwcm92aWRlZFVzZXJuYW1lPWZhbHNlO2lmKHVzZXJuYW1lIT1udWxsKXtpZihpc1N0cmluZ09yQnVmZmVyKHVzZXJuYW1lKSl7cHJvdmlkZWRVc2VybmFtZT10cnVlO2xlbmd0aCs9QnVmZmVyLmJ5dGVMZW5ndGgodXNlcm5hbWUpKzJ9ZWxzZXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCB1c2VybmFtZVwiKSk7cmV0dXJuIGZhbHNlfX1pZihwYXNzd29yZCE9bnVsbCl7aWYoIXByb3ZpZGVkVXNlcm5hbWUpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJVc2VybmFtZSBpcyByZXF1aXJlZCB0byB1c2UgcGFzc3dvcmRcIikpO3JldHVybiBmYWxzZX1pZihpc1N0cmluZ09yQnVmZmVyKHBhc3N3b3JkKSl7bGVuZ3RoKz1ieXRlTGVuZ3RoKHBhc3N3b3JkKSsyfWVsc2V7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgcGFzc3dvcmRcIikpO3JldHVybiBmYWxzZX19c3RyZWFtLndyaXRlKHByb3RvY29sLkNPTk5FQ1RfSEVBREVSKTt3cml0ZVZhckJ5dGVJbnQoc3RyZWFtLGxlbmd0aCk7d3JpdGVTdHJpbmdPckJ1ZmZlcihzdHJlYW0scHJvdG9jb2xJZCk7c3RyZWFtLndyaXRlKHByb3RvY29sVmVyc2lvbj09PTQ/cHJvdG9jb2wuVkVSU0lPTjQ6cHJvdG9jb2xWZXJzaW9uPT09NT9wcm90b2NvbC5WRVJTSU9ONTpwcm90b2NvbC5WRVJTSU9OMyk7dmFyIGZsYWdzPTA7ZmxhZ3N8PXVzZXJuYW1lIT1udWxsP3Byb3RvY29sLlVTRVJOQU1FX01BU0s6MDtmbGFnc3w9cGFzc3dvcmQhPW51bGw/cHJvdG9jb2wuUEFTU1dPUkRfTUFTSzowO2ZsYWdzfD13aWxsJiZ3aWxsLnJldGFpbj9wcm90b2NvbC5XSUxMX1JFVEFJTl9NQVNLOjA7ZmxhZ3N8PXdpbGwmJndpbGwucW9zP3dpbGwucW9zPDxwcm90b2NvbC5XSUxMX1FPU19TSElGVDowO2ZsYWdzfD13aWxsP3Byb3RvY29sLldJTExfRkxBR19NQVNLOjA7ZmxhZ3N8PWNsZWFuP3Byb3RvY29sLkNMRUFOX1NFU1NJT05fTUFTSzowO3N0cmVhbS53cml0ZShCdWZmZXIuZnJvbShbZmxhZ3NdKSk7d3JpdGVOdW1iZXIoc3RyZWFtLGtlZXBhbGl2ZSk7aWYocHJvdG9jb2xWZXJzaW9uPT09NSl7cHJvcGVydGllc0RhdGEud3JpdGUoKX13cml0ZVN0cmluZ09yQnVmZmVyKHN0cmVhbSxjbGllbnRJZCk7aWYod2lsbCl7aWYocHJvdG9jb2xWZXJzaW9uPT09NSl7d2lsbFByb3BlcnRpZXMud3JpdGUoKX13cml0ZVN0cmluZyhzdHJlYW0sd2lsbC50b3BpYyk7d3JpdGVTdHJpbmdPckJ1ZmZlcihzdHJlYW0sd2lsbC5wYXlsb2FkKX1pZih1c2VybmFtZSE9bnVsbCl7d3JpdGVTdHJpbmdPckJ1ZmZlcihzdHJlYW0sdXNlcm5hbWUpfWlmKHBhc3N3b3JkIT1udWxsKXt3cml0ZVN0cmluZ09yQnVmZmVyKHN0cmVhbSxwYXNzd29yZCl9cmV0dXJuIHRydWV9ZnVuY3Rpb24gY29ubmFjayhwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciB2ZXJzaW9uPW9wdHM/b3B0cy5wcm90b2NvbFZlcnNpb246NDt2YXIgc2V0dGluZ3M9cGFja2V0fHx7fTt2YXIgcmM9dmVyc2lvbj09PTU/c2V0dGluZ3MucmVhc29uQ29kZTpzZXR0aW5ncy5yZXR1cm5Db2RlO3ZhciBwcm9wZXJ0aWVzPXNldHRpbmdzLnByb3BlcnRpZXM7dmFyIGxlbmd0aD0yO2lmKHR5cGVvZiByYyE9PVwibnVtYmVyXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHJldHVybiBjb2RlXCIpKTtyZXR1cm4gZmFsc2V9dmFyIHByb3BlcnRpZXNEYXRhPW51bGw7aWYodmVyc2lvbj09PTUpe3Byb3BlcnRpZXNEYXRhPWdldFByb3BlcnRpZXMoc3RyZWFtLHByb3BlcnRpZXMpO2xlbmd0aCs9cHJvcGVydGllc0RhdGEubGVuZ3RofXN0cmVhbS53cml0ZShwcm90b2NvbC5DT05OQUNLX0hFQURFUik7d3JpdGVWYXJCeXRlSW50KHN0cmVhbSxsZW5ndGgpO3N0cmVhbS53cml0ZShzZXR0aW5ncy5zZXNzaW9uUHJlc2VudD9wcm90b2NvbC5TRVNTSU9OUFJFU0VOVF9IRUFERVI6emVyb0J1Zik7c3RyZWFtLndyaXRlKEJ1ZmZlci5mcm9tKFtyY10pKTtpZihwcm9wZXJ0aWVzRGF0YSE9bnVsbCl7cHJvcGVydGllc0RhdGEud3JpdGUoKX1yZXR1cm4gdHJ1ZX1mdW5jdGlvbiBwdWJsaXNoKHBhY2tldCxzdHJlYW0sb3B0cyl7dmFyIHZlcnNpb249b3B0cz9vcHRzLnByb3RvY29sVmVyc2lvbjo0O3ZhciBzZXR0aW5ncz1wYWNrZXR8fHt9O3ZhciBxb3M9c2V0dGluZ3MucW9zfHwwO3ZhciByZXRhaW49c2V0dGluZ3MucmV0YWluP3Byb3RvY29sLlJFVEFJTl9NQVNLOjA7dmFyIHRvcGljPXNldHRpbmdzLnRvcGljO3ZhciBwYXlsb2FkPXNldHRpbmdzLnBheWxvYWR8fGVtcHR5O3ZhciBpZD1zZXR0aW5ncy5tZXNzYWdlSWQ7dmFyIHByb3BlcnRpZXM9c2V0dGluZ3MucHJvcGVydGllczt2YXIgbGVuZ3RoPTA7aWYodHlwZW9mIHRvcGljPT09XCJzdHJpbmdcIilsZW5ndGgrPUJ1ZmZlci5ieXRlTGVuZ3RoKHRvcGljKSsyO2Vsc2UgaWYoQnVmZmVyLmlzQnVmZmVyKHRvcGljKSlsZW5ndGgrPXRvcGljLmxlbmd0aCsyO2Vsc2V7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgdG9waWNcIikpO3JldHVybiBmYWxzZX1pZighQnVmZmVyLmlzQnVmZmVyKHBheWxvYWQpKWxlbmd0aCs9QnVmZmVyLmJ5dGVMZW5ndGgocGF5bG9hZCk7ZWxzZSBsZW5ndGgrPXBheWxvYWQubGVuZ3RoO2lmKHFvcyYmdHlwZW9mIGlkIT09XCJudW1iZXJcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgbWVzc2FnZUlkXCIpKTtyZXR1cm4gZmFsc2V9ZWxzZSBpZihxb3MpbGVuZ3RoKz0yO3ZhciBwcm9wZXJ0aWVzRGF0YT1udWxsO2lmKHZlcnNpb249PT01KXtwcm9wZXJ0aWVzRGF0YT1nZXRQcm9wZXJ0aWVzKHN0cmVhbSxwcm9wZXJ0aWVzKTtsZW5ndGgrPXByb3BlcnRpZXNEYXRhLmxlbmd0aH1zdHJlYW0ud3JpdGUocHJvdG9jb2wuUFVCTElTSF9IRUFERVJbcW9zXVtzZXR0aW5ncy5kdXA/MTowXVtyZXRhaW4/MTowXSk7d3JpdGVWYXJCeXRlSW50KHN0cmVhbSxsZW5ndGgpO3dyaXRlTnVtYmVyKHN0cmVhbSxieXRlTGVuZ3RoKHRvcGljKSk7c3RyZWFtLndyaXRlKHRvcGljKTtpZihxb3M+MCl3cml0ZU51bWJlcihzdHJlYW0saWQpO2lmKHByb3BlcnRpZXNEYXRhIT1udWxsKXtwcm9wZXJ0aWVzRGF0YS53cml0ZSgpfXJldHVybiBzdHJlYW0ud3JpdGUocGF5bG9hZCl9ZnVuY3Rpb24gY29uZmlybWF0aW9uKHBhY2tldCxzdHJlYW0sb3B0cyl7dmFyIHZlcnNpb249b3B0cz9vcHRzLnByb3RvY29sVmVyc2lvbjo0O3ZhciBzZXR0aW5ncz1wYWNrZXR8fHt9O3ZhciB0eXBlPXNldHRpbmdzLmNtZHx8XCJwdWJhY2tcIjt2YXIgaWQ9c2V0dGluZ3MubWVzc2FnZUlkO3ZhciBkdXA9c2V0dGluZ3MuZHVwJiZ0eXBlPT09XCJwdWJyZWxcIj9wcm90b2NvbC5EVVBfTUFTSzowO3ZhciBxb3M9MDt2YXIgcmVhc29uQ29kZT1zZXR0aW5ncy5yZWFzb25Db2RlO3ZhciBwcm9wZXJ0aWVzPXNldHRpbmdzLnByb3BlcnRpZXM7dmFyIGxlbmd0aD12ZXJzaW9uPT09NT8zOjI7aWYodHlwZT09PVwicHVicmVsXCIpcW9zPTE7aWYodHlwZW9mIGlkIT09XCJudW1iZXJcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgbWVzc2FnZUlkXCIpKTtyZXR1cm4gZmFsc2V9dmFyIHByb3BlcnRpZXNEYXRhPW51bGw7aWYodmVyc2lvbj09PTUpe3Byb3BlcnRpZXNEYXRhPWdldFByb3BlcnRpZXNCeU1heGltdW1QYWNrZXRTaXplKHN0cmVhbSxwcm9wZXJ0aWVzLG9wdHMsbGVuZ3RoKTtpZighcHJvcGVydGllc0RhdGEpe3JldHVybiBmYWxzZX1sZW5ndGgrPXByb3BlcnRpZXNEYXRhLmxlbmd0aH1zdHJlYW0ud3JpdGUocHJvdG9jb2wuQUNLU1t0eXBlXVtxb3NdW2R1cF1bMF0pO3dyaXRlVmFyQnl0ZUludChzdHJlYW0sbGVuZ3RoKTt3cml0ZU51bWJlcihzdHJlYW0saWQpO2lmKHZlcnNpb249PT01KXtzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3JlYXNvbkNvZGVdKSl9aWYocHJvcGVydGllc0RhdGEhPT1udWxsKXtwcm9wZXJ0aWVzRGF0YS53cml0ZSgpfXJldHVybiB0cnVlfWZ1bmN0aW9uIHN1YnNjcmliZShwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciB2ZXJzaW9uPW9wdHM/b3B0cy5wcm90b2NvbFZlcnNpb246NDt2YXIgc2V0dGluZ3M9cGFja2V0fHx7fTt2YXIgZHVwPXNldHRpbmdzLmR1cD9wcm90b2NvbC5EVVBfTUFTSzowO3ZhciBpZD1zZXR0aW5ncy5tZXNzYWdlSWQ7dmFyIHN1YnM9c2V0dGluZ3Muc3Vic2NyaXB0aW9uczt2YXIgcHJvcGVydGllcz1zZXR0aW5ncy5wcm9wZXJ0aWVzO3ZhciBsZW5ndGg9MDtpZih0eXBlb2YgaWQhPT1cIm51bWJlclwiKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCBtZXNzYWdlSWRcIikpO3JldHVybiBmYWxzZX1lbHNlIGxlbmd0aCs9Mjt2YXIgcHJvcGVydGllc0RhdGE9bnVsbDtpZih2ZXJzaW9uPT09NSl7cHJvcGVydGllc0RhdGE9Z2V0UHJvcGVydGllcyhzdHJlYW0scHJvcGVydGllcyk7bGVuZ3RoKz1wcm9wZXJ0aWVzRGF0YS5sZW5ndGh9aWYodHlwZW9mIHN1YnM9PT1cIm9iamVjdFwiJiZzdWJzLmxlbmd0aCl7Zm9yKHZhciBpPTA7aTxzdWJzLmxlbmd0aDtpKz0xKXt2YXIgaXRvcGljPXN1YnNbaV0udG9waWM7dmFyIGlxb3M9c3Vic1tpXS5xb3M7aWYodHlwZW9mIGl0b3BpYyE9PVwic3RyaW5nXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHN1YnNjcmlwdGlvbnMgLSBpbnZhbGlkIHRvcGljXCIpKTtyZXR1cm4gZmFsc2V9aWYodHlwZW9mIGlxb3MhPT1cIm51bWJlclwiKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCBzdWJzY3JpcHRpb25zIC0gaW52YWxpZCBxb3NcIikpO3JldHVybiBmYWxzZX1pZih2ZXJzaW9uPT09NSl7dmFyIG5sPXN1YnNbaV0ubmx8fGZhbHNlO2lmKHR5cGVvZiBubCE9PVwiYm9vbGVhblwiKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCBzdWJzY3JpcHRpb25zIC0gaW52YWxpZCBObyBMb2NhbFwiKSk7cmV0dXJuIGZhbHNlfXZhciByYXA9c3Vic1tpXS5yYXB8fGZhbHNlO2lmKHR5cGVvZiByYXAhPT1cImJvb2xlYW5cIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgc3Vic2NyaXB0aW9ucyAtIGludmFsaWQgUmV0YWluIGFzIFB1Ymxpc2hlZFwiKSk7cmV0dXJuIGZhbHNlfXZhciByaD1zdWJzW2ldLnJofHwwO2lmKHR5cGVvZiByaCE9PVwibnVtYmVyXCJ8fHJoPjIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHN1YnNjcmlwdGlvbnMgLSBpbnZhbGlkIFJldGFpbiBIYW5kbGluZ1wiKSk7cmV0dXJuIGZhbHNlfX1sZW5ndGgrPUJ1ZmZlci5ieXRlTGVuZ3RoKGl0b3BpYykrMisxfX1lbHNle3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHN1YnNjcmlwdGlvbnNcIikpO3JldHVybiBmYWxzZX1zdHJlYW0ud3JpdGUocHJvdG9jb2wuU1VCU0NSSUJFX0hFQURFUlsxXVtkdXA/MTowXVswXSk7d3JpdGVWYXJCeXRlSW50KHN0cmVhbSxsZW5ndGgpO3dyaXRlTnVtYmVyKHN0cmVhbSxpZCk7aWYocHJvcGVydGllc0RhdGEhPT1udWxsKXtwcm9wZXJ0aWVzRGF0YS53cml0ZSgpfXZhciByZXN1bHQ9dHJ1ZTtmb3IodmFyIGo9MDtqPHN1YnMubGVuZ3RoO2orKyl7dmFyIHN1Yj1zdWJzW2pdO3ZhciBqdG9waWM9c3ViLnRvcGljO3ZhciBqcW9zPXN1Yi5xb3M7dmFyIGpubD0rc3ViLm5sO3ZhciBqcmFwPStzdWIucmFwO3ZhciBqcmg9c3ViLnJoO3ZhciBqb3B0aW9uczt3cml0ZVN0cmluZyhzdHJlYW0sanRvcGljKTtqb3B0aW9ucz1wcm90b2NvbC5TVUJTQ1JJQkVfT1BUSU9OU19RT1NbanFvc107aWYodmVyc2lvbj09PTUpe2pvcHRpb25zfD1qbmw/cHJvdG9jb2wuU1VCU0NSSUJFX09QVElPTlNfTkw6MDtqb3B0aW9uc3w9anJhcD9wcm90b2NvbC5TVUJTQ1JJQkVfT1BUSU9OU19SQVA6MDtqb3B0aW9uc3w9anJoP3Byb3RvY29sLlNVQlNDUklCRV9PUFRJT05TX1JIW2pyaF06MH1yZXN1bHQ9c3RyZWFtLndyaXRlKEJ1ZmZlci5mcm9tKFtqb3B0aW9uc10pKX1yZXR1cm4gcmVzdWx0fWZ1bmN0aW9uIHN1YmFjayhwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciB2ZXJzaW9uPW9wdHM/b3B0cy5wcm90b2NvbFZlcnNpb246NDt2YXIgc2V0dGluZ3M9cGFja2V0fHx7fTt2YXIgaWQ9c2V0dGluZ3MubWVzc2FnZUlkO3ZhciBncmFudGVkPXNldHRpbmdzLmdyYW50ZWQ7dmFyIHByb3BlcnRpZXM9c2V0dGluZ3MucHJvcGVydGllczt2YXIgbGVuZ3RoPTA7aWYodHlwZW9mIGlkIT09XCJudW1iZXJcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgbWVzc2FnZUlkXCIpKTtyZXR1cm4gZmFsc2V9ZWxzZSBsZW5ndGgrPTI7aWYodHlwZW9mIGdyYW50ZWQ9PT1cIm9iamVjdFwiJiZncmFudGVkLmxlbmd0aCl7Zm9yKHZhciBpPTA7aTxncmFudGVkLmxlbmd0aDtpKz0xKXtpZih0eXBlb2YgZ3JhbnRlZFtpXSE9PVwibnVtYmVyXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHFvcyB2ZWN0b3JcIikpO3JldHVybiBmYWxzZX1sZW5ndGgrPTF9fWVsc2V7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgcW9zIHZlY3RvclwiKSk7cmV0dXJuIGZhbHNlfXZhciBwcm9wZXJ0aWVzRGF0YT1udWxsO2lmKHZlcnNpb249PT01KXtwcm9wZXJ0aWVzRGF0YT1nZXRQcm9wZXJ0aWVzQnlNYXhpbXVtUGFja2V0U2l6ZShzdHJlYW0scHJvcGVydGllcyxvcHRzLGxlbmd0aCk7aWYoIXByb3BlcnRpZXNEYXRhKXtyZXR1cm4gZmFsc2V9bGVuZ3RoKz1wcm9wZXJ0aWVzRGF0YS5sZW5ndGh9c3RyZWFtLndyaXRlKHByb3RvY29sLlNVQkFDS19IRUFERVIpO3dyaXRlVmFyQnl0ZUludChzdHJlYW0sbGVuZ3RoKTt3cml0ZU51bWJlcihzdHJlYW0saWQpO2lmKHByb3BlcnRpZXNEYXRhIT09bnVsbCl7cHJvcGVydGllc0RhdGEud3JpdGUoKX1yZXR1cm4gc3RyZWFtLndyaXRlKEJ1ZmZlci5mcm9tKGdyYW50ZWQpKX1mdW5jdGlvbiB1bnN1YnNjcmliZShwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciB2ZXJzaW9uPW9wdHM/b3B0cy5wcm90b2NvbFZlcnNpb246NDt2YXIgc2V0dGluZ3M9cGFja2V0fHx7fTt2YXIgaWQ9c2V0dGluZ3MubWVzc2FnZUlkO3ZhciBkdXA9c2V0dGluZ3MuZHVwP3Byb3RvY29sLkRVUF9NQVNLOjA7dmFyIHVuc3Vicz1zZXR0aW5ncy51bnN1YnNjcmlwdGlvbnM7dmFyIHByb3BlcnRpZXM9c2V0dGluZ3MucHJvcGVydGllczt2YXIgbGVuZ3RoPTA7aWYodHlwZW9mIGlkIT09XCJudW1iZXJcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgbWVzc2FnZUlkXCIpKTtyZXR1cm4gZmFsc2V9ZWxzZXtsZW5ndGgrPTJ9aWYodHlwZW9mIHVuc3Vicz09PVwib2JqZWN0XCImJnVuc3Vicy5sZW5ndGgpe2Zvcih2YXIgaT0wO2k8dW5zdWJzLmxlbmd0aDtpKz0xKXtpZih0eXBlb2YgdW5zdWJzW2ldIT09XCJzdHJpbmdcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgdW5zdWJzY3JpcHRpb25zXCIpKTtyZXR1cm4gZmFsc2V9bGVuZ3RoKz1CdWZmZXIuYnl0ZUxlbmd0aCh1bnN1YnNbaV0pKzJ9fWVsc2V7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgdW5zdWJzY3JpcHRpb25zXCIpKTtyZXR1cm4gZmFsc2V9dmFyIHByb3BlcnRpZXNEYXRhPW51bGw7aWYodmVyc2lvbj09PTUpe3Byb3BlcnRpZXNEYXRhPWdldFByb3BlcnRpZXMoc3RyZWFtLHByb3BlcnRpZXMpO2xlbmd0aCs9cHJvcGVydGllc0RhdGEubGVuZ3RofXN0cmVhbS53cml0ZShwcm90b2NvbC5VTlNVQlNDUklCRV9IRUFERVJbMV1bZHVwPzE6MF1bMF0pO3dyaXRlVmFyQnl0ZUludChzdHJlYW0sbGVuZ3RoKTt3cml0ZU51bWJlcihzdHJlYW0saWQpO2lmKHByb3BlcnRpZXNEYXRhIT09bnVsbCl7cHJvcGVydGllc0RhdGEud3JpdGUoKX12YXIgcmVzdWx0PXRydWU7Zm9yKHZhciBqPTA7ajx1bnN1YnMubGVuZ3RoO2orKyl7cmVzdWx0PXdyaXRlU3RyaW5nKHN0cmVhbSx1bnN1YnNbal0pfXJldHVybiByZXN1bHR9ZnVuY3Rpb24gdW5zdWJhY2socGFja2V0LHN0cmVhbSxvcHRzKXt2YXIgdmVyc2lvbj1vcHRzP29wdHMucHJvdG9jb2xWZXJzaW9uOjQ7dmFyIHNldHRpbmdzPXBhY2tldHx8e307dmFyIGlkPXNldHRpbmdzLm1lc3NhZ2VJZDt2YXIgZHVwPXNldHRpbmdzLmR1cD9wcm90b2NvbC5EVVBfTUFTSzowO3ZhciBncmFudGVkPXNldHRpbmdzLmdyYW50ZWQ7dmFyIHByb3BlcnRpZXM9c2V0dGluZ3MucHJvcGVydGllczt2YXIgdHlwZT1zZXR0aW5ncy5jbWQ7dmFyIHFvcz0wO3ZhciBsZW5ndGg9MjtpZih0eXBlb2YgaWQhPT1cIm51bWJlclwiKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCBtZXNzYWdlSWRcIikpO3JldHVybiBmYWxzZX1pZih2ZXJzaW9uPT09NSl7aWYodHlwZW9mIGdyYW50ZWQ9PT1cIm9iamVjdFwiJiZncmFudGVkLmxlbmd0aCl7Zm9yKHZhciBpPTA7aTxncmFudGVkLmxlbmd0aDtpKz0xKXtpZih0eXBlb2YgZ3JhbnRlZFtpXSE9PVwibnVtYmVyXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHFvcyB2ZWN0b3JcIikpO3JldHVybiBmYWxzZX1sZW5ndGgrPTF9fWVsc2V7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgcW9zIHZlY3RvclwiKSk7cmV0dXJuIGZhbHNlfX12YXIgcHJvcGVydGllc0RhdGE9bnVsbDtpZih2ZXJzaW9uPT09NSl7cHJvcGVydGllc0RhdGE9Z2V0UHJvcGVydGllc0J5TWF4aW11bVBhY2tldFNpemUoc3RyZWFtLHByb3BlcnRpZXMsb3B0cyxsZW5ndGgpO2lmKCFwcm9wZXJ0aWVzRGF0YSl7cmV0dXJuIGZhbHNlfWxlbmd0aCs9cHJvcGVydGllc0RhdGEubGVuZ3RofXN0cmVhbS53cml0ZShwcm90b2NvbC5BQ0tTW3R5cGVdW3Fvc11bZHVwXVswXSk7d3JpdGVWYXJCeXRlSW50KHN0cmVhbSxsZW5ndGgpO3dyaXRlTnVtYmVyKHN0cmVhbSxpZCk7aWYocHJvcGVydGllc0RhdGEhPT1udWxsKXtwcm9wZXJ0aWVzRGF0YS53cml0ZSgpfWlmKHZlcnNpb249PT01KXtzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oZ3JhbnRlZCkpfXJldHVybiB0cnVlfWZ1bmN0aW9uIGVtcHR5UGFja2V0KHBhY2tldCxzdHJlYW0sb3B0cyl7cmV0dXJuIHN0cmVhbS53cml0ZShwcm90b2NvbC5FTVBUWVtwYWNrZXQuY21kXSl9ZnVuY3Rpb24gZGlzY29ubmVjdChwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciB2ZXJzaW9uPW9wdHM/b3B0cy5wcm90b2NvbFZlcnNpb246NDt2YXIgc2V0dGluZ3M9cGFja2V0fHx7fTt2YXIgcmVhc29uQ29kZT1zZXR0aW5ncy5yZWFzb25Db2RlO3ZhciBwcm9wZXJ0aWVzPXNldHRpbmdzLnByb3BlcnRpZXM7dmFyIGxlbmd0aD12ZXJzaW9uPT09NT8xOjA7dmFyIHByb3BlcnRpZXNEYXRhPW51bGw7aWYodmVyc2lvbj09PTUpe3Byb3BlcnRpZXNEYXRhPWdldFByb3BlcnRpZXNCeU1heGltdW1QYWNrZXRTaXplKHN0cmVhbSxwcm9wZXJ0aWVzLG9wdHMsbGVuZ3RoKTtpZighcHJvcGVydGllc0RhdGEpe3JldHVybiBmYWxzZX1sZW5ndGgrPXByb3BlcnRpZXNEYXRhLmxlbmd0aH1zdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3Byb3RvY29sLmNvZGVzW1wiZGlzY29ubmVjdFwiXTw8NF0pKTt3cml0ZVZhckJ5dGVJbnQoc3RyZWFtLGxlbmd0aCk7aWYodmVyc2lvbj09PTUpe3N0cmVhbS53cml0ZShCdWZmZXIuZnJvbShbcmVhc29uQ29kZV0pKX1pZihwcm9wZXJ0aWVzRGF0YSE9PW51bGwpe3Byb3BlcnRpZXNEYXRhLndyaXRlKCl9cmV0dXJuIHRydWV9ZnVuY3Rpb24gYXV0aChwYWNrZXQsc3RyZWFtLG9wdHMpe3ZhciB2ZXJzaW9uPW9wdHM/b3B0cy5wcm90b2NvbFZlcnNpb246NDt2YXIgc2V0dGluZ3M9cGFja2V0fHx7fTt2YXIgcmVhc29uQ29kZT1zZXR0aW5ncy5yZWFzb25Db2RlO3ZhciBwcm9wZXJ0aWVzPXNldHRpbmdzLnByb3BlcnRpZXM7dmFyIGxlbmd0aD12ZXJzaW9uPT09NT8xOjA7aWYodmVyc2lvbiE9PTUpc3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgbXF0dCB2ZXJzaW9uIGZvciBhdXRoIHBhY2tldFwiKSk7dmFyIHByb3BlcnRpZXNEYXRhPWdldFByb3BlcnRpZXNCeU1heGltdW1QYWNrZXRTaXplKHN0cmVhbSxwcm9wZXJ0aWVzLG9wdHMsbGVuZ3RoKTtpZighcHJvcGVydGllc0RhdGEpe3JldHVybiBmYWxzZX1sZW5ndGgrPXByb3BlcnRpZXNEYXRhLmxlbmd0aDtzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3Byb3RvY29sLmNvZGVzW1wiYXV0aFwiXTw8NF0pKTt3cml0ZVZhckJ5dGVJbnQoc3RyZWFtLGxlbmd0aCk7c3RyZWFtLndyaXRlKEJ1ZmZlci5mcm9tKFtyZWFzb25Db2RlXSkpO2lmKHByb3BlcnRpZXNEYXRhIT09bnVsbCl7cHJvcGVydGllc0RhdGEud3JpdGUoKX1yZXR1cm4gdHJ1ZX12YXIgdmFyQnl0ZUludENhY2hlPXt9O2Z1bmN0aW9uIHdyaXRlVmFyQnl0ZUludChzdHJlYW0sbnVtKXt2YXIgYnVmZmVyPXZhckJ5dGVJbnRDYWNoZVtudW1dO2lmKCFidWZmZXIpe2J1ZmZlcj1nZW5CdWZWYXJpYWJsZUJ5dGVJbnQobnVtKS5kYXRhO2lmKG51bTwxNjM4NCl2YXJCeXRlSW50Q2FjaGVbbnVtXT1idWZmZXJ9c3RyZWFtLndyaXRlKGJ1ZmZlcil9ZnVuY3Rpb24gd3JpdGVTdHJpbmcoc3RyZWFtLHN0cmluZyl7dmFyIHN0cmxlbj1CdWZmZXIuYnl0ZUxlbmd0aChzdHJpbmcpO3dyaXRlTnVtYmVyKHN0cmVhbSxzdHJsZW4pO3N0cmVhbS53cml0ZShzdHJpbmcsXCJ1dGY4XCIpfWZ1bmN0aW9uIHdyaXRlU3RyaW5nUGFpcihzdHJlYW0sbmFtZSx2YWx1ZSl7d3JpdGVTdHJpbmcoc3RyZWFtLG5hbWUpO3dyaXRlU3RyaW5nKHN0cmVhbSx2YWx1ZSl9ZnVuY3Rpb24gd3JpdGVOdW1iZXJDYWNoZWQoc3RyZWFtLG51bWJlcil7cmV0dXJuIHN0cmVhbS53cml0ZShudW1DYWNoZVtudW1iZXJdKX1mdW5jdGlvbiB3cml0ZU51bWJlckdlbmVyYXRlZChzdHJlYW0sbnVtYmVyKXtyZXR1cm4gc3RyZWFtLndyaXRlKGdlbmVyYXRlTnVtYmVyKG51bWJlcikpfWZ1bmN0aW9uIHdyaXRlNEJ5dGVOdW1iZXIoc3RyZWFtLG51bWJlcil7cmV0dXJuIHN0cmVhbS53cml0ZShnZW5lcmF0ZTRCeXRlQnVmZmVyKG51bWJlcikpfWZ1bmN0aW9uIHdyaXRlU3RyaW5nT3JCdWZmZXIoc3RyZWFtLHRvV3JpdGUpe2lmKHR5cGVvZiB0b1dyaXRlPT09XCJzdHJpbmdcIil7d3JpdGVTdHJpbmcoc3RyZWFtLHRvV3JpdGUpfWVsc2UgaWYodG9Xcml0ZSl7d3JpdGVOdW1iZXIoc3RyZWFtLHRvV3JpdGUubGVuZ3RoKTtzdHJlYW0ud3JpdGUodG9Xcml0ZSl9ZWxzZSB3cml0ZU51bWJlcihzdHJlYW0sMCl9ZnVuY3Rpb24gZ2V0UHJvcGVydGllcyhzdHJlYW0scHJvcGVydGllcyl7aWYodHlwZW9mIHByb3BlcnRpZXMhPT1cIm9iamVjdFwifHxwcm9wZXJ0aWVzLmxlbmd0aCE9bnVsbCl7cmV0dXJue2xlbmd0aDoxLHdyaXRlOmZ1bmN0aW9uKCl7d3JpdGVQcm9wZXJ0aWVzKHN0cmVhbSx7fSwwKX19fXZhciBwcm9wZXJ0aWVzTGVuZ3RoPTA7ZnVuY3Rpb24gZ2V0TGVuZ3RoUHJvcGVydHkobmFtZSl7dmFyIHR5cGU9cHJvdG9jb2wucHJvcGVydGllc1R5cGVzW25hbWVdO3ZhciB2YWx1ZT1wcm9wZXJ0aWVzW25hbWVdO3ZhciBsZW5ndGg9MDtzd2l0Y2godHlwZSl7Y2FzZVwiYnl0ZVwiOntpZih0eXBlb2YgdmFsdWUhPT1cImJvb2xlYW5cIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgXCIrbmFtZSkpO3JldHVybiBmYWxzZX1sZW5ndGgrPTErMTticmVha31jYXNlXCJpbnQ4XCI6e2lmKHR5cGVvZiB2YWx1ZSE9PVwibnVtYmVyXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIFwiK25hbWUpKTtyZXR1cm4gZmFsc2V9bGVuZ3RoKz0xKzE7YnJlYWt9Y2FzZVwiYmluYXJ5XCI6e2lmKHZhbHVlJiZ2YWx1ZT09PW51bGwpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIFwiK25hbWUpKTtyZXR1cm4gZmFsc2V9bGVuZ3RoKz0xK0J1ZmZlci5ieXRlTGVuZ3RoKHZhbHVlKSsyO2JyZWFrfWNhc2VcImludDE2XCI6e2lmKHR5cGVvZiB2YWx1ZSE9PVwibnVtYmVyXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIFwiK25hbWUpKTtyZXR1cm4gZmFsc2V9bGVuZ3RoKz0xKzI7YnJlYWt9Y2FzZVwiaW50MzJcIjp7aWYodHlwZW9mIHZhbHVlIT09XCJudW1iZXJcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgXCIrbmFtZSkpO3JldHVybiBmYWxzZX1sZW5ndGgrPTErNDticmVha31jYXNlXCJ2YXJcIjp7aWYodHlwZW9mIHZhbHVlIT09XCJudW1iZXJcIil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkludmFsaWQgXCIrbmFtZSkpO3JldHVybiBmYWxzZX1sZW5ndGgrPTErZ2VuQnVmVmFyaWFibGVCeXRlSW50KHZhbHVlKS5sZW5ndGg7YnJlYWt9Y2FzZVwic3RyaW5nXCI6e2lmKHR5cGVvZiB2YWx1ZSE9PVwic3RyaW5nXCIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIFwiK25hbWUpKTtyZXR1cm4gZmFsc2V9bGVuZ3RoKz0xKzIrQnVmZmVyLmJ5dGVMZW5ndGgodmFsdWUudG9TdHJpbmcoKSk7YnJlYWt9Y2FzZVwicGFpclwiOntpZih0eXBlb2YgdmFsdWUhPT1cIm9iamVjdFwiKXtzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCBcIituYW1lKSk7cmV0dXJuIGZhbHNlfWxlbmd0aCs9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModmFsdWUpLnJlZHVjZShmdW5jdGlvbihyZXN1bHQsbmFtZSl7cmVzdWx0Kz0xKzIrQnVmZmVyLmJ5dGVMZW5ndGgobmFtZS50b1N0cmluZygpKSsyK0J1ZmZlci5ieXRlTGVuZ3RoKHZhbHVlW25hbWVdLnRvU3RyaW5nKCkpO3JldHVybiByZXN1bHR9LDApO2JyZWFrfWRlZmF1bHQ6e3N0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3BlcnR5IFwiK25hbWUpKTtyZXR1cm4gZmFsc2V9fXJldHVybiBsZW5ndGh9aWYocHJvcGVydGllcyl7Zm9yKHZhciBwcm9wTmFtZSBpbiBwcm9wZXJ0aWVzKXt2YXIgcHJvcExlbmd0aD1nZXRMZW5ndGhQcm9wZXJ0eShwcm9wTmFtZSk7aWYoIXByb3BMZW5ndGgpcmV0dXJuIGZhbHNlO3Byb3BlcnRpZXNMZW5ndGgrPXByb3BMZW5ndGh9fXZhciBwcm9wZXJ0aWVzTGVuZ3RoTGVuZ3RoPWdlbkJ1ZlZhcmlhYmxlQnl0ZUludChwcm9wZXJ0aWVzTGVuZ3RoKS5sZW5ndGg7cmV0dXJue2xlbmd0aDpwcm9wZXJ0aWVzTGVuZ3RoTGVuZ3RoK3Byb3BlcnRpZXNMZW5ndGgsd3JpdGU6ZnVuY3Rpb24oKXt3cml0ZVByb3BlcnRpZXMoc3RyZWFtLHByb3BlcnRpZXMscHJvcGVydGllc0xlbmd0aCl9fX1mdW5jdGlvbiBnZXRQcm9wZXJ0aWVzQnlNYXhpbXVtUGFja2V0U2l6ZShzdHJlYW0scHJvcGVydGllcyxvcHRzLGxlbmd0aCl7dmFyIG1heUVtcHR5UHJvcHM9W1wicmVhc29uU3RyaW5nXCIsXCJ1c2VyUHJvcGVydGllc1wiXTt2YXIgbWF4aW11bVBhY2tldFNpemU9b3B0cyYmb3B0cy5wcm9wZXJ0aWVzJiZvcHRzLnByb3BlcnRpZXMubWF4aW11bVBhY2tldFNpemU/b3B0cy5wcm9wZXJ0aWVzLm1heGltdW1QYWNrZXRTaXplOjA7dmFyIHByb3BlcnRpZXNEYXRhPWdldFByb3BlcnRpZXMoc3RyZWFtLHByb3BlcnRpZXMpO2lmKG1heGltdW1QYWNrZXRTaXplKXt3aGlsZShsZW5ndGgrcHJvcGVydGllc0RhdGEubGVuZ3RoPm1heGltdW1QYWNrZXRTaXplKXt2YXIgY3VycmVudE1heUVtcHR5UHJvcD1tYXlFbXB0eVByb3BzLnNoaWZ0KCk7aWYoY3VycmVudE1heUVtcHR5UHJvcCYmcHJvcGVydGllc1tjdXJyZW50TWF5RW1wdHlQcm9wXSl7ZGVsZXRlIHByb3BlcnRpZXNbY3VycmVudE1heUVtcHR5UHJvcF07cHJvcGVydGllc0RhdGE9Z2V0UHJvcGVydGllcyhzdHJlYW0scHJvcGVydGllcyl9ZWxzZXtyZXR1cm4gZmFsc2V9fX1yZXR1cm4gcHJvcGVydGllc0RhdGF9ZnVuY3Rpb24gd3JpdGVQcm9wZXJ0aWVzKHN0cmVhbSxwcm9wZXJ0aWVzLHByb3BlcnRpZXNMZW5ndGgpe3dyaXRlVmFyQnl0ZUludChzdHJlYW0scHJvcGVydGllc0xlbmd0aCk7Zm9yKHZhciBwcm9wTmFtZSBpbiBwcm9wZXJ0aWVzKXtpZihwcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BOYW1lKSYmcHJvcGVydGllc1twcm9wTmFtZV0hPT1udWxsKXt2YXIgdmFsdWU9cHJvcGVydGllc1twcm9wTmFtZV07dmFyIHR5cGU9cHJvdG9jb2wucHJvcGVydGllc1R5cGVzW3Byb3BOYW1lXTtzd2l0Y2godHlwZSl7Y2FzZVwiYnl0ZVwiOntzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3Byb3RvY29sLnByb3BlcnRpZXNbcHJvcE5hbWVdXSkpO3N0cmVhbS53cml0ZShCdWZmZXIuZnJvbShbK3ZhbHVlXSkpO2JyZWFrfWNhc2VcImludDhcIjp7c3RyZWFtLndyaXRlKEJ1ZmZlci5mcm9tKFtwcm90b2NvbC5wcm9wZXJ0aWVzW3Byb3BOYW1lXV0pKTtzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3ZhbHVlXSkpO2JyZWFrfWNhc2VcImJpbmFyeVwiOntzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3Byb3RvY29sLnByb3BlcnRpZXNbcHJvcE5hbWVdXSkpO3dyaXRlU3RyaW5nT3JCdWZmZXIoc3RyZWFtLHZhbHVlKTticmVha31jYXNlXCJpbnQxNlwiOntzdHJlYW0ud3JpdGUoQnVmZmVyLmZyb20oW3Byb3RvY29sLnByb3BlcnRpZXNbcHJvcE5hbWVdXSkpO3dyaXRlTnVtYmVyKHN0cmVhbSx2YWx1ZSk7YnJlYWt9Y2FzZVwiaW50MzJcIjp7c3RyZWFtLndyaXRlKEJ1ZmZlci5mcm9tKFtwcm90b2NvbC5wcm9wZXJ0aWVzW3Byb3BOYW1lXV0pKTt3cml0ZTRCeXRlTnVtYmVyKHN0cmVhbSx2YWx1ZSk7YnJlYWt9Y2FzZVwidmFyXCI6e3N0cmVhbS53cml0ZShCdWZmZXIuZnJvbShbcHJvdG9jb2wucHJvcGVydGllc1twcm9wTmFtZV1dKSk7d3JpdGVWYXJCeXRlSW50KHN0cmVhbSx2YWx1ZSk7YnJlYWt9Y2FzZVwic3RyaW5nXCI6e3N0cmVhbS53cml0ZShCdWZmZXIuZnJvbShbcHJvdG9jb2wucHJvcGVydGllc1twcm9wTmFtZV1dKSk7d3JpdGVTdHJpbmcoc3RyZWFtLHZhbHVlKTticmVha31jYXNlXCJwYWlyXCI6e09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHZhbHVlKS5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpe3N0cmVhbS53cml0ZShCdWZmZXIuZnJvbShbcHJvdG9jb2wucHJvcGVydGllc1twcm9wTmFtZV1dKSk7d3JpdGVTdHJpbmdQYWlyKHN0cmVhbSxuYW1lLnRvU3RyaW5nKCksdmFsdWVbbmFtZV0udG9TdHJpbmcoKSl9KTticmVha31kZWZhdWx0OntzdHJlYW0uZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wZXJ0eSBcIitwcm9wTmFtZSkpO3JldHVybiBmYWxzZX19fX19ZnVuY3Rpb24gYnl0ZUxlbmd0aChidWZPclN0cmluZyl7aWYoIWJ1Zk9yU3RyaW5nKXJldHVybiAwO2Vsc2UgaWYoYnVmT3JTdHJpbmcgaW5zdGFuY2VvZiBCdWZmZXIpcmV0dXJuIGJ1Zk9yU3RyaW5nLmxlbmd0aDtlbHNlIHJldHVybiBCdWZmZXIuYnl0ZUxlbmd0aChidWZPclN0cmluZyl9ZnVuY3Rpb24gaXNTdHJpbmdPckJ1ZmZlcihmaWVsZCl7cmV0dXJuIHR5cGVvZiBmaWVsZD09PVwic3RyaW5nXCJ8fGZpZWxkIGluc3RhbmNlb2YgQnVmZmVyfW1vZHVsZS5leHBvcnRzPWdlbmVyYXRlfSx7XCIuL2NvbnN0YW50c1wiOjgyLFwiLi9udW1iZXJzXCI6ODYsXCJwcm9jZXNzLW5leHRpY2stYXJnc1wiOjkxLFwic2FmZS1idWZmZXJcIjoxMTB9XSw5MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHdyYXBweT1yZXF1aXJlKFwid3JhcHB5XCIpO21vZHVsZS5leHBvcnRzPXdyYXBweShvbmNlKTttb2R1bGUuZXhwb3J0cy5zdHJpY3Q9d3JhcHB5KG9uY2VTdHJpY3QpO29uY2UucHJvdG89b25jZShmdW5jdGlvbigpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShGdW5jdGlvbi5wcm90b3R5cGUsXCJvbmNlXCIse3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIG9uY2UodGhpcyl9LGNvbmZpZ3VyYWJsZTp0cnVlfSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KEZ1bmN0aW9uLnByb3RvdHlwZSxcIm9uY2VTdHJpY3RcIix7dmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gb25jZVN0cmljdCh0aGlzKX0sY29uZmlndXJhYmxlOnRydWV9KX0pO2Z1bmN0aW9uIG9uY2UoZm4pe3ZhciBmPWZ1bmN0aW9uKCl7aWYoZi5jYWxsZWQpcmV0dXJuIGYudmFsdWU7Zi5jYWxsZWQ9dHJ1ZTtyZXR1cm4gZi52YWx1ZT1mbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O2YuY2FsbGVkPWZhbHNlO3JldHVybiBmfWZ1bmN0aW9uIG9uY2VTdHJpY3QoZm4pe3ZhciBmPWZ1bmN0aW9uKCl7aWYoZi5jYWxsZWQpdGhyb3cgbmV3IEVycm9yKGYub25jZUVycm9yKTtmLmNhbGxlZD10cnVlO3JldHVybiBmLnZhbHVlPWZuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07dmFyIG5hbWU9Zm4ubmFtZXx8XCJGdW5jdGlvbiB3cmFwcGVkIHdpdGggYG9uY2VgXCI7Zi5vbmNlRXJyb3I9bmFtZStcIiBzaG91bGRuJ3QgYmUgY2FsbGVkIG1vcmUgdGhhbiBvbmNlXCI7Zi5jYWxsZWQ9ZmFsc2U7cmV0dXJuIGZ9fSx7d3JhcHB5OjEyMH1dLDkxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24ocHJvY2Vzcyl7XCJ1c2Ugc3RyaWN0XCI7aWYoIXByb2Nlc3MudmVyc2lvbnx8cHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoXCJ2MC5cIik9PT0wfHxwcm9jZXNzLnZlcnNpb24uaW5kZXhPZihcInYxLlwiKT09PTAmJnByb2Nlc3MudmVyc2lvbi5pbmRleE9mKFwidjEuOC5cIikhPT0wKXttb2R1bGUuZXhwb3J0cz17bmV4dFRpY2s6bmV4dFRpY2t9fWVsc2V7bW9kdWxlLmV4cG9ydHM9cHJvY2Vzc31mdW5jdGlvbiBuZXh0VGljayhmbixhcmcxLGFyZzIsYXJnMyl7aWYodHlwZW9mIGZuIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdcImNhbGxiYWNrXCIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyl9dmFyIGxlbj1hcmd1bWVudHMubGVuZ3RoO3ZhciBhcmdzLGk7c3dpdGNoKGxlbil7Y2FzZSAwOmNhc2UgMTpyZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmbik7Y2FzZSAyOnJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja09uZSgpe2ZuLmNhbGwobnVsbCxhcmcxKX0pO2Nhc2UgMzpyZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUd28oKXtmbi5jYWxsKG51bGwsYXJnMSxhcmcyKX0pO2Nhc2UgNDpyZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUaHJlZSgpe2ZuLmNhbGwobnVsbCxhcmcxLGFyZzIsYXJnMyl9KTtkZWZhdWx0OmFyZ3M9bmV3IEFycmF5KGxlbi0xKTtpPTA7d2hpbGUoaTxhcmdzLmxlbmd0aCl7YXJnc1tpKytdPWFyZ3VtZW50c1tpXX1yZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2soKXtmbi5hcHBseShudWxsLGFyZ3MpfSl9fX0pLmNhbGwodGhpcyxyZXF1aXJlKFwiX3Byb2Nlc3NcIikpfSx7X3Byb2Nlc3M6OTJ9XSw5MjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHByb2Nlc3M9bW9kdWxlLmV4cG9ydHM9e307dmFyIGNhY2hlZFNldFRpbWVvdXQ7dmFyIGNhY2hlZENsZWFyVGltZW91dDtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7Y2FjaGVkU2V0VGltZW91dD1zZXRUaW1lb3V0fWVsc2V7Y2FjaGVkU2V0VGltZW91dD1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtjYWNoZWRTZXRUaW1lb3V0PWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe2NhY2hlZENsZWFyVGltZW91dD1jbGVhclRpbWVvdXR9ZWxzZXtjYWNoZWRDbGVhclRpbWVvdXQ9ZGVmYXVsdENsZWFyVGltZW91dH19Y2F0Y2goZSl7Y2FjaGVkQ2xlYXJUaW1lb3V0PWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGZ1bil7aWYoY2FjaGVkU2V0VGltZW91dD09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGZ1biwwKX1pZigoY2FjaGVkU2V0VGltZW91dD09PWRlZmF1bHRTZXRUaW1vdXR8fCFjYWNoZWRTZXRUaW1lb3V0KSYmc2V0VGltZW91dCl7Y2FjaGVkU2V0VGltZW91dD1zZXRUaW1lb3V0O3JldHVybiBzZXRUaW1lb3V0KGZ1biwwKX10cnl7cmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLDApfWNhdGNoKGUpe3RyeXtyZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsZnVuLDApfWNhdGNoKGUpe3JldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcyxmdW4sMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKXtpZihjYWNoZWRDbGVhclRpbWVvdXQ9PT1jbGVhclRpbWVvdXQpe3JldHVybiBjbGVhclRpbWVvdXQobWFya2VyKX1pZigoY2FjaGVkQ2xlYXJUaW1lb3V0PT09ZGVmYXVsdENsZWFyVGltZW91dHx8IWNhY2hlZENsZWFyVGltZW91dCkmJmNsZWFyVGltZW91dCl7Y2FjaGVkQ2xlYXJUaW1lb3V0PWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcil9dHJ5e3JldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKX1jYXRjaChlKXt0cnl7cmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsbWFya2VyKX1jYXRjaChlKXtyZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcyxtYXJrZXIpfX19dmFyIHF1ZXVlPVtdO3ZhciBkcmFpbmluZz1mYWxzZTt2YXIgY3VycmVudFF1ZXVlO3ZhciBxdWV1ZUluZGV4PS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFkcmFpbmluZ3x8IWN1cnJlbnRRdWV1ZSl7cmV0dXJufWRyYWluaW5nPWZhbHNlO2lmKGN1cnJlbnRRdWV1ZS5sZW5ndGgpe3F1ZXVlPWN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpfWVsc2V7cXVldWVJbmRleD0tMX1pZihxdWV1ZS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKGRyYWluaW5nKXtyZXR1cm59dmFyIHRpbWVvdXQ9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO2RyYWluaW5nPXRydWU7dmFyIGxlbj1xdWV1ZS5sZW5ndGg7d2hpbGUobGVuKXtjdXJyZW50UXVldWU9cXVldWU7cXVldWU9W107d2hpbGUoKytxdWV1ZUluZGV4PGxlbil7aWYoY3VycmVudFF1ZXVlKXtjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCl9fXF1ZXVlSW5kZXg9LTE7bGVuPXF1ZXVlLmxlbmd0aH1jdXJyZW50UXVldWU9bnVsbDtkcmFpbmluZz1mYWxzZTtydW5DbGVhclRpbWVvdXQodGltZW91dCl9cHJvY2Vzcy5uZXh0VGljaz1mdW5jdGlvbihmdW4pe3ZhciBhcmdzPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7YXJnc1tpLTFdPWFyZ3VtZW50c1tpXX19cXVldWUucHVzaChuZXcgSXRlbShmdW4sYXJncykpO2lmKHF1ZXVlLmxlbmd0aD09PTEmJiFkcmFpbmluZyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZnVuLGFycmF5KXt0aGlzLmZ1bj1mdW47dGhpcy5hcnJheT1hcnJheX1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTtwcm9jZXNzLnRpdGxlPVwiYnJvd3NlclwiO3Byb2Nlc3MuYnJvd3Nlcj10cnVlO3Byb2Nlc3MuZW52PXt9O3Byb2Nlc3MuYXJndj1bXTtwcm9jZXNzLnZlcnNpb249XCJcIjtwcm9jZXNzLnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9cHJvY2Vzcy5vbj1ub29wO3Byb2Nlc3MuYWRkTGlzdGVuZXI9bm9vcDtwcm9jZXNzLm9uY2U9bm9vcDtwcm9jZXNzLm9mZj1ub29wO3Byb2Nlc3MucmVtb3ZlTGlzdGVuZXI9bm9vcDtwcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3Byb2Nlc3MuZW1pdD1ub29wO3Byb2Nlc3MucHJlcGVuZExpc3RlbmVyPW5vb3A7cHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7cHJvY2Vzcy5saXN0ZW5lcnM9ZnVuY3Rpb24obmFtZSl7cmV0dXJuW119O3Byb2Nlc3MuYmluZGluZz1mdW5jdGlvbihuYW1lKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07cHJvY2Vzcy5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07cHJvY2Vzcy5jaGRpcj1mdW5jdGlvbihkaXIpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX07cHJvY2Vzcy51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX0se31dLDkzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24oZ2xvYmFsKXsoZnVuY3Rpb24ocm9vdCl7dmFyIGZyZWVFeHBvcnRzPXR5cGVvZiBleHBvcnRzPT1cIm9iamVjdFwiJiZleHBvcnRzJiYhZXhwb3J0cy5ub2RlVHlwZSYmZXhwb3J0czt2YXIgZnJlZU1vZHVsZT10eXBlb2YgbW9kdWxlPT1cIm9iamVjdFwiJiZtb2R1bGUmJiFtb2R1bGUubm9kZVR5cGUmJm1vZHVsZTt2YXIgZnJlZUdsb2JhbD10eXBlb2YgZ2xvYmFsPT1cIm9iamVjdFwiJiZnbG9iYWw7aWYoZnJlZUdsb2JhbC5nbG9iYWw9PT1mcmVlR2xvYmFsfHxmcmVlR2xvYmFsLndpbmRvdz09PWZyZWVHbG9iYWx8fGZyZWVHbG9iYWwuc2VsZj09PWZyZWVHbG9iYWwpe3Jvb3Q9ZnJlZUdsb2JhbH12YXIgcHVueWNvZGUsbWF4SW50PTIxNDc0ODM2NDcsYmFzZT0zNix0TWluPTEsdE1heD0yNixza2V3PTM4LGRhbXA9NzAwLGluaXRpYWxCaWFzPTcyLGluaXRpYWxOPTEyOCxkZWxpbWl0ZXI9XCItXCIscmVnZXhQdW55Y29kZT0vXnhuLS0vLHJlZ2V4Tm9uQVNDSUk9L1teXFx4MjAtXFx4N0VdLyxyZWdleFNlcGFyYXRvcnM9L1tcXHgyRVxcdTMwMDJcXHVGRjBFXFx1RkY2MV0vZyxlcnJvcnM9e292ZXJmbG93OlwiT3ZlcmZsb3c6IGlucHV0IG5lZWRzIHdpZGVyIGludGVnZXJzIHRvIHByb2Nlc3NcIixcIm5vdC1iYXNpY1wiOlwiSWxsZWdhbCBpbnB1dCA+PSAweDgwIChub3QgYSBiYXNpYyBjb2RlIHBvaW50KVwiLFwiaW52YWxpZC1pbnB1dFwiOlwiSW52YWxpZCBpbnB1dFwifSxiYXNlTWludXNUTWluPWJhc2UtdE1pbixmbG9vcj1NYXRoLmZsb29yLHN0cmluZ0Zyb21DaGFyQ29kZT1TdHJpbmcuZnJvbUNoYXJDb2RlLGtleTtmdW5jdGlvbiBlcnJvcih0eXBlKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihlcnJvcnNbdHlwZV0pfWZ1bmN0aW9uIG1hcChhcnJheSxmbil7dmFyIGxlbmd0aD1hcnJheS5sZW5ndGg7dmFyIHJlc3VsdD1bXTt3aGlsZShsZW5ndGgtLSl7cmVzdWx0W2xlbmd0aF09Zm4oYXJyYXlbbGVuZ3RoXSl9cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiBtYXBEb21haW4oc3RyaW5nLGZuKXt2YXIgcGFydHM9c3RyaW5nLnNwbGl0KFwiQFwiKTt2YXIgcmVzdWx0PVwiXCI7aWYocGFydHMubGVuZ3RoPjEpe3Jlc3VsdD1wYXJ0c1swXStcIkBcIjtzdHJpbmc9cGFydHNbMV19c3RyaW5nPXN0cmluZy5yZXBsYWNlKHJlZ2V4U2VwYXJhdG9ycyxcIi5cIik7dmFyIGxhYmVscz1zdHJpbmcuc3BsaXQoXCIuXCIpO3ZhciBlbmNvZGVkPW1hcChsYWJlbHMsZm4pLmpvaW4oXCIuXCIpO3JldHVybiByZXN1bHQrZW5jb2RlZH1mdW5jdGlvbiB1Y3MyZGVjb2RlKHN0cmluZyl7dmFyIG91dHB1dD1bXSxjb3VudGVyPTAsbGVuZ3RoPXN0cmluZy5sZW5ndGgsdmFsdWUsZXh0cmE7d2hpbGUoY291bnRlcjxsZW5ndGgpe3ZhbHVlPXN0cmluZy5jaGFyQ29kZUF0KGNvdW50ZXIrKyk7aWYodmFsdWU+PTU1Mjk2JiZ2YWx1ZTw9NTYzMTkmJmNvdW50ZXI8bGVuZ3RoKXtleHRyYT1zdHJpbmcuY2hhckNvZGVBdChjb3VudGVyKyspO2lmKChleHRyYSY2NDUxMik9PTU2MzIwKXtvdXRwdXQucHVzaCgoKHZhbHVlJjEwMjMpPDwxMCkrKGV4dHJhJjEwMjMpKzY1NTM2KX1lbHNle291dHB1dC5wdXNoKHZhbHVlKTtjb3VudGVyLS19fWVsc2V7b3V0cHV0LnB1c2godmFsdWUpfX1yZXR1cm4gb3V0cHV0fWZ1bmN0aW9uIHVjczJlbmNvZGUoYXJyYXkpe3JldHVybiBtYXAoYXJyYXksZnVuY3Rpb24odmFsdWUpe3ZhciBvdXRwdXQ9XCJcIjtpZih2YWx1ZT42NTUzNSl7dmFsdWUtPTY1NTM2O291dHB1dCs9c3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlPj4+MTAmMTAyM3w1NTI5Nik7dmFsdWU9NTYzMjB8dmFsdWUmMTAyM31vdXRwdXQrPXN0cmluZ0Zyb21DaGFyQ29kZSh2YWx1ZSk7cmV0dXJuIG91dHB1dH0pLmpvaW4oXCJcIil9ZnVuY3Rpb24gYmFzaWNUb0RpZ2l0KGNvZGVQb2ludCl7aWYoY29kZVBvaW50LTQ4PDEwKXtyZXR1cm4gY29kZVBvaW50LTIyfWlmKGNvZGVQb2ludC02NTwyNil7cmV0dXJuIGNvZGVQb2ludC02NX1pZihjb2RlUG9pbnQtOTc8MjYpe3JldHVybiBjb2RlUG9pbnQtOTd9cmV0dXJuIGJhc2V9ZnVuY3Rpb24gZGlnaXRUb0Jhc2ljKGRpZ2l0LGZsYWcpe3JldHVybiBkaWdpdCsyMis3NSooZGlnaXQ8MjYpLSgoZmxhZyE9MCk8PDUpfWZ1bmN0aW9uIGFkYXB0KGRlbHRhLG51bVBvaW50cyxmaXJzdFRpbWUpe3ZhciBrPTA7ZGVsdGE9Zmlyc3RUaW1lP2Zsb29yKGRlbHRhL2RhbXApOmRlbHRhPj4xO2RlbHRhKz1mbG9vcihkZWx0YS9udW1Qb2ludHMpO2Zvcig7ZGVsdGE+YmFzZU1pbnVzVE1pbip0TWF4Pj4xO2srPWJhc2Upe2RlbHRhPWZsb29yKGRlbHRhL2Jhc2VNaW51c1RNaW4pfXJldHVybiBmbG9vcihrKyhiYXNlTWludXNUTWluKzEpKmRlbHRhLyhkZWx0YStza2V3KSl9ZnVuY3Rpb24gZGVjb2RlKGlucHV0KXt2YXIgb3V0cHV0PVtdLGlucHV0TGVuZ3RoPWlucHV0Lmxlbmd0aCxvdXQsaT0wLG49aW5pdGlhbE4sYmlhcz1pbml0aWFsQmlhcyxiYXNpYyxqLGluZGV4LG9sZGksdyxrLGRpZ2l0LHQsYmFzZU1pbnVzVDtiYXNpYz1pbnB1dC5sYXN0SW5kZXhPZihkZWxpbWl0ZXIpO2lmKGJhc2ljPDApe2Jhc2ljPTB9Zm9yKGo9MDtqPGJhc2ljOysrail7aWYoaW5wdXQuY2hhckNvZGVBdChqKT49MTI4KXtlcnJvcihcIm5vdC1iYXNpY1wiKX1vdXRwdXQucHVzaChpbnB1dC5jaGFyQ29kZUF0KGopKX1mb3IoaW5kZXg9YmFzaWM+MD9iYXNpYysxOjA7aW5kZXg8aW5wdXRMZW5ndGg7KXtmb3Iob2xkaT1pLHc9MSxrPWJhc2U7O2srPWJhc2Upe2lmKGluZGV4Pj1pbnB1dExlbmd0aCl7ZXJyb3IoXCJpbnZhbGlkLWlucHV0XCIpfWRpZ2l0PWJhc2ljVG9EaWdpdChpbnB1dC5jaGFyQ29kZUF0KGluZGV4KyspKTtpZihkaWdpdD49YmFzZXx8ZGlnaXQ+Zmxvb3IoKG1heEludC1pKS93KSl7ZXJyb3IoXCJvdmVyZmxvd1wiKX1pKz1kaWdpdCp3O3Q9azw9Ymlhcz90TWluOms+PWJpYXMrdE1heD90TWF4OmstYmlhcztpZihkaWdpdDx0KXticmVha31iYXNlTWludXNUPWJhc2UtdDtpZih3PmZsb29yKG1heEludC9iYXNlTWludXNUKSl7ZXJyb3IoXCJvdmVyZmxvd1wiKX13Kj1iYXNlTWludXNUfW91dD1vdXRwdXQubGVuZ3RoKzE7Ymlhcz1hZGFwdChpLW9sZGksb3V0LG9sZGk9PTApO2lmKGZsb29yKGkvb3V0KT5tYXhJbnQtbil7ZXJyb3IoXCJvdmVyZmxvd1wiKX1uKz1mbG9vcihpL291dCk7aSU9b3V0O291dHB1dC5zcGxpY2UoaSsrLDAsbil9cmV0dXJuIHVjczJlbmNvZGUob3V0cHV0KX1mdW5jdGlvbiBlbmNvZGUoaW5wdXQpe3ZhciBuLGRlbHRhLGhhbmRsZWRDUENvdW50LGJhc2ljTGVuZ3RoLGJpYXMsaixtLHEsayx0LGN1cnJlbnRWYWx1ZSxvdXRwdXQ9W10saW5wdXRMZW5ndGgsaGFuZGxlZENQQ291bnRQbHVzT25lLGJhc2VNaW51c1QscU1pbnVzVDtpbnB1dD11Y3MyZGVjb2RlKGlucHV0KTtpbnB1dExlbmd0aD1pbnB1dC5sZW5ndGg7bj1pbml0aWFsTjtkZWx0YT0wO2JpYXM9aW5pdGlhbEJpYXM7Zm9yKGo9MDtqPGlucHV0TGVuZ3RoOysrail7Y3VycmVudFZhbHVlPWlucHV0W2pdO2lmKGN1cnJlbnRWYWx1ZTwxMjgpe291dHB1dC5wdXNoKHN0cmluZ0Zyb21DaGFyQ29kZShjdXJyZW50VmFsdWUpKX19aGFuZGxlZENQQ291bnQ9YmFzaWNMZW5ndGg9b3V0cHV0Lmxlbmd0aDtpZihiYXNpY0xlbmd0aCl7b3V0cHV0LnB1c2goZGVsaW1pdGVyKX13aGlsZShoYW5kbGVkQ1BDb3VudDxpbnB1dExlbmd0aCl7Zm9yKG09bWF4SW50LGo9MDtqPGlucHV0TGVuZ3RoOysrail7Y3VycmVudFZhbHVlPWlucHV0W2pdO2lmKGN1cnJlbnRWYWx1ZT49biYmY3VycmVudFZhbHVlPG0pe209Y3VycmVudFZhbHVlfX1oYW5kbGVkQ1BDb3VudFBsdXNPbmU9aGFuZGxlZENQQ291bnQrMTtpZihtLW4+Zmxvb3IoKG1heEludC1kZWx0YSkvaGFuZGxlZENQQ291bnRQbHVzT25lKSl7ZXJyb3IoXCJvdmVyZmxvd1wiKX1kZWx0YSs9KG0tbikqaGFuZGxlZENQQ291bnRQbHVzT25lO249bTtmb3Ioaj0wO2o8aW5wdXRMZW5ndGg7KytqKXtjdXJyZW50VmFsdWU9aW5wdXRbal07aWYoY3VycmVudFZhbHVlPG4mJisrZGVsdGE+bWF4SW50KXtlcnJvcihcIm92ZXJmbG93XCIpfWlmKGN1cnJlbnRWYWx1ZT09bil7Zm9yKHE9ZGVsdGEsaz1iYXNlOztrKz1iYXNlKXt0PWs8PWJpYXM/dE1pbjprPj1iaWFzK3RNYXg/dE1heDprLWJpYXM7aWYocTx0KXticmVha31xTWludXNUPXEtdDtiYXNlTWludXNUPWJhc2UtdDtvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHQrcU1pbnVzVCViYXNlTWludXNULDApKSk7cT1mbG9vcihxTWludXNUL2Jhc2VNaW51c1QpfW91dHB1dC5wdXNoKHN0cmluZ0Zyb21DaGFyQ29kZShkaWdpdFRvQmFzaWMocSwwKSkpO2JpYXM9YWRhcHQoZGVsdGEsaGFuZGxlZENQQ291bnRQbHVzT25lLGhhbmRsZWRDUENvdW50PT1iYXNpY0xlbmd0aCk7ZGVsdGE9MDsrK2hhbmRsZWRDUENvdW50fX0rK2RlbHRhOysrbn1yZXR1cm4gb3V0cHV0LmpvaW4oXCJcIil9ZnVuY3Rpb24gdG9Vbmljb2RlKGlucHV0KXtyZXR1cm4gbWFwRG9tYWluKGlucHV0LGZ1bmN0aW9uKHN0cmluZyl7cmV0dXJuIHJlZ2V4UHVueWNvZGUudGVzdChzdHJpbmcpP2RlY29kZShzdHJpbmcuc2xpY2UoNCkudG9Mb3dlckNhc2UoKSk6c3RyaW5nfSl9ZnVuY3Rpb24gdG9BU0NJSShpbnB1dCl7cmV0dXJuIG1hcERvbWFpbihpbnB1dCxmdW5jdGlvbihzdHJpbmcpe3JldHVybiByZWdleE5vbkFTQ0lJLnRlc3Qoc3RyaW5nKT9cInhuLS1cIitlbmNvZGUoc3RyaW5nKTpzdHJpbmd9KX1wdW55Y29kZT17dmVyc2lvbjpcIjEuNC4xXCIsdWNzMjp7ZGVjb2RlOnVjczJkZWNvZGUsZW5jb2RlOnVjczJlbmNvZGV9LGRlY29kZTpkZWNvZGUsZW5jb2RlOmVuY29kZSx0b0FTQ0lJOnRvQVNDSUksdG9Vbmljb2RlOnRvVW5pY29kZX07aWYodHlwZW9mIGRlZmluZT09XCJmdW5jdGlvblwiJiZ0eXBlb2YgZGVmaW5lLmFtZD09XCJvYmplY3RcIiYmZGVmaW5lLmFtZCl7ZGVmaW5lKFwicHVueWNvZGVcIixmdW5jdGlvbigpe3JldHVybiBwdW55Y29kZX0pfWVsc2UgaWYoZnJlZUV4cG9ydHMmJmZyZWVNb2R1bGUpe2lmKG1vZHVsZS5leHBvcnRzPT1mcmVlRXhwb3J0cyl7ZnJlZU1vZHVsZS5leHBvcnRzPXB1bnljb2RlfWVsc2V7Zm9yKGtleSBpbiBwdW55Y29kZSl7cHVueWNvZGUuaGFzT3duUHJvcGVydHkoa2V5KSYmKGZyZWVFeHBvcnRzW2tleV09cHVueWNvZGVba2V5XSl9fX1lbHNle3Jvb3QucHVueWNvZGU9cHVueWNvZGV9fSkodGhpcyl9KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCE9PVwidW5kZWZpbmVkXCI/Z2xvYmFsOnR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIj9zZWxmOnR5cGVvZiB3aW5kb3chPT1cInVuZGVmaW5lZFwiP3dpbmRvdzp7fSl9LHt9XSw5NDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLHByb3Ape3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLHByb3ApfW1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHFzLHNlcCxlcSxvcHRpb25zKXtzZXA9c2VwfHxcIiZcIjtlcT1lcXx8XCI9XCI7dmFyIG9iaj17fTtpZih0eXBlb2YgcXMhPT1cInN0cmluZ1wifHxxcy5sZW5ndGg9PT0wKXtyZXR1cm4gb2JqfXZhciByZWdleHA9L1xcKy9nO3FzPXFzLnNwbGl0KHNlcCk7dmFyIG1heEtleXM9MWUzO2lmKG9wdGlvbnMmJnR5cGVvZiBvcHRpb25zLm1heEtleXM9PT1cIm51bWJlclwiKXttYXhLZXlzPW9wdGlvbnMubWF4S2V5c312YXIgbGVuPXFzLmxlbmd0aDtpZihtYXhLZXlzPjAmJmxlbj5tYXhLZXlzKXtsZW49bWF4S2V5c31mb3IodmFyIGk9MDtpPGxlbjsrK2kpe3ZhciB4PXFzW2ldLnJlcGxhY2UocmVnZXhwLFwiJTIwXCIpLGlkeD14LmluZGV4T2YoZXEpLGtzdHIsdnN0cixrLHY7aWYoaWR4Pj0wKXtrc3RyPXguc3Vic3RyKDAsaWR4KTt2c3RyPXguc3Vic3RyKGlkeCsxKX1lbHNle2tzdHI9eDt2c3RyPVwiXCJ9az1kZWNvZGVVUklDb21wb25lbnQoa3N0cik7dj1kZWNvZGVVUklDb21wb25lbnQodnN0cik7aWYoIWhhc093blByb3BlcnR5KG9iaixrKSl7b2JqW2tdPXZ9ZWxzZSBpZihpc0FycmF5KG9ialtrXSkpe29ialtrXS5wdXNoKHYpfWVsc2V7b2JqW2tdPVtvYmpba10sdl19fXJldHVybiBvYmp9O3ZhciBpc0FycmF5PUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKHhzKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKT09PVwiW29iamVjdCBBcnJheV1cIn19LHt9XSw5NTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHN0cmluZ2lmeVByaW1pdGl2ZT1mdW5jdGlvbih2KXtzd2l0Y2godHlwZW9mIHYpe2Nhc2VcInN0cmluZ1wiOnJldHVybiB2O2Nhc2VcImJvb2xlYW5cIjpyZXR1cm4gdj9cInRydWVcIjpcImZhbHNlXCI7Y2FzZVwibnVtYmVyXCI6cmV0dXJuIGlzRmluaXRlKHYpP3Y6XCJcIjtkZWZhdWx0OnJldHVyblwiXCJ9fTttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihvYmosc2VwLGVxLG5hbWUpe3NlcD1zZXB8fFwiJlwiO2VxPWVxfHxcIj1cIjtpZihvYmo9PT1udWxsKXtvYmo9dW5kZWZpbmVkfWlmKHR5cGVvZiBvYmo9PT1cIm9iamVjdFwiKXtyZXR1cm4gbWFwKG9iamVjdEtleXMob2JqKSxmdW5jdGlvbihrKXt2YXIga3M9ZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkrZXE7aWYoaXNBcnJheShvYmpba10pKXtyZXR1cm4gbWFwKG9ialtrXSxmdW5jdGlvbih2KXtyZXR1cm4ga3MrZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZSh2KSl9KS5qb2luKHNlcCl9ZWxzZXtyZXR1cm4ga3MrZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKX19KS5qb2luKHNlcCl9aWYoIW5hbWUpcmV0dXJuXCJcIjtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkrZXErZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmopKX07dmFyIGlzQXJyYXk9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oeHMpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpPT09XCJbb2JqZWN0IEFycmF5XVwifTtmdW5jdGlvbiBtYXAoeHMsZil7aWYoeHMubWFwKXJldHVybiB4cy5tYXAoZik7dmFyIHJlcz1bXTtmb3IodmFyIGk9MDtpPHhzLmxlbmd0aDtpKyspe3Jlcy5wdXNoKGYoeHNbaV0saSkpfXJldHVybiByZXN9dmFyIG9iamVjdEtleXM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKG9iail7dmFyIHJlcz1bXTtmb3IodmFyIGtleSBpbiBvYmope2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosa2V5KSlyZXMucHVzaChrZXkpfXJldHVybiByZXN9fSx7fV0sOTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO2V4cG9ydHMuZGVjb2RlPWV4cG9ydHMucGFyc2U9cmVxdWlyZShcIi4vZGVjb2RlXCIpO2V4cG9ydHMuZW5jb2RlPWV4cG9ydHMuc3RyaW5naWZ5PXJlcXVpcmUoXCIuL2VuY29kZVwiKX0se1wiLi9kZWNvZGVcIjo5NCxcIi4vZW5jb2RlXCI6OTV9XSw5NzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vbGliL19zdHJlYW1fZHVwbGV4LmpzXCIpfSx7XCIuL2xpYi9fc3RyZWFtX2R1cGxleC5qc1wiOjk4fV0sOTg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBwbmE9cmVxdWlyZShcInByb2Nlc3MtbmV4dGljay1hcmdzXCIpO3ZhciBvYmplY3RLZXlzPU9iamVjdC5rZXlzfHxmdW5jdGlvbihvYmope3ZhciBrZXlzPVtdO2Zvcih2YXIga2V5IGluIG9iail7a2V5cy5wdXNoKGtleSl9cmV0dXJuIGtleXN9O21vZHVsZS5leHBvcnRzPUR1cGxleDt2YXIgdXRpbD1yZXF1aXJlKFwiY29yZS11dGlsLWlzXCIpO3V0aWwuaW5oZXJpdHM9cmVxdWlyZShcImluaGVyaXRzXCIpO3ZhciBSZWFkYWJsZT1yZXF1aXJlKFwiLi9fc3RyZWFtX3JlYWRhYmxlXCIpO3ZhciBXcml0YWJsZT1yZXF1aXJlKFwiLi9fc3RyZWFtX3dyaXRhYmxlXCIpO3V0aWwuaW5oZXJpdHMoRHVwbGV4LFJlYWRhYmxlKTt7dmFyIGtleXM9b2JqZWN0S2V5cyhXcml0YWJsZS5wcm90b3R5cGUpO2Zvcih2YXIgdj0wO3Y8a2V5cy5sZW5ndGg7disrKXt2YXIgbWV0aG9kPWtleXNbdl07aWYoIUR1cGxleC5wcm90b3R5cGVbbWV0aG9kXSlEdXBsZXgucHJvdG90eXBlW21ldGhvZF09V3JpdGFibGUucHJvdG90eXBlW21ldGhvZF19fWZ1bmN0aW9uIER1cGxleChvcHRpb25zKXtpZighKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKXJldHVybiBuZXcgRHVwbGV4KG9wdGlvbnMpO1JlYWRhYmxlLmNhbGwodGhpcyxvcHRpb25zKTtXcml0YWJsZS5jYWxsKHRoaXMsb3B0aW9ucyk7aWYob3B0aW9ucyYmb3B0aW9ucy5yZWFkYWJsZT09PWZhbHNlKXRoaXMucmVhZGFibGU9ZmFsc2U7aWYob3B0aW9ucyYmb3B0aW9ucy53cml0YWJsZT09PWZhbHNlKXRoaXMud3JpdGFibGU9ZmFsc2U7dGhpcy5hbGxvd0hhbGZPcGVuPXRydWU7aWYob3B0aW9ucyYmb3B0aW9ucy5hbGxvd0hhbGZPcGVuPT09ZmFsc2UpdGhpcy5hbGxvd0hhbGZPcGVuPWZhbHNlO3RoaXMub25jZShcImVuZFwiLG9uZW5kKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSk7ZnVuY3Rpb24gb25lbmQoKXtpZih0aGlzLmFsbG93SGFsZk9wZW58fHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQpcmV0dXJuO3BuYS5uZXh0VGljayhvbkVuZE5ULHRoaXMpfWZ1bmN0aW9uIG9uRW5kTlQoc2VsZil7c2VsZi5lbmQoKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSxcImRlc3Ryb3llZFwiLHtnZXQ6ZnVuY3Rpb24oKXtpZih0aGlzLl9yZWFkYWJsZVN0YXRlPT09dW5kZWZpbmVkfHx0aGlzLl93cml0YWJsZVN0YXRlPT09dW5kZWZpbmVkKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZH0sc2V0OmZ1bmN0aW9uKHZhbHVlKXtpZih0aGlzLl9yZWFkYWJsZVN0YXRlPT09dW5kZWZpbmVkfHx0aGlzLl93cml0YWJsZVN0YXRlPT09dW5kZWZpbmVkKXtyZXR1cm59dGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9dmFsdWU7dGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ9dmFsdWV9fSk7RHVwbGV4LnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbihlcnIsY2Ipe3RoaXMucHVzaChudWxsKTt0aGlzLmVuZCgpO3BuYS5uZXh0VGljayhjYixlcnIpfX0se1wiLi9fc3RyZWFtX3JlYWRhYmxlXCI6MTAwLFwiLi9fc3RyZWFtX3dyaXRhYmxlXCI6MTAyLFwiY29yZS11dGlsLWlzXCI6MTQsaW5oZXJpdHM6ODAsXCJwcm9jZXNzLW5leHRpY2stYXJnc1wiOjkxfV0sOTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO21vZHVsZS5leHBvcnRzPVBhc3NUaHJvdWdoO3ZhciBUcmFuc2Zvcm09cmVxdWlyZShcIi4vX3N0cmVhbV90cmFuc2Zvcm1cIik7dmFyIHV0aWw9cmVxdWlyZShcImNvcmUtdXRpbC1pc1wiKTt1dGlsLmluaGVyaXRzPXJlcXVpcmUoXCJpbmhlcml0c1wiKTt1dGlsLmluaGVyaXRzKFBhc3NUaHJvdWdoLFRyYW5zZm9ybSk7ZnVuY3Rpb24gUGFzc1Rocm91Z2gob3B0aW9ucyl7aWYoISh0aGlzIGluc3RhbmNlb2YgUGFzc1Rocm91Z2gpKXJldHVybiBuZXcgUGFzc1Rocm91Z2gob3B0aW9ucyk7VHJhbnNmb3JtLmNhbGwodGhpcyxvcHRpb25zKX1QYXNzVGhyb3VnaC5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbihjaHVuayxlbmNvZGluZyxjYil7Y2IobnVsbCxjaHVuayl9fSx7XCIuL19zdHJlYW1fdHJhbnNmb3JtXCI6MTAxLFwiY29yZS11dGlsLWlzXCI6MTQsaW5oZXJpdHM6ODB9XSwxMDA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyhmdW5jdGlvbihwcm9jZXNzLGdsb2JhbCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHBuYT1yZXF1aXJlKFwicHJvY2Vzcy1uZXh0aWNrLWFyZ3NcIik7bW9kdWxlLmV4cG9ydHM9UmVhZGFibGU7dmFyIGlzQXJyYXk9cmVxdWlyZShcImlzYXJyYXlcIik7dmFyIER1cGxleDtSZWFkYWJsZS5SZWFkYWJsZVN0YXRlPVJlYWRhYmxlU3RhdGU7dmFyIEVFPXJlcXVpcmUoXCJldmVudHNcIikuRXZlbnRFbWl0dGVyO3ZhciBFRWxpc3RlbmVyQ291bnQ9ZnVuY3Rpb24oZW1pdHRlcix0eXBlKXtyZXR1cm4gZW1pdHRlci5saXN0ZW5lcnModHlwZSkubGVuZ3RofTt2YXIgU3RyZWFtPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtXCIpO3ZhciBCdWZmZXI9cmVxdWlyZShcInNhZmUtYnVmZmVyXCIpLkJ1ZmZlcjt2YXIgT3VyVWludDhBcnJheT1nbG9iYWwuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspe3JldHVybiBCdWZmZXIuZnJvbShjaHVuayl9ZnVuY3Rpb24gX2lzVWludDhBcnJheShvYmope3JldHVybiBCdWZmZXIuaXNCdWZmZXIob2JqKXx8b2JqIGluc3RhbmNlb2YgT3VyVWludDhBcnJheX12YXIgdXRpbD1yZXF1aXJlKFwiY29yZS11dGlsLWlzXCIpO3V0aWwuaW5oZXJpdHM9cmVxdWlyZShcImluaGVyaXRzXCIpO3ZhciBkZWJ1Z1V0aWw9cmVxdWlyZShcInV0aWxcIik7dmFyIGRlYnVnPXZvaWQgMDtpZihkZWJ1Z1V0aWwmJmRlYnVnVXRpbC5kZWJ1Z2xvZyl7ZGVidWc9ZGVidWdVdGlsLmRlYnVnbG9nKFwic3RyZWFtXCIpfWVsc2V7ZGVidWc9ZnVuY3Rpb24oKXt9fXZhciBCdWZmZXJMaXN0PXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvQnVmZmVyTGlzdFwiKTt2YXIgZGVzdHJveUltcGw9cmVxdWlyZShcIi4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95XCIpO3ZhciBTdHJpbmdEZWNvZGVyO3V0aWwuaW5oZXJpdHMoUmVhZGFibGUsU3RyZWFtKTt2YXIga1Byb3h5RXZlbnRzPVtcImVycm9yXCIsXCJjbG9zZVwiLFwiZGVzdHJveVwiLFwicGF1c2VcIixcInJlc3VtZVwiXTtmdW5jdGlvbiBwcmVwZW5kTGlzdGVuZXIoZW1pdHRlcixldmVudCxmbil7aWYodHlwZW9mIGVtaXR0ZXIucHJlcGVuZExpc3RlbmVyPT09XCJmdW5jdGlvblwiKXJldHVybiBlbWl0dGVyLnByZXBlbmRMaXN0ZW5lcihldmVudCxmbik7aWYoIWVtaXR0ZXIuX2V2ZW50c3x8IWVtaXR0ZXIuX2V2ZW50c1tldmVudF0pZW1pdHRlci5vbihldmVudCxmbik7ZWxzZSBpZihpc0FycmF5KGVtaXR0ZXIuX2V2ZW50c1tldmVudF0pKWVtaXR0ZXIuX2V2ZW50c1tldmVudF0udW5zaGlmdChmbik7ZWxzZSBlbWl0dGVyLl9ldmVudHNbZXZlbnRdPVtmbixlbWl0dGVyLl9ldmVudHNbZXZlbnRdXX1mdW5jdGlvbiBSZWFkYWJsZVN0YXRlKG9wdGlvbnMsc3RyZWFtKXtEdXBsZXg9RHVwbGV4fHxyZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKTtvcHRpb25zPW9wdGlvbnN8fHt9O3ZhciBpc0R1cGxleD1zdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXg7dGhpcy5vYmplY3RNb2RlPSEhb3B0aW9ucy5vYmplY3RNb2RlO2lmKGlzRHVwbGV4KXRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhb3B0aW9ucy5yZWFkYWJsZU9iamVjdE1vZGU7dmFyIGh3bT1vcHRpb25zLmhpZ2hXYXRlck1hcms7dmFyIHJlYWRhYmxlSHdtPW9wdGlvbnMucmVhZGFibGVIaWdoV2F0ZXJNYXJrO3ZhciBkZWZhdWx0SHdtPXRoaXMub2JqZWN0TW9kZT8xNjoxNioxMDI0O2lmKGh3bXx8aHdtPT09MCl0aGlzLmhpZ2hXYXRlck1hcms9aHdtO2Vsc2UgaWYoaXNEdXBsZXgmJihyZWFkYWJsZUh3bXx8cmVhZGFibGVId209PT0wKSl0aGlzLmhpZ2hXYXRlck1hcms9cmVhZGFibGVId207ZWxzZSB0aGlzLmhpZ2hXYXRlck1hcms9ZGVmYXVsdEh3bTt0aGlzLmhpZ2hXYXRlck1hcms9TWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspO3RoaXMuYnVmZmVyPW5ldyBCdWZmZXJMaXN0O3RoaXMubGVuZ3RoPTA7dGhpcy5waXBlcz1udWxsO3RoaXMucGlwZXNDb3VudD0wO3RoaXMuZmxvd2luZz1udWxsO3RoaXMuZW5kZWQ9ZmFsc2U7dGhpcy5lbmRFbWl0dGVkPWZhbHNlO3RoaXMucmVhZGluZz1mYWxzZTt0aGlzLnN5bmM9dHJ1ZTt0aGlzLm5lZWRSZWFkYWJsZT1mYWxzZTt0aGlzLmVtaXR0ZWRSZWFkYWJsZT1mYWxzZTt0aGlzLnJlYWRhYmxlTGlzdGVuaW5nPWZhbHNlO3RoaXMucmVzdW1lU2NoZWR1bGVkPWZhbHNlO3RoaXMuZGVzdHJveWVkPWZhbHNlO3RoaXMuZGVmYXVsdEVuY29kaW5nPW9wdGlvbnMuZGVmYXVsdEVuY29kaW5nfHxcInV0ZjhcIjt0aGlzLmF3YWl0RHJhaW49MDt0aGlzLnJlYWRpbmdNb3JlPWZhbHNlO3RoaXMuZGVjb2Rlcj1udWxsO3RoaXMuZW5jb2Rpbmc9bnVsbDtpZihvcHRpb25zLmVuY29kaW5nKXtpZighU3RyaW5nRGVjb2RlcilTdHJpbmdEZWNvZGVyPXJlcXVpcmUoXCJzdHJpbmdfZGVjb2Rlci9cIikuU3RyaW5nRGVjb2Rlcjt0aGlzLmRlY29kZXI9bmV3IFN0cmluZ0RlY29kZXIob3B0aW9ucy5lbmNvZGluZyk7dGhpcy5lbmNvZGluZz1vcHRpb25zLmVuY29kaW5nfX1mdW5jdGlvbiBSZWFkYWJsZShvcHRpb25zKXtEdXBsZXg9RHVwbGV4fHxyZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKTtpZighKHRoaXMgaW5zdGFuY2VvZiBSZWFkYWJsZSkpcmV0dXJuIG5ldyBSZWFkYWJsZShvcHRpb25zKTt0aGlzLl9yZWFkYWJsZVN0YXRlPW5ldyBSZWFkYWJsZVN0YXRlKG9wdGlvbnMsdGhpcyk7dGhpcy5yZWFkYWJsZT10cnVlO2lmKG9wdGlvbnMpe2lmKHR5cGVvZiBvcHRpb25zLnJlYWQ9PT1cImZ1bmN0aW9uXCIpdGhpcy5fcmVhZD1vcHRpb25zLnJlYWQ7aWYodHlwZW9mIG9wdGlvbnMuZGVzdHJveT09PVwiZnVuY3Rpb25cIil0aGlzLl9kZXN0cm95PW9wdGlvbnMuZGVzdHJveX1TdHJlYW0uY2FsbCh0aGlzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoUmVhZGFibGUucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2dldDpmdW5jdGlvbigpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGU9PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX1yZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbih2YWx1ZSl7aWYoIXRoaXMuX3JlYWRhYmxlU3RhdGUpe3JldHVybn10aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD12YWx1ZX19KTtSZWFkYWJsZS5wcm90b3R5cGUuZGVzdHJveT1kZXN0cm95SW1wbC5kZXN0cm95O1JlYWRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95PWRlc3Ryb3lJbXBsLnVuZGVzdHJveTtSZWFkYWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZXJyLGNiKXt0aGlzLnB1c2gobnVsbCk7Y2IoZXJyKX07UmVhZGFibGUucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oY2h1bmssZW5jb2Rpbmcpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3ZhciBza2lwQ2h1bmtDaGVjaztpZighc3RhdGUub2JqZWN0TW9kZSl7aWYodHlwZW9mIGNodW5rPT09XCJzdHJpbmdcIil7ZW5jb2Rpbmc9ZW5jb2Rpbmd8fHN0YXRlLmRlZmF1bHRFbmNvZGluZztpZihlbmNvZGluZyE9PXN0YXRlLmVuY29kaW5nKXtjaHVuaz1CdWZmZXIuZnJvbShjaHVuayxlbmNvZGluZyk7ZW5jb2Rpbmc9XCJcIn1za2lwQ2h1bmtDaGVjaz10cnVlfX1lbHNle3NraXBDaHVua0NoZWNrPXRydWV9cmV0dXJuIHJlYWRhYmxlQWRkQ2h1bmsodGhpcyxjaHVuayxlbmNvZGluZyxmYWxzZSxza2lwQ2h1bmtDaGVjayl9O1JlYWRhYmxlLnByb3RvdHlwZS51bnNoaWZ0PWZ1bmN0aW9uKGNodW5rKXtyZXR1cm4gcmVhZGFibGVBZGRDaHVuayh0aGlzLGNodW5rLG51bGwsdHJ1ZSxmYWxzZSl9O2Z1bmN0aW9uIHJlYWRhYmxlQWRkQ2h1bmsoc3RyZWFtLGNodW5rLGVuY29kaW5nLGFkZFRvRnJvbnQsc2tpcENodW5rQ2hlY2spe3ZhciBzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7aWYoY2h1bms9PT1udWxsKXtzdGF0ZS5yZWFkaW5nPWZhbHNlO29uRW9mQ2h1bmsoc3RyZWFtLHN0YXRlKX1lbHNle3ZhciBlcjtpZighc2tpcENodW5rQ2hlY2spZXI9Y2h1bmtJbnZhbGlkKHN0YXRlLGNodW5rKTtpZihlcil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLGVyKX1lbHNlIGlmKHN0YXRlLm9iamVjdE1vZGV8fGNodW5rJiZjaHVuay5sZW5ndGg+MCl7aWYodHlwZW9mIGNodW5rIT09XCJzdHJpbmdcIiYmIXN0YXRlLm9iamVjdE1vZGUmJk9iamVjdC5nZXRQcm90b3R5cGVPZihjaHVuaykhPT1CdWZmZXIucHJvdG90eXBlKXtjaHVuaz1fdWludDhBcnJheVRvQnVmZmVyKGNodW5rKX1pZihhZGRUb0Zyb250KXtpZihzdGF0ZS5lbmRFbWl0dGVkKXN0cmVhbS5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudFwiKSk7ZWxzZSBhZGRDaHVuayhzdHJlYW0sc3RhdGUsY2h1bmssdHJ1ZSl9ZWxzZSBpZihzdGF0ZS5lbmRlZCl7c3RyZWFtLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcInN0cmVhbS5wdXNoKCkgYWZ0ZXIgRU9GXCIpKX1lbHNle3N0YXRlLnJlYWRpbmc9ZmFsc2U7aWYoc3RhdGUuZGVjb2RlciYmIWVuY29kaW5nKXtjaHVuaz1zdGF0ZS5kZWNvZGVyLndyaXRlKGNodW5rKTtpZihzdGF0ZS5vYmplY3RNb2RlfHxjaHVuay5sZW5ndGghPT0wKWFkZENodW5rKHN0cmVhbSxzdGF0ZSxjaHVuayxmYWxzZSk7ZWxzZSBtYXliZVJlYWRNb3JlKHN0cmVhbSxzdGF0ZSl9ZWxzZXthZGRDaHVuayhzdHJlYW0sc3RhdGUsY2h1bmssZmFsc2UpfX19ZWxzZSBpZighYWRkVG9Gcm9udCl7c3RhdGUucmVhZGluZz1mYWxzZX19cmV0dXJuIG5lZWRNb3JlRGF0YShzdGF0ZSl9ZnVuY3Rpb24gYWRkQ2h1bmsoc3RyZWFtLHN0YXRlLGNodW5rLGFkZFRvRnJvbnQpe2lmKHN0YXRlLmZsb3dpbmcmJnN0YXRlLmxlbmd0aD09PTAmJiFzdGF0ZS5zeW5jKXtzdHJlYW0uZW1pdChcImRhdGFcIixjaHVuayk7c3RyZWFtLnJlYWQoMCl9ZWxzZXtzdGF0ZS5sZW5ndGgrPXN0YXRlLm9iamVjdE1vZGU/MTpjaHVuay5sZW5ndGg7aWYoYWRkVG9Gcm9udClzdGF0ZS5idWZmZXIudW5zaGlmdChjaHVuayk7ZWxzZSBzdGF0ZS5idWZmZXIucHVzaChjaHVuayk7aWYoc3RhdGUubmVlZFJlYWRhYmxlKWVtaXRSZWFkYWJsZShzdHJlYW0pfW1heWJlUmVhZE1vcmUoc3RyZWFtLHN0YXRlKX1mdW5jdGlvbiBjaHVua0ludmFsaWQoc3RhdGUsY2h1bmspe3ZhciBlcjtpZighX2lzVWludDhBcnJheShjaHVuaykmJnR5cGVvZiBjaHVuayE9PVwic3RyaW5nXCImJmNodW5rIT09dW5kZWZpbmVkJiYhc3RhdGUub2JqZWN0TW9kZSl7ZXI9bmV3IFR5cGVFcnJvcihcIkludmFsaWQgbm9uLXN0cmluZy9idWZmZXIgY2h1bmtcIil9cmV0dXJuIGVyfWZ1bmN0aW9uIG5lZWRNb3JlRGF0YShzdGF0ZSl7cmV0dXJuIXN0YXRlLmVuZGVkJiYoc3RhdGUubmVlZFJlYWRhYmxlfHxzdGF0ZS5sZW5ndGg8c3RhdGUuaGlnaFdhdGVyTWFya3x8c3RhdGUubGVuZ3RoPT09MCl9UmVhZGFibGUucHJvdG90eXBlLmlzUGF1c2VkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz09PWZhbHNlfTtSZWFkYWJsZS5wcm90b3R5cGUuc2V0RW5jb2Rpbmc9ZnVuY3Rpb24oZW5jKXtpZighU3RyaW5nRGVjb2RlcilTdHJpbmdEZWNvZGVyPXJlcXVpcmUoXCJzdHJpbmdfZGVjb2Rlci9cIikuU3RyaW5nRGVjb2Rlcjt0aGlzLl9yZWFkYWJsZVN0YXRlLmRlY29kZXI9bmV3IFN0cmluZ0RlY29kZXIoZW5jKTt0aGlzLl9yZWFkYWJsZVN0YXRlLmVuY29kaW5nPWVuYztyZXR1cm4gdGhpc307dmFyIE1BWF9IV009ODM4ODYwODtmdW5jdGlvbiBjb21wdXRlTmV3SGlnaFdhdGVyTWFyayhuKXtpZihuPj1NQVhfSFdNKXtuPU1BWF9IV019ZWxzZXtuLS07bnw9bj4+PjE7bnw9bj4+PjI7bnw9bj4+PjQ7bnw9bj4+Pjg7bnw9bj4+PjE2O24rK31yZXR1cm4gbn1mdW5jdGlvbiBob3dNdWNoVG9SZWFkKG4sc3RhdGUpe2lmKG48PTB8fHN0YXRlLmxlbmd0aD09PTAmJnN0YXRlLmVuZGVkKXJldHVybiAwO2lmKHN0YXRlLm9iamVjdE1vZGUpcmV0dXJuIDE7aWYobiE9PW4pe2lmKHN0YXRlLmZsb3dpbmcmJnN0YXRlLmxlbmd0aClyZXR1cm4gc3RhdGUuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg7ZWxzZSByZXR1cm4gc3RhdGUubGVuZ3RofWlmKG4+c3RhdGUuaGlnaFdhdGVyTWFyaylzdGF0ZS5oaWdoV2F0ZXJNYXJrPWNvbXB1dGVOZXdIaWdoV2F0ZXJNYXJrKG4pO2lmKG48PXN0YXRlLmxlbmd0aClyZXR1cm4gbjtpZighc3RhdGUuZW5kZWQpe3N0YXRlLm5lZWRSZWFkYWJsZT10cnVlO3JldHVybiAwfXJldHVybiBzdGF0ZS5sZW5ndGh9UmVhZGFibGUucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24obil7ZGVidWcoXCJyZWFkXCIsbik7bj1wYXJzZUludChuLDEwKTt2YXIgc3RhdGU9dGhpcy5fcmVhZGFibGVTdGF0ZTt2YXIgbk9yaWc9bjtpZihuIT09MClzdGF0ZS5lbWl0dGVkUmVhZGFibGU9ZmFsc2U7aWYobj09PTAmJnN0YXRlLm5lZWRSZWFkYWJsZSYmKHN0YXRlLmxlbmd0aD49c3RhdGUuaGlnaFdhdGVyTWFya3x8c3RhdGUuZW5kZWQpKXtkZWJ1ZyhcInJlYWQ6IGVtaXRSZWFkYWJsZVwiLHN0YXRlLmxlbmd0aCxzdGF0ZS5lbmRlZCk7aWYoc3RhdGUubGVuZ3RoPT09MCYmc3RhdGUuZW5kZWQpZW5kUmVhZGFibGUodGhpcyk7ZWxzZSBlbWl0UmVhZGFibGUodGhpcyk7cmV0dXJuIG51bGx9bj1ob3dNdWNoVG9SZWFkKG4sc3RhdGUpO2lmKG49PT0wJiZzdGF0ZS5lbmRlZCl7aWYoc3RhdGUubGVuZ3RoPT09MCllbmRSZWFkYWJsZSh0aGlzKTtyZXR1cm4gbnVsbH12YXIgZG9SZWFkPXN0YXRlLm5lZWRSZWFkYWJsZTtkZWJ1ZyhcIm5lZWQgcmVhZGFibGVcIixkb1JlYWQpO2lmKHN0YXRlLmxlbmd0aD09PTB8fHN0YXRlLmxlbmd0aC1uPHN0YXRlLmhpZ2hXYXRlck1hcmspe2RvUmVhZD10cnVlO2RlYnVnKFwibGVuZ3RoIGxlc3MgdGhhbiB3YXRlcm1hcmtcIixkb1JlYWQpfWlmKHN0YXRlLmVuZGVkfHxzdGF0ZS5yZWFkaW5nKXtkb1JlYWQ9ZmFsc2U7ZGVidWcoXCJyZWFkaW5nIG9yIGVuZGVkXCIsZG9SZWFkKX1lbHNlIGlmKGRvUmVhZCl7ZGVidWcoXCJkbyByZWFkXCIpO3N0YXRlLnJlYWRpbmc9dHJ1ZTtzdGF0ZS5zeW5jPXRydWU7aWYoc3RhdGUubGVuZ3RoPT09MClzdGF0ZS5uZWVkUmVhZGFibGU9dHJ1ZTt0aGlzLl9yZWFkKHN0YXRlLmhpZ2hXYXRlck1hcmspO3N0YXRlLnN5bmM9ZmFsc2U7aWYoIXN0YXRlLnJlYWRpbmcpbj1ob3dNdWNoVG9SZWFkKG5PcmlnLHN0YXRlKX12YXIgcmV0O2lmKG4+MClyZXQ9ZnJvbUxpc3QobixzdGF0ZSk7ZWxzZSByZXQ9bnVsbDtpZihyZXQ9PT1udWxsKXtzdGF0ZS5uZWVkUmVhZGFibGU9dHJ1ZTtuPTB9ZWxzZXtzdGF0ZS5sZW5ndGgtPW59aWYoc3RhdGUubGVuZ3RoPT09MCl7aWYoIXN0YXRlLmVuZGVkKXN0YXRlLm5lZWRSZWFkYWJsZT10cnVlO2lmKG5PcmlnIT09biYmc3RhdGUuZW5kZWQpZW5kUmVhZGFibGUodGhpcyl9aWYocmV0IT09bnVsbCl0aGlzLmVtaXQoXCJkYXRhXCIscmV0KTtyZXR1cm4gcmV0fTtmdW5jdGlvbiBvbkVvZkNodW5rKHN0cmVhbSxzdGF0ZSl7aWYoc3RhdGUuZW5kZWQpcmV0dXJuO2lmKHN0YXRlLmRlY29kZXIpe3ZhciBjaHVuaz1zdGF0ZS5kZWNvZGVyLmVuZCgpO2lmKGNodW5rJiZjaHVuay5sZW5ndGgpe3N0YXRlLmJ1ZmZlci5wdXNoKGNodW5rKTtzdGF0ZS5sZW5ndGgrPXN0YXRlLm9iamVjdE1vZGU/MTpjaHVuay5sZW5ndGh9fXN0YXRlLmVuZGVkPXRydWU7ZW1pdFJlYWRhYmxlKHN0cmVhbSl9ZnVuY3Rpb24gZW1pdFJlYWRhYmxlKHN0cmVhbSl7dmFyIHN0YXRlPXN0cmVhbS5fcmVhZGFibGVTdGF0ZTtzdGF0ZS5uZWVkUmVhZGFibGU9ZmFsc2U7aWYoIXN0YXRlLmVtaXR0ZWRSZWFkYWJsZSl7ZGVidWcoXCJlbWl0UmVhZGFibGVcIixzdGF0ZS5mbG93aW5nKTtzdGF0ZS5lbWl0dGVkUmVhZGFibGU9dHJ1ZTtpZihzdGF0ZS5zeW5jKXBuYS5uZXh0VGljayhlbWl0UmVhZGFibGVfLHN0cmVhbSk7ZWxzZSBlbWl0UmVhZGFibGVfKHN0cmVhbSl9fWZ1bmN0aW9uIGVtaXRSZWFkYWJsZV8oc3RyZWFtKXtkZWJ1ZyhcImVtaXQgcmVhZGFibGVcIik7c3RyZWFtLmVtaXQoXCJyZWFkYWJsZVwiKTtmbG93KHN0cmVhbSl9ZnVuY3Rpb24gbWF5YmVSZWFkTW9yZShzdHJlYW0sc3RhdGUpe2lmKCFzdGF0ZS5yZWFkaW5nTW9yZSl7c3RhdGUucmVhZGluZ01vcmU9dHJ1ZTtwbmEubmV4dFRpY2sobWF5YmVSZWFkTW9yZV8sc3RyZWFtLHN0YXRlKX19ZnVuY3Rpb24gbWF5YmVSZWFkTW9yZV8oc3RyZWFtLHN0YXRlKXt2YXIgbGVuPXN0YXRlLmxlbmd0aDt3aGlsZSghc3RhdGUucmVhZGluZyYmIXN0YXRlLmZsb3dpbmcmJiFzdGF0ZS5lbmRlZCYmc3RhdGUubGVuZ3RoPHN0YXRlLmhpZ2hXYXRlck1hcmspe2RlYnVnKFwibWF5YmVSZWFkTW9yZSByZWFkIDBcIik7c3RyZWFtLnJlYWQoMCk7aWYobGVuPT09c3RhdGUubGVuZ3RoKWJyZWFrO2Vsc2UgbGVuPXN0YXRlLmxlbmd0aH1zdGF0ZS5yZWFkaW5nTW9yZT1mYWxzZX1SZWFkYWJsZS5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24obil7dGhpcy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJfcmVhZCgpIGlzIG5vdCBpbXBsZW1lbnRlZFwiKSl9O1JlYWRhYmxlLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKGRlc3QscGlwZU9wdHMpe3ZhciBzcmM9dGhpczt2YXIgc3RhdGU9dGhpcy5fcmVhZGFibGVTdGF0ZTtzd2l0Y2goc3RhdGUucGlwZXNDb3VudCl7Y2FzZSAwOnN0YXRlLnBpcGVzPWRlc3Q7YnJlYWs7Y2FzZSAxOnN0YXRlLnBpcGVzPVtzdGF0ZS5waXBlcyxkZXN0XTticmVhaztkZWZhdWx0OnN0YXRlLnBpcGVzLnB1c2goZGVzdCk7YnJlYWt9c3RhdGUucGlwZXNDb3VudCs9MTtkZWJ1ZyhcInBpcGUgY291bnQ9JWQgb3B0cz0lalwiLHN0YXRlLnBpcGVzQ291bnQscGlwZU9wdHMpO3ZhciBkb0VuZD0oIXBpcGVPcHRzfHxwaXBlT3B0cy5lbmQhPT1mYWxzZSkmJmRlc3QhPT1wcm9jZXNzLnN0ZG91dCYmZGVzdCE9PXByb2Nlc3Muc3RkZXJyO3ZhciBlbmRGbj1kb0VuZD9vbmVuZDp1bnBpcGU7aWYoc3RhdGUuZW5kRW1pdHRlZClwbmEubmV4dFRpY2soZW5kRm4pO2Vsc2Ugc3JjLm9uY2UoXCJlbmRcIixlbmRGbik7ZGVzdC5vbihcInVucGlwZVwiLG9udW5waXBlKTtmdW5jdGlvbiBvbnVucGlwZShyZWFkYWJsZSx1bnBpcGVJbmZvKXtkZWJ1ZyhcIm9udW5waXBlXCIpO2lmKHJlYWRhYmxlPT09c3JjKXtpZih1bnBpcGVJbmZvJiZ1bnBpcGVJbmZvLmhhc1VucGlwZWQ9PT1mYWxzZSl7dW5waXBlSW5mby5oYXNVbnBpcGVkPXRydWU7Y2xlYW51cCgpfX19ZnVuY3Rpb24gb25lbmQoKXtkZWJ1ZyhcIm9uZW5kXCIpO2Rlc3QuZW5kKCl9dmFyIG9uZHJhaW49cGlwZU9uRHJhaW4oc3JjKTtkZXN0Lm9uKFwiZHJhaW5cIixvbmRyYWluKTt2YXIgY2xlYW5lZFVwPWZhbHNlO2Z1bmN0aW9uIGNsZWFudXAoKXtkZWJ1ZyhcImNsZWFudXBcIik7ZGVzdC5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsb25jbG9zZSk7ZGVzdC5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLG9uZmluaXNoKTtkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZHJhaW5cIixvbmRyYWluKTtkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIixvbmVycm9yKTtkZXN0LnJlbW92ZUxpc3RlbmVyKFwidW5waXBlXCIsb251bnBpcGUpO3NyYy5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLG9uZW5kKTtzcmMucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIix1bnBpcGUpO3NyYy5yZW1vdmVMaXN0ZW5lcihcImRhdGFcIixvbmRhdGEpO2NsZWFuZWRVcD10cnVlO2lmKHN0YXRlLmF3YWl0RHJhaW4mJighZGVzdC5fd3JpdGFibGVTdGF0ZXx8ZGVzdC5fd3JpdGFibGVTdGF0ZS5uZWVkRHJhaW4pKW9uZHJhaW4oKX12YXIgaW5jcmVhc2VkQXdhaXREcmFpbj1mYWxzZTtzcmMub24oXCJkYXRhXCIsb25kYXRhKTtmdW5jdGlvbiBvbmRhdGEoY2h1bmspe2RlYnVnKFwib25kYXRhXCIpO2luY3JlYXNlZEF3YWl0RHJhaW49ZmFsc2U7dmFyIHJldD1kZXN0LndyaXRlKGNodW5rKTtpZihmYWxzZT09PXJldCYmIWluY3JlYXNlZEF3YWl0RHJhaW4pe2lmKChzdGF0ZS5waXBlc0NvdW50PT09MSYmc3RhdGUucGlwZXM9PT1kZXN0fHxzdGF0ZS5waXBlc0NvdW50PjEmJmluZGV4T2Yoc3RhdGUucGlwZXMsZGVzdCkhPT0tMSkmJiFjbGVhbmVkVXApe2RlYnVnKFwiZmFsc2Ugd3JpdGUgcmVzcG9uc2UsIHBhdXNlXCIsc3JjLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4pO3NyYy5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKys7aW5jcmVhc2VkQXdhaXREcmFpbj10cnVlfXNyYy5wYXVzZSgpfX1mdW5jdGlvbiBvbmVycm9yKGVyKXtkZWJ1ZyhcIm9uZXJyb3JcIixlcik7dW5waXBlKCk7ZGVzdC5yZW1vdmVMaXN0ZW5lcihcImVycm9yXCIsb25lcnJvcik7aWYoRUVsaXN0ZW5lckNvdW50KGRlc3QsXCJlcnJvclwiKT09PTApZGVzdC5lbWl0KFwiZXJyb3JcIixlcil9cHJlcGVuZExpc3RlbmVyKGRlc3QsXCJlcnJvclwiLG9uZXJyb3IpO2Z1bmN0aW9uIG9uY2xvc2UoKXtkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsb25maW5pc2gpO3VucGlwZSgpfWRlc3Qub25jZShcImNsb3NlXCIsb25jbG9zZSk7ZnVuY3Rpb24gb25maW5pc2goKXtkZWJ1ZyhcIm9uZmluaXNoXCIpO2Rlc3QucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLG9uY2xvc2UpO3VucGlwZSgpfWRlc3Qub25jZShcImZpbmlzaFwiLG9uZmluaXNoKTtmdW5jdGlvbiB1bnBpcGUoKXtkZWJ1ZyhcInVucGlwZVwiKTtzcmMudW5waXBlKGRlc3QpfWRlc3QuZW1pdChcInBpcGVcIixzcmMpO2lmKCFzdGF0ZS5mbG93aW5nKXtkZWJ1ZyhcInBpcGUgcmVzdW1lXCIpO3NyYy5yZXN1bWUoKX1yZXR1cm4gZGVzdH07ZnVuY3Rpb24gcGlwZU9uRHJhaW4oc3JjKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgc3RhdGU9c3JjLl9yZWFkYWJsZVN0YXRlO2RlYnVnKFwicGlwZU9uRHJhaW5cIixzdGF0ZS5hd2FpdERyYWluKTtpZihzdGF0ZS5hd2FpdERyYWluKXN0YXRlLmF3YWl0RHJhaW4tLTtpZihzdGF0ZS5hd2FpdERyYWluPT09MCYmRUVsaXN0ZW5lckNvdW50KHNyYyxcImRhdGFcIikpe3N0YXRlLmZsb3dpbmc9dHJ1ZTtmbG93KHNyYyl9fX1SZWFkYWJsZS5wcm90b3R5cGUudW5waXBlPWZ1bmN0aW9uKGRlc3Qpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3ZhciB1bnBpcGVJbmZvPXtoYXNVbnBpcGVkOmZhbHNlfTtpZihzdGF0ZS5waXBlc0NvdW50PT09MClyZXR1cm4gdGhpcztpZihzdGF0ZS5waXBlc0NvdW50PT09MSl7aWYoZGVzdCYmZGVzdCE9PXN0YXRlLnBpcGVzKXJldHVybiB0aGlzO2lmKCFkZXN0KWRlc3Q9c3RhdGUucGlwZXM7c3RhdGUucGlwZXM9bnVsbDtzdGF0ZS5waXBlc0NvdW50PTA7c3RhdGUuZmxvd2luZz1mYWxzZTtpZihkZXN0KWRlc3QuZW1pdChcInVucGlwZVwiLHRoaXMsdW5waXBlSW5mbyk7cmV0dXJuIHRoaXN9aWYoIWRlc3Qpe3ZhciBkZXN0cz1zdGF0ZS5waXBlczt2YXIgbGVuPXN0YXRlLnBpcGVzQ291bnQ7c3RhdGUucGlwZXM9bnVsbDtzdGF0ZS5waXBlc0NvdW50PTA7c3RhdGUuZmxvd2luZz1mYWxzZTtmb3IodmFyIGk9MDtpPGxlbjtpKyspe2Rlc3RzW2ldLmVtaXQoXCJ1bnBpcGVcIix0aGlzLHVucGlwZUluZm8pfXJldHVybiB0aGlzfXZhciBpbmRleD1pbmRleE9mKHN0YXRlLnBpcGVzLGRlc3QpO2lmKGluZGV4PT09LTEpcmV0dXJuIHRoaXM7c3RhdGUucGlwZXMuc3BsaWNlKGluZGV4LDEpO3N0YXRlLnBpcGVzQ291bnQtPTE7aWYoc3RhdGUucGlwZXNDb3VudD09PTEpc3RhdGUucGlwZXM9c3RhdGUucGlwZXNbMF07ZGVzdC5lbWl0KFwidW5waXBlXCIsdGhpcyx1bnBpcGVJbmZvKTtyZXR1cm4gdGhpc307UmVhZGFibGUucHJvdG90eXBlLm9uPWZ1bmN0aW9uKGV2LGZuKXt2YXIgcmVzPVN0cmVhbS5wcm90b3R5cGUub24uY2FsbCh0aGlzLGV2LGZuKTtpZihldj09PVwiZGF0YVwiKXtpZih0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmchPT1mYWxzZSl0aGlzLnJlc3VtZSgpfWVsc2UgaWYoZXY9PT1cInJlYWRhYmxlXCIpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO2lmKCFzdGF0ZS5lbmRFbWl0dGVkJiYhc3RhdGUucmVhZGFibGVMaXN0ZW5pbmcpe3N0YXRlLnJlYWRhYmxlTGlzdGVuaW5nPXN0YXRlLm5lZWRSZWFkYWJsZT10cnVlO3N0YXRlLmVtaXR0ZWRSZWFkYWJsZT1mYWxzZTtpZighc3RhdGUucmVhZGluZyl7cG5hLm5leHRUaWNrKG5SZWFkaW5nTmV4dFRpY2ssdGhpcyl9ZWxzZSBpZihzdGF0ZS5sZW5ndGgpe2VtaXRSZWFkYWJsZSh0aGlzKX19fXJldHVybiByZXN9O1JlYWRhYmxlLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1SZWFkYWJsZS5wcm90b3R5cGUub247ZnVuY3Rpb24gblJlYWRpbmdOZXh0VGljayhzZWxmKXtkZWJ1ZyhcInJlYWRhYmxlIG5leHR0aWNrIHJlYWQgMFwiKTtzZWxmLnJlYWQoMCl9UmVhZGFibGUucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO2lmKCFzdGF0ZS5mbG93aW5nKXtkZWJ1ZyhcInJlc3VtZVwiKTtzdGF0ZS5mbG93aW5nPXRydWU7cmVzdW1lKHRoaXMsc3RhdGUpfXJldHVybiB0aGlzfTtmdW5jdGlvbiByZXN1bWUoc3RyZWFtLHN0YXRlKXtpZighc3RhdGUucmVzdW1lU2NoZWR1bGVkKXtzdGF0ZS5yZXN1bWVTY2hlZHVsZWQ9dHJ1ZTtwbmEubmV4dFRpY2socmVzdW1lXyxzdHJlYW0sc3RhdGUpfX1mdW5jdGlvbiByZXN1bWVfKHN0cmVhbSxzdGF0ZSl7aWYoIXN0YXRlLnJlYWRpbmcpe2RlYnVnKFwicmVzdW1lIHJlYWQgMFwiKTtzdHJlYW0ucmVhZCgwKX1zdGF0ZS5yZXN1bWVTY2hlZHVsZWQ9ZmFsc2U7c3RhdGUuYXdhaXREcmFpbj0wO3N0cmVhbS5lbWl0KFwicmVzdW1lXCIpO2Zsb3coc3RyZWFtKTtpZihzdGF0ZS5mbG93aW5nJiYhc3RhdGUucmVhZGluZylzdHJlYW0ucmVhZCgwKX1SZWFkYWJsZS5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtkZWJ1ZyhcImNhbGwgcGF1c2UgZmxvd2luZz0lalwiLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyk7aWYoZmFsc2UhPT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpe2RlYnVnKFwicGF1c2VcIik7dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nPWZhbHNlO3RoaXMuZW1pdChcInBhdXNlXCIpfXJldHVybiB0aGlzfTtmdW5jdGlvbiBmbG93KHN0cmVhbSl7dmFyIHN0YXRlPXN0cmVhbS5fcmVhZGFibGVTdGF0ZTtkZWJ1ZyhcImZsb3dcIixzdGF0ZS5mbG93aW5nKTt3aGlsZShzdGF0ZS5mbG93aW5nJiZzdHJlYW0ucmVhZCgpIT09bnVsbCl7fX1SZWFkYWJsZS5wcm90b3R5cGUud3JhcD1mdW5jdGlvbihzdHJlYW0pe3ZhciBfdGhpcz10aGlzO3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3ZhciBwYXVzZWQ9ZmFsc2U7c3RyZWFtLm9uKFwiZW5kXCIsZnVuY3Rpb24oKXtkZWJ1ZyhcIndyYXBwZWQgZW5kXCIpO2lmKHN0YXRlLmRlY29kZXImJiFzdGF0ZS5lbmRlZCl7dmFyIGNodW5rPXN0YXRlLmRlY29kZXIuZW5kKCk7aWYoY2h1bmsmJmNodW5rLmxlbmd0aClfdGhpcy5wdXNoKGNodW5rKX1fdGhpcy5wdXNoKG51bGwpfSk7c3RyZWFtLm9uKFwiZGF0YVwiLGZ1bmN0aW9uKGNodW5rKXtkZWJ1ZyhcIndyYXBwZWQgZGF0YVwiKTtpZihzdGF0ZS5kZWNvZGVyKWNodW5rPXN0YXRlLmRlY29kZXIud3JpdGUoY2h1bmspO2lmKHN0YXRlLm9iamVjdE1vZGUmJihjaHVuaz09PW51bGx8fGNodW5rPT09dW5kZWZpbmVkKSlyZXR1cm47ZWxzZSBpZighc3RhdGUub2JqZWN0TW9kZSYmKCFjaHVua3x8IWNodW5rLmxlbmd0aCkpcmV0dXJuO3ZhciByZXQ9X3RoaXMucHVzaChjaHVuayk7aWYoIXJldCl7cGF1c2VkPXRydWU7c3RyZWFtLnBhdXNlKCl9fSk7Zm9yKHZhciBpIGluIHN0cmVhbSl7aWYodGhpc1tpXT09PXVuZGVmaW5lZCYmdHlwZW9mIHN0cmVhbVtpXT09PVwiZnVuY3Rpb25cIil7dGhpc1tpXT1mdW5jdGlvbihtZXRob2Qpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBzdHJlYW1bbWV0aG9kXS5hcHBseShzdHJlYW0sYXJndW1lbnRzKX19KGkpfX1mb3IodmFyIG49MDtuPGtQcm94eUV2ZW50cy5sZW5ndGg7bisrKXtzdHJlYW0ub24oa1Byb3h5RXZlbnRzW25dLHRoaXMuZW1pdC5iaW5kKHRoaXMsa1Byb3h5RXZlbnRzW25dKSl9dGhpcy5fcmVhZD1mdW5jdGlvbihuKXtkZWJ1ZyhcIndyYXBwZWQgX3JlYWRcIixuKTtpZihwYXVzZWQpe3BhdXNlZD1mYWxzZTtzdHJlYW0ucmVzdW1lKCl9fTtyZXR1cm4gdGhpc307T2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSxcInJlYWRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSk7UmVhZGFibGUuX2Zyb21MaXN0PWZyb21MaXN0O2Z1bmN0aW9uIGZyb21MaXN0KG4sc3RhdGUpe2lmKHN0YXRlLmxlbmd0aD09PTApcmV0dXJuIG51bGw7dmFyIHJldDtpZihzdGF0ZS5vYmplY3RNb2RlKXJldD1zdGF0ZS5idWZmZXIuc2hpZnQoKTtlbHNlIGlmKCFufHxuPj1zdGF0ZS5sZW5ndGgpe2lmKHN0YXRlLmRlY29kZXIpcmV0PXN0YXRlLmJ1ZmZlci5qb2luKFwiXCIpO2Vsc2UgaWYoc3RhdGUuYnVmZmVyLmxlbmd0aD09PTEpcmV0PXN0YXRlLmJ1ZmZlci5oZWFkLmRhdGE7ZWxzZSByZXQ9c3RhdGUuYnVmZmVyLmNvbmNhdChzdGF0ZS5sZW5ndGgpO3N0YXRlLmJ1ZmZlci5jbGVhcigpfWVsc2V7cmV0PWZyb21MaXN0UGFydGlhbChuLHN0YXRlLmJ1ZmZlcixzdGF0ZS5kZWNvZGVyKX1yZXR1cm4gcmV0fWZ1bmN0aW9uIGZyb21MaXN0UGFydGlhbChuLGxpc3QsaGFzU3RyaW5ncyl7dmFyIHJldDtpZihuPGxpc3QuaGVhZC5kYXRhLmxlbmd0aCl7cmV0PWxpc3QuaGVhZC5kYXRhLnNsaWNlKDAsbik7bGlzdC5oZWFkLmRhdGE9bGlzdC5oZWFkLmRhdGEuc2xpY2Uobil9ZWxzZSBpZihuPT09bGlzdC5oZWFkLmRhdGEubGVuZ3RoKXtyZXQ9bGlzdC5zaGlmdCgpfWVsc2V7cmV0PWhhc1N0cmluZ3M/Y29weUZyb21CdWZmZXJTdHJpbmcobixsaXN0KTpjb3B5RnJvbUJ1ZmZlcihuLGxpc3QpfXJldHVybiByZXR9ZnVuY3Rpb24gY29weUZyb21CdWZmZXJTdHJpbmcobixsaXN0KXt2YXIgcD1saXN0LmhlYWQ7dmFyIGM9MTt2YXIgcmV0PXAuZGF0YTtuLT1yZXQubGVuZ3RoO3doaWxlKHA9cC5uZXh0KXt2YXIgc3RyPXAuZGF0YTt2YXIgbmI9bj5zdHIubGVuZ3RoP3N0ci5sZW5ndGg6bjtpZihuYj09PXN0ci5sZW5ndGgpcmV0Kz1zdHI7ZWxzZSByZXQrPXN0ci5zbGljZSgwLG4pO24tPW5iO2lmKG49PT0wKXtpZihuYj09PXN0ci5sZW5ndGgpeysrYztpZihwLm5leHQpbGlzdC5oZWFkPXAubmV4dDtlbHNlIGxpc3QuaGVhZD1saXN0LnRhaWw9bnVsbH1lbHNle2xpc3QuaGVhZD1wO3AuZGF0YT1zdHIuc2xpY2UobmIpfWJyZWFrfSsrY31saXN0Lmxlbmd0aC09YztyZXR1cm4gcmV0fWZ1bmN0aW9uIGNvcHlGcm9tQnVmZmVyKG4sbGlzdCl7dmFyIHJldD1CdWZmZXIuYWxsb2NVbnNhZmUobik7dmFyIHA9bGlzdC5oZWFkO3ZhciBjPTE7cC5kYXRhLmNvcHkocmV0KTtuLT1wLmRhdGEubGVuZ3RoO3doaWxlKHA9cC5uZXh0KXt2YXIgYnVmPXAuZGF0YTt2YXIgbmI9bj5idWYubGVuZ3RoP2J1Zi5sZW5ndGg6bjtidWYuY29weShyZXQscmV0Lmxlbmd0aC1uLDAsbmIpO24tPW5iO2lmKG49PT0wKXtpZihuYj09PWJ1Zi5sZW5ndGgpeysrYztpZihwLm5leHQpbGlzdC5oZWFkPXAubmV4dDtlbHNlIGxpc3QuaGVhZD1saXN0LnRhaWw9bnVsbH1lbHNle2xpc3QuaGVhZD1wO3AuZGF0YT1idWYuc2xpY2UobmIpfWJyZWFrfSsrY31saXN0Lmxlbmd0aC09YztyZXR1cm4gcmV0fWZ1bmN0aW9uIGVuZFJlYWRhYmxlKHN0cmVhbSl7dmFyIHN0YXRlPXN0cmVhbS5fcmVhZGFibGVTdGF0ZTtpZihzdGF0ZS5sZW5ndGg+MCl0aHJvdyBuZXcgRXJyb3IoJ1wiZW5kUmVhZGFibGUoKVwiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7aWYoIXN0YXRlLmVuZEVtaXR0ZWQpe3N0YXRlLmVuZGVkPXRydWU7cG5hLm5leHRUaWNrKGVuZFJlYWRhYmxlTlQsc3RhdGUsc3RyZWFtKX19ZnVuY3Rpb24gZW5kUmVhZGFibGVOVChzdGF0ZSxzdHJlYW0pe2lmKCFzdGF0ZS5lbmRFbWl0dGVkJiZzdGF0ZS5sZW5ndGg9PT0wKXtzdGF0ZS5lbmRFbWl0dGVkPXRydWU7c3RyZWFtLnJlYWRhYmxlPWZhbHNlO3N0cmVhbS5lbWl0KFwiZW5kXCIpfX1mdW5jdGlvbiBpbmRleE9mKHhzLHgpe2Zvcih2YXIgaT0wLGw9eHMubGVuZ3RoO2k8bDtpKyspe2lmKHhzW2ldPT09eClyZXR1cm4gaX1yZXR1cm4tMX19KS5jYWxsKHRoaXMscmVxdWlyZShcIl9wcm9jZXNzXCIpLHR5cGVvZiBnbG9iYWwhPT1cInVuZGVmaW5lZFwiP2dsb2JhbDp0eXBlb2Ygc2VsZiE9PVwidW5kZWZpbmVkXCI/c2VsZjp0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIj93aW5kb3c6e30pfSx7XCIuL19zdHJlYW1fZHVwbGV4XCI6OTgsXCIuL2ludGVybmFsL3N0cmVhbXMvQnVmZmVyTGlzdFwiOjEwMyxcIi4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95XCI6MTA0LFwiLi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbVwiOjEwNSxfcHJvY2Vzczo5MixcImNvcmUtdXRpbC1pc1wiOjE0LGV2ZW50czoxMyxpbmhlcml0czo4MCxpc2FycmF5OjEwNixcInByb2Nlc3MtbmV4dGljay1hcmdzXCI6OTEsXCJzYWZlLWJ1ZmZlclwiOjExMCxcInN0cmluZ19kZWNvZGVyL1wiOjEwNyx1dGlsOjExfV0sMTAxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjttb2R1bGUuZXhwb3J0cz1UcmFuc2Zvcm07dmFyIER1cGxleD1yZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKTt2YXIgdXRpbD1yZXF1aXJlKFwiY29yZS11dGlsLWlzXCIpO3V0aWwuaW5oZXJpdHM9cmVxdWlyZShcImluaGVyaXRzXCIpO3V0aWwuaW5oZXJpdHMoVHJhbnNmb3JtLER1cGxleCk7ZnVuY3Rpb24gYWZ0ZXJUcmFuc2Zvcm0oZXIsZGF0YSl7dmFyIHRzPXRoaXMuX3RyYW5zZm9ybVN0YXRlO3RzLnRyYW5zZm9ybWluZz1mYWxzZTt2YXIgY2I9dHMud3JpdGVjYjtpZighY2Ipe3JldHVybiB0aGlzLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIndyaXRlIGNhbGxiYWNrIGNhbGxlZCBtdWx0aXBsZSB0aW1lc1wiKSl9dHMud3JpdGVjaHVuaz1udWxsO3RzLndyaXRlY2I9bnVsbDtpZihkYXRhIT1udWxsKXRoaXMucHVzaChkYXRhKTtjYihlcik7dmFyIHJzPXRoaXMuX3JlYWRhYmxlU3RhdGU7cnMucmVhZGluZz1mYWxzZTtpZihycy5uZWVkUmVhZGFibGV8fHJzLmxlbmd0aDxycy5oaWdoV2F0ZXJNYXJrKXt0aGlzLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspfX1mdW5jdGlvbiBUcmFuc2Zvcm0ob3B0aW9ucyl7aWYoISh0aGlzIGluc3RhbmNlb2YgVHJhbnNmb3JtKSlyZXR1cm4gbmV3IFRyYW5zZm9ybShvcHRpb25zKTtEdXBsZXguY2FsbCh0aGlzLG9wdGlvbnMpO3RoaXMuX3RyYW5zZm9ybVN0YXRlPXthZnRlclRyYW5zZm9ybTphZnRlclRyYW5zZm9ybS5iaW5kKHRoaXMpLG5lZWRUcmFuc2Zvcm06ZmFsc2UsdHJhbnNmb3JtaW5nOmZhbHNlLHdyaXRlY2I6bnVsbCx3cml0ZWNodW5rOm51bGwsd3JpdGVlbmNvZGluZzpudWxsfTt0aGlzLl9yZWFkYWJsZVN0YXRlLm5lZWRSZWFkYWJsZT10cnVlO3RoaXMuX3JlYWRhYmxlU3RhdGUuc3luYz1mYWxzZTtpZihvcHRpb25zKXtpZih0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm09PT1cImZ1bmN0aW9uXCIpdGhpcy5fdHJhbnNmb3JtPW9wdGlvbnMudHJhbnNmb3JtO2lmKHR5cGVvZiBvcHRpb25zLmZsdXNoPT09XCJmdW5jdGlvblwiKXRoaXMuX2ZsdXNoPW9wdGlvbnMuZmx1c2h9dGhpcy5vbihcInByZWZpbmlzaFwiLHByZWZpbmlzaCl9ZnVuY3Rpb24gcHJlZmluaXNoKCl7dmFyIF90aGlzPXRoaXM7aWYodHlwZW9mIHRoaXMuX2ZsdXNoPT09XCJmdW5jdGlvblwiKXt0aGlzLl9mbHVzaChmdW5jdGlvbihlcixkYXRhKXtkb25lKF90aGlzLGVyLGRhdGEpfSl9ZWxzZXtkb25lKHRoaXMsbnVsbCxudWxsKX19VHJhbnNmb3JtLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nKXt0aGlzLl90cmFuc2Zvcm1TdGF0ZS5uZWVkVHJhbnNmb3JtPWZhbHNlO3JldHVybiBEdXBsZXgucHJvdG90eXBlLnB1c2guY2FsbCh0aGlzLGNodW5rLGVuY29kaW5nKX07VHJhbnNmb3JtLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLGNiKXt0aHJvdyBuZXcgRXJyb3IoXCJfdHJhbnNmb3JtKCkgaXMgbm90IGltcGxlbWVudGVkXCIpfTtUcmFuc2Zvcm0ucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbihjaHVuayxlbmNvZGluZyxjYil7dmFyIHRzPXRoaXMuX3RyYW5zZm9ybVN0YXRlO3RzLndyaXRlY2I9Y2I7dHMud3JpdGVjaHVuaz1jaHVuazt0cy53cml0ZWVuY29kaW5nPWVuY29kaW5nO2lmKCF0cy50cmFuc2Zvcm1pbmcpe3ZhciBycz10aGlzLl9yZWFkYWJsZVN0YXRlO2lmKHRzLm5lZWRUcmFuc2Zvcm18fHJzLm5lZWRSZWFkYWJsZXx8cnMubGVuZ3RoPHJzLmhpZ2hXYXRlck1hcmspdGhpcy5fcmVhZChycy5oaWdoV2F0ZXJNYXJrKX19O1RyYW5zZm9ybS5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24obil7dmFyIHRzPXRoaXMuX3RyYW5zZm9ybVN0YXRlO2lmKHRzLndyaXRlY2h1bmshPT1udWxsJiZ0cy53cml0ZWNiJiYhdHMudHJhbnNmb3JtaW5nKXt0cy50cmFuc2Zvcm1pbmc9dHJ1ZTt0aGlzLl90cmFuc2Zvcm0odHMud3JpdGVjaHVuayx0cy53cml0ZWVuY29kaW5nLHRzLmFmdGVyVHJhbnNmb3JtKX1lbHNle3RzLm5lZWRUcmFuc2Zvcm09dHJ1ZX19O1RyYW5zZm9ybS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZXJyLGNiKXt2YXIgX3RoaXMyPXRoaXM7RHVwbGV4LnByb3RvdHlwZS5fZGVzdHJveS5jYWxsKHRoaXMsZXJyLGZ1bmN0aW9uKGVycjIpe2NiKGVycjIpO190aGlzMi5lbWl0KFwiY2xvc2VcIil9KX07ZnVuY3Rpb24gZG9uZShzdHJlYW0sZXIsZGF0YSl7aWYoZXIpcmV0dXJuIHN0cmVhbS5lbWl0KFwiZXJyb3JcIixlcik7aWYoZGF0YSE9bnVsbClzdHJlYW0ucHVzaChkYXRhKTtpZihzdHJlYW0uX3dyaXRhYmxlU3RhdGUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiB3cy5sZW5ndGggIT0gMFwiKTtpZihzdHJlYW0uX3RyYW5zZm9ybVN0YXRlLnRyYW5zZm9ybWluZyl0aHJvdyBuZXcgRXJyb3IoXCJDYWxsaW5nIHRyYW5zZm9ybSBkb25lIHdoZW4gc3RpbGwgdHJhbnNmb3JtaW5nXCIpO3JldHVybiBzdHJlYW0ucHVzaChudWxsKX19LHtcIi4vX3N0cmVhbV9kdXBsZXhcIjo5OCxcImNvcmUtdXRpbC1pc1wiOjE0LGluaGVyaXRzOjgwfV0sMTAyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24ocHJvY2VzcyxnbG9iYWwsc2V0SW1tZWRpYXRlKXtcInVzZSBzdHJpY3RcIjt2YXIgcG5hPXJlcXVpcmUoXCJwcm9jZXNzLW5leHRpY2stYXJnc1wiKTttb2R1bGUuZXhwb3J0cz1Xcml0YWJsZTtmdW5jdGlvbiBXcml0ZVJlcShjaHVuayxlbmNvZGluZyxjYil7dGhpcy5jaHVuaz1jaHVuazt0aGlzLmVuY29kaW5nPWVuY29kaW5nO3RoaXMuY2FsbGJhY2s9Y2I7dGhpcy5uZXh0PW51bGx9ZnVuY3Rpb24gQ29ya2VkUmVxdWVzdChzdGF0ZSl7dmFyIF90aGlzPXRoaXM7dGhpcy5uZXh0PW51bGw7dGhpcy5lbnRyeT1udWxsO3RoaXMuZmluaXNoPWZ1bmN0aW9uKCl7b25Db3JrZWRGaW5pc2goX3RoaXMsc3RhdGUpfX12YXIgYXN5bmNXcml0ZT0hcHJvY2Vzcy5icm93c2VyJiZbXCJ2MC4xMFwiLFwidjAuOS5cIl0uaW5kZXhPZihwcm9jZXNzLnZlcnNpb24uc2xpY2UoMCw1KSk+LTE/c2V0SW1tZWRpYXRlOnBuYS5uZXh0VGljazt2YXIgRHVwbGV4O1dyaXRhYmxlLldyaXRhYmxlU3RhdGU9V3JpdGFibGVTdGF0ZTt2YXIgdXRpbD1yZXF1aXJlKFwiY29yZS11dGlsLWlzXCIpO3V0aWwuaW5oZXJpdHM9cmVxdWlyZShcImluaGVyaXRzXCIpO3ZhciBpbnRlcm5hbFV0aWw9e2RlcHJlY2F0ZTpyZXF1aXJlKFwidXRpbC1kZXByZWNhdGVcIil9O3ZhciBTdHJlYW09cmVxdWlyZShcIi4vaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW1cIik7dmFyIEJ1ZmZlcj1yZXF1aXJlKFwic2FmZS1idWZmZXJcIikuQnVmZmVyO3ZhciBPdXJVaW50OEFycmF5PWdsb2JhbC5VaW50OEFycmF5fHxmdW5jdGlvbigpe307ZnVuY3Rpb24gX3VpbnQ4QXJyYXlUb0J1ZmZlcihjaHVuayl7cmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKX1mdW5jdGlvbiBfaXNVaW50OEFycmF5KG9iail7cmV0dXJuIEJ1ZmZlci5pc0J1ZmZlcihvYmopfHxvYmogaW5zdGFuY2VvZiBPdXJVaW50OEFycmF5fXZhciBkZXN0cm95SW1wbD1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3lcIik7dXRpbC5pbmhlcml0cyhXcml0YWJsZSxTdHJlYW0pO2Z1bmN0aW9uIG5vcCgpe31mdW5jdGlvbiBXcml0YWJsZVN0YXRlKG9wdGlvbnMsc3RyZWFtKXtEdXBsZXg9RHVwbGV4fHxyZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKTtvcHRpb25zPW9wdGlvbnN8fHt9O3ZhciBpc0R1cGxleD1zdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXg7dGhpcy5vYmplY3RNb2RlPSEhb3B0aW9ucy5vYmplY3RNb2RlO2lmKGlzRHVwbGV4KXRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhb3B0aW9ucy53cml0YWJsZU9iamVjdE1vZGU7dmFyIGh3bT1vcHRpb25zLmhpZ2hXYXRlck1hcms7dmFyIHdyaXRhYmxlSHdtPW9wdGlvbnMud3JpdGFibGVIaWdoV2F0ZXJNYXJrO3ZhciBkZWZhdWx0SHdtPXRoaXMub2JqZWN0TW9kZT8xNjoxNioxMDI0O2lmKGh3bXx8aHdtPT09MCl0aGlzLmhpZ2hXYXRlck1hcms9aHdtO2Vsc2UgaWYoaXNEdXBsZXgmJih3cml0YWJsZUh3bXx8d3JpdGFibGVId209PT0wKSl0aGlzLmhpZ2hXYXRlck1hcms9d3JpdGFibGVId207ZWxzZSB0aGlzLmhpZ2hXYXRlck1hcms9ZGVmYXVsdEh3bTt0aGlzLmhpZ2hXYXRlck1hcms9TWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspO3RoaXMuZmluYWxDYWxsZWQ9ZmFsc2U7dGhpcy5uZWVkRHJhaW49ZmFsc2U7dGhpcy5lbmRpbmc9ZmFsc2U7dGhpcy5lbmRlZD1mYWxzZTt0aGlzLmZpbmlzaGVkPWZhbHNlO3RoaXMuZGVzdHJveWVkPWZhbHNlO3ZhciBub0RlY29kZT1vcHRpb25zLmRlY29kZVN0cmluZ3M9PT1mYWxzZTt0aGlzLmRlY29kZVN0cmluZ3M9IW5vRGVjb2RlO3RoaXMuZGVmYXVsdEVuY29kaW5nPW9wdGlvbnMuZGVmYXVsdEVuY29kaW5nfHxcInV0ZjhcIjt0aGlzLmxlbmd0aD0wO3RoaXMud3JpdGluZz1mYWxzZTt0aGlzLmNvcmtlZD0wO3RoaXMuc3luYz10cnVlO3RoaXMuYnVmZmVyUHJvY2Vzc2luZz1mYWxzZTt0aGlzLm9ud3JpdGU9ZnVuY3Rpb24oZXIpe29ud3JpdGUoc3RyZWFtLGVyKX07dGhpcy53cml0ZWNiPW51bGw7dGhpcy53cml0ZWxlbj0wO3RoaXMuYnVmZmVyZWRSZXF1ZXN0PW51bGw7dGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGw7dGhpcy5wZW5kaW5nY2I9MDt0aGlzLnByZWZpbmlzaGVkPWZhbHNlO3RoaXMuZXJyb3JFbWl0dGVkPWZhbHNlO3RoaXMuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MDt0aGlzLmNvcmtlZFJlcXVlc3RzRnJlZT1uZXcgQ29ya2VkUmVxdWVzdCh0aGlzKX1Xcml0YWJsZVN0YXRlLnByb3RvdHlwZS5nZXRCdWZmZXI9ZnVuY3Rpb24gZ2V0QnVmZmVyKCl7dmFyIGN1cnJlbnQ9dGhpcy5idWZmZXJlZFJlcXVlc3Q7dmFyIG91dD1bXTt3aGlsZShjdXJyZW50KXtvdXQucHVzaChjdXJyZW50KTtjdXJyZW50PWN1cnJlbnQubmV4dH1yZXR1cm4gb3V0fTsoZnVuY3Rpb24oKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLFwiYnVmZmVyXCIse2dldDppbnRlcm5hbFV0aWwuZGVwcmVjYXRlKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCl9LFwiX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgXCIrXCJpbnN0ZWFkLlwiLFwiREVQMDAwM1wiKX0pfWNhdGNoKF8pe319KSgpO3ZhciByZWFsSGFzSW5zdGFuY2U7aWYodHlwZW9mIFN5bWJvbD09PVwiZnVuY3Rpb25cIiYmU3ltYm9sLmhhc0luc3RhbmNlJiZ0eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV09PT1cImZ1bmN0aW9uXCIpe3JlYWxIYXNJbnN0YW5jZT1GdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXTtPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUsU3ltYm9sLmhhc0luc3RhbmNlLHt2YWx1ZTpmdW5jdGlvbihvYmplY3Qpe2lmKHJlYWxIYXNJbnN0YW5jZS5jYWxsKHRoaXMsb2JqZWN0KSlyZXR1cm4gdHJ1ZTtpZih0aGlzIT09V3JpdGFibGUpcmV0dXJuIGZhbHNlO3JldHVybiBvYmplY3QmJm9iamVjdC5fd3JpdGFibGVTdGF0ZSBpbnN0YW5jZW9mIFdyaXRhYmxlU3RhdGV9fSl9ZWxzZXtyZWFsSGFzSW5zdGFuY2U9ZnVuY3Rpb24ob2JqZWN0KXtyZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgdGhpc319ZnVuY3Rpb24gV3JpdGFibGUob3B0aW9ucyl7RHVwbGV4PUR1cGxleHx8cmVxdWlyZShcIi4vX3N0cmVhbV9kdXBsZXhcIik7aWYoIXJlYWxIYXNJbnN0YW5jZS5jYWxsKFdyaXRhYmxlLHRoaXMpJiYhKHRoaXMgaW5zdGFuY2VvZiBEdXBsZXgpKXtyZXR1cm4gbmV3IFdyaXRhYmxlKG9wdGlvbnMpfXRoaXMuX3dyaXRhYmxlU3RhdGU9bmV3IFdyaXRhYmxlU3RhdGUob3B0aW9ucyx0aGlzKTt0aGlzLndyaXRhYmxlPXRydWU7aWYob3B0aW9ucyl7aWYodHlwZW9mIG9wdGlvbnMud3JpdGU9PT1cImZ1bmN0aW9uXCIpdGhpcy5fd3JpdGU9b3B0aW9ucy53cml0ZTtpZih0eXBlb2Ygb3B0aW9ucy53cml0ZXY9PT1cImZ1bmN0aW9uXCIpdGhpcy5fd3JpdGV2PW9wdGlvbnMud3JpdGV2O2lmKHR5cGVvZiBvcHRpb25zLmRlc3Ryb3k9PT1cImZ1bmN0aW9uXCIpdGhpcy5fZGVzdHJveT1vcHRpb25zLmRlc3Ryb3k7aWYodHlwZW9mIG9wdGlvbnMuZmluYWw9PT1cImZ1bmN0aW9uXCIpdGhpcy5fZmluYWw9b3B0aW9ucy5maW5hbH1TdHJlYW0uY2FsbCh0aGlzKX1Xcml0YWJsZS5wcm90b3R5cGUucGlwZT1mdW5jdGlvbigpe3RoaXMuZW1pdChcImVycm9yXCIsbmV3IEVycm9yKFwiQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZVwiKSl9O2Z1bmN0aW9uIHdyaXRlQWZ0ZXJFbmQoc3RyZWFtLGNiKXt2YXIgZXI9bmV3IEVycm9yKFwid3JpdGUgYWZ0ZXIgZW5kXCIpO3N0cmVhbS5lbWl0KFwiZXJyb3JcIixlcik7cG5hLm5leHRUaWNrKGNiLGVyKX1mdW5jdGlvbiB2YWxpZENodW5rKHN0cmVhbSxzdGF0ZSxjaHVuayxjYil7dmFyIHZhbGlkPXRydWU7dmFyIGVyPWZhbHNlO2lmKGNodW5rPT09bnVsbCl7ZXI9bmV3IFR5cGVFcnJvcihcIk1heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtXCIpfWVsc2UgaWYodHlwZW9mIGNodW5rIT09XCJzdHJpbmdcIiYmY2h1bmshPT11bmRlZmluZWQmJiFzdGF0ZS5vYmplY3RNb2RlKXtlcj1uZXcgVHlwZUVycm9yKFwiSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVua1wiKX1pZihlcil7c3RyZWFtLmVtaXQoXCJlcnJvclwiLGVyKTtwbmEubmV4dFRpY2soY2IsZXIpO3ZhbGlkPWZhbHNlfXJldHVybiB2YWxpZH1Xcml0YWJsZS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe3ZhciBzdGF0ZT10aGlzLl93cml0YWJsZVN0YXRlO3ZhciByZXQ9ZmFsc2U7dmFyIGlzQnVmPSFzdGF0ZS5vYmplY3RNb2RlJiZfaXNVaW50OEFycmF5KGNodW5rKTtpZihpc0J1ZiYmIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykpe2NodW5rPV91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspfWlmKHR5cGVvZiBlbmNvZGluZz09PVwiZnVuY3Rpb25cIil7Y2I9ZW5jb2Rpbmc7ZW5jb2Rpbmc9bnVsbH1pZihpc0J1ZillbmNvZGluZz1cImJ1ZmZlclwiO2Vsc2UgaWYoIWVuY29kaW5nKWVuY29kaW5nPXN0YXRlLmRlZmF1bHRFbmNvZGluZztpZih0eXBlb2YgY2IhPT1cImZ1bmN0aW9uXCIpY2I9bm9wO2lmKHN0YXRlLmVuZGVkKXdyaXRlQWZ0ZXJFbmQodGhpcyxjYik7ZWxzZSBpZihpc0J1Znx8dmFsaWRDaHVuayh0aGlzLHN0YXRlLGNodW5rLGNiKSl7c3RhdGUucGVuZGluZ2NiKys7cmV0PXdyaXRlT3JCdWZmZXIodGhpcyxzdGF0ZSxpc0J1ZixjaHVuayxlbmNvZGluZyxjYil9cmV0dXJuIHJldH07V3JpdGFibGUucHJvdG90eXBlLmNvcms9ZnVuY3Rpb24oKXt2YXIgc3RhdGU9dGhpcy5fd3JpdGFibGVTdGF0ZTtzdGF0ZS5jb3JrZWQrK307V3JpdGFibGUucHJvdG90eXBlLnVuY29yaz1mdW5jdGlvbigpe3ZhciBzdGF0ZT10aGlzLl93cml0YWJsZVN0YXRlO2lmKHN0YXRlLmNvcmtlZCl7c3RhdGUuY29ya2VkLS07aWYoIXN0YXRlLndyaXRpbmcmJiFzdGF0ZS5jb3JrZWQmJiFzdGF0ZS5maW5pc2hlZCYmIXN0YXRlLmJ1ZmZlclByb2Nlc3NpbmcmJnN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCljbGVhckJ1ZmZlcih0aGlzLHN0YXRlKX19O1dyaXRhYmxlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2Rpbmc9ZnVuY3Rpb24gc2V0RGVmYXVsdEVuY29kaW5nKGVuY29kaW5nKXtpZih0eXBlb2YgZW5jb2Rpbmc9PT1cInN0cmluZ1wiKWVuY29kaW5nPWVuY29kaW5nLnRvTG93ZXJDYXNlKCk7aWYoIShbXCJoZXhcIixcInV0ZjhcIixcInV0Zi04XCIsXCJhc2NpaVwiLFwiYmluYXJ5XCIsXCJiYXNlNjRcIixcInVjczJcIixcInVjcy0yXCIsXCJ1dGYxNmxlXCIsXCJ1dGYtMTZsZVwiLFwicmF3XCJdLmluZGV4T2YoKGVuY29kaW5nK1wiXCIpLnRvTG93ZXJDYXNlKCkpPi0xKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrZW5jb2RpbmcpO3RoaXMuX3dyaXRhYmxlU3RhdGUuZGVmYXVsdEVuY29kaW5nPWVuY29kaW5nO3JldHVybiB0aGlzfTtmdW5jdGlvbiBkZWNvZGVDaHVuayhzdGF0ZSxjaHVuayxlbmNvZGluZyl7aWYoIXN0YXRlLm9iamVjdE1vZGUmJnN0YXRlLmRlY29kZVN0cmluZ3MhPT1mYWxzZSYmdHlwZW9mIGNodW5rPT09XCJzdHJpbmdcIil7Y2h1bms9QnVmZmVyLmZyb20oY2h1bmssZW5jb2RpbmcpfXJldHVybiBjaHVua31PYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUucHJvdG90eXBlLFwid3JpdGFibGVIaWdoV2F0ZXJNYXJrXCIse2VudW1lcmFibGU6ZmFsc2UsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KTtmdW5jdGlvbiB3cml0ZU9yQnVmZmVyKHN0cmVhbSxzdGF0ZSxpc0J1ZixjaHVuayxlbmNvZGluZyxjYil7aWYoIWlzQnVmKXt2YXIgbmV3Q2h1bms9ZGVjb2RlQ2h1bmsoc3RhdGUsY2h1bmssZW5jb2RpbmcpO2lmKGNodW5rIT09bmV3Q2h1bmspe2lzQnVmPXRydWU7ZW5jb2Rpbmc9XCJidWZmZXJcIjtjaHVuaz1uZXdDaHVua319dmFyIGxlbj1zdGF0ZS5vYmplY3RNb2RlPzE6Y2h1bmsubGVuZ3RoO3N0YXRlLmxlbmd0aCs9bGVuO3ZhciByZXQ9c3RhdGUubGVuZ3RoPHN0YXRlLmhpZ2hXYXRlck1hcms7aWYoIXJldClzdGF0ZS5uZWVkRHJhaW49dHJ1ZTtpZihzdGF0ZS53cml0aW5nfHxzdGF0ZS5jb3JrZWQpe3ZhciBsYXN0PXN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q7c3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD17Y2h1bms6Y2h1bmssZW5jb2Rpbmc6ZW5jb2RpbmcsaXNCdWY6aXNCdWYsY2FsbGJhY2s6Y2IsbmV4dDpudWxsfTtpZihsYXN0KXtsYXN0Lm5leHQ9c3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdH1lbHNle3N0YXRlLmJ1ZmZlcmVkUmVxdWVzdD1zdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0fXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdENvdW50Kz0xfWVsc2V7ZG9Xcml0ZShzdHJlYW0sc3RhdGUsZmFsc2UsbGVuLGNodW5rLGVuY29kaW5nLGNiKX1yZXR1cm4gcmV0fWZ1bmN0aW9uIGRvV3JpdGUoc3RyZWFtLHN0YXRlLHdyaXRldixsZW4sY2h1bmssZW5jb2RpbmcsY2Ipe3N0YXRlLndyaXRlbGVuPWxlbjtzdGF0ZS53cml0ZWNiPWNiO3N0YXRlLndyaXRpbmc9dHJ1ZTtzdGF0ZS5zeW5jPXRydWU7aWYod3JpdGV2KXN0cmVhbS5fd3JpdGV2KGNodW5rLHN0YXRlLm9ud3JpdGUpO2Vsc2Ugc3RyZWFtLl93cml0ZShjaHVuayxlbmNvZGluZyxzdGF0ZS5vbndyaXRlKTtzdGF0ZS5zeW5jPWZhbHNlfWZ1bmN0aW9uIG9ud3JpdGVFcnJvcihzdHJlYW0sc3RhdGUsc3luYyxlcixjYil7LS1zdGF0ZS5wZW5kaW5nY2I7aWYoc3luYyl7cG5hLm5leHRUaWNrKGNiLGVyKTtwbmEubmV4dFRpY2soZmluaXNoTWF5YmUsc3RyZWFtLHN0YXRlKTtzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPXRydWU7c3RyZWFtLmVtaXQoXCJlcnJvclwiLGVyKX1lbHNle2NiKGVyKTtzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPXRydWU7c3RyZWFtLmVtaXQoXCJlcnJvclwiLGVyKTtmaW5pc2hNYXliZShzdHJlYW0sc3RhdGUpfX1mdW5jdGlvbiBvbndyaXRlU3RhdGVVcGRhdGUoc3RhdGUpe3N0YXRlLndyaXRpbmc9ZmFsc2U7c3RhdGUud3JpdGVjYj1udWxsO3N0YXRlLmxlbmd0aC09c3RhdGUud3JpdGVsZW47c3RhdGUud3JpdGVsZW49MH1mdW5jdGlvbiBvbndyaXRlKHN0cmVhbSxlcil7dmFyIHN0YXRlPXN0cmVhbS5fd3JpdGFibGVTdGF0ZTt2YXIgc3luYz1zdGF0ZS5zeW5jO3ZhciBjYj1zdGF0ZS53cml0ZWNiO29ud3JpdGVTdGF0ZVVwZGF0ZShzdGF0ZSk7aWYoZXIpb253cml0ZUVycm9yKHN0cmVhbSxzdGF0ZSxzeW5jLGVyLGNiKTtlbHNle3ZhciBmaW5pc2hlZD1uZWVkRmluaXNoKHN0YXRlKTtpZighZmluaXNoZWQmJiFzdGF0ZS5jb3JrZWQmJiFzdGF0ZS5idWZmZXJQcm9jZXNzaW5nJiZzdGF0ZS5idWZmZXJlZFJlcXVlc3Qpe2NsZWFyQnVmZmVyKHN0cmVhbSxzdGF0ZSl9aWYoc3luYyl7YXN5bmNXcml0ZShhZnRlcldyaXRlLHN0cmVhbSxzdGF0ZSxmaW5pc2hlZCxjYil9ZWxzZXthZnRlcldyaXRlKHN0cmVhbSxzdGF0ZSxmaW5pc2hlZCxjYil9fX1mdW5jdGlvbiBhZnRlcldyaXRlKHN0cmVhbSxzdGF0ZSxmaW5pc2hlZCxjYil7aWYoIWZpbmlzaGVkKW9ud3JpdGVEcmFpbihzdHJlYW0sc3RhdGUpO3N0YXRlLnBlbmRpbmdjYi0tO2NiKCk7ZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKX1mdW5jdGlvbiBvbndyaXRlRHJhaW4oc3RyZWFtLHN0YXRlKXtpZihzdGF0ZS5sZW5ndGg9PT0wJiZzdGF0ZS5uZWVkRHJhaW4pe3N0YXRlLm5lZWREcmFpbj1mYWxzZTtzdHJlYW0uZW1pdChcImRyYWluXCIpfX1mdW5jdGlvbiBjbGVhckJ1ZmZlcihzdHJlYW0sc3RhdGUpe3N0YXRlLmJ1ZmZlclByb2Nlc3Npbmc9dHJ1ZTt2YXIgZW50cnk9c3RhdGUuYnVmZmVyZWRSZXF1ZXN0O2lmKHN0cmVhbS5fd3JpdGV2JiZlbnRyeSYmZW50cnkubmV4dCl7dmFyIGw9c3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ7dmFyIGJ1ZmZlcj1uZXcgQXJyYXkobCk7dmFyIGhvbGRlcj1zdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU7aG9sZGVyLmVudHJ5PWVudHJ5O3ZhciBjb3VudD0wO3ZhciBhbGxCdWZmZXJzPXRydWU7d2hpbGUoZW50cnkpe2J1ZmZlcltjb3VudF09ZW50cnk7aWYoIWVudHJ5LmlzQnVmKWFsbEJ1ZmZlcnM9ZmFsc2U7ZW50cnk9ZW50cnkubmV4dDtjb3VudCs9MX1idWZmZXIuYWxsQnVmZmVycz1hbGxCdWZmZXJzO2RvV3JpdGUoc3RyZWFtLHN0YXRlLHRydWUsc3RhdGUubGVuZ3RoLGJ1ZmZlcixcIlwiLGhvbGRlci5maW5pc2gpO3N0YXRlLnBlbmRpbmdjYisrO3N0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbDtpZihob2xkZXIubmV4dCl7c3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlPWhvbGRlci5uZXh0O2hvbGRlci5uZXh0PW51bGx9ZWxzZXtzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU9bmV3IENvcmtlZFJlcXVlc3Qoc3RhdGUpfXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdENvdW50PTB9ZWxzZXt3aGlsZShlbnRyeSl7dmFyIGNodW5rPWVudHJ5LmNodW5rO3ZhciBlbmNvZGluZz1lbnRyeS5lbmNvZGluZzt2YXIgY2I9ZW50cnkuY2FsbGJhY2s7dmFyIGxlbj1zdGF0ZS5vYmplY3RNb2RlPzE6Y2h1bmsubGVuZ3RoO2RvV3JpdGUoc3RyZWFtLHN0YXRlLGZhbHNlLGxlbixjaHVuayxlbmNvZGluZyxjYik7ZW50cnk9ZW50cnkubmV4dDtzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudC0tO2lmKHN0YXRlLndyaXRpbmcpe2JyZWFrfX1pZihlbnRyeT09PW51bGwpc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsfXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdD1lbnRyeTtzdGF0ZS5idWZmZXJQcm9jZXNzaW5nPWZhbHNlfVdyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe2NiKG5ldyBFcnJvcihcIl93cml0ZSgpIGlzIG5vdCBpbXBsZW1lbnRlZFwiKSl9O1dyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGV2PW51bGw7V3JpdGFibGUucHJvdG90eXBlLmVuZD1mdW5jdGlvbihjaHVuayxlbmNvZGluZyxjYil7dmFyIHN0YXRlPXRoaXMuX3dyaXRhYmxlU3RhdGU7aWYodHlwZW9mIGNodW5rPT09XCJmdW5jdGlvblwiKXtjYj1jaHVuaztjaHVuaz1udWxsO2VuY29kaW5nPW51bGx9ZWxzZSBpZih0eXBlb2YgZW5jb2Rpbmc9PT1cImZ1bmN0aW9uXCIpe2NiPWVuY29kaW5nO2VuY29kaW5nPW51bGx9aWYoY2h1bmshPT1udWxsJiZjaHVuayE9PXVuZGVmaW5lZCl0aGlzLndyaXRlKGNodW5rLGVuY29kaW5nKTtpZihzdGF0ZS5jb3JrZWQpe3N0YXRlLmNvcmtlZD0xO3RoaXMudW5jb3JrKCl9aWYoIXN0YXRlLmVuZGluZyYmIXN0YXRlLmZpbmlzaGVkKWVuZFdyaXRhYmxlKHRoaXMsc3RhdGUsY2IpfTtmdW5jdGlvbiBuZWVkRmluaXNoKHN0YXRlKXtyZXR1cm4gc3RhdGUuZW5kaW5nJiZzdGF0ZS5sZW5ndGg9PT0wJiZzdGF0ZS5idWZmZXJlZFJlcXVlc3Q9PT1udWxsJiYhc3RhdGUuZmluaXNoZWQmJiFzdGF0ZS53cml0aW5nfWZ1bmN0aW9uIGNhbGxGaW5hbChzdHJlYW0sc3RhdGUpe3N0cmVhbS5fZmluYWwoZnVuY3Rpb24oZXJyKXtzdGF0ZS5wZW5kaW5nY2ItLTtpZihlcnIpe3N0cmVhbS5lbWl0KFwiZXJyb3JcIixlcnIpfXN0YXRlLnByZWZpbmlzaGVkPXRydWU7c3RyZWFtLmVtaXQoXCJwcmVmaW5pc2hcIik7ZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKX0pfWZ1bmN0aW9uIHByZWZpbmlzaChzdHJlYW0sc3RhdGUpe2lmKCFzdGF0ZS5wcmVmaW5pc2hlZCYmIXN0YXRlLmZpbmFsQ2FsbGVkKXtpZih0eXBlb2Ygc3RyZWFtLl9maW5hbD09PVwiZnVuY3Rpb25cIil7c3RhdGUucGVuZGluZ2NiKys7c3RhdGUuZmluYWxDYWxsZWQ9dHJ1ZTtwbmEubmV4dFRpY2soY2FsbEZpbmFsLHN0cmVhbSxzdGF0ZSl9ZWxzZXtzdGF0ZS5wcmVmaW5pc2hlZD10cnVlO3N0cmVhbS5lbWl0KFwicHJlZmluaXNoXCIpfX19ZnVuY3Rpb24gZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKXt2YXIgbmVlZD1uZWVkRmluaXNoKHN0YXRlKTtpZihuZWVkKXtwcmVmaW5pc2goc3RyZWFtLHN0YXRlKTtpZihzdGF0ZS5wZW5kaW5nY2I9PT0wKXtzdGF0ZS5maW5pc2hlZD10cnVlO3N0cmVhbS5lbWl0KFwiZmluaXNoXCIpfX1yZXR1cm4gbmVlZH1mdW5jdGlvbiBlbmRXcml0YWJsZShzdHJlYW0sc3RhdGUsY2Ipe3N0YXRlLmVuZGluZz10cnVlO2ZpbmlzaE1heWJlKHN0cmVhbSxzdGF0ZSk7aWYoY2Ipe2lmKHN0YXRlLmZpbmlzaGVkKXBuYS5uZXh0VGljayhjYik7ZWxzZSBzdHJlYW0ub25jZShcImZpbmlzaFwiLGNiKX1zdGF0ZS5lbmRlZD10cnVlO3N0cmVhbS53cml0YWJsZT1mYWxzZX1mdW5jdGlvbiBvbkNvcmtlZEZpbmlzaChjb3JrUmVxLHN0YXRlLGVycil7dmFyIGVudHJ5PWNvcmtSZXEuZW50cnk7Y29ya1JlcS5lbnRyeT1udWxsO3doaWxlKGVudHJ5KXt2YXIgY2I9ZW50cnkuY2FsbGJhY2s7c3RhdGUucGVuZGluZ2NiLS07Y2IoZXJyKTtlbnRyeT1lbnRyeS5uZXh0fWlmKHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZSl7c3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlLm5leHQ9Y29ya1JlcX1lbHNle3N0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZT1jb3JrUmVxfX1PYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2dldDpmdW5jdGlvbigpe2lmKHRoaXMuX3dyaXRhYmxlU3RhdGU9PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX1yZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbih2YWx1ZSl7aWYoIXRoaXMuX3dyaXRhYmxlU3RhdGUpe3JldHVybn10aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD12YWx1ZX19KTtXcml0YWJsZS5wcm90b3R5cGUuZGVzdHJveT1kZXN0cm95SW1wbC5kZXN0cm95O1dyaXRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95PWRlc3Ryb3lJbXBsLnVuZGVzdHJveTtXcml0YWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZXJyLGNiKXt0aGlzLmVuZCgpO2NiKGVycil9fSkuY2FsbCh0aGlzLHJlcXVpcmUoXCJfcHJvY2Vzc1wiKSx0eXBlb2YgZ2xvYmFsIT09XCJ1bmRlZmluZWRcIj9nbG9iYWw6dHlwZW9mIHNlbGYhPT1cInVuZGVmaW5lZFwiP3NlbGY6dHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCI/d2luZG93Ont9LHJlcXVpcmUoXCJ0aW1lcnNcIikuc2V0SW1tZWRpYXRlKX0se1wiLi9fc3RyZWFtX2R1cGxleFwiOjk4LFwiLi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3lcIjoxMDQsXCIuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtXCI6MTA1LF9wcm9jZXNzOjkyLFwiY29yZS11dGlsLWlzXCI6MTQsaW5oZXJpdHM6ODAsXCJwcm9jZXNzLW5leHRpY2stYXJnc1wiOjkxLFwic2FmZS1idWZmZXJcIjoxMTAsdGltZXJzOjExMixcInV0aWwtZGVwcmVjYXRlXCI6MTE1fV0sMTAzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsQ29uc3RydWN0b3Ipe2lmKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3Rvcikpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9fXZhciBCdWZmZXI9cmVxdWlyZShcInNhZmUtYnVmZmVyXCIpLkJ1ZmZlcjt2YXIgdXRpbD1yZXF1aXJlKFwidXRpbFwiKTtmdW5jdGlvbiBjb3B5QnVmZmVyKHNyYyx0YXJnZXQsb2Zmc2V0KXtzcmMuY29weSh0YXJnZXQsb2Zmc2V0KX1tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIEJ1ZmZlckxpc3QoKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxCdWZmZXJMaXN0KTt0aGlzLmhlYWQ9bnVsbDt0aGlzLnRhaWw9bnVsbDt0aGlzLmxlbmd0aD0wfUJ1ZmZlckxpc3QucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24gcHVzaCh2KXt2YXIgZW50cnk9e2RhdGE6dixuZXh0Om51bGx9O2lmKHRoaXMubGVuZ3RoPjApdGhpcy50YWlsLm5leHQ9ZW50cnk7ZWxzZSB0aGlzLmhlYWQ9ZW50cnk7dGhpcy50YWlsPWVudHJ5OysrdGhpcy5sZW5ndGh9O0J1ZmZlckxpc3QucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24gdW5zaGlmdCh2KXt2YXIgZW50cnk9e2RhdGE6dixuZXh0OnRoaXMuaGVhZH07aWYodGhpcy5sZW5ndGg9PT0wKXRoaXMudGFpbD1lbnRyeTt0aGlzLmhlYWQ9ZW50cnk7Kyt0aGlzLmxlbmd0aH07QnVmZmVyTGlzdC5wcm90b3R5cGUuc2hpZnQ9ZnVuY3Rpb24gc2hpZnQoKXtpZih0aGlzLmxlbmd0aD09PTApcmV0dXJuO3ZhciByZXQ9dGhpcy5oZWFkLmRhdGE7aWYodGhpcy5sZW5ndGg9PT0xKXRoaXMuaGVhZD10aGlzLnRhaWw9bnVsbDtlbHNlIHRoaXMuaGVhZD10aGlzLmhlYWQubmV4dDstLXRoaXMubGVuZ3RoO3JldHVybiByZXR9O0J1ZmZlckxpc3QucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uIGNsZWFyKCl7dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsO3RoaXMubGVuZ3RoPTB9O0J1ZmZlckxpc3QucHJvdG90eXBlLmpvaW49ZnVuY3Rpb24gam9pbihzKXtpZih0aGlzLmxlbmd0aD09PTApcmV0dXJuXCJcIjt2YXIgcD10aGlzLmhlYWQ7dmFyIHJldD1cIlwiK3AuZGF0YTt3aGlsZShwPXAubmV4dCl7cmV0Kz1zK3AuZGF0YX1yZXR1cm4gcmV0fTtCdWZmZXJMaXN0LnByb3RvdHlwZS5jb25jYXQ9ZnVuY3Rpb24gY29uY2F0KG4pe2lmKHRoaXMubGVuZ3RoPT09MClyZXR1cm4gQnVmZmVyLmFsbG9jKDApO2lmKHRoaXMubGVuZ3RoPT09MSlyZXR1cm4gdGhpcy5oZWFkLmRhdGE7dmFyIHJldD1CdWZmZXIuYWxsb2NVbnNhZmUobj4+PjApO3ZhciBwPXRoaXMuaGVhZDt2YXIgaT0wO3doaWxlKHApe2NvcHlCdWZmZXIocC5kYXRhLHJldCxpKTtpKz1wLmRhdGEubGVuZ3RoO3A9cC5uZXh0fXJldHVybiByZXR9O3JldHVybiBCdWZmZXJMaXN0fSgpO2lmKHV0aWwmJnV0aWwuaW5zcGVjdCYmdXRpbC5pbnNwZWN0LmN1c3RvbSl7bW9kdWxlLmV4cG9ydHMucHJvdG90eXBlW3V0aWwuaW5zcGVjdC5jdXN0b21dPWZ1bmN0aW9uKCl7dmFyIG9iaj11dGlsLmluc3BlY3Qoe2xlbmd0aDp0aGlzLmxlbmd0aH0pO3JldHVybiB0aGlzLmNvbnN0cnVjdG9yLm5hbWUrXCIgXCIrb2JqfX19LHtcInNhZmUtYnVmZmVyXCI6MTEwLHV0aWw6MTF9XSwxMDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBwbmE9cmVxdWlyZShcInByb2Nlc3MtbmV4dGljay1hcmdzXCIpO2Z1bmN0aW9uIGRlc3Ryb3koZXJyLGNiKXt2YXIgX3RoaXM9dGhpczt2YXIgcmVhZGFibGVEZXN0cm95ZWQ9dGhpcy5fcmVhZGFibGVTdGF0ZSYmdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ7dmFyIHdyaXRhYmxlRGVzdHJveWVkPXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO2lmKHJlYWRhYmxlRGVzdHJveWVkfHx3cml0YWJsZURlc3Ryb3llZCl7aWYoY2Ipe2NiKGVycil9ZWxzZSBpZihlcnImJighdGhpcy5fd3JpdGFibGVTdGF0ZXx8IXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSl7cG5hLm5leHRUaWNrKGVtaXRFcnJvck5ULHRoaXMsZXJyKX1yZXR1cm4gdGhpc31pZih0aGlzLl9yZWFkYWJsZVN0YXRlKXt0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD10cnVlfWlmKHRoaXMuX3dyaXRhYmxlU3RhdGUpe3RoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPXRydWV9dGhpcy5fZGVzdHJveShlcnJ8fG51bGwsZnVuY3Rpb24oZXJyKXtpZighY2ImJmVycil7cG5hLm5leHRUaWNrKGVtaXRFcnJvck5ULF90aGlzLGVycik7aWYoX3RoaXMuX3dyaXRhYmxlU3RhdGUpe190aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD10cnVlfX1lbHNlIGlmKGNiKXtjYihlcnIpfX0pO3JldHVybiB0aGlzfWZ1bmN0aW9uIHVuZGVzdHJveSgpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGUpe3RoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPWZhbHNlO3RoaXMuX3JlYWRhYmxlU3RhdGUucmVhZGluZz1mYWxzZTt0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkPWZhbHNlO3RoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZD1mYWxzZX1pZih0aGlzLl93cml0YWJsZVN0YXRlKXt0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD1mYWxzZTt0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPWZhbHNlO3RoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPWZhbHNlO3RoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQ9ZmFsc2U7dGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ZmFsc2V9fWZ1bmN0aW9uIGVtaXRFcnJvck5UKHNlbGYsZXJyKXtzZWxmLmVtaXQoXCJlcnJvclwiLGVycil9bW9kdWxlLmV4cG9ydHM9e2Rlc3Ryb3k6ZGVzdHJveSx1bmRlc3Ryb3k6dW5kZXN0cm95fX0se1wicHJvY2Vzcy1uZXh0aWNrLWFyZ3NcIjo5MX1dLDEwNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcImV2ZW50c1wiKS5FdmVudEVtaXR0ZXJ9LHtldmVudHM6MTN9XSwxMDY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe3ZhciB0b1N0cmluZz17fS50b1N0cmluZzttb2R1bGUuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihhcnIpe3JldHVybiB0b1N0cmluZy5jYWxsKGFycik9PVwiW29iamVjdCBBcnJheV1cIn19LHt9XSwxMDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBCdWZmZXI9cmVxdWlyZShcInNhZmUtYnVmZmVyXCIpLkJ1ZmZlcjt2YXIgaXNFbmNvZGluZz1CdWZmZXIuaXNFbmNvZGluZ3x8ZnVuY3Rpb24oZW5jb2Rpbmcpe2VuY29kaW5nPVwiXCIrZW5jb2Rpbmc7c3dpdGNoKGVuY29kaW5nJiZlbmNvZGluZy50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOmNhc2VcInJhd1wiOnJldHVybiB0cnVlO2RlZmF1bHQ6cmV0dXJuIGZhbHNlfX07ZnVuY3Rpb24gX25vcm1hbGl6ZUVuY29kaW5nKGVuYyl7aWYoIWVuYylyZXR1cm5cInV0ZjhcIjt2YXIgcmV0cmllZDt3aGlsZSh0cnVlKXtzd2l0Y2goZW5jKXtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm5cInV0ZjhcIjtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm5cInV0ZjE2bGVcIjtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm5cImxhdGluMVwiO2Nhc2VcImJhc2U2NFwiOmNhc2VcImFzY2lpXCI6Y2FzZVwiaGV4XCI6cmV0dXJuIGVuYztkZWZhdWx0OmlmKHJldHJpZWQpcmV0dXJuO2VuYz0oXCJcIitlbmMpLnRvTG93ZXJDYXNlKCk7cmV0cmllZD10cnVlfX19ZnVuY3Rpb24gbm9ybWFsaXplRW5jb2RpbmcoZW5jKXt2YXIgbmVuYz1fbm9ybWFsaXplRW5jb2RpbmcoZW5jKTtpZih0eXBlb2YgbmVuYyE9PVwic3RyaW5nXCImJihCdWZmZXIuaXNFbmNvZGluZz09PWlzRW5jb2Rpbmd8fCFpc0VuY29kaW5nKGVuYykpKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2VuYyk7cmV0dXJuIG5lbmN8fGVuY31leHBvcnRzLlN0cmluZ0RlY29kZXI9U3RyaW5nRGVjb2RlcjtmdW5jdGlvbiBTdHJpbmdEZWNvZGVyKGVuY29kaW5nKXt0aGlzLmVuY29kaW5nPW5vcm1hbGl6ZUVuY29kaW5nKGVuY29kaW5nKTt2YXIgbmI7c3dpdGNoKHRoaXMuZW5jb2Rpbmcpe2Nhc2VcInV0ZjE2bGVcIjp0aGlzLnRleHQ9dXRmMTZUZXh0O3RoaXMuZW5kPXV0ZjE2RW5kO25iPTQ7YnJlYWs7Y2FzZVwidXRmOFwiOnRoaXMuZmlsbExhc3Q9dXRmOEZpbGxMYXN0O25iPTQ7YnJlYWs7Y2FzZVwiYmFzZTY0XCI6dGhpcy50ZXh0PWJhc2U2NFRleHQ7dGhpcy5lbmQ9YmFzZTY0RW5kO25iPTM7YnJlYWs7ZGVmYXVsdDp0aGlzLndyaXRlPXNpbXBsZVdyaXRlO3RoaXMuZW5kPXNpbXBsZUVuZDtyZXR1cm59dGhpcy5sYXN0TmVlZD0wO3RoaXMubGFzdFRvdGFsPTA7dGhpcy5sYXN0Q2hhcj1CdWZmZXIuYWxsb2NVbnNhZmUobmIpfVN0cmluZ0RlY29kZXIucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKGJ1Zil7aWYoYnVmLmxlbmd0aD09PTApcmV0dXJuXCJcIjt2YXIgcjt2YXIgaTtpZih0aGlzLmxhc3ROZWVkKXtyPXRoaXMuZmlsbExhc3QoYnVmKTtpZihyPT09dW5kZWZpbmVkKXJldHVyblwiXCI7aT10aGlzLmxhc3ROZWVkO3RoaXMubGFzdE5lZWQ9MH1lbHNle2k9MH1pZihpPGJ1Zi5sZW5ndGgpcmV0dXJuIHI/cit0aGlzLnRleHQoYnVmLGkpOnRoaXMudGV4dChidWYsaSk7cmV0dXJuIHJ8fFwiXCJ9O1N0cmluZ0RlY29kZXIucHJvdG90eXBlLmVuZD11dGY4RW5kO1N0cmluZ0RlY29kZXIucHJvdG90eXBlLnRleHQ9dXRmOFRleHQ7U3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZmlsbExhc3Q9ZnVuY3Rpb24oYnVmKXtpZih0aGlzLmxhc3ROZWVkPD1idWYubGVuZ3RoKXtidWYuY29weSh0aGlzLmxhc3RDaGFyLHRoaXMubGFzdFRvdGFsLXRoaXMubGFzdE5lZWQsMCx0aGlzLmxhc3ROZWVkKTtyZXR1cm4gdGhpcy5sYXN0Q2hhci50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsdGhpcy5sYXN0VG90YWwpfWJ1Zi5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLGJ1Zi5sZW5ndGgpO3RoaXMubGFzdE5lZWQtPWJ1Zi5sZW5ndGh9O2Z1bmN0aW9uIHV0ZjhDaGVja0J5dGUoYnl0ZSl7aWYoYnl0ZTw9MTI3KXJldHVybiAwO2Vsc2UgaWYoYnl0ZT4+NT09PTYpcmV0dXJuIDI7ZWxzZSBpZihieXRlPj40PT09MTQpcmV0dXJuIDM7ZWxzZSBpZihieXRlPj4zPT09MzApcmV0dXJuIDQ7cmV0dXJuIGJ5dGU+PjY9PT0yPy0xOi0yfWZ1bmN0aW9uIHV0ZjhDaGVja0luY29tcGxldGUoc2VsZixidWYsaSl7dmFyIGo9YnVmLmxlbmd0aC0xO2lmKGo8aSlyZXR1cm4gMDt2YXIgbmI9dXRmOENoZWNrQnl0ZShidWZbal0pO2lmKG5iPj0wKXtpZihuYj4wKXNlbGYubGFzdE5lZWQ9bmItMTtyZXR1cm4gbmJ9aWYoLS1qPGl8fG5iPT09LTIpcmV0dXJuIDA7bmI9dXRmOENoZWNrQnl0ZShidWZbal0pO2lmKG5iPj0wKXtpZihuYj4wKXNlbGYubGFzdE5lZWQ9bmItMjtyZXR1cm4gbmJ9aWYoLS1qPGl8fG5iPT09LTIpcmV0dXJuIDA7bmI9dXRmOENoZWNrQnl0ZShidWZbal0pO2lmKG5iPj0wKXtpZihuYj4wKXtpZihuYj09PTIpbmI9MDtlbHNlIHNlbGYubGFzdE5lZWQ9bmItM31yZXR1cm4gbmJ9cmV0dXJuIDB9ZnVuY3Rpb24gdXRmOENoZWNrRXh0cmFCeXRlcyhzZWxmLGJ1ZixwKXtpZigoYnVmWzBdJjE5MikhPT0xMjgpe3NlbGYubGFzdE5lZWQ9MDtyZXR1cm5cIu+/vVwifWlmKHNlbGYubGFzdE5lZWQ+MSYmYnVmLmxlbmd0aD4xKXtpZigoYnVmWzFdJjE5MikhPT0xMjgpe3NlbGYubGFzdE5lZWQ9MTtyZXR1cm5cIu+/vVwifWlmKHNlbGYubGFzdE5lZWQ+MiYmYnVmLmxlbmd0aD4yKXtpZigoYnVmWzJdJjE5MikhPT0xMjgpe3NlbGYubGFzdE5lZWQ9MjtyZXR1cm5cIu+/vVwifX19fWZ1bmN0aW9uIHV0ZjhGaWxsTGFzdChidWYpe3ZhciBwPXRoaXMubGFzdFRvdGFsLXRoaXMubGFzdE5lZWQ7dmFyIHI9dXRmOENoZWNrRXh0cmFCeXRlcyh0aGlzLGJ1ZixwKTtpZihyIT09dW5kZWZpbmVkKXJldHVybiByO2lmKHRoaXMubGFzdE5lZWQ8PWJ1Zi5sZW5ndGgpe2J1Zi5jb3B5KHRoaXMubGFzdENoYXIscCwwLHRoaXMubGFzdE5lZWQpO3JldHVybiB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsMCx0aGlzLmxhc3RUb3RhbCl9YnVmLmNvcHkodGhpcy5sYXN0Q2hhcixwLDAsYnVmLmxlbmd0aCk7dGhpcy5sYXN0TmVlZC09YnVmLmxlbmd0aH1mdW5jdGlvbiB1dGY4VGV4dChidWYsaSl7dmFyIHRvdGFsPXV0ZjhDaGVja0luY29tcGxldGUodGhpcyxidWYsaSk7aWYoIXRoaXMubGFzdE5lZWQpcmV0dXJuIGJ1Zi50b1N0cmluZyhcInV0ZjhcIixpKTt0aGlzLmxhc3RUb3RhbD10b3RhbDt2YXIgZW5kPWJ1Zi5sZW5ndGgtKHRvdGFsLXRoaXMubGFzdE5lZWQpO2J1Zi5jb3B5KHRoaXMubGFzdENoYXIsMCxlbmQpO3JldHVybiBidWYudG9TdHJpbmcoXCJ1dGY4XCIsaSxlbmQpfWZ1bmN0aW9uIHV0ZjhFbmQoYnVmKXt2YXIgcj1idWYmJmJ1Zi5sZW5ndGg/dGhpcy53cml0ZShidWYpOlwiXCI7aWYodGhpcy5sYXN0TmVlZClyZXR1cm4gcitcIu+/vVwiO3JldHVybiByfWZ1bmN0aW9uIHV0ZjE2VGV4dChidWYsaSl7aWYoKGJ1Zi5sZW5ndGgtaSklMj09PTApe3ZhciByPWJ1Zi50b1N0cmluZyhcInV0ZjE2bGVcIixpKTtpZihyKXt2YXIgYz1yLmNoYXJDb2RlQXQoci5sZW5ndGgtMSk7aWYoYz49NTUyOTYmJmM8PTU2MzE5KXt0aGlzLmxhc3ROZWVkPTI7dGhpcy5sYXN0VG90YWw9NDt0aGlzLmxhc3RDaGFyWzBdPWJ1ZltidWYubGVuZ3RoLTJdO3RoaXMubGFzdENoYXJbMV09YnVmW2J1Zi5sZW5ndGgtMV07cmV0dXJuIHIuc2xpY2UoMCwtMSl9fXJldHVybiByfXRoaXMubGFzdE5lZWQ9MTt0aGlzLmxhc3RUb3RhbD0yO3RoaXMubGFzdENoYXJbMF09YnVmW2J1Zi5sZW5ndGgtMV07cmV0dXJuIGJ1Zi50b1N0cmluZyhcInV0ZjE2bGVcIixpLGJ1Zi5sZW5ndGgtMSl9ZnVuY3Rpb24gdXRmMTZFbmQoYnVmKXt2YXIgcj1idWYmJmJ1Zi5sZW5ndGg/dGhpcy53cml0ZShidWYpOlwiXCI7aWYodGhpcy5sYXN0TmVlZCl7dmFyIGVuZD10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3JldHVybiByK3RoaXMubGFzdENoYXIudG9TdHJpbmcoXCJ1dGYxNmxlXCIsMCxlbmQpfXJldHVybiByfWZ1bmN0aW9uIGJhc2U2NFRleHQoYnVmLGkpe3ZhciBuPShidWYubGVuZ3RoLWkpJTM7aWYobj09PTApcmV0dXJuIGJ1Zi50b1N0cmluZyhcImJhc2U2NFwiLGkpO3RoaXMubGFzdE5lZWQ9My1uO3RoaXMubGFzdFRvdGFsPTM7aWYobj09PTEpe3RoaXMubGFzdENoYXJbMF09YnVmW2J1Zi5sZW5ndGgtMV19ZWxzZXt0aGlzLmxhc3RDaGFyWzBdPWJ1ZltidWYubGVuZ3RoLTJdO3RoaXMubGFzdENoYXJbMV09YnVmW2J1Zi5sZW5ndGgtMV19cmV0dXJuIGJ1Zi50b1N0cmluZyhcImJhc2U2NFwiLGksYnVmLmxlbmd0aC1uKX1mdW5jdGlvbiBiYXNlNjRFbmQoYnVmKXt2YXIgcj1idWYmJmJ1Zi5sZW5ndGg/dGhpcy53cml0ZShidWYpOlwiXCI7aWYodGhpcy5sYXN0TmVlZClyZXR1cm4gcit0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKFwiYmFzZTY0XCIsMCwzLXRoaXMubGFzdE5lZWQpO3JldHVybiByfWZ1bmN0aW9uIHNpbXBsZVdyaXRlKGJ1Zil7cmV0dXJuIGJ1Zi50b1N0cmluZyh0aGlzLmVuY29kaW5nKX1mdW5jdGlvbiBzaW1wbGVFbmQoYnVmKXtyZXR1cm4gYnVmJiZidWYubGVuZ3RoP3RoaXMud3JpdGUoYnVmKTpcIlwifX0se1wic2FmZS1idWZmZXJcIjoxMTB9XSwxMDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe2V4cG9ydHM9bW9kdWxlLmV4cG9ydHM9cmVxdWlyZShcIi4vbGliL19zdHJlYW1fcmVhZGFibGUuanNcIik7ZXhwb3J0cy5TdHJlYW09ZXhwb3J0cztleHBvcnRzLlJlYWRhYmxlPWV4cG9ydHM7ZXhwb3J0cy5Xcml0YWJsZT1yZXF1aXJlKFwiLi9saWIvX3N0cmVhbV93cml0YWJsZS5qc1wiKTtleHBvcnRzLkR1cGxleD1yZXF1aXJlKFwiLi9saWIvX3N0cmVhbV9kdXBsZXguanNcIik7ZXhwb3J0cy5UcmFuc2Zvcm09cmVxdWlyZShcIi4vbGliL19zdHJlYW1fdHJhbnNmb3JtLmpzXCIpO2V4cG9ydHMuUGFzc1Rocm91Z2g9cmVxdWlyZShcIi4vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanNcIil9LHtcIi4vbGliL19zdHJlYW1fZHVwbGV4LmpzXCI6OTgsXCIuL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzXCI6OTksXCIuL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzXCI6MTAwLFwiLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanNcIjoxMDEsXCIuL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzXCI6MTAyfV0sMTA5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBSZUludGVydmFsKGNhbGxiYWNrLGludGVydmFsLGFyZ3Mpe3ZhciBzZWxmPXRoaXM7dGhpcy5fY2FsbGJhY2s9Y2FsbGJhY2s7dGhpcy5fYXJncz1hcmdzO3RoaXMuX2ludGVydmFsPXNldEludGVydmFsKGNhbGxiYWNrLGludGVydmFsLHRoaXMuX2FyZ3MpO3RoaXMucmVzY2hlZHVsZT1mdW5jdGlvbihpbnRlcnZhbCl7aWYoIWludGVydmFsKWludGVydmFsPXNlbGYuX2ludGVydmFsO2lmKHNlbGYuX2ludGVydmFsKWNsZWFySW50ZXJ2YWwoc2VsZi5faW50ZXJ2YWwpO3NlbGYuX2ludGVydmFsPXNldEludGVydmFsKHNlbGYuX2NhbGxiYWNrLGludGVydmFsLHNlbGYuX2FyZ3MpfTt0aGlzLmNsZWFyPWZ1bmN0aW9uKCl7aWYoc2VsZi5faW50ZXJ2YWwpe2NsZWFySW50ZXJ2YWwoc2VsZi5faW50ZXJ2YWwpO3NlbGYuX2ludGVydmFsPXVuZGVmaW5lZH19O3RoaXMuZGVzdHJveT1mdW5jdGlvbigpe2lmKHNlbGYuX2ludGVydmFsKXtjbGVhckludGVydmFsKHNlbGYuX2ludGVydmFsKX1zZWxmLl9jYWxsYmFjaz11bmRlZmluZWQ7c2VsZi5faW50ZXJ2YWw9dW5kZWZpbmVkO3NlbGYuX2FyZ3M9dW5kZWZpbmVkfX1mdW5jdGlvbiByZUludGVydmFsKCl7aWYodHlwZW9mIGFyZ3VtZW50c1swXSE9PVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgRXJyb3IoXCJjYWxsYmFjayBuZWVkZWRcIik7aWYodHlwZW9mIGFyZ3VtZW50c1sxXSE9PVwibnVtYmVyXCIpdGhyb3cgbmV3IEVycm9yKFwiaW50ZXJ2YWwgbmVlZGVkXCIpO3ZhciBhcmdzO2lmKGFyZ3VtZW50cy5sZW5ndGg+MCl7YXJncz1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0yKTtmb3IodmFyIGk9MDtpPGFyZ3MubGVuZ3RoO2krKyl7YXJnc1tpXT1hcmd1bWVudHNbaSsyXX19cmV0dXJuIG5ldyBSZUludGVydmFsKGFyZ3VtZW50c1swXSxhcmd1bWVudHNbMV0sYXJncyl9bW9kdWxlLmV4cG9ydHM9cmVJbnRlcnZhbH0se31dLDExMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIGJ1ZmZlcj1yZXF1aXJlKFwiYnVmZmVyXCIpO3ZhciBCdWZmZXI9YnVmZmVyLkJ1ZmZlcjtmdW5jdGlvbiBjb3B5UHJvcHMoc3JjLGRzdCl7Zm9yKHZhciBrZXkgaW4gc3JjKXtkc3Rba2V5XT1zcmNba2V5XX19aWYoQnVmZmVyLmZyb20mJkJ1ZmZlci5hbGxvYyYmQnVmZmVyLmFsbG9jVW5zYWZlJiZCdWZmZXIuYWxsb2NVbnNhZmVTbG93KXttb2R1bGUuZXhwb3J0cz1idWZmZXJ9ZWxzZXtjb3B5UHJvcHMoYnVmZmVyLGV4cG9ydHMpO2V4cG9ydHMuQnVmZmVyPVNhZmVCdWZmZXJ9ZnVuY3Rpb24gU2FmZUJ1ZmZlcihhcmcsZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpe3JldHVybiBCdWZmZXIoYXJnLGVuY29kaW5nT3JPZmZzZXQsbGVuZ3RoKX1jb3B5UHJvcHMoQnVmZmVyLFNhZmVCdWZmZXIpO1NhZmVCdWZmZXIuZnJvbT1mdW5jdGlvbihhcmcsZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpe2lmKHR5cGVvZiBhcmc9PT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXJcIil9cmV0dXJuIEJ1ZmZlcihhcmcsZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpfTtTYWZlQnVmZmVyLmFsbG9jPWZ1bmN0aW9uKHNpemUsZmlsbCxlbmNvZGluZyl7aWYodHlwZW9mIHNpemUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKX12YXIgYnVmPUJ1ZmZlcihzaXplKTtpZihmaWxsIT09dW5kZWZpbmVkKXtpZih0eXBlb2YgZW5jb2Rpbmc9PT1cInN0cmluZ1wiKXtidWYuZmlsbChmaWxsLGVuY29kaW5nKX1lbHNle2J1Zi5maWxsKGZpbGwpfX1lbHNle2J1Zi5maWxsKDApfXJldHVybiBidWZ9O1NhZmVCdWZmZXIuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oc2l6ZSl7aWYodHlwZW9mIHNpemUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKX1yZXR1cm4gQnVmZmVyKHNpemUpfTtTYWZlQnVmZmVyLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbihzaXplKXtpZih0eXBlb2Ygc2l6ZSE9PVwibnVtYmVyXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyXCIpfXJldHVybiBidWZmZXIuU2xvd0J1ZmZlcihzaXplKX19LHtidWZmZXI6MTJ9XSwxMTE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPXNoaWZ0O2Z1bmN0aW9uIHNoaWZ0KHN0cmVhbSl7dmFyIHJzPXN0cmVhbS5fcmVhZGFibGVTdGF0ZTtpZighcnMpcmV0dXJuIG51bGw7cmV0dXJuIHJzLm9iamVjdE1vZGU/c3RyZWFtLnJlYWQoKTpzdHJlYW0ucmVhZChnZXRTdGF0ZUxlbmd0aChycykpfWZ1bmN0aW9uIGdldFN0YXRlTGVuZ3RoKHN0YXRlKXtpZihzdGF0ZS5idWZmZXIubGVuZ3RoKXtpZihzdGF0ZS5idWZmZXIuaGVhZCl7cmV0dXJuIHN0YXRlLmJ1ZmZlci5oZWFkLmRhdGEubGVuZ3RofXJldHVybiBzdGF0ZS5idWZmZXJbMF0ubGVuZ3RofXJldHVybiBzdGF0ZS5sZW5ndGh9fSx7fV0sMTEyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24oc2V0SW1tZWRpYXRlLGNsZWFySW1tZWRpYXRlKXt2YXIgbmV4dFRpY2s9cmVxdWlyZShcInByb2Nlc3MvYnJvd3Nlci5qc1wiKS5uZXh0VGljazt2YXIgYXBwbHk9RnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O3ZhciBzbGljZT1BcnJheS5wcm90b3R5cGUuc2xpY2U7dmFyIGltbWVkaWF0ZUlkcz17fTt2YXIgbmV4dEltbWVkaWF0ZUlkPTA7ZXhwb3J0cy5zZXRUaW1lb3V0PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCx3aW5kb3csYXJndW1lbnRzKSxjbGVhclRpbWVvdXQpfTtleHBvcnRzLnNldEludGVydmFsPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsd2luZG93LGFyZ3VtZW50cyksY2xlYXJJbnRlcnZhbCl9O2V4cG9ydHMuY2xlYXJUaW1lb3V0PWV4cG9ydHMuY2xlYXJJbnRlcnZhbD1mdW5jdGlvbih0aW1lb3V0KXt0aW1lb3V0LmNsb3NlKCl9O2Z1bmN0aW9uIFRpbWVvdXQoaWQsY2xlYXJGbil7dGhpcy5faWQ9aWQ7dGhpcy5fY2xlYXJGbj1jbGVhckZufVRpbWVvdXQucHJvdG90eXBlLnVucmVmPVRpbWVvdXQucHJvdG90eXBlLnJlZj1mdW5jdGlvbigpe307VGltZW91dC5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXt0aGlzLl9jbGVhckZuLmNhbGwod2luZG93LHRoaXMuX2lkKX07ZXhwb3J0cy5lbnJvbGw9ZnVuY3Rpb24oaXRlbSxtc2Vjcyl7Y2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO2l0ZW0uX2lkbGVUaW1lb3V0PW1zZWNzfTtleHBvcnRzLnVuZW5yb2xsPWZ1bmN0aW9uKGl0ZW0pe2NsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtpdGVtLl9pZGxlVGltZW91dD0tMX07ZXhwb3J0cy5fdW5yZWZBY3RpdmU9ZXhwb3J0cy5hY3RpdmU9ZnVuY3Rpb24oaXRlbSl7Y2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO3ZhciBtc2Vjcz1pdGVtLl9pZGxlVGltZW91dDtpZihtc2Vjcz49MCl7aXRlbS5faWRsZVRpbWVvdXRJZD1zZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpe2lmKGl0ZW0uX29uVGltZW91dClpdGVtLl9vblRpbWVvdXQoKX0sbXNlY3MpfX07ZXhwb3J0cy5zZXRJbW1lZGlhdGU9dHlwZW9mIHNldEltbWVkaWF0ZT09PVwiZnVuY3Rpb25cIj9zZXRJbW1lZGlhdGU6ZnVuY3Rpb24oZm4pe3ZhciBpZD1uZXh0SW1tZWRpYXRlSWQrKzt2YXIgYXJncz1hcmd1bWVudHMubGVuZ3RoPDI/ZmFsc2U6c2xpY2UuY2FsbChhcmd1bWVudHMsMSk7aW1tZWRpYXRlSWRzW2lkXT10cnVlO25leHRUaWNrKGZ1bmN0aW9uIG9uTmV4dFRpY2soKXtpZihpbW1lZGlhdGVJZHNbaWRdKXtpZihhcmdzKXtmbi5hcHBseShudWxsLGFyZ3MpfWVsc2V7Zm4uY2FsbChudWxsKX1leHBvcnRzLmNsZWFySW1tZWRpYXRlKGlkKX19KTtyZXR1cm4gaWR9O2V4cG9ydHMuY2xlYXJJbW1lZGlhdGU9dHlwZW9mIGNsZWFySW1tZWRpYXRlPT09XCJmdW5jdGlvblwiP2NsZWFySW1tZWRpYXRlOmZ1bmN0aW9uKGlkKXtkZWxldGUgaW1tZWRpYXRlSWRzW2lkXX19KS5jYWxsKHRoaXMscmVxdWlyZShcInRpbWVyc1wiKS5zZXRJbW1lZGlhdGUscmVxdWlyZShcInRpbWVyc1wiKS5jbGVhckltbWVkaWF0ZSl9LHtcInByb2Nlc3MvYnJvd3Nlci5qc1wiOjkyLHRpbWVyczoxMTJ9XSwxMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1widXNlIHN0cmljdFwiO3ZhciBwdW55Y29kZT1yZXF1aXJlKFwicHVueWNvZGVcIik7dmFyIHV0aWw9cmVxdWlyZShcIi4vdXRpbFwiKTtleHBvcnRzLnBhcnNlPXVybFBhcnNlO2V4cG9ydHMucmVzb2x2ZT11cmxSZXNvbHZlO2V4cG9ydHMucmVzb2x2ZU9iamVjdD11cmxSZXNvbHZlT2JqZWN0O2V4cG9ydHMuZm9ybWF0PXVybEZvcm1hdDtleHBvcnRzLlVybD1Vcmw7ZnVuY3Rpb24gVXJsKCl7dGhpcy5wcm90b2NvbD1udWxsO3RoaXMuc2xhc2hlcz1udWxsO3RoaXMuYXV0aD1udWxsO3RoaXMuaG9zdD1udWxsO3RoaXMucG9ydD1udWxsO3RoaXMuaG9zdG5hbWU9bnVsbDt0aGlzLmhhc2g9bnVsbDt0aGlzLnNlYXJjaD1udWxsO3RoaXMucXVlcnk9bnVsbDt0aGlzLnBhdGhuYW1lPW51bGw7dGhpcy5wYXRoPW51bGw7dGhpcy5ocmVmPW51bGx9dmFyIHByb3RvY29sUGF0dGVybj0vXihbYS16MC05ListXSs6KS9pLHBvcnRQYXR0ZXJuPS86WzAtOV0qJC8sc2ltcGxlUGF0aFBhdHRlcm49L14oXFwvXFwvPyg/IVxcLylbXlxcP1xcc10qKShcXD9bXlxcc10qKT8kLyxkZWxpbXM9W1wiPFwiLFwiPlwiLCdcIicsXCJgXCIsXCIgXCIsXCJcXHJcIixcIlxcblwiLFwiXFx0XCJdLHVud2lzZT1bXCJ7XCIsXCJ9XCIsXCJ8XCIsXCJcXFxcXCIsXCJeXCIsXCJgXCJdLmNvbmNhdChkZWxpbXMpLGF1dG9Fc2NhcGU9W1wiJ1wiXS5jb25jYXQodW53aXNlKSxub25Ib3N0Q2hhcnM9W1wiJVwiLFwiL1wiLFwiP1wiLFwiO1wiLFwiI1wiXS5jb25jYXQoYXV0b0VzY2FwZSksaG9zdEVuZGluZ0NoYXJzPVtcIi9cIixcIj9cIixcIiNcIl0saG9zdG5hbWVNYXhMZW49MjU1LGhvc3RuYW1lUGFydFBhdHRlcm49L15bK2EtejAtOUEtWl8tXXswLDYzfSQvLGhvc3RuYW1lUGFydFN0YXJ0PS9eKFsrYS16MC05QS1aXy1dezAsNjN9KSguKikkLyx1bnNhZmVQcm90b2NvbD17amF2YXNjcmlwdDp0cnVlLFwiamF2YXNjcmlwdDpcIjp0cnVlfSxob3N0bGVzc1Byb3RvY29sPXtqYXZhc2NyaXB0OnRydWUsXCJqYXZhc2NyaXB0OlwiOnRydWV9LHNsYXNoZWRQcm90b2NvbD17aHR0cDp0cnVlLGh0dHBzOnRydWUsZnRwOnRydWUsZ29waGVyOnRydWUsZmlsZTp0cnVlLFwiaHR0cDpcIjp0cnVlLFwiaHR0cHM6XCI6dHJ1ZSxcImZ0cDpcIjp0cnVlLFwiZ29waGVyOlwiOnRydWUsXCJmaWxlOlwiOnRydWV9LHF1ZXJ5c3RyaW5nPXJlcXVpcmUoXCJxdWVyeXN0cmluZ1wiKTtmdW5jdGlvbiB1cmxQYXJzZSh1cmwscGFyc2VRdWVyeVN0cmluZyxzbGFzaGVzRGVub3RlSG9zdCl7aWYodXJsJiZ1dGlsLmlzT2JqZWN0KHVybCkmJnVybCBpbnN0YW5jZW9mIFVybClyZXR1cm4gdXJsO3ZhciB1PW5ldyBVcmw7dS5wYXJzZSh1cmwscGFyc2VRdWVyeVN0cmluZyxzbGFzaGVzRGVub3RlSG9zdCk7cmV0dXJuIHV9VXJsLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih1cmwscGFyc2VRdWVyeVN0cmluZyxzbGFzaGVzRGVub3RlSG9zdCl7aWYoIXV0aWwuaXNTdHJpbmcodXJsKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIlBhcmFtZXRlciAndXJsJyBtdXN0IGJlIGEgc3RyaW5nLCBub3QgXCIrdHlwZW9mIHVybCl9dmFyIHF1ZXJ5SW5kZXg9dXJsLmluZGV4T2YoXCI/XCIpLHNwbGl0dGVyPXF1ZXJ5SW5kZXghPT0tMSYmcXVlcnlJbmRleDx1cmwuaW5kZXhPZihcIiNcIik/XCI/XCI6XCIjXCIsdVNwbGl0PXVybC5zcGxpdChzcGxpdHRlciksc2xhc2hSZWdleD0vXFxcXC9nO3VTcGxpdFswXT11U3BsaXRbMF0ucmVwbGFjZShzbGFzaFJlZ2V4LFwiL1wiKTt1cmw9dVNwbGl0LmpvaW4oc3BsaXR0ZXIpO3ZhciByZXN0PXVybDtyZXN0PXJlc3QudHJpbSgpO2lmKCFzbGFzaGVzRGVub3RlSG9zdCYmdXJsLnNwbGl0KFwiI1wiKS5sZW5ndGg9PT0xKXt2YXIgc2ltcGxlUGF0aD1zaW1wbGVQYXRoUGF0dGVybi5leGVjKHJlc3QpO2lmKHNpbXBsZVBhdGgpe3RoaXMucGF0aD1yZXN0O3RoaXMuaHJlZj1yZXN0O3RoaXMucGF0aG5hbWU9c2ltcGxlUGF0aFsxXTtpZihzaW1wbGVQYXRoWzJdKXt0aGlzLnNlYXJjaD1zaW1wbGVQYXRoWzJdO2lmKHBhcnNlUXVlcnlTdHJpbmcpe3RoaXMucXVlcnk9cXVlcnlzdHJpbmcucGFyc2UodGhpcy5zZWFyY2guc3Vic3RyKDEpKX1lbHNle3RoaXMucXVlcnk9dGhpcy5zZWFyY2guc3Vic3RyKDEpfX1lbHNlIGlmKHBhcnNlUXVlcnlTdHJpbmcpe3RoaXMuc2VhcmNoPVwiXCI7dGhpcy5xdWVyeT17fX1yZXR1cm4gdGhpc319dmFyIHByb3RvPXByb3RvY29sUGF0dGVybi5leGVjKHJlc3QpO2lmKHByb3RvKXtwcm90bz1wcm90b1swXTt2YXIgbG93ZXJQcm90bz1wcm90by50b0xvd2VyQ2FzZSgpO3RoaXMucHJvdG9jb2w9bG93ZXJQcm90bztyZXN0PXJlc3Quc3Vic3RyKHByb3RvLmxlbmd0aCl9aWYoc2xhc2hlc0Rlbm90ZUhvc3R8fHByb3RvfHxyZXN0Lm1hdGNoKC9eXFwvXFwvW15AXFwvXStAW15AXFwvXSsvKSl7dmFyIHNsYXNoZXM9cmVzdC5zdWJzdHIoMCwyKT09PVwiLy9cIjtpZihzbGFzaGVzJiYhKHByb3RvJiZob3N0bGVzc1Byb3RvY29sW3Byb3RvXSkpe3Jlc3Q9cmVzdC5zdWJzdHIoMik7dGhpcy5zbGFzaGVzPXRydWV9fWlmKCFob3N0bGVzc1Byb3RvY29sW3Byb3RvXSYmKHNsYXNoZXN8fHByb3RvJiYhc2xhc2hlZFByb3RvY29sW3Byb3RvXSkpe3ZhciBob3N0RW5kPS0xO2Zvcih2YXIgaT0wO2k8aG9zdEVuZGluZ0NoYXJzLmxlbmd0aDtpKyspe3ZhciBoZWM9cmVzdC5pbmRleE9mKGhvc3RFbmRpbmdDaGFyc1tpXSk7aWYoaGVjIT09LTEmJihob3N0RW5kPT09LTF8fGhlYzxob3N0RW5kKSlob3N0RW5kPWhlY312YXIgYXV0aCxhdFNpZ247aWYoaG9zdEVuZD09PS0xKXthdFNpZ249cmVzdC5sYXN0SW5kZXhPZihcIkBcIil9ZWxzZXthdFNpZ249cmVzdC5sYXN0SW5kZXhPZihcIkBcIixob3N0RW5kKX1pZihhdFNpZ24hPT0tMSl7YXV0aD1yZXN0LnNsaWNlKDAsYXRTaWduKTtyZXN0PXJlc3Quc2xpY2UoYXRTaWduKzEpO3RoaXMuYXV0aD1kZWNvZGVVUklDb21wb25lbnQoYXV0aCl9aG9zdEVuZD0tMTtmb3IodmFyIGk9MDtpPG5vbkhvc3RDaGFycy5sZW5ndGg7aSsrKXt2YXIgaGVjPXJlc3QuaW5kZXhPZihub25Ib3N0Q2hhcnNbaV0pO2lmKGhlYyE9PS0xJiYoaG9zdEVuZD09PS0xfHxoZWM8aG9zdEVuZCkpaG9zdEVuZD1oZWN9aWYoaG9zdEVuZD09PS0xKWhvc3RFbmQ9cmVzdC5sZW5ndGg7dGhpcy5ob3N0PXJlc3Quc2xpY2UoMCxob3N0RW5kKTtyZXN0PXJlc3Quc2xpY2UoaG9zdEVuZCk7dGhpcy5wYXJzZUhvc3QoKTt0aGlzLmhvc3RuYW1lPXRoaXMuaG9zdG5hbWV8fFwiXCI7dmFyIGlwdjZIb3N0bmFtZT10aGlzLmhvc3RuYW1lWzBdPT09XCJbXCImJnRoaXMuaG9zdG5hbWVbdGhpcy5ob3N0bmFtZS5sZW5ndGgtMV09PT1cIl1cIjtpZighaXB2Nkhvc3RuYW1lKXt2YXIgaG9zdHBhcnRzPXRoaXMuaG9zdG5hbWUuc3BsaXQoL1xcLi8pO2Zvcih2YXIgaT0wLGw9aG9zdHBhcnRzLmxlbmd0aDtpPGw7aSsrKXt2YXIgcGFydD1ob3N0cGFydHNbaV07aWYoIXBhcnQpY29udGludWU7aWYoIXBhcnQubWF0Y2goaG9zdG5hbWVQYXJ0UGF0dGVybikpe3ZhciBuZXdwYXJ0PVwiXCI7Zm9yKHZhciBqPTAsaz1wYXJ0Lmxlbmd0aDtqPGs7aisrKXtpZihwYXJ0LmNoYXJDb2RlQXQoaik+MTI3KXtuZXdwYXJ0Kz1cInhcIn1lbHNle25ld3BhcnQrPXBhcnRbal19fWlmKCFuZXdwYXJ0Lm1hdGNoKGhvc3RuYW1lUGFydFBhdHRlcm4pKXt2YXIgdmFsaWRQYXJ0cz1ob3N0cGFydHMuc2xpY2UoMCxpKTt2YXIgbm90SG9zdD1ob3N0cGFydHMuc2xpY2UoaSsxKTt2YXIgYml0PXBhcnQubWF0Y2goaG9zdG5hbWVQYXJ0U3RhcnQpO2lmKGJpdCl7dmFsaWRQYXJ0cy5wdXNoKGJpdFsxXSk7bm90SG9zdC51bnNoaWZ0KGJpdFsyXSl9aWYobm90SG9zdC5sZW5ndGgpe3Jlc3Q9XCIvXCIrbm90SG9zdC5qb2luKFwiLlwiKStyZXN0fXRoaXMuaG9zdG5hbWU9dmFsaWRQYXJ0cy5qb2luKFwiLlwiKTticmVha319fX1pZih0aGlzLmhvc3RuYW1lLmxlbmd0aD5ob3N0bmFtZU1heExlbil7dGhpcy5ob3N0bmFtZT1cIlwifWVsc2V7dGhpcy5ob3N0bmFtZT10aGlzLmhvc3RuYW1lLnRvTG93ZXJDYXNlKCl9aWYoIWlwdjZIb3N0bmFtZSl7dGhpcy5ob3N0bmFtZT1wdW55Y29kZS50b0FTQ0lJKHRoaXMuaG9zdG5hbWUpfXZhciBwPXRoaXMucG9ydD9cIjpcIit0aGlzLnBvcnQ6XCJcIjt2YXIgaD10aGlzLmhvc3RuYW1lfHxcIlwiO3RoaXMuaG9zdD1oK3A7dGhpcy5ocmVmKz10aGlzLmhvc3Q7aWYoaXB2Nkhvc3RuYW1lKXt0aGlzLmhvc3RuYW1lPXRoaXMuaG9zdG5hbWUuc3Vic3RyKDEsdGhpcy5ob3N0bmFtZS5sZW5ndGgtMik7aWYocmVzdFswXSE9PVwiL1wiKXtyZXN0PVwiL1wiK3Jlc3R9fX1pZighdW5zYWZlUHJvdG9jb2xbbG93ZXJQcm90b10pe2Zvcih2YXIgaT0wLGw9YXV0b0VzY2FwZS5sZW5ndGg7aTxsO2krKyl7dmFyIGFlPWF1dG9Fc2NhcGVbaV07aWYocmVzdC5pbmRleE9mKGFlKT09PS0xKWNvbnRpbnVlO3ZhciBlc2M9ZW5jb2RlVVJJQ29tcG9uZW50KGFlKTtpZihlc2M9PT1hZSl7ZXNjPWVzY2FwZShhZSl9cmVzdD1yZXN0LnNwbGl0KGFlKS5qb2luKGVzYyl9fXZhciBoYXNoPXJlc3QuaW5kZXhPZihcIiNcIik7aWYoaGFzaCE9PS0xKXt0aGlzLmhhc2g9cmVzdC5zdWJzdHIoaGFzaCk7cmVzdD1yZXN0LnNsaWNlKDAsaGFzaCl9dmFyIHFtPXJlc3QuaW5kZXhPZihcIj9cIik7aWYocW0hPT0tMSl7dGhpcy5zZWFyY2g9cmVzdC5zdWJzdHIocW0pO3RoaXMucXVlcnk9cmVzdC5zdWJzdHIocW0rMSk7aWYocGFyc2VRdWVyeVN0cmluZyl7dGhpcy5xdWVyeT1xdWVyeXN0cmluZy5wYXJzZSh0aGlzLnF1ZXJ5KX1yZXN0PXJlc3Quc2xpY2UoMCxxbSl9ZWxzZSBpZihwYXJzZVF1ZXJ5U3RyaW5nKXt0aGlzLnNlYXJjaD1cIlwiO3RoaXMucXVlcnk9e319aWYocmVzdCl0aGlzLnBhdGhuYW1lPXJlc3Q7aWYoc2xhc2hlZFByb3RvY29sW2xvd2VyUHJvdG9dJiZ0aGlzLmhvc3RuYW1lJiYhdGhpcy5wYXRobmFtZSl7dGhpcy5wYXRobmFtZT1cIi9cIn1pZih0aGlzLnBhdGhuYW1lfHx0aGlzLnNlYXJjaCl7dmFyIHA9dGhpcy5wYXRobmFtZXx8XCJcIjt2YXIgcz10aGlzLnNlYXJjaHx8XCJcIjt0aGlzLnBhdGg9cCtzfXRoaXMuaHJlZj10aGlzLmZvcm1hdCgpO3JldHVybiB0aGlzfTtmdW5jdGlvbiB1cmxGb3JtYXQob2JqKXtpZih1dGlsLmlzU3RyaW5nKG9iaikpb2JqPXVybFBhcnNlKG9iaik7aWYoIShvYmogaW5zdGFuY2VvZiBVcmwpKXJldHVybiBVcmwucHJvdG90eXBlLmZvcm1hdC5jYWxsKG9iaik7cmV0dXJuIG9iai5mb3JtYXQoKX1VcmwucHJvdG90eXBlLmZvcm1hdD1mdW5jdGlvbigpe3ZhciBhdXRoPXRoaXMuYXV0aHx8XCJcIjtpZihhdXRoKXthdXRoPWVuY29kZVVSSUNvbXBvbmVudChhdXRoKTthdXRoPWF1dGgucmVwbGFjZSgvJTNBL2ksXCI6XCIpO2F1dGgrPVwiQFwifXZhciBwcm90b2NvbD10aGlzLnByb3RvY29sfHxcIlwiLHBhdGhuYW1lPXRoaXMucGF0aG5hbWV8fFwiXCIsaGFzaD10aGlzLmhhc2h8fFwiXCIsaG9zdD1mYWxzZSxxdWVyeT1cIlwiO2lmKHRoaXMuaG9zdCl7aG9zdD1hdXRoK3RoaXMuaG9zdH1lbHNlIGlmKHRoaXMuaG9zdG5hbWUpe2hvc3Q9YXV0aCsodGhpcy5ob3N0bmFtZS5pbmRleE9mKFwiOlwiKT09PS0xP3RoaXMuaG9zdG5hbWU6XCJbXCIrdGhpcy5ob3N0bmFtZStcIl1cIik7aWYodGhpcy5wb3J0KXtob3N0Kz1cIjpcIit0aGlzLnBvcnR9fWlmKHRoaXMucXVlcnkmJnV0aWwuaXNPYmplY3QodGhpcy5xdWVyeSkmJk9iamVjdC5rZXlzKHRoaXMucXVlcnkpLmxlbmd0aCl7cXVlcnk9cXVlcnlzdHJpbmcuc3RyaW5naWZ5KHRoaXMucXVlcnkpfXZhciBzZWFyY2g9dGhpcy5zZWFyY2h8fHF1ZXJ5JiZcIj9cIitxdWVyeXx8XCJcIjtpZihwcm90b2NvbCYmcHJvdG9jb2wuc3Vic3RyKC0xKSE9PVwiOlwiKXByb3RvY29sKz1cIjpcIjtpZih0aGlzLnNsYXNoZXN8fCghcHJvdG9jb2x8fHNsYXNoZWRQcm90b2NvbFtwcm90b2NvbF0pJiZob3N0IT09ZmFsc2Upe2hvc3Q9XCIvL1wiKyhob3N0fHxcIlwiKTtpZihwYXRobmFtZSYmcGF0aG5hbWUuY2hhckF0KDApIT09XCIvXCIpcGF0aG5hbWU9XCIvXCIrcGF0aG5hbWV9ZWxzZSBpZighaG9zdCl7aG9zdD1cIlwifWlmKGhhc2gmJmhhc2guY2hhckF0KDApIT09XCIjXCIpaGFzaD1cIiNcIitoYXNoO2lmKHNlYXJjaCYmc2VhcmNoLmNoYXJBdCgwKSE9PVwiP1wiKXNlYXJjaD1cIj9cIitzZWFyY2g7cGF0aG5hbWU9cGF0aG5hbWUucmVwbGFjZSgvWz8jXS9nLGZ1bmN0aW9uKG1hdGNoKXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KG1hdGNoKX0pO3NlYXJjaD1zZWFyY2gucmVwbGFjZShcIiNcIixcIiUyM1wiKTtyZXR1cm4gcHJvdG9jb2wraG9zdCtwYXRobmFtZStzZWFyY2graGFzaH07ZnVuY3Rpb24gdXJsUmVzb2x2ZShzb3VyY2UscmVsYXRpdmUpe3JldHVybiB1cmxQYXJzZShzb3VyY2UsZmFsc2UsdHJ1ZSkucmVzb2x2ZShyZWxhdGl2ZSl9VXJsLnByb3RvdHlwZS5yZXNvbHZlPWZ1bmN0aW9uKHJlbGF0aXZlKXtyZXR1cm4gdGhpcy5yZXNvbHZlT2JqZWN0KHVybFBhcnNlKHJlbGF0aXZlLGZhbHNlLHRydWUpKS5mb3JtYXQoKX07ZnVuY3Rpb24gdXJsUmVzb2x2ZU9iamVjdChzb3VyY2UscmVsYXRpdmUpe2lmKCFzb3VyY2UpcmV0dXJuIHJlbGF0aXZlO3JldHVybiB1cmxQYXJzZShzb3VyY2UsZmFsc2UsdHJ1ZSkucmVzb2x2ZU9iamVjdChyZWxhdGl2ZSl9VXJsLnByb3RvdHlwZS5yZXNvbHZlT2JqZWN0PWZ1bmN0aW9uKHJlbGF0aXZlKXtpZih1dGlsLmlzU3RyaW5nKHJlbGF0aXZlKSl7dmFyIHJlbD1uZXcgVXJsO3JlbC5wYXJzZShyZWxhdGl2ZSxmYWxzZSx0cnVlKTtyZWxhdGl2ZT1yZWx9dmFyIHJlc3VsdD1uZXcgVXJsO3ZhciB0a2V5cz1PYmplY3Qua2V5cyh0aGlzKTtmb3IodmFyIHRrPTA7dGs8dGtleXMubGVuZ3RoO3RrKyspe3ZhciB0a2V5PXRrZXlzW3RrXTtyZXN1bHRbdGtleV09dGhpc1t0a2V5XX1yZXN1bHQuaGFzaD1yZWxhdGl2ZS5oYXNoO2lmKHJlbGF0aXZlLmhyZWY9PT1cIlwiKXtyZXN1bHQuaHJlZj1yZXN1bHQuZm9ybWF0KCk7cmV0dXJuIHJlc3VsdH1pZihyZWxhdGl2ZS5zbGFzaGVzJiYhcmVsYXRpdmUucHJvdG9jb2wpe3ZhciBya2V5cz1PYmplY3Qua2V5cyhyZWxhdGl2ZSk7Zm9yKHZhciByaz0wO3JrPHJrZXlzLmxlbmd0aDtyaysrKXt2YXIgcmtleT1ya2V5c1tya107aWYocmtleSE9PVwicHJvdG9jb2xcIilyZXN1bHRbcmtleV09cmVsYXRpdmVbcmtleV19aWYoc2xhc2hlZFByb3RvY29sW3Jlc3VsdC5wcm90b2NvbF0mJnJlc3VsdC5ob3N0bmFtZSYmIXJlc3VsdC5wYXRobmFtZSl7cmVzdWx0LnBhdGg9cmVzdWx0LnBhdGhuYW1lPVwiL1wifXJlc3VsdC5ocmVmPXJlc3VsdC5mb3JtYXQoKTtyZXR1cm4gcmVzdWx0fWlmKHJlbGF0aXZlLnByb3RvY29sJiZyZWxhdGl2ZS5wcm90b2NvbCE9PXJlc3VsdC5wcm90b2NvbCl7aWYoIXNsYXNoZWRQcm90b2NvbFtyZWxhdGl2ZS5wcm90b2NvbF0pe3ZhciBrZXlzPU9iamVjdC5rZXlzKHJlbGF0aXZlKTtmb3IodmFyIHY9MDt2PGtleXMubGVuZ3RoO3YrKyl7dmFyIGs9a2V5c1t2XTtyZXN1bHRba109cmVsYXRpdmVba119cmVzdWx0LmhyZWY9cmVzdWx0LmZvcm1hdCgpO3JldHVybiByZXN1bHR9cmVzdWx0LnByb3RvY29sPXJlbGF0aXZlLnByb3RvY29sO2lmKCFyZWxhdGl2ZS5ob3N0JiYhaG9zdGxlc3NQcm90b2NvbFtyZWxhdGl2ZS5wcm90b2NvbF0pe3ZhciByZWxQYXRoPShyZWxhdGl2ZS5wYXRobmFtZXx8XCJcIikuc3BsaXQoXCIvXCIpO3doaWxlKHJlbFBhdGgubGVuZ3RoJiYhKHJlbGF0aXZlLmhvc3Q9cmVsUGF0aC5zaGlmdCgpKSk7aWYoIXJlbGF0aXZlLmhvc3QpcmVsYXRpdmUuaG9zdD1cIlwiO2lmKCFyZWxhdGl2ZS5ob3N0bmFtZSlyZWxhdGl2ZS5ob3N0bmFtZT1cIlwiO2lmKHJlbFBhdGhbMF0hPT1cIlwiKXJlbFBhdGgudW5zaGlmdChcIlwiKTtpZihyZWxQYXRoLmxlbmd0aDwyKXJlbFBhdGgudW5zaGlmdChcIlwiKTtyZXN1bHQucGF0aG5hbWU9cmVsUGF0aC5qb2luKFwiL1wiKX1lbHNle3Jlc3VsdC5wYXRobmFtZT1yZWxhdGl2ZS5wYXRobmFtZX1yZXN1bHQuc2VhcmNoPXJlbGF0aXZlLnNlYXJjaDtyZXN1bHQucXVlcnk9cmVsYXRpdmUucXVlcnk7cmVzdWx0Lmhvc3Q9cmVsYXRpdmUuaG9zdHx8XCJcIjtyZXN1bHQuYXV0aD1yZWxhdGl2ZS5hdXRoO3Jlc3VsdC5ob3N0bmFtZT1yZWxhdGl2ZS5ob3N0bmFtZXx8cmVsYXRpdmUuaG9zdDtyZXN1bHQucG9ydD1yZWxhdGl2ZS5wb3J0O2lmKHJlc3VsdC5wYXRobmFtZXx8cmVzdWx0LnNlYXJjaCl7dmFyIHA9cmVzdWx0LnBhdGhuYW1lfHxcIlwiO3ZhciBzPXJlc3VsdC5zZWFyY2h8fFwiXCI7cmVzdWx0LnBhdGg9cCtzfXJlc3VsdC5zbGFzaGVzPXJlc3VsdC5zbGFzaGVzfHxyZWxhdGl2ZS5zbGFzaGVzO3Jlc3VsdC5ocmVmPXJlc3VsdC5mb3JtYXQoKTtyZXR1cm4gcmVzdWx0fXZhciBpc1NvdXJjZUFicz1yZXN1bHQucGF0aG5hbWUmJnJlc3VsdC5wYXRobmFtZS5jaGFyQXQoMCk9PT1cIi9cIixpc1JlbEFicz1yZWxhdGl2ZS5ob3N0fHxyZWxhdGl2ZS5wYXRobmFtZSYmcmVsYXRpdmUucGF0aG5hbWUuY2hhckF0KDApPT09XCIvXCIsbXVzdEVuZEFicz1pc1JlbEFic3x8aXNTb3VyY2VBYnN8fHJlc3VsdC5ob3N0JiZyZWxhdGl2ZS5wYXRobmFtZSxyZW1vdmVBbGxEb3RzPW11c3RFbmRBYnMsc3JjUGF0aD1yZXN1bHQucGF0aG5hbWUmJnJlc3VsdC5wYXRobmFtZS5zcGxpdChcIi9cIil8fFtdLHJlbFBhdGg9cmVsYXRpdmUucGF0aG5hbWUmJnJlbGF0aXZlLnBhdGhuYW1lLnNwbGl0KFwiL1wiKXx8W10scHN5Y2hvdGljPXJlc3VsdC5wcm90b2NvbCYmIXNsYXNoZWRQcm90b2NvbFtyZXN1bHQucHJvdG9jb2xdO2lmKHBzeWNob3RpYyl7cmVzdWx0Lmhvc3RuYW1lPVwiXCI7cmVzdWx0LnBvcnQ9bnVsbDtpZihyZXN1bHQuaG9zdCl7aWYoc3JjUGF0aFswXT09PVwiXCIpc3JjUGF0aFswXT1yZXN1bHQuaG9zdDtlbHNlIHNyY1BhdGgudW5zaGlmdChyZXN1bHQuaG9zdCl9cmVzdWx0Lmhvc3Q9XCJcIjtpZihyZWxhdGl2ZS5wcm90b2NvbCl7cmVsYXRpdmUuaG9zdG5hbWU9bnVsbDtyZWxhdGl2ZS5wb3J0PW51bGw7aWYocmVsYXRpdmUuaG9zdCl7aWYocmVsUGF0aFswXT09PVwiXCIpcmVsUGF0aFswXT1yZWxhdGl2ZS5ob3N0O2Vsc2UgcmVsUGF0aC51bnNoaWZ0KHJlbGF0aXZlLmhvc3QpfXJlbGF0aXZlLmhvc3Q9bnVsbH1tdXN0RW5kQWJzPW11c3RFbmRBYnMmJihyZWxQYXRoWzBdPT09XCJcInx8c3JjUGF0aFswXT09PVwiXCIpfWlmKGlzUmVsQWJzKXtyZXN1bHQuaG9zdD1yZWxhdGl2ZS5ob3N0fHxyZWxhdGl2ZS5ob3N0PT09XCJcIj9yZWxhdGl2ZS5ob3N0OnJlc3VsdC5ob3N0O3Jlc3VsdC5ob3N0bmFtZT1yZWxhdGl2ZS5ob3N0bmFtZXx8cmVsYXRpdmUuaG9zdG5hbWU9PT1cIlwiP3JlbGF0aXZlLmhvc3RuYW1lOnJlc3VsdC5ob3N0bmFtZTtyZXN1bHQuc2VhcmNoPXJlbGF0aXZlLnNlYXJjaDtyZXN1bHQucXVlcnk9cmVsYXRpdmUucXVlcnk7c3JjUGF0aD1yZWxQYXRofWVsc2UgaWYocmVsUGF0aC5sZW5ndGgpe2lmKCFzcmNQYXRoKXNyY1BhdGg9W107c3JjUGF0aC5wb3AoKTtzcmNQYXRoPXNyY1BhdGguY29uY2F0KHJlbFBhdGgpO3Jlc3VsdC5zZWFyY2g9cmVsYXRpdmUuc2VhcmNoO3Jlc3VsdC5xdWVyeT1yZWxhdGl2ZS5xdWVyeX1lbHNlIGlmKCF1dGlsLmlzTnVsbE9yVW5kZWZpbmVkKHJlbGF0aXZlLnNlYXJjaCkpe2lmKHBzeWNob3RpYyl7cmVzdWx0Lmhvc3RuYW1lPXJlc3VsdC5ob3N0PXNyY1BhdGguc2hpZnQoKTt2YXIgYXV0aEluSG9zdD1yZXN1bHQuaG9zdCYmcmVzdWx0Lmhvc3QuaW5kZXhPZihcIkBcIik+MD9yZXN1bHQuaG9zdC5zcGxpdChcIkBcIik6ZmFsc2U7aWYoYXV0aEluSG9zdCl7cmVzdWx0LmF1dGg9YXV0aEluSG9zdC5zaGlmdCgpO3Jlc3VsdC5ob3N0PXJlc3VsdC5ob3N0bmFtZT1hdXRoSW5Ib3N0LnNoaWZ0KCl9fXJlc3VsdC5zZWFyY2g9cmVsYXRpdmUuc2VhcmNoO3Jlc3VsdC5xdWVyeT1yZWxhdGl2ZS5xdWVyeTtpZighdXRpbC5pc051bGwocmVzdWx0LnBhdGhuYW1lKXx8IXV0aWwuaXNOdWxsKHJlc3VsdC5zZWFyY2gpKXtyZXN1bHQucGF0aD0ocmVzdWx0LnBhdGhuYW1lP3Jlc3VsdC5wYXRobmFtZTpcIlwiKSsocmVzdWx0LnNlYXJjaD9yZXN1bHQuc2VhcmNoOlwiXCIpfXJlc3VsdC5ocmVmPXJlc3VsdC5mb3JtYXQoKTtyZXR1cm4gcmVzdWx0fWlmKCFzcmNQYXRoLmxlbmd0aCl7cmVzdWx0LnBhdGhuYW1lPW51bGw7aWYocmVzdWx0LnNlYXJjaCl7cmVzdWx0LnBhdGg9XCIvXCIrcmVzdWx0LnNlYXJjaH1lbHNle3Jlc3VsdC5wYXRoPW51bGx9cmVzdWx0LmhyZWY9cmVzdWx0LmZvcm1hdCgpO3JldHVybiByZXN1bHR9dmFyIGxhc3Q9c3JjUGF0aC5zbGljZSgtMSlbMF07dmFyIGhhc1RyYWlsaW5nU2xhc2g9KHJlc3VsdC5ob3N0fHxyZWxhdGl2ZS5ob3N0fHxzcmNQYXRoLmxlbmd0aD4xKSYmKGxhc3Q9PT1cIi5cInx8bGFzdD09PVwiLi5cIil8fGxhc3Q9PT1cIlwiO3ZhciB1cD0wO2Zvcih2YXIgaT1zcmNQYXRoLmxlbmd0aDtpPj0wO2ktLSl7bGFzdD1zcmNQYXRoW2ldO2lmKGxhc3Q9PT1cIi5cIil7c3JjUGF0aC5zcGxpY2UoaSwxKX1lbHNlIGlmKGxhc3Q9PT1cIi4uXCIpe3NyY1BhdGguc3BsaWNlKGksMSk7dXArK31lbHNlIGlmKHVwKXtzcmNQYXRoLnNwbGljZShpLDEpO3VwLS19fWlmKCFtdXN0RW5kQWJzJiYhcmVtb3ZlQWxsRG90cyl7Zm9yKDt1cC0tO3VwKXtzcmNQYXRoLnVuc2hpZnQoXCIuLlwiKX19aWYobXVzdEVuZEFicyYmc3JjUGF0aFswXSE9PVwiXCImJighc3JjUGF0aFswXXx8c3JjUGF0aFswXS5jaGFyQXQoMCkhPT1cIi9cIikpe3NyY1BhdGgudW5zaGlmdChcIlwiKX1pZihoYXNUcmFpbGluZ1NsYXNoJiZzcmNQYXRoLmpvaW4oXCIvXCIpLnN1YnN0cigtMSkhPT1cIi9cIil7c3JjUGF0aC5wdXNoKFwiXCIpfXZhciBpc0Fic29sdXRlPXNyY1BhdGhbMF09PT1cIlwifHxzcmNQYXRoWzBdJiZzcmNQYXRoWzBdLmNoYXJBdCgwKT09PVwiL1wiO2lmKHBzeWNob3RpYyl7cmVzdWx0Lmhvc3RuYW1lPXJlc3VsdC5ob3N0PWlzQWJzb2x1dGU/XCJcIjpzcmNQYXRoLmxlbmd0aD9zcmNQYXRoLnNoaWZ0KCk6XCJcIjt2YXIgYXV0aEluSG9zdD1yZXN1bHQuaG9zdCYmcmVzdWx0Lmhvc3QuaW5kZXhPZihcIkBcIik+MD9yZXN1bHQuaG9zdC5zcGxpdChcIkBcIik6ZmFsc2U7aWYoYXV0aEluSG9zdCl7cmVzdWx0LmF1dGg9YXV0aEluSG9zdC5zaGlmdCgpO3Jlc3VsdC5ob3N0PXJlc3VsdC5ob3N0bmFtZT1hdXRoSW5Ib3N0LnNoaWZ0KCl9fW11c3RFbmRBYnM9bXVzdEVuZEFic3x8cmVzdWx0Lmhvc3QmJnNyY1BhdGgubGVuZ3RoO2lmKG11c3RFbmRBYnMmJiFpc0Fic29sdXRlKXtzcmNQYXRoLnVuc2hpZnQoXCJcIil9aWYoIXNyY1BhdGgubGVuZ3RoKXtyZXN1bHQucGF0aG5hbWU9bnVsbDtyZXN1bHQucGF0aD1udWxsfWVsc2V7cmVzdWx0LnBhdGhuYW1lPXNyY1BhdGguam9pbihcIi9cIil9aWYoIXV0aWwuaXNOdWxsKHJlc3VsdC5wYXRobmFtZSl8fCF1dGlsLmlzTnVsbChyZXN1bHQuc2VhcmNoKSl7cmVzdWx0LnBhdGg9KHJlc3VsdC5wYXRobmFtZT9yZXN1bHQucGF0aG5hbWU6XCJcIikrKHJlc3VsdC5zZWFyY2g/cmVzdWx0LnNlYXJjaDpcIlwiKX1yZXN1bHQuYXV0aD1yZWxhdGl2ZS5hdXRofHxyZXN1bHQuYXV0aDtyZXN1bHQuc2xhc2hlcz1yZXN1bHQuc2xhc2hlc3x8cmVsYXRpdmUuc2xhc2hlcztyZXN1bHQuaHJlZj1yZXN1bHQuZm9ybWF0KCk7cmV0dXJuIHJlc3VsdH07VXJsLnByb3RvdHlwZS5wYXJzZUhvc3Q9ZnVuY3Rpb24oKXt2YXIgaG9zdD10aGlzLmhvc3Q7dmFyIHBvcnQ9cG9ydFBhdHRlcm4uZXhlYyhob3N0KTtpZihwb3J0KXtwb3J0PXBvcnRbMF07aWYocG9ydCE9PVwiOlwiKXt0aGlzLnBvcnQ9cG9ydC5zdWJzdHIoMSl9aG9zdD1ob3N0LnN1YnN0cigwLGhvc3QubGVuZ3RoLXBvcnQubGVuZ3RoKX1pZihob3N0KXRoaXMuaG9zdG5hbWU9aG9zdH19LHtcIi4vdXRpbFwiOjExNCxwdW55Y29kZTo5MyxxdWVyeXN0cmluZzo5Nn1dLDExNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XCJ1c2Ugc3RyaWN0XCI7bW9kdWxlLmV4cG9ydHM9e2lzU3RyaW5nOmZ1bmN0aW9uKGFyZyl7cmV0dXJuIHR5cGVvZiBhcmc9PT1cInN0cmluZ1wifSxpc09iamVjdDpmdW5jdGlvbihhcmcpe3JldHVybiB0eXBlb2YgYXJnPT09XCJvYmplY3RcIiYmYXJnIT09bnVsbH0saXNOdWxsOmZ1bmN0aW9uKGFyZyl7cmV0dXJuIGFyZz09PW51bGx9LGlzTnVsbE9yVW5kZWZpbmVkOmZ1bmN0aW9uKGFyZyl7cmV0dXJuIGFyZz09bnVsbH19fSx7fV0sMTE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24oZ2xvYmFsKXttb2R1bGUuZXhwb3J0cz1kZXByZWNhdGU7ZnVuY3Rpb24gZGVwcmVjYXRlKGZuLG1zZyl7aWYoY29uZmlnKFwibm9EZXByZWNhdGlvblwiKSl7cmV0dXJuIGZufXZhciB3YXJuZWQ9ZmFsc2U7ZnVuY3Rpb24gZGVwcmVjYXRlZCgpe2lmKCF3YXJuZWQpe2lmKGNvbmZpZyhcInRocm93RGVwcmVjYXRpb25cIikpe3Rocm93IG5ldyBFcnJvcihtc2cpfWVsc2UgaWYoY29uZmlnKFwidHJhY2VEZXByZWNhdGlvblwiKSl7Y29uc29sZS50cmFjZShtc2cpfWVsc2V7Y29uc29sZS53YXJuKG1zZyl9d2FybmVkPXRydWV9cmV0dXJuIGZuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZGVwcmVjYXRlZH1mdW5jdGlvbiBjb25maWcobmFtZSl7dHJ5e2lmKCFnbG9iYWwubG9jYWxTdG9yYWdlKXJldHVybiBmYWxzZX1jYXRjaChfKXtyZXR1cm4gZmFsc2V9dmFyIHZhbD1nbG9iYWwubG9jYWxTdG9yYWdlW25hbWVdO2lmKG51bGw9PXZhbClyZXR1cm4gZmFsc2U7cmV0dXJuIFN0cmluZyh2YWwpLnRvTG93ZXJDYXNlKCk9PT1cInRydWVcIn19KS5jYWxsKHRoaXMsdHlwZW9mIGdsb2JhbCE9PVwidW5kZWZpbmVkXCI/Z2xvYmFsOnR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIj9zZWxmOnR5cGVvZiB3aW5kb3chPT1cInVuZGVmaW5lZFwiP3dpbmRvdzp7fSl9LHt9XSwxMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uIGlzQnVmZmVyKGFyZyl7cmV0dXJuIGFyZyYmdHlwZW9mIGFyZz09PVwib2JqZWN0XCImJnR5cGVvZiBhcmcuY29weT09PVwiZnVuY3Rpb25cIiYmdHlwZW9mIGFyZy5maWxsPT09XCJmdW5jdGlvblwiJiZ0eXBlb2YgYXJnLnJlYWRVSW50OD09PVwiZnVuY3Rpb25cIn19LHt9XSwxMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpeyhmdW5jdGlvbihwcm9jZXNzLGdsb2JhbCl7dmFyIGZvcm1hdFJlZ0V4cD0vJVtzZGolXS9nO2V4cG9ydHMuZm9ybWF0PWZ1bmN0aW9uKGYpe2lmKCFpc1N0cmluZyhmKSl7dmFyIG9iamVjdHM9W107Zm9yKHZhciBpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7b2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSl9cmV0dXJuIG9iamVjdHMuam9pbihcIiBcIil9dmFyIGk9MTt2YXIgYXJncz1hcmd1bWVudHM7dmFyIGxlbj1hcmdzLmxlbmd0aDt2YXIgc3RyPVN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCxmdW5jdGlvbih4KXtpZih4PT09XCIlJVwiKXJldHVyblwiJVwiO2lmKGk+PWxlbilyZXR1cm4geDtzd2l0Y2goeCl7Y2FzZVwiJXNcIjpyZXR1cm4gU3RyaW5nKGFyZ3NbaSsrXSk7Y2FzZVwiJWRcIjpyZXR1cm4gTnVtYmVyKGFyZ3NbaSsrXSk7Y2FzZVwiJWpcIjp0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGFyZ3NbaSsrXSl9Y2F0Y2goXyl7cmV0dXJuXCJbQ2lyY3VsYXJdXCJ9ZGVmYXVsdDpyZXR1cm4geH19KTtmb3IodmFyIHg9YXJnc1tpXTtpPGxlbjt4PWFyZ3NbKytpXSl7aWYoaXNOdWxsKHgpfHwhaXNPYmplY3QoeCkpe3N0cis9XCIgXCIreH1lbHNle3N0cis9XCIgXCIraW5zcGVjdCh4KX19cmV0dXJuIHN0cn07ZXhwb3J0cy5kZXByZWNhdGU9ZnVuY3Rpb24oZm4sbXNnKXtpZihpc1VuZGVmaW5lZChnbG9iYWwucHJvY2Vzcykpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBleHBvcnRzLmRlcHJlY2F0ZShmbixtc2cpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19aWYocHJvY2Vzcy5ub0RlcHJlY2F0aW9uPT09dHJ1ZSl7cmV0dXJuIGZufXZhciB3YXJuZWQ9ZmFsc2U7ZnVuY3Rpb24gZGVwcmVjYXRlZCgpe2lmKCF3YXJuZWQpe2lmKHByb2Nlc3MudGhyb3dEZXByZWNhdGlvbil7dGhyb3cgbmV3IEVycm9yKG1zZyl9ZWxzZSBpZihwcm9jZXNzLnRyYWNlRGVwcmVjYXRpb24pe2NvbnNvbGUudHJhY2UobXNnKX1lbHNle2NvbnNvbGUuZXJyb3IobXNnKX13YXJuZWQ9dHJ1ZX1yZXR1cm4gZm4uYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBkZXByZWNhdGVkfTt2YXIgZGVidWdzPXt9O3ZhciBkZWJ1Z0Vudmlyb247ZXhwb3J0cy5kZWJ1Z2xvZz1mdW5jdGlvbihzZXQpe2lmKGlzVW5kZWZpbmVkKGRlYnVnRW52aXJvbikpZGVidWdFbnZpcm9uPXByb2Nlc3MuZW52Lk5PREVfREVCVUd8fFwiXCI7c2V0PXNldC50b1VwcGVyQ2FzZSgpO2lmKCFkZWJ1Z3Nbc2V0XSl7aWYobmV3IFJlZ0V4cChcIlxcXFxiXCIrc2V0K1wiXFxcXGJcIixcImlcIikudGVzdChkZWJ1Z0Vudmlyb24pKXt2YXIgcGlkPXByb2Nlc3MucGlkO2RlYnVnc1tzZXRdPWZ1bmN0aW9uKCl7dmFyIG1zZz1leHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLGFyZ3VtZW50cyk7Y29uc29sZS5lcnJvcihcIiVzICVkOiAlc1wiLHNldCxwaWQsbXNnKX19ZWxzZXtkZWJ1Z3Nbc2V0XT1mdW5jdGlvbigpe319fXJldHVybiBkZWJ1Z3Nbc2V0XX07ZnVuY3Rpb24gaW5zcGVjdChvYmosb3B0cyl7dmFyIGN0eD17c2VlbjpbXSxzdHlsaXplOnN0eWxpemVOb0NvbG9yfTtpZihhcmd1bWVudHMubGVuZ3RoPj0zKWN0eC5kZXB0aD1hcmd1bWVudHNbMl07aWYoYXJndW1lbnRzLmxlbmd0aD49NCljdHguY29sb3JzPWFyZ3VtZW50c1szXTtpZihpc0Jvb2xlYW4ob3B0cykpe2N0eC5zaG93SGlkZGVuPW9wdHN9ZWxzZSBpZihvcHRzKXtleHBvcnRzLl9leHRlbmQoY3R4LG9wdHMpfWlmKGlzVW5kZWZpbmVkKGN0eC5zaG93SGlkZGVuKSljdHguc2hvd0hpZGRlbj1mYWxzZTtpZihpc1VuZGVmaW5lZChjdHguZGVwdGgpKWN0eC5kZXB0aD0yO2lmKGlzVW5kZWZpbmVkKGN0eC5jb2xvcnMpKWN0eC5jb2xvcnM9ZmFsc2U7aWYoaXNVbmRlZmluZWQoY3R4LmN1c3RvbUluc3BlY3QpKWN0eC5jdXN0b21JbnNwZWN0PXRydWU7aWYoY3R4LmNvbG9ycyljdHguc3R5bGl6ZT1zdHlsaXplV2l0aENvbG9yO3JldHVybiBmb3JtYXRWYWx1ZShjdHgsb2JqLGN0eC5kZXB0aCl9ZXhwb3J0cy5pbnNwZWN0PWluc3BlY3Q7aW5zcGVjdC5jb2xvcnM9e2JvbGQ6WzEsMjJdLGl0YWxpYzpbMywyM10sdW5kZXJsaW5lOls0LDI0XSxpbnZlcnNlOls3LDI3XSx3aGl0ZTpbMzcsMzldLGdyZXk6WzkwLDM5XSxibGFjazpbMzAsMzldLGJsdWU6WzM0LDM5XSxjeWFuOlszNiwzOV0sZ3JlZW46WzMyLDM5XSxtYWdlbnRhOlszNSwzOV0scmVkOlszMSwzOV0seWVsbG93OlszMywzOV19O2luc3BlY3Quc3R5bGVzPXtzcGVjaWFsOlwiY3lhblwiLG51bWJlcjpcInllbGxvd1wiLGJvb2xlYW46XCJ5ZWxsb3dcIix1bmRlZmluZWQ6XCJncmV5XCIsbnVsbDpcImJvbGRcIixzdHJpbmc6XCJncmVlblwiLGRhdGU6XCJtYWdlbnRhXCIscmVnZXhwOlwicmVkXCJ9O2Z1bmN0aW9uIHN0eWxpemVXaXRoQ29sb3Ioc3RyLHN0eWxlVHlwZSl7dmFyIHN0eWxlPWluc3BlY3Quc3R5bGVzW3N0eWxlVHlwZV07aWYoc3R5bGUpe3JldHVyblwiXHUwMDFiW1wiK2luc3BlY3QuY29sb3JzW3N0eWxlXVswXStcIm1cIitzdHIrXCJcdTAwMWJbXCIraW5zcGVjdC5jb2xvcnNbc3R5bGVdWzFdK1wibVwifWVsc2V7cmV0dXJuIHN0cn19ZnVuY3Rpb24gc3R5bGl6ZU5vQ29sb3Ioc3RyLHN0eWxlVHlwZSl7cmV0dXJuIHN0cn1mdW5jdGlvbiBhcnJheVRvSGFzaChhcnJheSl7dmFyIGhhc2g9e307YXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsaWR4KXtoYXNoW3ZhbF09dHJ1ZX0pO3JldHVybiBoYXNofWZ1bmN0aW9uIGZvcm1hdFZhbHVlKGN0eCx2YWx1ZSxyZWN1cnNlVGltZXMpe2lmKGN0eC5jdXN0b21JbnNwZWN0JiZ2YWx1ZSYmaXNGdW5jdGlvbih2YWx1ZS5pbnNwZWN0KSYmdmFsdWUuaW5zcGVjdCE9PWV4cG9ydHMuaW5zcGVjdCYmISh2YWx1ZS5jb25zdHJ1Y3RvciYmdmFsdWUuY29uc3RydWN0b3IucHJvdG90eXBlPT09dmFsdWUpKXt2YXIgcmV0PXZhbHVlLmluc3BlY3QocmVjdXJzZVRpbWVzLGN0eCk7aWYoIWlzU3RyaW5nKHJldCkpe3JldD1mb3JtYXRWYWx1ZShjdHgscmV0LHJlY3Vyc2VUaW1lcyl9cmV0dXJuIHJldH12YXIgcHJpbWl0aXZlPWZvcm1hdFByaW1pdGl2ZShjdHgsdmFsdWUpO2lmKHByaW1pdGl2ZSl7cmV0dXJuIHByaW1pdGl2ZX12YXIga2V5cz1PYmplY3Qua2V5cyh2YWx1ZSk7dmFyIHZpc2libGVLZXlzPWFycmF5VG9IYXNoKGtleXMpO2lmKGN0eC5zaG93SGlkZGVuKXtrZXlzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHZhbHVlKX1pZihpc0Vycm9yKHZhbHVlKSYmKGtleXMuaW5kZXhPZihcIm1lc3NhZ2VcIik+PTB8fGtleXMuaW5kZXhPZihcImRlc2NyaXB0aW9uXCIpPj0wKSl7cmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKX1pZihrZXlzLmxlbmd0aD09PTApe2lmKGlzRnVuY3Rpb24odmFsdWUpKXt2YXIgbmFtZT12YWx1ZS5uYW1lP1wiOiBcIit2YWx1ZS5uYW1lOlwiXCI7cmV0dXJuIGN0eC5zdHlsaXplKFwiW0Z1bmN0aW9uXCIrbmFtZStcIl1cIixcInNwZWNpYWxcIil9aWYoaXNSZWdFeHAodmFsdWUpKXtyZXR1cm4gY3R4LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSxcInJlZ2V4cFwiKX1pZihpc0RhdGUodmFsdWUpKXtyZXR1cm4gY3R4LnN0eWxpemUoRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksXCJkYXRlXCIpfWlmKGlzRXJyb3IodmFsdWUpKXtyZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpfX12YXIgYmFzZT1cIlwiLGFycmF5PWZhbHNlLGJyYWNlcz1bXCJ7XCIsXCJ9XCJdO2lmKGlzQXJyYXkodmFsdWUpKXthcnJheT10cnVlO2JyYWNlcz1bXCJbXCIsXCJdXCJdfWlmKGlzRnVuY3Rpb24odmFsdWUpKXt2YXIgbj12YWx1ZS5uYW1lP1wiOiBcIit2YWx1ZS5uYW1lOlwiXCI7YmFzZT1cIiBbRnVuY3Rpb25cIituK1wiXVwifWlmKGlzUmVnRXhwKHZhbHVlKSl7YmFzZT1cIiBcIitSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpfWlmKGlzRGF0ZSh2YWx1ZSkpe2Jhc2U9XCIgXCIrRGF0ZS5wcm90b3R5cGUudG9VVENTdHJpbmcuY2FsbCh2YWx1ZSl9aWYoaXNFcnJvcih2YWx1ZSkpe2Jhc2U9XCIgXCIrZm9ybWF0RXJyb3IodmFsdWUpfWlmKGtleXMubGVuZ3RoPT09MCYmKCFhcnJheXx8dmFsdWUubGVuZ3RoPT0wKSl7cmV0dXJuIGJyYWNlc1swXStiYXNlK2JyYWNlc1sxXX1pZihyZWN1cnNlVGltZXM8MCl7aWYoaXNSZWdFeHAodmFsdWUpKXtyZXR1cm4gY3R4LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSxcInJlZ2V4cFwiKX1lbHNle3JldHVybiBjdHguc3R5bGl6ZShcIltPYmplY3RdXCIsXCJzcGVjaWFsXCIpfX1jdHguc2Vlbi5wdXNoKHZhbHVlKTt2YXIgb3V0cHV0O2lmKGFycmF5KXtvdXRwdXQ9Zm9ybWF0QXJyYXkoY3R4LHZhbHVlLHJlY3Vyc2VUaW1lcyx2aXNpYmxlS2V5cyxrZXlzKX1lbHNle291dHB1dD1rZXlzLm1hcChmdW5jdGlvbihrZXkpe3JldHVybiBmb3JtYXRQcm9wZXJ0eShjdHgsdmFsdWUscmVjdXJzZVRpbWVzLHZpc2libGVLZXlzLGtleSxhcnJheSl9KX1jdHguc2Vlbi5wb3AoKTtyZXR1cm4gcmVkdWNlVG9TaW5nbGVTdHJpbmcob3V0cHV0LGJhc2UsYnJhY2VzKX1mdW5jdGlvbiBmb3JtYXRQcmltaXRpdmUoY3R4LHZhbHVlKXtpZihpc1VuZGVmaW5lZCh2YWx1ZSkpcmV0dXJuIGN0eC5zdHlsaXplKFwidW5kZWZpbmVkXCIsXCJ1bmRlZmluZWRcIik7aWYoaXNTdHJpbmcodmFsdWUpKXt2YXIgc2ltcGxlPVwiJ1wiK0pTT04uc3RyaW5naWZ5KHZhbHVlKS5yZXBsYWNlKC9eXCJ8XCIkL2csXCJcIikucmVwbGFjZSgvJy9nLFwiXFxcXCdcIikucmVwbGFjZSgvXFxcXFwiL2csJ1wiJykrXCInXCI7cmV0dXJuIGN0eC5zdHlsaXplKHNpbXBsZSxcInN0cmluZ1wiKX1pZihpc051bWJlcih2YWx1ZSkpcmV0dXJuIGN0eC5zdHlsaXplKFwiXCIrdmFsdWUsXCJudW1iZXJcIik7aWYoaXNCb29sZWFuKHZhbHVlKSlyZXR1cm4gY3R4LnN0eWxpemUoXCJcIit2YWx1ZSxcImJvb2xlYW5cIik7aWYoaXNOdWxsKHZhbHVlKSlyZXR1cm4gY3R4LnN0eWxpemUoXCJudWxsXCIsXCJudWxsXCIpfWZ1bmN0aW9uIGZvcm1hdEVycm9yKHZhbHVlKXtyZXR1cm5cIltcIitFcnJvci5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkrXCJdXCJ9ZnVuY3Rpb24gZm9ybWF0QXJyYXkoY3R4LHZhbHVlLHJlY3Vyc2VUaW1lcyx2aXNpYmxlS2V5cyxrZXlzKXt2YXIgb3V0cHV0PVtdO2Zvcih2YXIgaT0wLGw9dmFsdWUubGVuZ3RoO2k8bDsrK2kpe2lmKGhhc093blByb3BlcnR5KHZhbHVlLFN0cmluZyhpKSkpe291dHB1dC5wdXNoKGZvcm1hdFByb3BlcnR5KGN0eCx2YWx1ZSxyZWN1cnNlVGltZXMsdmlzaWJsZUtleXMsU3RyaW5nKGkpLHRydWUpKX1lbHNle291dHB1dC5wdXNoKFwiXCIpfX1rZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KXtpZigha2V5Lm1hdGNoKC9eXFxkKyQvKSl7b3V0cHV0LnB1c2goZm9ybWF0UHJvcGVydHkoY3R4LHZhbHVlLHJlY3Vyc2VUaW1lcyx2aXNpYmxlS2V5cyxrZXksdHJ1ZSkpfX0pO3JldHVybiBvdXRwdXR9ZnVuY3Rpb24gZm9ybWF0UHJvcGVydHkoY3R4LHZhbHVlLHJlY3Vyc2VUaW1lcyx2aXNpYmxlS2V5cyxrZXksYXJyYXkpe3ZhciBuYW1lLHN0cixkZXNjO2Rlc2M9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2YWx1ZSxrZXkpfHx7dmFsdWU6dmFsdWVba2V5XX07aWYoZGVzYy5nZXQpe2lmKGRlc2Muc2V0KXtzdHI9Y3R4LnN0eWxpemUoXCJbR2V0dGVyL1NldHRlcl1cIixcInNwZWNpYWxcIil9ZWxzZXtzdHI9Y3R4LnN0eWxpemUoXCJbR2V0dGVyXVwiLFwic3BlY2lhbFwiKX19ZWxzZXtpZihkZXNjLnNldCl7c3RyPWN0eC5zdHlsaXplKFwiW1NldHRlcl1cIixcInNwZWNpYWxcIil9fWlmKCFoYXNPd25Qcm9wZXJ0eSh2aXNpYmxlS2V5cyxrZXkpKXtuYW1lPVwiW1wiK2tleStcIl1cIn1pZighc3RyKXtpZihjdHguc2Vlbi5pbmRleE9mKGRlc2MudmFsdWUpPDApe2lmKGlzTnVsbChyZWN1cnNlVGltZXMpKXtzdHI9Zm9ybWF0VmFsdWUoY3R4LGRlc2MudmFsdWUsbnVsbCl9ZWxzZXtzdHI9Zm9ybWF0VmFsdWUoY3R4LGRlc2MudmFsdWUscmVjdXJzZVRpbWVzLTEpfWlmKHN0ci5pbmRleE9mKFwiXFxuXCIpPi0xKXtpZihhcnJheSl7c3RyPXN0ci5zcGxpdChcIlxcblwiKS5tYXAoZnVuY3Rpb24obGluZSl7cmV0dXJuXCIgIFwiK2xpbmV9KS5qb2luKFwiXFxuXCIpLnN1YnN0cigyKX1lbHNle3N0cj1cIlxcblwiK3N0ci5zcGxpdChcIlxcblwiKS5tYXAoZnVuY3Rpb24obGluZSl7cmV0dXJuXCIgICBcIitsaW5lfSkuam9pbihcIlxcblwiKX19fWVsc2V7c3RyPWN0eC5zdHlsaXplKFwiW0NpcmN1bGFyXVwiLFwic3BlY2lhbFwiKX19aWYoaXNVbmRlZmluZWQobmFtZSkpe2lmKGFycmF5JiZrZXkubWF0Y2goL15cXGQrJC8pKXtyZXR1cm4gc3RyfW5hbWU9SlNPTi5zdHJpbmdpZnkoXCJcIitrZXkpO2lmKG5hbWUubWF0Y2goL15cIihbYS16QS1aX11bYS16QS1aXzAtOV0qKVwiJC8pKXtuYW1lPW5hbWUuc3Vic3RyKDEsbmFtZS5sZW5ndGgtMik7bmFtZT1jdHguc3R5bGl6ZShuYW1lLFwibmFtZVwiKX1lbHNle25hbWU9bmFtZS5yZXBsYWNlKC8nL2csXCJcXFxcJ1wiKS5yZXBsYWNlKC9cXFxcXCIvZywnXCInKS5yZXBsYWNlKC8oXlwifFwiJCkvZyxcIidcIik7bmFtZT1jdHguc3R5bGl6ZShuYW1lLFwic3RyaW5nXCIpfX1yZXR1cm4gbmFtZStcIjogXCIrc3RyfWZ1bmN0aW9uIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCxiYXNlLGJyYWNlcyl7dmFyIG51bUxpbmVzRXN0PTA7dmFyIGxlbmd0aD1vdXRwdXQucmVkdWNlKGZ1bmN0aW9uKHByZXYsY3VyKXtudW1MaW5lc0VzdCsrO2lmKGN1ci5pbmRleE9mKFwiXFxuXCIpPj0wKW51bUxpbmVzRXN0Kys7cmV0dXJuIHByZXYrY3VyLnJlcGxhY2UoL1xcdTAwMWJcXFtcXGRcXGQ/bS9nLFwiXCIpLmxlbmd0aCsxfSwwKTtpZihsZW5ndGg+NjApe3JldHVybiBicmFjZXNbMF0rKGJhc2U9PT1cIlwiP1wiXCI6YmFzZStcIlxcbiBcIikrXCIgXCIrb3V0cHV0LmpvaW4oXCIsXFxuICBcIikrXCIgXCIrYnJhY2VzWzFdfXJldHVybiBicmFjZXNbMF0rYmFzZStcIiBcIitvdXRwdXQuam9pbihcIiwgXCIpK1wiIFwiK2JyYWNlc1sxXX1mdW5jdGlvbiBpc0FycmF5KGFyKXtyZXR1cm4gQXJyYXkuaXNBcnJheShhcil9ZXhwb3J0cy5pc0FycmF5PWlzQXJyYXk7ZnVuY3Rpb24gaXNCb29sZWFuKGFyZyl7cmV0dXJuIHR5cGVvZiBhcmc9PT1cImJvb2xlYW5cIn1leHBvcnRzLmlzQm9vbGVhbj1pc0Jvb2xlYW47ZnVuY3Rpb24gaXNOdWxsKGFyZyl7cmV0dXJuIGFyZz09PW51bGx9ZXhwb3J0cy5pc051bGw9aXNOdWxsO2Z1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZyl7cmV0dXJuIGFyZz09bnVsbH1leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkPWlzTnVsbE9yVW5kZWZpbmVkO2Z1bmN0aW9uIGlzTnVtYmVyKGFyZyl7cmV0dXJuIHR5cGVvZiBhcmc9PT1cIm51bWJlclwifWV4cG9ydHMuaXNOdW1iZXI9aXNOdW1iZXI7ZnVuY3Rpb24gaXNTdHJpbmcoYXJnKXtyZXR1cm4gdHlwZW9mIGFyZz09PVwic3RyaW5nXCJ9ZXhwb3J0cy5pc1N0cmluZz1pc1N0cmluZztmdW5jdGlvbiBpc1N5bWJvbChhcmcpe3JldHVybiB0eXBlb2YgYXJnPT09XCJzeW1ib2xcIn1leHBvcnRzLmlzU3ltYm9sPWlzU3ltYm9sO2Z1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZyl7cmV0dXJuIGFyZz09PXZvaWQgMH1leHBvcnRzLmlzVW5kZWZpbmVkPWlzVW5kZWZpbmVkO2Z1bmN0aW9uIGlzUmVnRXhwKHJlKXtyZXR1cm4gaXNPYmplY3QocmUpJiZvYmplY3RUb1N0cmluZyhyZSk9PT1cIltvYmplY3QgUmVnRXhwXVwifWV4cG9ydHMuaXNSZWdFeHA9aXNSZWdFeHA7ZnVuY3Rpb24gaXNPYmplY3QoYXJnKXtyZXR1cm4gdHlwZW9mIGFyZz09PVwib2JqZWN0XCImJmFyZyE9PW51bGx9ZXhwb3J0cy5pc09iamVjdD1pc09iamVjdDtmdW5jdGlvbiBpc0RhdGUoZCl7cmV0dXJuIGlzT2JqZWN0KGQpJiZvYmplY3RUb1N0cmluZyhkKT09PVwiW29iamVjdCBEYXRlXVwifWV4cG9ydHMuaXNEYXRlPWlzRGF0ZTtmdW5jdGlvbiBpc0Vycm9yKGUpe3JldHVybiBpc09iamVjdChlKSYmKG9iamVjdFRvU3RyaW5nKGUpPT09XCJbb2JqZWN0IEVycm9yXVwifHxlIGluc3RhbmNlb2YgRXJyb3IpfWV4cG9ydHMuaXNFcnJvcj1pc0Vycm9yO2Z1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKXtyZXR1cm4gdHlwZW9mIGFyZz09PVwiZnVuY3Rpb25cIn1leHBvcnRzLmlzRnVuY3Rpb249aXNGdW5jdGlvbjtmdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpe3JldHVybiBhcmc9PT1udWxsfHx0eXBlb2YgYXJnPT09XCJib29sZWFuXCJ8fHR5cGVvZiBhcmc9PT1cIm51bWJlclwifHx0eXBlb2YgYXJnPT09XCJzdHJpbmdcInx8dHlwZW9mIGFyZz09PVwic3ltYm9sXCJ8fHR5cGVvZiBhcmc9PT1cInVuZGVmaW5lZFwifWV4cG9ydHMuaXNQcmltaXRpdmU9aXNQcmltaXRpdmU7ZXhwb3J0cy5pc0J1ZmZlcj1yZXF1aXJlKFwiLi9zdXBwb3J0L2lzQnVmZmVyXCIpO2Z1bmN0aW9uIG9iamVjdFRvU3RyaW5nKG8pe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyl9ZnVuY3Rpb24gcGFkKG4pe3JldHVybiBuPDEwP1wiMFwiK24udG9TdHJpbmcoMTApOm4udG9TdHJpbmcoMTApfXZhciBtb250aHM9W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiXTtmdW5jdGlvbiB0aW1lc3RhbXAoKXt2YXIgZD1uZXcgRGF0ZTt2YXIgdGltZT1bcGFkKGQuZ2V0SG91cnMoKSkscGFkKGQuZ2V0TWludXRlcygpKSxwYWQoZC5nZXRTZWNvbmRzKCkpXS5qb2luKFwiOlwiKTtyZXR1cm5bZC5nZXREYXRlKCksbW9udGhzW2QuZ2V0TW9udGgoKV0sdGltZV0uam9pbihcIiBcIil9ZXhwb3J0cy5sb2c9ZnVuY3Rpb24oKXtjb25zb2xlLmxvZyhcIiVzIC0gJXNcIix0aW1lc3RhbXAoKSxleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLGFyZ3VtZW50cykpfTtleHBvcnRzLmluaGVyaXRzPXJlcXVpcmUoXCJpbmhlcml0c1wiKTtleHBvcnRzLl9leHRlbmQ9ZnVuY3Rpb24ob3JpZ2luLGFkZCl7aWYoIWFkZHx8IWlzT2JqZWN0KGFkZCkpcmV0dXJuIG9yaWdpbjt2YXIga2V5cz1PYmplY3Qua2V5cyhhZGQpO3ZhciBpPWtleXMubGVuZ3RoO3doaWxlKGktLSl7b3JpZ2luW2tleXNbaV1dPWFkZFtrZXlzW2ldXX1yZXR1cm4gb3JpZ2lufTtmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmoscHJvcCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmoscHJvcCl9fSkuY2FsbCh0aGlzLHJlcXVpcmUoXCJfcHJvY2Vzc1wiKSx0eXBlb2YgZ2xvYmFsIT09XCJ1bmRlZmluZWRcIj9nbG9iYWw6dHlwZW9mIHNlbGYhPT1cInVuZGVmaW5lZFwiP3NlbGY6dHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCI/d2luZG93Ont9KX0se1wiLi9zdXBwb3J0L2lzQnVmZmVyXCI6MTE2LF9wcm9jZXNzOjkyLGluaGVyaXRzOjgwfV0sMTE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24ocHJvY2VzcyxnbG9iYWwpe1widXNlIHN0cmljdFwiO3ZhciBUcmFuc2Zvcm09cmVxdWlyZShcInJlYWRhYmxlLXN0cmVhbVwiKS5UcmFuc2Zvcm07dmFyIGR1cGxleGlmeT1yZXF1aXJlKFwiZHVwbGV4aWZ5XCIpO3ZhciBXUz1yZXF1aXJlKFwid3NcIik7dmFyIEJ1ZmZlcj1yZXF1aXJlKFwic2FmZS1idWZmZXJcIikuQnVmZmVyO21vZHVsZS5leHBvcnRzPVdlYlNvY2tldFN0cmVhbTtmdW5jdGlvbiBidWlsZFByb3h5KG9wdGlvbnMsc29ja2V0V3JpdGUsc29ja2V0RW5kKXt2YXIgcHJveHk9bmV3IFRyYW5zZm9ybSh7b2JqZWN0TW9kZTpvcHRpb25zLm9iamVjdE1vZGV9KTtwcm94eS5fd3JpdGU9c29ja2V0V3JpdGU7cHJveHkuX2ZsdXNoPXNvY2tldEVuZDtyZXR1cm4gcHJveHl9ZnVuY3Rpb24gV2ViU29ja2V0U3RyZWFtKHRhcmdldCxwcm90b2NvbHMsb3B0aW9ucyl7dmFyIHN0cmVhbSxzb2NrZXQ7dmFyIGlzQnJvd3Nlcj1wcm9jZXNzLnRpdGxlPT09XCJicm93c2VyXCI7dmFyIGlzTmF0aXZlPSEhZ2xvYmFsLldlYlNvY2tldDt2YXIgc29ja2V0V3JpdGU9aXNCcm93c2VyP3NvY2tldFdyaXRlQnJvd3Nlcjpzb2NrZXRXcml0ZU5vZGU7aWYocHJvdG9jb2xzJiYhQXJyYXkuaXNBcnJheShwcm90b2NvbHMpJiZcIm9iamVjdFwiPT09dHlwZW9mIHByb3RvY29scyl7b3B0aW9ucz1wcm90b2NvbHM7cHJvdG9jb2xzPW51bGw7aWYodHlwZW9mIG9wdGlvbnMucHJvdG9jb2w9PT1cInN0cmluZ1wifHxBcnJheS5pc0FycmF5KG9wdGlvbnMucHJvdG9jb2wpKXtwcm90b2NvbHM9b3B0aW9ucy5wcm90b2NvbH19aWYoIW9wdGlvbnMpb3B0aW9ucz17fTtpZihvcHRpb25zLm9iamVjdE1vZGU9PT11bmRlZmluZWQpe29wdGlvbnMub2JqZWN0TW9kZT0hKG9wdGlvbnMuYmluYXJ5PT09dHJ1ZXx8b3B0aW9ucy5iaW5hcnk9PT11bmRlZmluZWQpfXZhciBwcm94eT1idWlsZFByb3h5KG9wdGlvbnMsc29ja2V0V3JpdGUsc29ja2V0RW5kKTtpZighb3B0aW9ucy5vYmplY3RNb2RlKXtwcm94eS5fd3JpdGV2PXdyaXRldn12YXIgYnVmZmVyU2l6ZT1vcHRpb25zLmJyb3dzZXJCdWZmZXJTaXplfHwxMDI0KjUxMjt2YXIgYnVmZmVyVGltZW91dD1vcHRpb25zLmJyb3dzZXJCdWZmZXJUaW1lb3V0fHwxZTM7aWYodHlwZW9mIHRhcmdldD09PVwib2JqZWN0XCIpe3NvY2tldD10YXJnZXR9ZWxzZXtpZihpc05hdGl2ZSYmaXNCcm93c2VyKXtzb2NrZXQ9bmV3IFdTKHRhcmdldCxwcm90b2NvbHMpfWVsc2V7c29ja2V0PW5ldyBXUyh0YXJnZXQscHJvdG9jb2xzLG9wdGlvbnMpfXNvY2tldC5iaW5hcnlUeXBlPVwiYXJyYXlidWZmZXJcIn1pZihzb2NrZXQucmVhZHlTdGF0ZT09PXNvY2tldC5PUEVOKXtzdHJlYW09cHJveHl9ZWxzZXtzdHJlYW09ZHVwbGV4aWZ5Lm9iaigpO3NvY2tldC5vbm9wZW49b25vcGVufXN0cmVhbS5zb2NrZXQ9c29ja2V0O3NvY2tldC5vbmNsb3NlPW9uY2xvc2U7c29ja2V0Lm9uZXJyb3I9b25lcnJvcjtzb2NrZXQub25tZXNzYWdlPW9ubWVzc2FnZTtwcm94eS5vbihcImNsb3NlXCIsZGVzdHJveSk7dmFyIGNvZXJjZVRvQnVmZmVyPSFvcHRpb25zLm9iamVjdE1vZGU7ZnVuY3Rpb24gc29ja2V0V3JpdGVOb2RlKGNodW5rLGVuYyxuZXh0KXtpZihzb2NrZXQucmVhZHlTdGF0ZSE9PXNvY2tldC5PUEVOKXtuZXh0KCk7cmV0dXJufWlmKGNvZXJjZVRvQnVmZmVyJiZ0eXBlb2YgY2h1bms9PT1cInN0cmluZ1wiKXtjaHVuaz1CdWZmZXIuZnJvbShjaHVuayxcInV0ZjhcIil9c29ja2V0LnNlbmQoY2h1bmssbmV4dCl9ZnVuY3Rpb24gc29ja2V0V3JpdGVCcm93c2VyKGNodW5rLGVuYyxuZXh0KXtpZihzb2NrZXQuYnVmZmVyZWRBbW91bnQ+YnVmZmVyU2l6ZSl7c2V0VGltZW91dChzb2NrZXRXcml0ZUJyb3dzZXIsYnVmZmVyVGltZW91dCxjaHVuayxlbmMsbmV4dCk7cmV0dXJufWlmKGNvZXJjZVRvQnVmZmVyJiZ0eXBlb2YgY2h1bms9PT1cInN0cmluZ1wiKXtjaHVuaz1CdWZmZXIuZnJvbShjaHVuayxcInV0ZjhcIil9dHJ5e3NvY2tldC5zZW5kKGNodW5rKX1jYXRjaChlcnIpe3JldHVybiBuZXh0KGVycil9bmV4dCgpfWZ1bmN0aW9uIHNvY2tldEVuZChkb25lKXtzb2NrZXQuY2xvc2UoKTtkb25lKCl9ZnVuY3Rpb24gb25vcGVuKCl7c3RyZWFtLnNldFJlYWRhYmxlKHByb3h5KTtzdHJlYW0uc2V0V3JpdGFibGUocHJveHkpO3N0cmVhbS5lbWl0KFwiY29ubmVjdFwiKX1mdW5jdGlvbiBvbmNsb3NlKCl7c3RyZWFtLmVuZCgpO3N0cmVhbS5kZXN0cm95KCl9ZnVuY3Rpb24gb25lcnJvcihlcnIpe3N0cmVhbS5kZXN0cm95KGVycil9ZnVuY3Rpb24gb25tZXNzYWdlKGV2ZW50KXt2YXIgZGF0YT1ldmVudC5kYXRhO2lmKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcilkYXRhPUJ1ZmZlci5mcm9tKGRhdGEpO2Vsc2UgZGF0YT1CdWZmZXIuZnJvbShkYXRhLFwidXRmOFwiKTtwcm94eS5wdXNoKGRhdGEpfWZ1bmN0aW9uIGRlc3Ryb3koKXtzb2NrZXQuY2xvc2UoKX1mdW5jdGlvbiB3cml0ZXYoY2h1bmtzLGNiKXt2YXIgYnVmZmVycz1uZXcgQXJyYXkoY2h1bmtzLmxlbmd0aCk7Zm9yKHZhciBpPTA7aTxjaHVua3MubGVuZ3RoO2krKyl7aWYodHlwZW9mIGNodW5rc1tpXS5jaHVuaz09PVwic3RyaW5nXCIpe2J1ZmZlcnNbaV09QnVmZmVyLmZyb20oY2h1bmtzW2ldLFwidXRmOFwiKX1lbHNle2J1ZmZlcnNbaV09Y2h1bmtzW2ldLmNodW5rfX10aGlzLl93cml0ZShCdWZmZXIuY29uY2F0KGJ1ZmZlcnMpLFwiYmluYXJ5XCIsY2IpfXJldHVybiBzdHJlYW19fSkuY2FsbCh0aGlzLHJlcXVpcmUoXCJfcHJvY2Vzc1wiKSx0eXBlb2YgZ2xvYmFsIT09XCJ1bmRlZmluZWRcIj9nbG9iYWw6dHlwZW9mIHNlbGYhPT1cInVuZGVmaW5lZFwiP3NlbGY6dHlwZW9mIHdpbmRvdyE9PVwidW5kZWZpbmVkXCI/d2luZG93Ont9KX0se19wcm9jZXNzOjkyLGR1cGxleGlmeToxNyxcInJlYWRhYmxlLXN0cmVhbVwiOjEwOCxcInNhZmUtYnVmZmVyXCI6MTEwLHdzOjExOX1dLDExOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7dmFyIHdzPW51bGw7aWYodHlwZW9mIFdlYlNvY2tldCE9PVwidW5kZWZpbmVkXCIpe3dzPVdlYlNvY2tldH1lbHNlIGlmKHR5cGVvZiBNb3pXZWJTb2NrZXQhPT1cInVuZGVmaW5lZFwiKXt3cz1Nb3pXZWJTb2NrZXR9ZWxzZSBpZih0eXBlb2Ygd2luZG93IT09XCJ1bmRlZmluZWRcIil7d3M9d2luZG93LldlYlNvY2tldHx8d2luZG93Lk1veldlYlNvY2tldH1tb2R1bGUuZXhwb3J0cz13c30se31dLDEyMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9d3JhcHB5O2Z1bmN0aW9uIHdyYXBweShmbixjYil7aWYoZm4mJmNiKXJldHVybiB3cmFwcHkoZm4pKGNiKTtpZih0eXBlb2YgZm4hPT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIm5lZWQgd3JhcHBlciBmdW5jdGlvblwiKTtPYmplY3Qua2V5cyhmbikuZm9yRWFjaChmdW5jdGlvbihrKXt3cmFwcGVyW2tdPWZuW2tdfSk7cmV0dXJuIHdyYXBwZXI7ZnVuY3Rpb24gd3JhcHBlcigpe3ZhciBhcmdzPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtmb3IodmFyIGk9MDtpPGFyZ3MubGVuZ3RoO2krKyl7YXJnc1tpXT1hcmd1bWVudHNbaV19dmFyIHJldD1mbi5hcHBseSh0aGlzLGFyZ3MpO3ZhciBjYj1hcmdzW2FyZ3MubGVuZ3RoLTFdO2lmKHR5cGVvZiByZXQ9PT1cImZ1bmN0aW9uXCImJnJldCE9PWNiKXtPYmplY3Qua2V5cyhjYikuZm9yRWFjaChmdW5jdGlvbihrKXtyZXRba109Y2Jba119KX1yZXR1cm4gcmV0fX19LHt9XSwxMjE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWV4dGVuZDt2YXIgaGFzT3duUHJvcGVydHk9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBleHRlbmQoKXt2YXIgdGFyZ2V0PXt9O2Zvcih2YXIgaT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe3ZhciBzb3VyY2U9YXJndW1lbnRzW2ldO2Zvcih2YXIga2V5IGluIHNvdXJjZSl7aWYoaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2Usa2V5KSl7dGFyZ2V0W2tleV09c291cmNlW2tleV19fX1yZXR1cm4gdGFyZ2V0fX0se31dfSx7fSxbOV0pKDkpfSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///30\n");

/***/ }),

/***/ 39:
/*!************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/components/u-charts/u-charts.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__, uni) {/*\r\n * uCharts v1.9.3.20190922\r\n * uni-app平台高性能跨全端图表，支持H5、APP、小程序（微信/支付宝/百度/头条/QQ/360）\r\n * Copyright (c) 2019 QIUN秋云 https://www.ucharts.cn All rights reserved.\r\n * Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )\r\n * \r\n * uCharts官方网站\r\n * https://www.uCharts.cn\r\n * \r\n * 开源地址:\r\n * https://gitee.com/uCharts/uCharts\r\n * \r\n * uni-app插件市场地址：\r\n * http://ext.dcloud.net.cn/plugin?id=271\r\n * \r\n */\n\n\n\nvar config = {\n  yAxisWidth: 15,\n  yAxisSplit: 5,\n  xAxisHeight: 15,\n  xAxisLineHeight: 15,\n  legendHeight: 15,\n  yAxisTitleWidth: 15,\n  padding: [10, 10, 10, 10],\n  pixelRatio: 1,\n  rotate: false,\n  columePadding: 3,\n  fontSize: 13,\n  //dataPointShape: ['diamond', 'circle', 'triangle', 'rect'],\n  dataPointShape: ['circle', 'circle', 'circle', 'circle'],\n  colors: ['#1890ff', '#2fc25b', '#facc14', '#f04864', '#8543e0', '#90ed7d'],\n  pieChartLinePadding: 15,\n  pieChartTextPadding: 5,\n  xAxisTextPadding: 3,\n  titleColor: '#333333',\n  titleFontSize: 20,\n  subtitleColor: '#999999',\n  subtitleFontSize: 15,\n  toolTipPadding: 3,\n  toolTipBackground: '#000000',\n  toolTipOpacity: 0.7,\n  toolTipLineHeight: 20,\n  radarLabelTextMargin: 15,\n  gaugeLabelTextMargin: 15 };\n\n\nvar assign = function assign(target) {for (var _len2 = arguments.length, varArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {varArgs[_key2 - 1] = arguments[_key2];}\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n  if (!varArgs || varArgs.length <= 0) {\n    return target;\n  }\n  // 深度合并对象\n  function deepAssign(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj1[key] && obj1[key].toString() === \"[object Object]\" ?\n      deepAssign(obj1[key], obj2[key]) : obj1[key] = obj2[key];\n    }\n    return obj1;\n  }\n\n  varArgs.forEach(function (val) {\n    target = deepAssign(target, val);\n  });\n  return target;\n};\n\nvar util = {\n  toFixed: function toFixed(num, limit) {\n    limit = limit || 2;\n    if (this.isFloat(num)) {\n      num = num.toFixed(limit);\n    }\n    return num;\n  },\n  isFloat: function isFloat(num) {\n    return num % 1 !== 0;\n  },\n  approximatelyEqual: function approximatelyEqual(num1, num2) {\n    return Math.abs(num1 - num2) < 1e-10;\n  },\n  isSameSign: function isSameSign(num1, num2) {\n    return Math.abs(num1) === num1 && Math.abs(num2) === num2 || Math.abs(num1) !== num1 && Math.abs(num2) !== num2;\n  },\n  isSameXCoordinateArea: function isSameXCoordinateArea(p1, p2) {\n    return this.isSameSign(p1.x, p2.x);\n  },\n  isCollision: function isCollision(obj1, obj2) {\n    obj1.end = {};\n    obj1.end.x = obj1.start.x + obj1.width;\n    obj1.end.y = obj1.start.y - obj1.height;\n    obj2.end = {};\n    obj2.end.x = obj2.start.x + obj2.width;\n    obj2.end.y = obj2.start.y - obj2.height;\n    var flag = obj2.start.x > obj1.end.x || obj2.end.x < obj1.start.x || obj2.end.y > obj1.start.y || obj2.start.y < obj1.end.y;\n    return !flag;\n  } };\n\n\n//兼容H5点击事件\nfunction getH5Offset(e) {\n  e.mp = {\n    changedTouches: [] };\n\n  e.mp.changedTouches.push({\n    x: e.offsetX,\n    y: e.offsetY });\n\n  return e;\n}\n\n// hex 转 rgba\nfunction hexToRgb(hexValue, opc) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + opc + ')';\n}\n\nfunction findRange(num, type, limit) {\n  if (isNaN(num)) {\n    throw new Error('[uCharts] unvalid series data!');\n  }\n  limit = limit || 10;\n  type = type ? type : 'upper';\n  var multiple = 1;\n  while (limit < 1) {\n    limit *= 10;\n    multiple *= 10;\n  }\n  if (type === 'upper') {\n    num = Math.ceil(num * multiple);\n  } else {\n    num = Math.floor(num * multiple);\n  }\n  while (num % limit !== 0) {\n    if (type === 'upper') {\n      num++;\n    } else {\n      num--;\n    }\n  }\n  return num / multiple;\n}\n\nfunction calCandleMA(dayArr, nameArr, colorArr, kdata) {\n  var seriesTemp = [];\n  for (var k = 0; k < dayArr.length; k++) {\n    var seriesItem = {\n      data: [],\n      name: nameArr[k],\n      color: colorArr[k] };\n\n    for (var i = 0, len = kdata.length; i < len; i++) {\n      if (i < dayArr[k]) {\n        seriesItem.data.push(null);\n        continue;\n      }\n      var sum = 0;\n      for (var j = 0; j < dayArr[k]; j++) {\n        sum += kdata[i - j][1];\n      }\n      seriesItem.data.push(+(sum / dayArr[k]).toFixed(3));\n    }\n    seriesTemp.push(seriesItem);\n  }\n  return seriesTemp;\n}\n\nfunction calValidDistance(self, distance, chartData, config, opts) {\n  var dataChartAreaWidth = opts.width - opts.area[1] - opts.area[3];\n  var dataChartWidth = chartData.eachSpacing * (opts.chartData.xAxisData.xAxisPoints.length - 1);\n  var validDistance = distance;\n  if (distance >= 0) {\n    validDistance = 0;\n    self.event.trigger('scrollLeft');\n  } else if (Math.abs(distance) >= dataChartWidth - dataChartAreaWidth) {\n    validDistance = dataChartAreaWidth - dataChartWidth;\n    self.event.trigger('scrollRight');\n  }\n  return validDistance;\n}\n\nfunction isInAngleRange(angle, startAngle, endAngle) {\n  function adjust(angle) {\n    while (angle < 0) {\n      angle += 2 * Math.PI;\n    }\n    while (angle > 2 * Math.PI) {\n      angle -= 2 * Math.PI;\n    }\n    return angle;\n  }\n  angle = adjust(angle);\n  startAngle = adjust(startAngle);\n  endAngle = adjust(endAngle);\n  if (startAngle > endAngle) {\n    endAngle += 2 * Math.PI;\n    if (angle < startAngle) {\n      angle += 2 * Math.PI;\n    }\n  }\n  return angle >= startAngle && angle <= endAngle;\n}\n\nfunction calRotateTranslate(x, y, h) {\n  var xv = x;\n  var yv = h - y;\n  var transX = xv + (h - yv - xv) / Math.sqrt(2);\n  transX *= -1;\n  var transY = (h - yv) * (Math.sqrt(2) - 1) - (h - yv - xv) / Math.sqrt(2);\n  return {\n    transX: transX,\n    transY: transY };\n\n}\n\nfunction createCurveControlPoints(points, i) {\n\n  function isNotMiddlePoint(points, i) {\n    if (points[i - 1] && points[i + 1]) {\n      return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y,\n      points[\n      i + 1].y);\n    } else {\n      return false;\n    }\n  }\n  var a = 0.2;\n  var b = 0.2;\n  var pAx = null;\n  var pAy = null;\n  var pBx = null;\n  var pBy = null;\n  if (i < 1) {\n    pAx = points[0].x + (points[1].x - points[0].x) * a;\n    pAy = points[0].y + (points[1].y - points[0].y) * a;\n  } else {\n    pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a;\n    pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a;\n  }\n\n  if (i > points.length - 3) {\n    var last = points.length - 1;\n    pBx = points[last].x - (points[last].x - points[last - 1].x) * b;\n    pBy = points[last].y - (points[last].y - points[last - 1].y) * b;\n  } else {\n    pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b;\n    pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b;\n  }\n  if (isNotMiddlePoint(points, i + 1)) {\n    pBy = points[i + 1].y;\n  }\n  if (isNotMiddlePoint(points, i)) {\n    pAy = points[i].y;\n  }\n  if (pAy >= Math.max(points[i].y, points[i + 1].y) || pAy <= Math.min(points[i].y, points[i + 1].y)) {\n    pAy = points[i].y;\n  }\n  if (pBy >= Math.max(points[i].y, points[i + 1].y) || pBy <= Math.min(points[i].y, points[i + 1].y)) {\n    pBy = points[i + 1].y;\n  }\n  return {\n    ctrA: {\n      x: pAx,\n      y: pAy },\n\n    ctrB: {\n      x: pBx,\n      y: pBy } };\n\n\n}\n\nfunction convertCoordinateOrigin(x, y, center) {\n  return {\n    x: center.x + x,\n    y: center.y - y };\n\n}\n\nfunction avoidCollision(obj, target) {\n  if (target) {\n    // is collision test\n    while (util.isCollision(obj, target)) {\n      if (obj.start.x > 0) {\n        obj.start.y--;\n      } else if (obj.start.x < 0) {\n        obj.start.y++;\n      } else {\n        if (obj.start.y > 0) {\n          obj.start.y++;\n        } else {\n          obj.start.y--;\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction fillSeries(series, opts, config) {\n  var index = 0;\n  return series.map(function (item) {\n    if (!item.color) {\n      item.color = config.colors[index];\n      index = (index + 1) % config.colors.length;\n    }\n    if (!item.index) {\n      item.index = 0;\n    }\n    if (!item.type) {\n      item.type = opts.type;\n    }\n    if (typeof item.show == \"undefined\") {\n      item.show = true;\n    }\n    if (!item.type) {\n      item.type = opts.type;\n    }\n    if (!item.pointShape) {\n      item.pointShape = \"circle\";\n    }\n    if (!item.legendShape) {\n      switch (item.type) {\n        case 'line':\n          item.legendShape = \"line\";\n          break;\n        case 'column':\n          item.legendShape = \"rect\";\n          break;\n        case 'area':\n          item.legendShape = \"triangle\";\n          break;\n        default:\n          item.legendShape = \"circle\";}\n\n    }\n    return item;\n  });\n}\n\nfunction getDataRange(minData, maxData) {\n  var limit = 0;\n  var range = maxData - minData;\n  if (range >= 10000) {\n    limit = 1000;\n  } else if (range >= 1000) {\n    limit = 100;\n  } else if (range >= 100) {\n    limit = 10;\n  } else if (range >= 10) {\n    limit = 5;\n  } else if (range >= 1) {\n    limit = 1;\n  } else if (range >= 0.1) {\n    limit = 0.1;\n  } else if (range >= 0.01) {\n    limit = 0.01;\n  } else if (range >= 0.001) {\n    limit = 0.001;\n  } else if (range >= 0.0001) {\n    limit = 0.0001;\n  } else if (range >= 0.00001) {\n    limit = 0.00001;\n  } else {\n    limit = 0.000001;\n  }\n  return {\n    minRange: findRange(minData, 'lower', limit),\n    maxRange: findRange(maxData, 'upper', limit) };\n\n}\n\nfunction measureText(text) {\n  var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.fontSize;\n  text = String(text);\n  var text = text.split('');\n  var width = 0;\n  for (var i = 0; i < text.length; i++) {\n    var item = text[i];\n    if (/[a-zA-Z]/.test(item)) {\n      width += 7;\n    } else if (/[0-9]/.test(item)) {\n      width += 5.5;\n    } else if (/\\./.test(item)) {\n      width += 2.7;\n    } else if (/-/.test(item)) {\n      width += 3.25;\n    } else if (/[\\u4e00-\\u9fa5]/.test(item)) {\n      width += 10;\n    } else if (/\\(|\\)/.test(item)) {\n      width += 3.73;\n    } else if (/\\s/.test(item)) {\n      width += 2.5;\n    } else if (/%/.test(item)) {\n      width += 8;\n    } else {\n      width += 10;\n    }\n  }\n  return width * fontSize / 10;\n}\n\nfunction dataCombine(series) {\n  return series.reduce(function (a, b) {\n    return (a.data ? a.data : a).concat(b.data);\n  }, []);\n}\n\nfunction dataCombineStack(series, len) {\n  var sum = new Array(len);\n  for (var j = 0; j < sum.length; j++) {\n    sum[j] = 0;\n  }\n  for (var i = 0; i < series.length; i++) {\n    for (var j = 0; j < sum.length; j++) {\n      sum[j] += series[i].data[j];\n    }\n  }\n  return series.reduce(function (a, b) {\n    return (a.data ? a.data : a).concat(b.data).concat(sum);\n  }, []);\n}\n\nfunction getTouches(touches, opts, e) {\n  var x, y;\n  if (touches.clientX) {\n    if (opts.rotate) {\n      y = opts.height - touches.clientX * opts.pixelRatio;\n      x = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *\n      opts.pixelRatio;\n    } else {\n      x = touches.clientX * opts.pixelRatio;\n      y = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *\n      opts.pixelRatio;\n    }\n  } else {\n    if (opts.rotate) {\n      y = opts.height - touches.x * opts.pixelRatio;\n      x = touches.y * opts.pixelRatio;\n    } else {\n      x = touches.x * opts.pixelRatio;\n      y = touches.y * opts.pixelRatio;\n    }\n  }\n  return {\n    x: x,\n    y: y };\n\n}\n\nfunction getSeriesDataItem(series, index) {\n  var data = [];\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    if (item.data[index] !== null && typeof item.data[index] !== 'undefined' && item.show) {\n      var seriesItem = {};\n      seriesItem.color = item.color;\n      seriesItem.type = item.type;\n      seriesItem.style = item.style;\n      seriesItem.pointShape = item.pointShape;\n      seriesItem.disableLegend = item.disableLegend;\n      seriesItem.name = item.name;\n      seriesItem.show = item.show;\n      seriesItem.data = item.format ? item.format(item.data[index]) : item.data[index];\n      data.push(seriesItem);\n    }\n  }\n  return data;\n}\n\nfunction getMaxTextListLength(list) {\n  var lengthList = list.map(function (item) {\n    return measureText(item);\n  });\n  return Math.max.apply(null, lengthList);\n}\n\nfunction getRadarCoordinateSeries(length) {\n  var eachAngle = 2 * Math.PI / length;\n  var CoordinateSeries = [];\n  for (var i = 0; i < length; i++) {\n    CoordinateSeries.push(eachAngle * i);\n  }\n\n  return CoordinateSeries.map(function (item) {\n    return -1 * item + Math.PI / 2;\n  });\n}\n\nfunction getToolTipData(seriesData, calPoints, index, categories) {\n  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var textList = seriesData.map(function (item) {\n    var titleText = [];\n    if (categories) {\n      titleText = categories;\n    } else {\n      titleText = item.data;\n    }\n    return {\n      text: option.format ? option.format(item, titleText[index]) : item.name + ': ' + item.data,\n      color: item.color };\n\n  });\n  var validCalPoints = [];\n  var offset = {\n    x: 0,\n    y: 0 };\n\n  for (var i = 0; i < calPoints.length; i++) {\n    var points = calPoints[i];\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\n      validCalPoints.push(points[index]);\n    }\n  }\n  for (var _i = 0; _i < validCalPoints.length; _i++) {\n    var item = validCalPoints[_i];\n    offset.x = Math.round(item.x);\n    offset.y += item.y;\n  }\n  offset.y /= validCalPoints.length;\n  return {\n    textList: textList,\n    offset: offset };\n\n}\n\nfunction getMixToolTipData(seriesData, calPoints, index, categories) {\n  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var textList = seriesData.map(function (item) {\n    return {\n      text: option.format ? option.format(item, categories[index]) : item.name + ': ' + item.data,\n      color: item.color,\n      disableLegend: item.disableLegend ? true : false };\n\n  });\n  textList = textList.filter(function (item) {\n    if (item.disableLegend !== true) {\n      return item;\n    }\n  });\n  var validCalPoints = [];\n  var offset = {\n    x: 0,\n    y: 0 };\n\n  for (var i = 0; i < calPoints.length; i++) {\n    var points = calPoints[i];\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\n      validCalPoints.push(points[index]);\n    }\n  }\n  for (var _i2 = 0; _i2 < validCalPoints.length; _i2++) {\n    var item = validCalPoints[_i2];\n    offset.x = Math.round(item.x);\n    offset.y += item.y;\n  }\n  offset.y /= validCalPoints.length;\n  return {\n    textList: textList,\n    offset: offset };\n\n}\n\nfunction getCandleToolTipData(series, seriesData, calPoints, index, categories, extra) {\n  var option = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n  var upColor = extra.color.upFill;\n  var downColor = extra.color.downFill;\n  //颜色顺序为开盘，收盘，最低，最高\n  var color = [upColor, upColor, downColor, upColor];\n  var textList = [];\n  var text0 = {\n    text: categories[index],\n    color: null };\n\n  textList.push(text0);\n  seriesData.map(function (item) {\n    if (index == 0 && item.data[1] - item.data[0] < 0) {\n      color[1] = downColor;\n    } else {\n      if (item.data[0] < series[index - 1][1]) {\n        color[0] = downColor;\n      }\n      if (item.data[1] < item.data[0]) {\n        color[1] = downColor;\n      }\n      if (item.data[2] > series[index - 1][1]) {\n        color[2] = upColor;\n      }\n      if (item.data[3] < series[index - 1][1]) {\n        color[3] = downColor;\n      }\n    }\n    var text1 = {\n      text: '开盘：' + item.data[0],\n      color: color[0] };\n\n    var text2 = {\n      text: '收盘：' + item.data[1],\n      color: color[1] };\n\n    var text3 = {\n      text: '最低：' + item.data[2],\n      color: color[2] };\n\n    var text4 = {\n      text: '最高：' + item.data[3],\n      color: color[3] };\n\n    textList.push(text1, text2, text3, text4);\n  });\n  var validCalPoints = [];\n  var offset = {\n    x: 0,\n    y: 0 };\n\n  for (var i = 0; i < calPoints.length; i++) {\n    var points = calPoints[i];\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\n      validCalPoints.push(points[index]);\n    }\n  }\n  offset.x = Math.round(validCalPoints[0][0].x);\n  return {\n    textList: textList,\n    offset: offset };\n\n}\n\nfunction filterSeries(series) {\n  var tempSeries = [];\n  for (var i = 0; i < series.length; i++) {\n    if (series[i].show == true) {\n      tempSeries.push(series[i]);\n    }\n  }\n  return tempSeries;\n}\n\nfunction findCurrentIndex(currentPoints, calPoints, opts, config) {\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var currentIndex = -1;\n  var spacing = 0;\n  var xAxisPoints = [];\n  for (var i = 0; i < calPoints[0].length; i++) {\n    xAxisPoints.push(calPoints[0][i].x);\n  }\n  if ((opts.type == 'line' || opts.type == 'area') && opts.xAxis.boundaryGap == 'justify') {\n    spacing = opts.chartData.eachSpacing / 2;\n  }\n  if (!opts.categories) {\n    spacing = 0;\n  }\n  if (isInExactChartArea(currentPoints, opts, config)) {\n    xAxisPoints.forEach(function (item, index) {\n      if (currentPoints.x + offset + spacing > item) {\n        currentIndex = index;\n      }\n    });\n  }\n  return currentIndex;\n}\n\nfunction findLegendIndex(currentPoints, legendData, opts) {\n  var currentIndex = -1;\n  if (isInExactLegendArea(currentPoints, legendData.area)) {\n    var points = legendData.points;\n    var index = -1;\n    for (var i = 0, len = points.length; i < len; i++) {\n      var item = points[i];\n      for (var j = 0; j < item.length; j++) {\n        index += 1;\n        var area = item[j]['area'];\n        if (currentPoints.x > area[0] && currentPoints.x < area[2] && currentPoints.y > area[1] && currentPoints.y < area[3]) {\n          currentIndex = index;\n          break;\n        }\n      }\n    }\n    return currentIndex;\n  }\n  return currentIndex;\n}\n\nfunction isInExactLegendArea(currentPoints, area) {\n  return currentPoints.x > area.start.x && currentPoints.x < area.end.x && currentPoints.y > area.start.y &&\n  currentPoints.y < area.end.y;\n}\n\nfunction isInExactChartArea(currentPoints, opts, config) {\n  return currentPoints.x <= opts.width - opts.area[1] + 10 && currentPoints.x >= opts.area[3] - 10 && currentPoints.y >= opts.area[0] && currentPoints.y <= opts.height - opts.area[2];\n}\n\nfunction findRadarChartCurrentIndex(currentPoints, radarData, count) {\n  var eachAngleArea = 2 * Math.PI / count;\n  var currentIndex = -1;\n  if (isInExactPieChartArea(currentPoints, radarData.center, radarData.radius)) {\n    var fixAngle = function fixAngle(angle) {\n      if (angle < 0) {\n        angle += 2 * Math.PI;\n      }\n      if (angle > 2 * Math.PI) {\n        angle -= 2 * Math.PI;\n      }\n      return angle;\n    };\n\n    var angle = Math.atan2(radarData.center.y - currentPoints.y, currentPoints.x - radarData.center.x);\n    angle = -1 * angle;\n    if (angle < 0) {\n      angle += 2 * Math.PI;\n    }\n\n    var angleList = radarData.angleList.map(function (item) {\n      item = fixAngle(-1 * item);\n\n      return item;\n    });\n\n    angleList.forEach(function (item, index) {\n      var rangeStart = fixAngle(item - eachAngleArea / 2);\n      var rangeEnd = fixAngle(item + eachAngleArea / 2);\n      if (rangeEnd < rangeStart) {\n        rangeEnd += 2 * Math.PI;\n      }\n      if (angle >= rangeStart && angle <= rangeEnd || angle + 2 * Math.PI >= rangeStart && angle + 2 * Math.PI <=\n      rangeEnd) {\n        currentIndex = index;\n      }\n    });\n  }\n\n  return currentIndex;\n}\n\nfunction findFunnelChartCurrentIndex(currentPoints, funnelData) {\n  var currentIndex = -1;\n  for (var i = 0, len = funnelData.series.length; i < len; i++) {\n    var item = funnelData.series[i];\n    if (currentPoints.x > item.funnelArea[0] && currentPoints.x < item.funnelArea[2] && currentPoints.y > item.funnelArea[1] && currentPoints.y < item.funnelArea[3]) {\n      currentIndex = i;\n      break;\n    }\n  }\n  return currentIndex;\n}\n\nfunction findWordChartCurrentIndex(currentPoints, wordData) {\n  var currentIndex = -1;\n  for (var i = 0, len = wordData.length; i < len; i++) {\n    var item = wordData[i];\n    if (currentPoints.x > item.area[0] && currentPoints.x < item.area[2] && currentPoints.y > item.area[1] && currentPoints.y < item.area[3]) {\n      currentIndex = i;\n      break;\n    }\n  }\n  return currentIndex;\n}\n\nfunction findMapChartCurrentIndex(currentPoints, opts) {\n  var currentIndex = -1;\n  var cData = opts.chartData.mapData;\n  var data = opts.series;\n  var tmp = pointToCoordinate(currentPoints.y, currentPoints.x, cData.bounds, cData.scale, cData.xoffset, cData.yoffset);\n  var poi = [tmp.x, tmp.y];\n  for (var i = 0, len = data.length; i < len; i++) {\n    var item = data[i].geometry.coordinates;\n    if (isPoiWithinPoly(poi, item)) {\n      currentIndex = i;\n      break;\n    }\n  }\n  return currentIndex;\n}\n\nfunction findPieChartCurrentIndex(currentPoints, pieData) {\n  var currentIndex = -1;\n  if (isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {\n    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);\n    angle = -angle;\n    for (var i = 0, len = pieData.series.length; i < len; i++) {\n      var item = pieData.series[i];\n      if (isInAngleRange(angle, item._start_, item._start_ + item._proportion_ * 2 * Math.PI)) {\n        currentIndex = i;\n        break;\n      }\n    }\n  }\n\n  return currentIndex;\n}\n\nfunction isInExactPieChartArea(currentPoints, center, radius) {\n  return Math.pow(currentPoints.x - center.x, 2) + Math.pow(currentPoints.y - center.y, 2) <= Math.pow(radius, 2);\n}\n\nfunction splitPoints(points) {\n  var newPoints = [];\n  var items = [];\n  points.forEach(function (item, index) {\n    if (item !== null) {\n      items.push(item);\n    } else {\n      if (items.length) {\n        newPoints.push(items);\n      }\n      items = [];\n    }\n  });\n  if (items.length) {\n    newPoints.push(items);\n  }\n\n  return newPoints;\n}\n\nfunction calLegendData(series, opts, config, chartData) {\n  var legendData = {\n    area: {\n      start: {\n        x: 0,\n        y: 0 },\n\n      end: {\n        x: 0,\n        y: 0 },\n\n      width: 0,\n      height: 0,\n      wholeWidth: 0,\n      wholeHeight: 0 },\n\n    points: [],\n    widthArr: [],\n    heightArr: [] };\n\n  if (opts.legend.show === false) {\n    chartData.legendData = legendData;\n    return legendData;\n  }\n\n  var padding = opts.legend.padding;\n  var margin = opts.legend.margin;\n  var fontSize = opts.legend.fontSize;\n  var shapeWidth = 15 * opts.pixelRatio;\n  var shapeRight = 5 * opts.pixelRatio;\n  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);\n  if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\n    var legendList = [];\n    var widthCount = 0;\n    var widthCountArr = [];\n    var currentRow = [];\n    for (var i = 0; i < series.length; i++) {\n      var item = series[i];\n      var itemWidth = shapeWidth + shapeRight + measureText(item.name || 'undefined', fontSize) + opts.legend.itemGap;\n      if (widthCount + itemWidth > opts.width - opts.padding[1] - opts.padding[3]) {\n        legendList.push(currentRow);\n        widthCountArr.push(widthCount - opts.legend.itemGap);\n        widthCount = itemWidth;\n        currentRow = [item];\n      } else {\n        widthCount += itemWidth;\n        currentRow.push(item);\n      }\n    }\n    if (currentRow.length) {\n      legendList.push(currentRow);\n      widthCountArr.push(widthCount - opts.legend.itemGap);\n      legendData.widthArr = widthCountArr;\n      var legendWidth = Math.max.apply(null, widthCountArr);\n      switch (opts.legend.float) {\n        case 'left':\n          legendData.area.start.x = opts.padding[3];\n          legendData.area.end.x = opts.padding[3] + 2 * padding;\n          break;\n        case 'right':\n          legendData.area.start.x = opts.width - opts.padding[1] - legendWidth - 2 * padding;\n          legendData.area.end.x = opts.width - opts.padding[1];\n          break;\n        default:\n          legendData.area.start.x = (opts.width - legendWidth) / 2 - padding;\n          legendData.area.end.x = (opts.width + legendWidth) / 2 + padding;}\n\n      legendData.area.width = legendWidth + 2 * padding;\n      legendData.area.wholeWidth = legendWidth + 2 * padding;\n      legendData.area.height = legendList.length * lineHeight + 2 * padding;\n      legendData.area.wholeHeight = legendList.length * lineHeight + 2 * padding + 2 * margin;\n      legendData.points = legendList;\n    }\n  } else {\n    var len = series.length;\n    var maxHeight = opts.height - opts.padding[0] - opts.padding[2] - 2 * margin - 2 * padding;\n    var maxLength = Math.min(Math.floor(maxHeight / lineHeight), len);\n    legendData.area.height = maxLength * lineHeight + padding * 2;\n    legendData.area.wholeHeight = maxLength * lineHeight + padding * 2;\n    switch (opts.legend.float) {\n      case 'top':\n        legendData.area.start.y = opts.padding[0] + margin;\n        legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;\n        break;\n      case 'bottom':\n        legendData.area.start.y = opts.height - opts.padding[2] - margin - legendData.area.height;\n        legendData.area.end.y = opts.height - opts.padding[2] - margin;\n        break;\n      default:\n        legendData.area.start.y = (opts.height - legendData.area.height) / 2;\n        legendData.area.end.y = (opts.height + legendData.area.height) / 2;}\n\n    var lineNum = len % maxLength === 0 ? len / maxLength : Math.floor(len / maxLength + 1);\n    var _currentRow = [];\n    for (var _i3 = 0; _i3 < lineNum; _i3++) {\n      var temp = series.slice(_i3 * maxLength, _i3 * maxLength + maxLength);\n      _currentRow.push(temp);\n    }\n\n    legendData.points = _currentRow;\n\n    if (_currentRow.length) {\n      for (var _i4 = 0; _i4 < _currentRow.length; _i4++) {\n        var _item = _currentRow[_i4];\n        var maxWidth = 0;\n        for (var j = 0; j < _item.length; j++) {\n          var _itemWidth = shapeWidth + shapeRight + measureText(_item[j].name || 'undefined', fontSize) + opts.legend.itemGap;\n          if (_itemWidth > maxWidth) {\n            maxWidth = _itemWidth;\n          }\n        }\n        legendData.widthArr.push(maxWidth);\n        legendData.heightArr.push(_item.length * lineHeight + padding * 2);\n      }\n      var _legendWidth = 0;\n      for (var _i5 = 0; _i5 < legendData.widthArr.length; _i5++) {\n        _legendWidth += legendData.widthArr[_i5];\n      }\n      legendData.area.width = _legendWidth - opts.legend.itemGap + 2 * padding;\n      legendData.area.wholeWidth = legendData.area.width + padding;\n    }\n  }\n\n  switch (opts.legend.position) {\n    case 'top':\n      legendData.area.start.y = opts.padding[0] + margin;\n      legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;\n      break;\n    case 'bottom':\n      legendData.area.start.y = opts.height - opts.padding[2] - legendData.area.height - margin;\n      legendData.area.end.y = opts.height - opts.padding[2] - margin;\n      break;\n    case 'left':\n      legendData.area.start.x = opts.padding[3];\n      legendData.area.end.x = opts.padding[3] + legendData.area.width;\n      break;\n    case 'right':\n      legendData.area.start.x = opts.width - opts.padding[1] - legendData.area.width;\n      legendData.area.end.x = opts.width - opts.padding[1];\n      break;}\n\n  chartData.legendData = legendData;\n  return legendData;\n}\n\nfunction calCategoriesData(categories, opts, config, eachSpacing) {\n  var result = {\n    angle: 0,\n    xAxisHeight: config.xAxisHeight };\n\n  var categoriesTextLenth = categories.map(function (item) {\n    return measureText(item, opts.xAxis.fontSize || config.fontSize);\n  });\n  var maxTextLength = Math.max.apply(this, categoriesTextLenth);\n\n  if (opts.xAxis.rotateLabel == true && maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {\n    result.angle = 45 * Math.PI / 180;\n    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);\n  }\n  return result;\n}\n\nfunction getXAxisTextList(series, opts, config) {\n  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n  var data = dataCombine(series);\n  var sorted = [];\n  // remove null from data\n  data = data.filter(function (item) {\n    //return item !== null;\n    if (typeof item === 'object' && item !== null) {\n      if (item.constructor == Array) {\n        return item !== null;\n      } else {\n        return item.value !== null;\n      }\n    } else {\n      return item !== null;\n    }\n  });\n  data.map(function (item) {\n    if (typeof item === 'object') {\n      if (item.constructor == Array) {\n        if (opts.type == 'candle') {\n          item.map(function (subitem) {\n            sorted.push(subitem);\n          });\n        } else {\n          sorted.push(item[0]);\n        }\n      } else {\n        sorted.push(item.value);\n      }\n    } else {\n      sorted.push(item);\n    }\n  });\n\n  var minData = 0;\n  var maxData = 0;\n  if (sorted.length > 0) {\n    minData = Math.min.apply(this, sorted);\n    maxData = Math.max.apply(this, sorted);\n  }\n  //为了兼容v1.9.0之前的项目\n  if (index > -1) {\n    if (typeof opts.xAxis.data[index].min === 'number') {\n      minData = Math.min(opts.xAxis.data[index].min, minData);\n    }\n    if (typeof opts.xAxis.data[index].max === 'number') {\n      maxData = Math.max(opts.xAxis.data[index].max, maxData);\n    }\n  } else {\n    if (typeof opts.xAxis.min === 'number') {\n      minData = Math.min(opts.xAxis.min, minData);\n    }\n    if (typeof opts.xAxis.max === 'number') {\n      maxData = Math.max(opts.xAxis.max, maxData);\n    }\n  }\n\n\n  if (minData === maxData) {\n    var rangeSpan = maxData || 10;\n    maxData += rangeSpan;\n  }\n\n  var dataRange = getDataRange(minData, maxData);\n  var minRange = dataRange.minRange;\n  var maxRange = dataRange.maxRange;\n\n  var range = [];\n  var eachRange = (maxRange - minRange) / opts.xAxis.splitNumber;\n\n  for (var i = 0; i <= opts.xAxis.splitNumber; i++) {\n    range.push(minRange + eachRange * i);\n  }\n  return range;\n}\n\nfunction calXAxisData(series, opts, config) {\n  var result = {\n    angle: 0,\n    xAxisHeight: config.xAxisHeight };\n\n\n  result.ranges = getXAxisTextList(series, opts, config);\n  result.rangesFormat = result.ranges.map(function (item) {\n    item = opts.xAxis.format ? opts.xAxis.format(item) : util.toFixed(item, 2);\n    return item;\n  });\n  var xAxisScaleValues = result.ranges.map(function (item) {\n    // 如果刻度值是浮点数,则保留两位小数\n    item = util.toFixed(item, 2);\n    // 若有自定义格式则调用自定义的格式化函数\n    item = opts.xAxis.format ? opts.xAxis.format(Number(item)) : item;\n    return item;\n  });\n\n  result = Object.assign(result, getXAxisPoints(xAxisScaleValues, opts, config));\n  // 计算X轴刻度的属性譬如每个刻度的间隔,刻度的起始点\\结束点以及总长\n  var eachSpacing = result.eachSpacing;\n\n  var textLength = xAxisScaleValues.map(function (item) {\n    return measureText(item);\n  });\n\n  // get max length of categories text\n  var maxTextLength = Math.max.apply(this, textLength);\n\n  // 如果刻度值文本内容过长,则将其逆时针旋转45°\n  if (maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {\n    result.angle = 45 * Math.PI / 180;\n    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);\n  }\n\n  if (opts.xAxis.disabled === true) {\n    result.xAxisHeight = 0;\n  }\n\n  return result;\n}\n\nfunction getRadarDataPoints(angleList, center, radius, series, opts) {\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n  var radarOption = opts.extra.radar || {};\n  radarOption.max = radarOption.max || 0;\n  var maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));\n\n  var data = [];var _loop2 = function _loop2(\n  i) {\n    var each = series[i];\n    var listItem = {};\n    listItem.color = each.color;\n    listItem.legendShape = each.legendShape;\n    listItem.pointShape = each.pointShape;\n    listItem.data = [];\n    each.data.forEach(function (item, index) {\n      var tmp = {};\n      tmp.angle = angleList[index];\n\n      tmp.proportion = item / maxData;\n      tmp.position = convertCoordinateOrigin(radius * tmp.proportion * process * Math.cos(tmp.angle), radius * tmp.proportion *\n      process * Math.sin(tmp.angle), center);\n      listItem.data.push(tmp);\n    });\n\n    data.push(listItem);};for (var i = 0; i < series.length; i++) {_loop2(i);\n  }\n\n  return data;\n}\n\nfunction getPieDataPoints(series, radius) {\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var count = 0;\n  var _start_ = 0;\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    count += item.data;\n  }\n  for (var _i6 = 0; _i6 < series.length; _i6++) {\n    var _item2 = series[_i6];\n    _item2.data = _item2.data === null ? 0 : _item2.data;\n    if (count === 0) {\n      _item2._proportion_ = 1 / series.length * process;\n    } else {\n      _item2._proportion_ = _item2.data / count * process;\n    }\n    _item2._radius_ = radius;\n  }\n  for (var _i7 = 0; _i7 < series.length; _i7++) {\n    var _item3 = series[_i7];\n    _item3._start_ = _start_;\n    _start_ += 2 * _item3._proportion_ * Math.PI;\n  }\n\n  return series;\n}\n\nfunction getFunnelDataPoints(series, radius) {\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  series = series.sort(function (a, b) {return parseInt(b.data) - parseInt(a.data);});\n  for (var i = 0; i < series.length; i++) {\n    series[i].radius = series[i].data / series[0].data * radius * process;\n    series[i]._proportion_ = series[i].data / series[0].data;\n  }\n  return series.reverse();\n}\n\nfunction getRoseDataPoints(series, type, minRadius, radius) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var count = 0;\n  var _start_ = 0;\n\n  var dataArr = [];\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    count += item.data;\n    dataArr.push(item.data);\n  }\n\n  var minData = Math.min.apply(null, dataArr);\n  var maxData = Math.max.apply(null, dataArr);\n  var radiusLength = radius - minRadius;\n\n  for (var _i8 = 0; _i8 < series.length; _i8++) {\n    var _item4 = series[_i8];\n    _item4.data = _item4.data === null ? 0 : _item4.data;\n    if (count === 0 || type == 'area') {\n      _item4._proportion_ = _item4.data / count * process;\n      _item4._rose_proportion_ = 1 / series.length * process;\n    } else {\n      _item4._proportion_ = _item4.data / count * process;\n      _item4._rose_proportion_ = _item4.data / count * process;\n    }\n    _item4._radius_ = minRadius + radiusLength * ((_item4.data - minData) / (maxData - minData));\n  }\n  for (var _i9 = 0; _i9 < series.length; _i9++) {\n    var _item5 = series[_i9];\n    _item5._start_ = _start_;\n    _start_ += 2 * _item5._rose_proportion_ * Math.PI;\n  }\n\n  return series;\n}\n\nfunction getArcbarDataPoints(series, arcbarOption) {\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  if (process == 1) {\n    process = 0.999999;\n  }\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    var totalAngle = void 0;\n    if (arcbarOption.type == 'circle') {\n      totalAngle = 2;\n    } else {\n      if (arcbarOption.endAngle < arcbarOption.startAngle) {\n        totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;\n      } else {\n        totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\n      }\n    }\n    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;\n    if (item._proportion_ >= 2) {\n      item._proportion_ = item._proportion_ % 2;\n    }\n  }\n  return series;\n}\n\nfunction getGaugeAxisPoints(categories, startAngle, endAngle) {\n  var totalAngle = startAngle - endAngle + 1;\n  var tempStartAngle = startAngle;\n  for (var i = 0; i < categories.length; i++) {\n    categories[i].value = categories[i].value === null ? 0 : categories[i].value;\n    categories[i]._startAngle_ = tempStartAngle;\n    categories[i]._endAngle_ = totalAngle * categories[i].value + startAngle;\n    if (categories[i]._endAngle_ >= 2) {\n      categories[i]._endAngle_ = categories[i]._endAngle_ % 2;\n    }\n    tempStartAngle = categories[i]._endAngle_;\n  }\n  return categories;\n}\n\nfunction getGaugeDataPoints(series, categories, gaugeOption) {\n  var process = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    item.data = item.data === null ? 0 : item.data;\n    if (gaugeOption.pointer.color == 'auto') {\n      for (var _i10 = 0; _i10 < categories.length; _i10++) {\n        if (item.data <= categories[_i10].value) {\n          item.color = categories[_i10].color;\n          break;\n        }\n      }\n    } else {\n      item.color = gaugeOption.pointer.color;\n    }\n    var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n    item._endAngle_ = totalAngle * item.data + gaugeOption.startAngle;\n    item._oldAngle_ = gaugeOption.oldAngle;\n    if (gaugeOption.oldAngle < gaugeOption.endAngle) {\n      item._oldAngle_ += 2;\n    }\n    if (item.data >= gaugeOption.oldData) {\n      item._proportion_ = (item._endAngle_ - item._oldAngle_) * process + gaugeOption.oldAngle;\n    } else {\n      item._proportion_ = item._oldAngle_ - (item._oldAngle_ - item._endAngle_) * process;\n    }\n    if (item._proportion_ >= 2) {\n      item._proportion_ = item._proportion_ % 2;\n    }\n  }\n  return series;\n}\n\nfunction getPieTextMaxLength(series) {\n  series = getPieDataPoints(series);\n  var maxLength = 0;\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';\n    maxLength = Math.max(maxLength, measureText(text));\n  }\n\n  return maxLength;\n}\n\nfunction fixColumeData(points, eachSpacing, columnLen, index, config, opts) {\n  return points.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / columnLen);\n\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\n      item.width = Math.min(item.width, +opts.extra.column.width);\n    }\n    if (item.width <= 0) {\n      item.width = 1;\n    }\n    item.x += (index + 0.5 - columnLen / 2) * item.width;\n    return item;\n  });\n}\n\nfunction fixColumeMeterData(points, eachSpacing, columnLen, index, config, opts, border) {\n  return points.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);\n\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\n      item.width = Math.min(item.width, +opts.extra.column.width);\n    }\n\n    if (index > 0) {\n      item.width -= 2 * border;\n    }\n    return item;\n  });\n}\n\nfunction fixColumeStackData(points, eachSpacing, columnLen, index, config, opts, series) {\n\n  return points.map(function (item, indexn) {\n\n    if (item === null) {\n      return null;\n    }\n    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);\n\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\n      item.width = Math.min(item.width, +opts.extra.column.width);\n    }\n    return item;\n  });\n}\n\nfunction getXAxisPoints(categories, opts, config) {\n  var spacingValid = opts.width - opts.area[1] - opts.area[3];\n  var dataCount = opts.enableScroll ? Math.min(opts.xAxis.itemCount, categories.length) : categories.length;\n  if ((opts.type == 'line' || opts.type == 'area') && dataCount > 1 && opts.xAxis.boundaryGap == 'justify') {\n    dataCount -= 1;\n  }\n  var eachSpacing = spacingValid / dataCount;\n\n  var xAxisPoints = [];\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n  categories.forEach(function (item, index) {\n    xAxisPoints.push(startX + index * eachSpacing);\n  });\n  if (opts.xAxis.boundaryGap !== 'justify') {\n    if (opts.enableScroll === true) {\n      xAxisPoints.push(startX + categories.length * eachSpacing);\n    } else {\n      xAxisPoints.push(endX);\n    }\n  }\n  return {\n    xAxisPoints: xAxisPoints,\n    startX: startX,\n    endX: endX,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\n  var points = [];\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\n  data.forEach(function (item, index) {\n    if (item === null) {\n      points.push(null);\n    } else {\n      var cPoints = [];\n      item.forEach(function (items, indexs) {\n        var point = {};\n        point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\n        var value = items.value || items;\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\n        height *= process;\n        point.y = opts.height - Math.round(height) - opts.area[2];\n        cPoints.push(point);\n      });\n      points.push(cPoints);\n    }\n  });\n\n  return points;\n}\n\nfunction getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\n  var boundaryGap = 'center';\n  if (opts.type == 'line' || opts.type == 'area') {\n    boundaryGap = opts.xAxis.boundaryGap;\n  }\n  var points = [];\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\n  data.forEach(function (item, index) {\n    if (item === null) {\n      points.push(null);\n    } else {\n      var point = {};\n      point.color = item.color;\n      point.x = xAxisPoints[index];\n      var value = item;\n      if (typeof item === 'object' && item !== null) {\n        if (item.constructor == Array) {\n          var xranges, xminRange, xmaxRange;\n          xranges = [].concat(opts.chartData.xAxisData.ranges);\n\n          xminRange = xranges.shift();\n          xmaxRange = xranges.pop();\n          value = item[1];\n          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\n        } else {\n          value = item.value;\n        }\n      }\n      if (boundaryGap == 'center') {\n        point.x += Math.round(eachSpacing / 2);\n      }\n      var height = validHeight * (value - minRange) / (maxRange - minRange);\n      height *= process;\n      point.y = opts.height - Math.round(height) - opts.area[2];\n      points.push(point);\n    }\n  });\n\n  return points;\n}\n\nfunction getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {\n  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\n  var points = [];\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\n\n  data.forEach(function (item, index) {\n    if (item === null) {\n      points.push(null);\n    } else {\n      var point = {};\n      point.color = item.color;\n      point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\n\n      if (seriesIndex > 0) {\n        var value = 0;\n        for (var i = 0; i <= seriesIndex; i++) {\n          value += stackSeries[i].data[index];\n        }\n        var value0 = value - item;\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\n        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);\n      } else {\n        var value = item;\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\n        var height0 = 0;\n      }\n      var heightc = height0;\n      height *= process;\n      heightc *= process;\n      point.y = opts.height - Math.round(height) - opts.area[2];\n      point.y0 = opts.height - Math.round(heightc) - opts.area[2];\n      points.push(point);\n    }\n  });\n\n  return points;\n}\n\nfunction getYAxisTextList(series, opts, config, stack) {\n  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n  var data;\n  if (stack == 'stack') {\n    data = dataCombineStack(series, opts.categories.length);\n  } else {\n    data = dataCombine(series);\n  }\n  var sorted = [];\n  // remove null from data\n  data = data.filter(function (item) {\n    //return item !== null;\n    if (typeof item === 'object' && item !== null) {\n      if (item.constructor == Array) {\n        return item !== null;\n      } else {\n        return item.value !== null;\n      }\n    } else {\n      return item !== null;\n    }\n  });\n  data.map(function (item) {\n    if (typeof item === 'object') {\n      if (item.constructor == Array) {\n        if (opts.type == 'candle') {\n          item.map(function (subitem) {\n            sorted.push(subitem);\n          });\n        } else {\n          sorted.push(item[1]);\n        }\n      } else {\n        sorted.push(item.value);\n      }\n    } else {\n      sorted.push(item);\n    }\n  });\n\n  var minData = 0;\n  var maxData = 0;\n  if (sorted.length > 0) {\n    minData = Math.min.apply(this, sorted);\n    maxData = Math.max.apply(this, sorted);\n  }\n  //为了兼容v1.9.0之前的项目\n  if (index > -1) {\n    if (typeof opts.yAxis.data[index].min === 'number') {\n      minData = Math.min(opts.yAxis.data[index].min, minData);\n    }\n    if (typeof opts.yAxis.data[index].max === 'number') {\n      maxData = Math.max(opts.yAxis.data[index].max, maxData);\n    }\n  } else {\n    if (typeof opts.yAxis.min === 'number') {\n      minData = Math.min(opts.yAxis.min, minData);\n    }\n    if (typeof opts.yAxis.max === 'number') {\n      maxData = Math.max(opts.yAxis.max, maxData);\n    }\n  }\n\n\n  if (minData === maxData) {\n    var rangeSpan = maxData || 10;\n    maxData += rangeSpan;\n  }\n\n  var dataRange = getDataRange(minData, maxData);\n  var minRange = dataRange.minRange;\n  var maxRange = dataRange.maxRange;\n\n  var range = [];\n  var eachRange = (maxRange - minRange) / opts.yAxis.splitNumber;\n\n  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {\n    range.push(minRange + eachRange * i);\n  }\n  return range.reverse();\n}\n\nfunction calYAxisData(series, opts, config) {\n  //堆叠图重算Y轴\n  var columnstyle = assign({}, {\n    type: \"\" },\n  opts.extra.column);\n  //如果是多Y轴，重新计算\n  var YLength = opts.yAxis.data.length;\n  var newSeries = new Array(YLength);\n  if (YLength > 0) {\n    for (var i = 0; i < YLength; i++) {\n      newSeries[i] = [];\n      for (var j = 0; j < series.length; j++) {\n        if (series[j].index == i) {\n          newSeries[i].push(series[j]);\n        }\n      }\n    }\n    var rangesArr = new Array(YLength);\n    var rangesFormatArr = new Array(YLength);\n    var yAxisWidthArr = new Array(YLength);var _loop3 = function _loop3(\n\n    _i11) {\n      var yData = opts.yAxis.data[_i11];\n      //如果总开关不显示，强制每个Y轴为不显示\n      if (opts.yAxis.disabled == true) {\n        yData.disabled = true;\n      }\n      rangesArr[_i11] = getYAxisTextList(newSeries[_i11], opts, config, columnstyle.type, _i11);\n      var yAxisFontSizes = yData.fontSize || config.fontSize;\n      yAxisWidthArr[_i11] = { position: yData.position ? yData.position : 'left', width: 0 };\n      rangesFormatArr[_i11] = rangesArr[_i11].map(function (items) {\n        items = util.toFixed(items, 6);\n        items = yData.format ? yData.format(Number(items)) : items;\n        yAxisWidthArr[_i11].width = Math.max(yAxisWidthArr[_i11].width, measureText(items, yAxisFontSizes) + 5);\n        return items;\n      });\n      var calibration = yData.calibration ? 4 * opts.pixelRatio : 0;\n      yAxisWidthArr[_i11].width += calibration + 3 * opts.pixelRatio;\n      if (yData.disabled === true) {\n        yAxisWidthArr[_i11].width = 0;\n      }};for (var _i11 = 0; _i11 < YLength; _i11++) {_loop3(_i11);\n    }\n\n  } else {\n    var rangesArr = new Array(1);\n    var rangesFormatArr = new Array(1);\n    var yAxisWidthArr = new Array(1);\n    rangesArr[0] = getYAxisTextList(series, opts, config, columnstyle.type);\n    yAxisWidthArr[0] = { position: 'left', width: 0 };\n    var yAxisFontSize = opts.yAxis.fontSize || config.fontSize;\n    rangesFormatArr[0] = rangesArr[0].map(function (item) {\n      item = util.toFixed(item, 6);\n      item = opts.yAxis.format ? opts.yAxis.format(Number(item)) : item;\n      yAxisWidthArr[0].width = Math.max(yAxisWidthArr[0].width, measureText(item, yAxisFontSize) + 5);\n      return item;\n    });\n    yAxisWidthArr[0].width += 3 * opts.pixelRatio;\n    if (opts.yAxis.disabled === true) {\n      yAxisWidthArr[0] = { position: 'left', width: 0 };\n      opts.yAxis.data[0] = { disabled: true };\n    } else {\n      opts.yAxis.data[0] = { disabled: false, position: 'left', max: opts.yAxis.max, min: opts.yAxis.min, format: opts.yAxis.format };\n    }\n\n  }\n\n  return {\n    rangesFormat: rangesFormatArr,\n    ranges: rangesArr,\n    yAxisWidth: yAxisWidthArr };\n\n\n}\n\nfunction calTooltipYAxisData(point, series, opts, config, eachSpacing) {\n  var ranges = [].concat(opts.chartData.yAxisData.ranges);\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  var minAxis = opts.area[0];\n  var items = [];\n  for (var i = 0; i < ranges.length; i++) {\n    var maxVal = ranges[i].shift();\n    var minVal = ranges[i].pop();\n    var item = maxVal - (maxVal - minVal) * (point - minAxis) / spacingValid;\n    item = opts.yAxis.data[i].format ? opts.yAxis.data[i].format(Number(item)) : item.toFixed(0);\n    items.push(String(item));\n  }\n  return items;\n}\n\nfunction calMarkLineData(points, opts) {\n  var minRange, maxRange;\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  for (var i = 0; i < points.length; i++) {\n    points[i].yAxisIndex = points[i].yAxisIndex ? points[i].yAxisIndex : 0;\n    var range = [].concat(opts.chartData.yAxisData.ranges[points[i].yAxisIndex]);\n    minRange = range.pop();\n    maxRange = range.shift();\n    var height = spacingValid * (points[i].value - minRange) / (maxRange - minRange);\n    points[i].y = opts.height - Math.round(height) - opts.area[2];\n  }\n  return points;\n}\n\nfunction contextRotate(context, opts) {\n  if (opts.rotateLock !== true) {\n    context.translate(opts.height, 0);\n    context.rotate(90 * Math.PI / 180);\n  } else if (opts._rotate_ !== true) {\n    context.translate(opts.height, 0);\n    context.rotate(90 * Math.PI / 180);\n    opts._rotate_ = true;\n  }\n}\n\nfunction drawPointShape(points, color, shape, context, opts) {\n  context.beginPath();\n  if (opts.dataPointShapeType == 'hollow') {\n    context.setStrokeStyle(color);\n    context.setFillStyle(opts.background);\n    context.setLineWidth(2 * opts.pixelRatio);\n  } else {\n    context.setStrokeStyle(\"#ffffff\");\n    context.setFillStyle(color);\n    context.setLineWidth(1 * opts.pixelRatio);\n  }\n  if (shape === 'diamond') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x, item.y - 4.5);\n        context.lineTo(item.x - 4.5, item.y);\n        context.lineTo(item.x, item.y + 4.5);\n        context.lineTo(item.x + 4.5, item.y);\n        context.lineTo(item.x, item.y - 4.5);\n      }\n    });\n  } else if (shape === 'circle') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x + 2.5 * opts.pixelRatio, item.y);\n        context.arc(item.x, item.y, 3 * opts.pixelRatio, 0, 2 * Math.PI, false);\n      }\n    });\n  } else if (shape === 'rect') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x - 3.5, item.y - 3.5);\n        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\n      }\n    });\n  } else if (shape === 'triangle') {\n    points.forEach(function (item, index) {\n      if (item !== null) {\n        context.moveTo(item.x, item.y - 4.5);\n        context.lineTo(item.x - 4.5, item.y + 4.5);\n        context.lineTo(item.x + 4.5, item.y + 4.5);\n        context.lineTo(item.x, item.y - 4.5);\n      }\n    });\n  }\n  context.closePath();\n  context.fill();\n  context.stroke();\n}\n\nfunction drawRingTitle(opts, config, context, center) {\n  var titlefontSize = opts.title.fontSize || config.titleFontSize;\n  var subtitlefontSize = opts.subtitle.fontSize || config.subtitleFontSize;\n  var title = opts.title.name || '';\n  var subtitle = opts.subtitle.name || '';\n  var titleFontColor = opts.title.color || config.titleColor;\n  var subtitleFontColor = opts.subtitle.color || config.subtitleColor;\n  var titleHeight = title ? titlefontSize : 0;\n  var subtitleHeight = subtitle ? subtitlefontSize : 0;\n  var margin = 5;\n\n  if (subtitle) {\n    var textWidth = measureText(subtitle, subtitlefontSize);\n    var startX = center.x - textWidth / 2 + (opts.subtitle.offsetX || 0);\n    var startY = center.y + subtitlefontSize / 2 + (opts.subtitle.offsetY || 0);\n    if (title) {\n      startY += (titleHeight + margin) / 2;\n    }\n    context.beginPath();\n    context.setFontSize(subtitlefontSize);\n    context.setFillStyle(subtitleFontColor);\n    context.fillText(subtitle, startX, startY);\n    context.closePath();\n    context.stroke();\n  }\n  if (title) {\n    var _textWidth = measureText(title, titlefontSize);\n    var _startX = center.x - _textWidth / 2 + (opts.title.offsetX || 0);\n    var _startY = center.y + titlefontSize / 2 + (opts.title.offsetY || 0);\n    if (subtitle) {\n      _startY -= (subtitleHeight + margin) / 2;\n    }\n    context.beginPath();\n    context.setFontSize(titlefontSize);\n    context.setFillStyle(titleFontColor);\n    context.fillText(title, _startX, _startY);\n    context.closePath();\n    context.stroke();\n  }\n}\n\nfunction drawPointText(points, series, config, context) {\n  // 绘制数据文案\n  var data = series.data;\n  points.forEach(function (item, index) {\n    if (item !== null) {\n      //var formatVal = series.format ? series.format(data[index]) : data[index];\n      context.beginPath();\n      context.setFontSize(series.textSize || config.fontSize);\n      context.setFillStyle(series.textColor || '#666666');\n      var value = data[index];\n      if (typeof data[index] === 'object' && data[index] !== null) {\n        if (data[index].constructor == Array) {\n          value = data[index][1];\n        } else {\n          value = data[index].value;\n        }\n      }\n      var formatVal = series.format ? series.format(value) : value;\n      context.fillText(String(formatVal), item.x - measureText(formatVal, series.textSize || config.fontSize) / 2, item.y - 4);\n      context.closePath();\n      context.stroke();\n    }\n  });\n\n}\n\nfunction drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context) {\n  radius -= gaugeOption.width / 2 + config.gaugeLabelTextMargin;\n\n  var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n  var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\n  var totalNumber = gaugeOption.endNumber - gaugeOption.startNumber;\n  var splitNumber = totalNumber / gaugeOption.splitLine.splitNumber;\n  var nowAngle = gaugeOption.startAngle;\n  var nowNumber = gaugeOption.startNumber;\n  for (var i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {\n    var pos = {\n      x: radius * Math.cos(nowAngle * Math.PI),\n      y: radius * Math.sin(nowAngle * Math.PI) };\n\n    var labelText = gaugeOption.labelFormat ? gaugeOption.labelFormat(nowNumber) : nowNumber;\n    pos.x += centerPosition.x - measureText(labelText) / 2;\n    pos.y += centerPosition.y;\n    var startX = pos.x;\n    var startY = pos.y;\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(gaugeOption.labelColor || '#666666');\n    context.fillText(labelText, startX, startY + config.fontSize / 2);\n    context.closePath();\n    context.stroke();\n\n    nowAngle += splitAngle;\n    if (nowAngle >= 2) {\n      nowAngle = nowAngle % 2;\n    }\n    nowNumber += splitNumber;\n  }\n\n}\n\nfunction drawRadarLabel(angleList, radius, centerPosition, opts, config, context) {\n  var radarOption = opts.extra.radar || {};\n  radius += config.radarLabelTextMargin;\n\n  angleList.forEach(function (angle, index) {\n    var pos = {\n      x: radius * Math.cos(angle),\n      y: radius * Math.sin(angle) };\n\n    var posRelativeCanvas = convertCoordinateOrigin(pos.x, pos.y, centerPosition);\n    var startX = posRelativeCanvas.x;\n    var startY = posRelativeCanvas.y;\n    if (util.approximatelyEqual(pos.x, 0)) {\n      startX -= measureText(opts.categories[index] || '') / 2;\n    } else if (pos.x < 0) {\n      startX -= measureText(opts.categories[index] || '');\n    }\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(radarOption.labelColor || '#666666');\n    context.fillText(opts.categories[index] || '', startX, startY + config.fontSize / 2);\n    context.closePath();\n    context.stroke();\n  });\n\n}\n\nfunction drawPieText(series, opts, config, context, radius, center) {\n  var lineRadius = config.pieChartLinePadding;\n  var textObjectCollection = [];\n  var lastTextObject = null;\n\n  var seriesConvert = series.map(function (item) {\n    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_.toFixed(4) * 100) + '%';\n    if (item._rose_proportion_) item._proportion_ = item._rose_proportion_;\n    var arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._proportion_ / 2);\n    var color = item.color;\n    var radius = item._radius_;\n    return {\n      arc: arc,\n      text: text,\n      color: color,\n      radius: radius,\n      textColor: item.textColor,\n      textSize: item.textSize };\n\n  });\n  for (var i = 0; i < seriesConvert.length; i++) {\n    var item = seriesConvert[i];\n    // line end\n    var orginX1 = Math.cos(item.arc) * (item.radius + lineRadius);\n    var orginY1 = Math.sin(item.arc) * (item.radius + lineRadius);\n\n    // line start\n    var orginX2 = Math.cos(item.arc) * item.radius;\n    var orginY2 = Math.sin(item.arc) * item.radius;\n\n    // text start\n    var orginX3 = orginX1 >= 0 ? orginX1 + config.pieChartTextPadding : orginX1 - config.pieChartTextPadding;\n    var orginY3 = orginY1;\n    var textWidth = measureText(item.text, item.textSize || config.fontSize);\n    var startY = orginY3;\n\n    if (lastTextObject && util.isSameXCoordinateArea(lastTextObject.start, {\n      x: orginX3 }))\n    {\n      if (orginX3 > 0) {\n        startY = Math.min(orginY3, lastTextObject.start.y);\n      } else if (orginX1 < 0) {\n        startY = Math.max(orginY3, lastTextObject.start.y);\n      } else {\n        if (orginY3 > 0) {\n          startY = Math.max(orginY3, lastTextObject.start.y);\n        } else {\n          startY = Math.min(orginY3, lastTextObject.start.y);\n        }\n      }\n    }\n    if (orginX3 < 0) {\n      orginX3 -= textWidth;\n    }\n\n    var textObject = {\n      lineStart: {\n        x: orginX2,\n        y: orginY2 },\n\n      lineEnd: {\n        x: orginX1,\n        y: orginY1 },\n\n      start: {\n        x: orginX3,\n        y: startY },\n\n      width: textWidth,\n      height: config.fontSize,\n      text: item.text,\n      color: item.color,\n      textColor: item.textColor,\n      textSize: item.textSize };\n\n    lastTextObject = avoidCollision(textObject, lastTextObject);\n    textObjectCollection.push(lastTextObject);\n  }\n\n  for (var _i12 = 0; _i12 < textObjectCollection.length; _i12++) {\n    var _item6 = textObjectCollection[_i12];\n    var lineStartPoistion = convertCoordinateOrigin(_item6.lineStart.x, _item6.lineStart.y, center);\n    var lineEndPoistion = convertCoordinateOrigin(_item6.lineEnd.x, _item6.lineEnd.y, center);\n    var textPosition = convertCoordinateOrigin(_item6.start.x, _item6.start.y, center);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.setFontSize(config.fontSize);\n    context.beginPath();\n    context.setStrokeStyle(_item6.color);\n    context.setFillStyle(_item6.color);\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\n    var curveStartX = _item6.start.x < 0 ? textPosition.x + _item6.width : textPosition.x;\n    var textStartX = _item6.start.x < 0 ? textPosition.x - 5 : textPosition.x + 5;\n    context.quadraticCurveTo(lineEndPoistion.x, lineEndPoistion.y, curveStartX, textPosition.y);\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\n    context.stroke();\n    context.closePath();\n    context.beginPath();\n    context.moveTo(textPosition.x + _item6.width, textPosition.y);\n    context.arc(curveStartX, textPosition.y, 2, 0, 2 * Math.PI);\n    context.closePath();\n    context.fill();\n    context.beginPath();\n    context.setFontSize(_item6.textSize || config.fontSize);\n    context.setFillStyle(_item6.textColor || '#666666');\n    context.fillText(_item6.text, textStartX, textPosition.y + 3);\n    context.closePath();\n    context.stroke();\n    context.closePath();\n  }\n}\n\nfunction drawToolTipSplitLine(offsetX, opts, config, context) {\n  var toolTipOption = opts.extra.tooltip || {};\n  toolTipOption.gridType = toolTipOption.gridType == undefined ? 'solid' : toolTipOption.gridType;\n  toolTipOption.dashLength = toolTipOption.dashLength == undefined ? 4 : toolTipOption.dashLength;\n  var startY = opts.area[0];\n  var endY = opts.height - opts.area[2];\n\n  if (toolTipOption.gridType == 'dash') {\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\n  }\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\n  context.setLineWidth(1 * opts.pixelRatio);\n  context.beginPath();\n  context.moveTo(offsetX, startY);\n  context.lineTo(offsetX, endY);\n  context.stroke();\n  context.setLineDash([]);\n\n  if (toolTipOption.xAxisLabel) {\n    var labelText = opts.categories[opts.tooltip.index];\n    context.setFontSize(config.fontSize);\n    var textWidth = measureText(labelText, config.fontSize);\n\n    var textX = offsetX - 0.5 * textWidth;\n    var textY = endY;\n    context.beginPath();\n    context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\n    context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.rect(textX - config.toolTipPadding, textY, textWidth + 2 * config.toolTipPadding, config.fontSize + 2 * config.toolTipPadding);\n    context.closePath();\n    context.stroke();\n    context.fill();\n\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);\n    context.fillText(String(labelText), textX, textY + config.toolTipPadding + config.fontSize);\n    context.closePath();\n    context.stroke();\n  }\n}\n\nfunction drawMarkLine(opts, config, context) {\n  var markLineOption = assign({}, {\n    type: 'solid',\n    dashLength: 4,\n    data: [] },\n  opts.extra.markLine);\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n  var points = calMarkLineData(markLineOption.data, opts);\n\n  for (var i = 0; i < points.length; i++) {\n    var item = assign({}, {\n      lineColor: '#DE4A42',\n      showLabel: false,\n      labelFontColor: '#666666',\n      labelBgColor: '#DFE8FF',\n      labelBgOpacity: 0.8,\n      yAxisIndex: 0 },\n    points[i]);\n\n    if (markLineOption.type == 'dash') {\n      context.setLineDash([markLineOption.dashLength, markLineOption.dashLength]);\n    }\n    context.setStrokeStyle(item.lineColor);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.beginPath();\n    context.moveTo(startX, item.y);\n    context.lineTo(endX, item.y);\n    context.stroke();\n    context.setLineDash([]);\n    if (item.showLabel) {\n      var labelText = opts.yAxis.format ? opts.yAxis.format(Number(item.value)) : item.value;\n      context.setFontSize(config.fontSize);\n      var textWidth = measureText(labelText, config.fontSize);\n      var bgStartX = opts.padding[3] + config.yAxisTitleWidth - config.toolTipPadding;\n      var bgEndX = Math.max(opts.area[3], textWidth + config.toolTipPadding * 2);\n      var bgWidth = bgEndX - bgStartX;\n\n      var textX = bgStartX + (bgWidth - textWidth) / 2;\n      var textY = item.y;\n      context.setFillStyle(hexToRgb(item.labelBgColor, item.labelBgOpacity));\n      context.setStrokeStyle(item.labelBgColor);\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.beginPath();\n      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);\n      context.closePath();\n      context.stroke();\n      context.fill();\n\n      context.beginPath();\n      context.setFontSize(config.fontSize);\n      context.setFillStyle(item.labelFontColor);\n      context.fillText(String(labelText), textX, textY + 0.5 * config.fontSize);\n      context.stroke();\n    }\n  }\n}\n\nfunction drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints) {\n  var toolTipOption = assign({}, {\n    gridType: 'solid',\n    dashLength: 4 },\n  opts.extra.tooltip);\n\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n\n  if (toolTipOption.gridType == 'dash') {\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\n  }\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\n  context.setLineWidth(1 * opts.pixelRatio);\n  context.beginPath();\n  context.moveTo(startX, opts.tooltip.offset.y);\n  context.lineTo(endX, opts.tooltip.offset.y);\n  context.stroke();\n  context.setLineDash([]);\n\n  if (toolTipOption.yAxisLabel) {\n    var labelText = calTooltipYAxisData(opts.tooltip.offset.y, opts.series, opts, config, eachSpacing);\n    var widthArr = opts.chartData.yAxisData.yAxisWidth;\n    var tStartLeft = opts.area[3];\n    var tStartRight = opts.width - opts.area[1];\n    for (var i = 0; i < labelText.length; i++) {\n      context.setFontSize(config.fontSize);\n      var textWidth = measureText(labelText[i], config.fontSize);\n      var bgStartX = void 0,bgEndX = void 0,bgWidth = void 0;\n      if (widthArr[i].position == 'left') {\n        bgStartX = tStartLeft - widthArr[i].width;\n        bgEndX = Math.max(bgStartX, bgStartX + textWidth + config.toolTipPadding * 2);\n      } else {\n        bgStartX = tStartRight;\n        bgEndX = Math.max(bgStartX + widthArr[i].width, bgStartX + textWidth + config.toolTipPadding * 2);\n      }\n      bgWidth = bgEndX - bgStartX;\n\n      var textX = bgStartX + (bgWidth - textWidth) / 2;\n      var textY = opts.tooltip.offset.y;\n      context.beginPath();\n      context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\n      context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);\n      context.closePath();\n      context.stroke();\n      context.fill();\n\n      context.beginPath();\n      context.setFontSize(config.fontSize);\n      context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);\n      context.fillText(labelText[i], textX, textY + 0.5 * config.fontSize);\n      context.closePath();\n      context.stroke();\n      if (widthArr[i].position == 'left') {\n        tStartLeft -= widthArr[i].width + opts.yAxis.padding;\n      } else {\n        tStartRight += widthArr[i].width + opts.yAxis.padding;\n      }\n    }\n  }\n}\n\nfunction drawToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {\n  var toolTipOption = assign({}, {\n    activeBgColor: '#000000',\n    activeBgOpacity: 0.08 },\n  opts.extra.tooltip);\n  var startY = opts.area[0];\n  var endY = opts.height - opts.area[2];\n  context.beginPath();\n  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));\n  context.rect(offsetX - eachSpacing / 2, startY, eachSpacing, endY - startY);\n  context.closePath();\n  context.fill();\n}\n\nfunction drawToolTip(textList, offset, opts, config, context, eachSpacing, xAxisPoints) {\n  var toolTipOption = assign({}, {\n    showBox: true,\n    bgColor: '#000000',\n    bgOpacity: 0.7,\n    fontColor: '#FFFFFF' },\n  opts.extra.tooltip);\n  var legendWidth = 4 * opts.pixelRatio;\n  var legendMarginRight = 5 * opts.pixelRatio;\n  var arrowWidth = 8 * opts.pixelRatio;\n  var isOverRightBorder = false;\n  if (opts.type == 'line' || opts.type == 'area' || opts.type == 'candle' || opts.type == 'mix') {\n    drawToolTipSplitLine(opts.tooltip.offset.x, opts, config, context);\n  }\n\n  offset = assign({\n    x: 0,\n    y: 0 },\n  offset);\n  offset.y -= 8 * opts.pixelRatio;\n  var textWidth = textList.map(function (item) {\n    return measureText(item.text, config.fontSize);\n  });\n  var toolTipWidth = legendWidth + legendMarginRight + 4 * config.toolTipPadding + Math.max.apply(null, textWidth);\n  var toolTipHeight = 2 * config.toolTipPadding + textList.length * config.toolTipLineHeight;\n\n  if (toolTipOption.showBox == false) {return;}\n  // if beyond the right border\n  if (offset.x - Math.abs(opts._scrollDistance_) + arrowWidth + toolTipWidth > opts.width) {\n    isOverRightBorder = true;\n  }\n  if (toolTipHeight + offset.y > opts.height) {\n    offset.y = opts.height - toolTipHeight;\n  }\n  // draw background rect\n  context.beginPath();\n  context.setFillStyle(hexToRgb(toolTipOption.bgColor || config.toolTipBackground, toolTipOption.bgOpacity || config.toolTipOpacity));\n  if (isOverRightBorder) {\n    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);\n    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);\n    context.lineTo(offset.x - arrowWidth, offset.y);\n    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y);\n    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y + toolTipHeight);\n    context.lineTo(offset.x - arrowWidth, offset.y + toolTipHeight);\n    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);\n    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);\n  } else {\n    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);\n    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);\n    context.lineTo(offset.x + arrowWidth, offset.y);\n    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y);\n    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y + toolTipHeight);\n    context.lineTo(offset.x + arrowWidth, offset.y + toolTipHeight);\n    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);\n    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);\n  }\n\n  context.closePath();\n  context.fill();\n\n  // draw legend\n  textList.forEach(function (item, index) {\n    if (item.color !== null) {\n      context.beginPath();\n      context.setFillStyle(item.color);\n      var startX = offset.x + arrowWidth + 2 * config.toolTipPadding;\n      var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +\n      config.toolTipPadding + 1;\n      if (isOverRightBorder) {\n        startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding;\n      }\n      context.fillRect(startX, startY, legendWidth, config.fontSize);\n      context.closePath();\n    }\n  });\n\n  // draw text list\n\n  textList.forEach(function (item, index) {\n    var startX = offset.x + arrowWidth + 2 * config.toolTipPadding + legendWidth + legendMarginRight;\n    if (isOverRightBorder) {\n      startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding + +legendWidth + legendMarginRight;\n    }\n    var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +\n    config.toolTipPadding;\n    context.beginPath();\n    context.setFontSize(config.fontSize);\n    context.setFillStyle(toolTipOption.fontColor);\n    context.fillText(item.text, startX, startY + config.fontSize);\n    context.closePath();\n    context.stroke();\n  });\n}\n\nfunction drawYAxisTitle(title, opts, config, context) {\n  var startX = config.xAxisHeight + (opts.height - config.xAxisHeight - measureText(title)) / 2;\n  context.save();\n  context.beginPath();\n  context.setFontSize(config.fontSize);\n  context.setFillStyle(opts.yAxis.titleFontColor || '#333333');\n  context.translate(0, opts.height);\n  context.rotate(-90 * Math.PI / 180);\n  context.fillText(title, startX, opts.padding[3] + 0.5 * config.fontSize);\n  context.closePath();\n  context.stroke();\n  context.restore();\n}\n\nfunction drawColumnDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n  var columnOption = assign({}, {\n    type: 'group',\n    width: eachSpacing / 2,\n    meter: {\n      border: 4,\n      fillColor: '#FFFFFF' } },\n\n  opts.extra.column);\n\n  var calPoints = [];\n  context.save();\n\n  var leftNum = -2;\n  var rightNum = xAxisPoints.length + 2;\n\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\n  }\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\n    drawToolTipSplitArea(opts.tooltip.offset.x, opts, config, context, eachSpacing);\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n\n    var data = eachSeries.data;\n    switch (columnOption.type) {\n      case 'group':\n        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n        var tooltipPoints = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\n        calPoints.push(tooltipPoints);\n        points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\n        for (var i = 0; i < points.length; i++) {\n          var item = points[i];\n          if (item !== null && i > leftNum && i < rightNum) {\n            context.beginPath();\n            context.setStrokeStyle(item.color || eachSeries.color);\n            context.setLineWidth(1);\n            context.setFillStyle(item.color || eachSeries.color);\n            var startX = item.x - item.width / 2;\n            var height = opts.height - item.y - opts.area[2];\n            context.moveTo(startX - 1, item.y);\n            context.lineTo(startX + item.width - 2, item.y);\n            context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);\n            context.lineTo(startX, opts.height - opts.area[2]);\n            context.lineTo(startX, item.y);\n            context.closePath();\n            context.stroke();\n            context.fill();\n          }\n        };\n        break;\n      case 'stack':\n        // 绘制堆叠数据图\n        var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\n        calPoints.push(points);\n        points = fixColumeStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);\n\n        for (var _i13 = 0; _i13 < points.length; _i13++) {\n          var _item7 = points[_i13];\n          if (_item7 !== null && _i13 > leftNum && _i13 < rightNum) {\n            context.beginPath();\n            context.setFillStyle(_item7.color || eachSeries.color);\n            var startX = _item7.x - _item7.width / 2 + 1;\n            var height = opts.height - _item7.y - opts.area[2];\n            var height0 = opts.height - _item7.y0 - opts.area[2];\n            if (seriesIndex > 0) {\n              height -= height0;\n            }\n            context.moveTo(startX, _item7.y);\n            context.fillRect(startX, _item7.y, _item7.width - 2, height);\n            context.closePath();\n            context.fill();\n          }\n        };\n        break;\n      case 'meter':\n        // 绘制温度计数据图\n        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n        calPoints.push(points);\n        points = fixColumeMeterData(points, eachSpacing, series.length, seriesIndex, config, opts, columnOption.meter.border);\n        if (seriesIndex == 0) {\n          for (var _i14 = 0; _i14 < points.length; _i14++) {\n            var _item8 = points[_i14];\n            if (_item8 !== null && _i14 > leftNum && _i14 < rightNum) {\n              //画背景颜色\n              context.beginPath();\n              context.setFillStyle(columnOption.meter.fillColor);\n              var startX = _item8.x - _item8.width / 2;\n              var height = opts.height - _item8.y - opts.area[2];\n              context.moveTo(startX, _item8.y);\n              context.fillRect(startX, _item8.y, _item8.width, height);\n              context.closePath();\n              context.fill();\n              //画边框线\n              if (columnOption.meter.border > 0) {\n                context.beginPath();\n                context.setStrokeStyle(eachSeries.color);\n                context.setLineWidth(columnOption.meter.border * opts.pixelRatio);\n                context.moveTo(startX + columnOption.meter.border * 0.5, _item8.y + height);\n                context.lineTo(startX + columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);\n                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);\n                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + height);\n                context.stroke();\n              }\n            }\n          };\n        } else {\n          for (var _i15 = 0; _i15 < points.length; _i15++) {\n            var _item9 = points[_i15];\n            if (_item9 !== null && _i15 > leftNum && _i15 < rightNum) {\n              context.beginPath();\n              context.setFillStyle(_item9.color || eachSeries.color);\n              var startX = _item9.x - _item9.width / 2;\n              var height = opts.height - _item9.y - opts.area[2];\n              context.moveTo(startX, _item9.y);\n              context.fillRect(startX, _item9.y, _item9.width, height);\n              context.closePath();\n              context.fill();\n            }\n          };\n        }\n        break;}\n\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n      var data = eachSeries.data;\n      switch (columnOption.type) {\n        case 'group':\n          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n          points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\n          drawPointText(points, eachSeries, config, context);\n          break;\n        case 'stack':\n          var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\n          drawPointText(points, eachSeries, config, context);\n          break;\n        case 'meter':\n          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n          drawPointText(points, eachSeries, config, context);\n          break;}\n\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawCandleDataPoints(series, seriesMA, opts, config, context) {\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var candleOption = assign({}, {\n    color: {},\n    average: {} },\n  opts.extra.candle);\n  candleOption.color = assign({}, {\n    upLine: '#f04864',\n    upFill: '#f04864',\n    downLine: '#2fc25b',\n    downFill: '#2fc25b' },\n  candleOption.color);\n  candleOption.average = assign({}, {\n    show: false,\n    name: [],\n    day: [],\n    color: config.colors },\n  candleOption.average);\n  opts.extra.candle = candleOption;\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n\n  var calPoints = [];\n\n  context.save();\n\n  var leftNum = -2;\n  var rightNum = xAxisPoints.length + 2;\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  //画均线\n  if (candleOption.average.show) {\n    seriesMA.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      var splitPointList = splitPoints(points);\n\n      for (var i = 0; i < splitPointList.length; i++) {\n        var _points = splitPointList[i];\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setLineWidth(1);\n        if (_points.length === 1) {\n          context.moveTo(_points[0].x, _points[0].y);\n          context.arc(_points[0].x, _points[0].y, 1, 0, 2 * Math.PI);\n        } else {\n          context.moveTo(_points[0].x, _points[0].y);\n          var startPoint = 0;\n          for (var j = 0; j < _points.length; j++) {\n            var item = _points[j];\n            if (startPoint == 0 && item.x > leftSpace) {\n              context.moveTo(item.x, item.y);\n              startPoint = 1;\n            }\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\n              var ctrlPoint = createCurveControlPoints(_points, j - 1);\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\n            }\n          }\n          context.moveTo(_points[0].x, _points[0].y);\n        }\n        context.closePath();\n        context.stroke();\n      }\n    });\n  }\n  //画K线\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n    var data = eachSeries.data;\n    var points = getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n    var splitPointList = splitPoints(points);\n\n    for (var i = 0; i < splitPointList[0].length; i++) {\n      if (i > leftNum && i < rightNum) {\n        var item = splitPointList[0][i];\n        context.beginPath();\n        //如果上涨\n        if (data[i][1] - data[i][0] > 0) {\n          context.setStrokeStyle(candleOption.color.upLine);\n          context.setFillStyle(candleOption.color.upFill);\n          context.setLineWidth(1 * opts.pixelRatio);\n          context.moveTo(item[3].x, item[3].y); //顶点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.lineTo(item[2].x, item[2].y); //底点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.moveTo(item[3].x, item[3].y); //顶点\n        } else {\n          context.setStrokeStyle(candleOption.color.downLine);\n          context.setFillStyle(candleOption.color.downFill);\n          context.setLineWidth(1 * opts.pixelRatio);\n          context.moveTo(item[3].x, item[3].y); //顶点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.lineTo(item[2].x, item[2].y); //底点\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\n          context.moveTo(item[3].x, item[3].y); //顶点\n        }\n        context.closePath();\n        context.fill();\n        context.stroke();\n      }\n    }\n  });\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawAreaDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var areaOption = assign({}, {\n    type: 'straight',\n    opacity: 0.2,\n    addLine: false,\n    width: 2,\n    gradient: false },\n  opts.extra.area);\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n\n  var endY = opts.height - opts.area[2];\n  var calPoints = [];\n\n  context.save();\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n    var data = eachSeries.data;\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n\n    var splitPointList = splitPoints(points);\n    for (var i = 0; i < splitPointList.length; i++) {\n      var _points2 = splitPointList[i];\n      // 绘制区域数\n      context.beginPath();\n      context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));\n      if (areaOption.gradient) {\n        var gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);\n        gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));\n        gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\n        context.setFillStyle(gradient);\n      } else {\n        context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));\n      }\n      context.setLineWidth(areaOption.width * opts.pixelRatio);\n      if (_points2.length > 1) {\n        var firstPoint = _points2[0];\n        var lastPoint = _points2[_points2.length - 1];\n        context.moveTo(firstPoint.x, firstPoint.y);\n        var startPoint = 0;\n        if (areaOption.type === 'curve') {\n          for (var j = 0; j < _points2.length; j++) {\n            var item = _points2[j];\n            if (startPoint == 0 && item.x > leftSpace) {\n              context.moveTo(item.x, item.y);\n              startPoint = 1;\n            }\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\n              var ctrlPoint = createCurveControlPoints(_points2, j - 1);\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\n            }\n          };\n        } else {\n          for (var _j = 0; _j < _points2.length; _j++) {\n            var _item10 = _points2[_j];\n            if (startPoint == 0 && _item10.x > leftSpace) {\n              context.moveTo(_item10.x, _item10.y);\n              startPoint = 1;\n            }\n            if (_j > 0 && _item10.x > leftSpace && _item10.x < rightSpace) {\n              context.lineTo(_item10.x, _item10.y);\n            }\n          };\n        }\n\n        context.lineTo(lastPoint.x, endY);\n        context.lineTo(firstPoint.x, endY);\n        context.lineTo(firstPoint.x, firstPoint.y);\n      } else {\n        var _item11 = _points2[0];\n        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);\n        context.lineTo(_item11.x + eachSpacing / 2, _item11.y);\n        context.lineTo(_item11.x + eachSpacing / 2, endY);\n        context.lineTo(_item11.x - eachSpacing / 2, endY);\n        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);\n      }\n      context.closePath();\n      context.fill();\n\n      //画连线\n      if (areaOption.addLine) {\n        if (eachSeries.lineType == 'dash') {\n          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\n          dashLength *= opts.pixelRatio;\n          context.setLineDash([dashLength, dashLength]);\n        }\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setLineWidth(areaOption.width * opts.pixelRatio);\n        if (_points2.length === 1) {\n          context.moveTo(_points2[0].x, _points2[0].y);\n          context.arc(_points2[0].x, _points2[0].y, 1, 0, 2 * Math.PI);\n        } else {\n          context.moveTo(_points2[0].x, _points2[0].y);\n          var _startPoint = 0;\n          if (areaOption.type === 'curve') {\n            for (var _j2 = 0; _j2 < _points2.length; _j2++) {\n              var _item12 = _points2[_j2];\n              if (_startPoint == 0 && _item12.x > leftSpace) {\n                context.moveTo(_item12.x, _item12.y);\n                _startPoint = 1;\n              }\n              if (_j2 > 0 && _item12.x > leftSpace && _item12.x < rightSpace) {\n                var _ctrlPoint = createCurveControlPoints(_points2, _j2 - 1);\n                context.bezierCurveTo(_ctrlPoint.ctrA.x, _ctrlPoint.ctrA.y, _ctrlPoint.ctrB.x, _ctrlPoint.ctrB.y, _item12.x, _item12.y);\n              }\n            };\n          } else {\n            for (var _j3 = 0; _j3 < _points2.length; _j3++) {\n              var _item13 = _points2[_j3];\n              if (_startPoint == 0 && _item13.x > leftSpace) {\n                context.moveTo(_item13.x, _item13.y);\n                _startPoint = 1;\n              }\n              if (_j3 > 0 && _item13.x > leftSpace && _item13.x < rightSpace) {\n                context.lineTo(_item13.x, _item13.y);\n              }\n            };\n          }\n          context.moveTo(_points2[0].x, _points2[0].y);\n        }\n        context.stroke();\n        context.setLineDash([]);\n      }\n    }\n\n    //画点\n    if (opts.dataPointShape !== false) {\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      drawPointText(points, eachSeries, config, context);\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawLineDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var lineOption = assign({}, {\n    type: 'straight',\n    width: 2 },\n  opts.extra.line);\n  lineOption.width *= opts.pixelRatio;\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n  var calPoints = [];\n\n  context.save();\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n    var data = eachSeries.data;\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n    var splitPointList = splitPoints(points);\n\n    if (eachSeries.lineType == 'dash') {\n      var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\n      dashLength *= opts.pixelRatio;\n      context.setLineDash([dashLength, dashLength]);\n    }\n    context.beginPath();\n    context.setStrokeStyle(eachSeries.color);\n    context.setLineWidth(lineOption.width);\n\n    splitPointList.forEach(function (points, index) {\n\n      if (points.length === 1) {\n        context.moveTo(points[0].x, points[0].y);\n        context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\n      } else {\n        context.moveTo(points[0].x, points[0].y);\n        var startPoint = 0;\n        if (lineOption.type === 'curve') {\n          for (var j = 0; j < points.length; j++) {\n            var item = points[j];\n            if (startPoint == 0 && item.x > leftSpace) {\n              context.moveTo(item.x, item.y);\n              startPoint = 1;\n            }\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\n              var ctrlPoint = createCurveControlPoints(points, j - 1);\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\n            }\n          };\n        } else {\n          for (var _j4 = 0; _j4 < points.length; _j4++) {\n            var _item14 = points[_j4];\n            if (startPoint == 0 && _item14.x > leftSpace) {\n              context.moveTo(_item14.x, _item14.y);\n              startPoint = 1;\n            }\n            if (_j4 > 0 && _item14.x > leftSpace && _item14.x < rightSpace) {\n              context.lineTo(_item14.x, _item14.y);\n            }\n          };\n        }\n        context.moveTo(points[0].x, points[0].y);\n      }\n\n    });\n\n    context.stroke();\n    context.setLineDash([]);\n\n    if (opts.dataPointShape !== false) {\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      drawPointText(points, eachSeries, config, context);\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawMixDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  eachSpacing = xAxisData.eachSpacing;\n\n  var endY = opts.height - opts.area[2];\n  var calPoints = [];\n\n  var columnIndex = 0;\n  var columnLength = 0;\n  series.forEach(function (eachSeries, seriesIndex) {\n    if (eachSeries.type == 'column') {\n      columnLength += 1;\n    }\n  });\n  context.save();\n  var leftNum = -2;\n  var rightNum = xAxisPoints.length + 2;\n  var leftSpace = 0;\n  var rightSpace = opts.width + eachSpacing;\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\n    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\n  }\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    var ranges, minRange, maxRange;\n\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n    minRange = ranges.pop();\n    maxRange = ranges.shift();\n\n    var data = eachSeries.data;\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n    calPoints.push(points);\n\n    // 绘制柱状数据图\n    if (eachSeries.type == 'column') {\n      points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\n      for (var i = 0; i < points.length; i++) {\n        var item = points[i];\n        if (item !== null && i > leftNum && i < rightNum) {\n          context.beginPath();\n          context.setStrokeStyle(item.color || eachSeries.color);\n          context.setLineWidth(1);\n          context.setFillStyle(item.color || eachSeries.color);\n          var startX = item.x - item.width / 2;\n          var height = opts.height - item.y - opts.area[2];\n          context.moveTo(startX, item.y);\n          context.moveTo(startX - 1, item.y);\n          context.lineTo(startX + item.width - 2, item.y);\n          context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);\n          context.lineTo(startX, opts.height - opts.area[2]);\n          context.lineTo(startX, item.y);\n          context.closePath();\n          context.stroke();\n          context.fill();\n          context.closePath();\n          context.fill();\n        }\n      }\n      columnIndex += 1;\n    }\n\n    //绘制区域图数据\n\n    if (eachSeries.type == 'area') {\n      var _splitPointList = splitPoints(points);\n      for (var _i16 = 0; _i16 < _splitPointList.length; _i16++) {\n        var _points3 = _splitPointList[_i16];\n        // 绘制区域数据\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setFillStyle(hexToRgb(eachSeries.color, 0.2));\n        context.setLineWidth(2 * opts.pixelRatio);\n        if (_points3.length > 1) {\n          var firstPoint = _points3[0];\n          var lastPoint = _points3[_points3.length - 1];\n          context.moveTo(firstPoint.x, firstPoint.y);\n          var startPoint = 0;\n          if (eachSeries.style === 'curve') {\n            for (var j = 0; j < _points3.length; j++) {\n              var _item15 = _points3[j];\n              if (startPoint == 0 && _item15.x > leftSpace) {\n                context.moveTo(_item15.x, _item15.y);\n                startPoint = 1;\n              }\n              if (j > 0 && _item15.x > leftSpace && _item15.x < rightSpace) {\n                var ctrlPoint = createCurveControlPoints(_points3, j - 1);\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item15.x, _item15.y);\n              }\n            };\n          } else {\n            for (var _j5 = 0; _j5 < _points3.length; _j5++) {\n              var _item16 = _points3[_j5];\n              if (startPoint == 0 && _item16.x > leftSpace) {\n                context.moveTo(_item16.x, _item16.y);\n                startPoint = 1;\n              }\n              if (_j5 > 0 && _item16.x > leftSpace && _item16.x < rightSpace) {\n                context.lineTo(_item16.x, _item16.y);\n              }\n            };\n          }\n          context.lineTo(lastPoint.x, endY);\n          context.lineTo(firstPoint.x, endY);\n          context.lineTo(firstPoint.x, firstPoint.y);\n        } else {\n          var _item17 = _points3[0];\n          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);\n          context.lineTo(_item17.x + eachSpacing / 2, _item17.y);\n          context.lineTo(_item17.x + eachSpacing / 2, endY);\n          context.lineTo(_item17.x - eachSpacing / 2, endY);\n          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);\n        }\n        context.closePath();\n        context.fill();\n      }\n    }\n\n    // 绘制折线数据图\n    if (eachSeries.type == 'line') {\n      var splitPointList = splitPoints(points);\n      splitPointList.forEach(function (points, index) {\n        if (eachSeries.lineType == 'dash') {\n          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\n          dashLength *= opts.pixelRatio;\n          context.setLineDash([dashLength, dashLength]);\n        }\n        context.beginPath();\n        context.setStrokeStyle(eachSeries.color);\n        context.setLineWidth(2 * opts.pixelRatio);\n        if (points.length === 1) {\n          context.moveTo(points[0].x, points[0].y);\n          context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\n        } else {\n          context.moveTo(points[0].x, points[0].y);\n          var _startPoint2 = 0;\n          if (eachSeries.style == 'curve') {\n            for (var _j6 = 0; _j6 < points.length; _j6++) {\n              var _item18 = points[_j6];\n              if (_startPoint2 == 0 && _item18.x > leftSpace) {\n                context.moveTo(_item18.x, _item18.y);\n                _startPoint2 = 1;\n              }\n              if (_j6 > 0 && _item18.x > leftSpace && _item18.x < rightSpace) {\n                var ctrlPoint = createCurveControlPoints(points, _j6 - 1);\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item18.x, _item18.y);\n              }\n            }\n          } else {\n            for (var _j7 = 0; _j7 < points.length; _j7++) {\n              var _item19 = points[_j7];\n              if (_startPoint2 == 0 && _item19.x > leftSpace) {\n                context.moveTo(_item19.x, _item19.y);\n                _startPoint2 = 1;\n              }\n              if (_j7 > 0 && _item19.x > leftSpace && _item19.x < rightSpace) {\n                context.lineTo(_item19.x, _item19.y);\n              }\n            }\n          }\n          context.moveTo(points[0].x, points[0].y);\n        }\n        context.stroke();\n        context.setLineDash([]);\n      });\n    }\n\n    // 绘制点数据图\n    if (eachSeries.type == 'point') {\n      eachSeries.addPoint = true;\n    }\n\n    if (eachSeries.addPoint == true && eachSeries.type !== 'column') {\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n  });\n  if (opts.dataLabel !== false && process === 1) {\n    var columnIndex = 0;\n    series.forEach(function (eachSeries, seriesIndex) {\n      var ranges, minRange, maxRange;\n\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\n      minRange = ranges.pop();\n      maxRange = ranges.shift();\n\n      var data = eachSeries.data;\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\n      if (eachSeries.type !== 'column') {\n        drawPointText(points, eachSeries, config, context);\n      } else {\n        points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\n        drawPointText(points, eachSeries, config, context);\n        columnIndex += 1;\n      }\n\n    });\n  }\n\n  context.restore();\n\n  return {\n    xAxisPoints: xAxisPoints,\n    calPoints: calPoints,\n    eachSpacing: eachSpacing };\n\n}\n\nfunction drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints) {\n  var toolTipOption = opts.extra.tooltip || {};\n  if (toolTipOption.horizentalLine && opts.tooltip && process === 1 && (opts.type == 'line' || opts.type == 'area' || opts.type == 'column' || opts.type == 'candle' || opts.type == 'mix')) {\n    drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints);\n  }\n  context.save();\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\n    context.translate(opts._scrollDistance_, 0);\n  }\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\n    drawToolTip(opts.tooltip.textList, opts.tooltip.offset, opts, config, context, eachSpacing, xAxisPoints);\n  }\n  context.restore();\n\n}\n\nfunction drawXAxis(categories, opts, config, context) {\n\n  var xAxisData = opts.chartData.xAxisData,\n  xAxisPoints = xAxisData.xAxisPoints,\n  startX = xAxisData.startX,\n  endX = xAxisData.endX,\n  eachSpacing = xAxisData.eachSpacing;\n  var boundaryGap = 'center';\n  if (opts.type == 'line' || opts.type == 'area') {\n    boundaryGap = opts.xAxis.boundaryGap;\n  }\n  var startY = opts.height - opts.area[2];\n  var endY = opts.area[0];\n\n  //绘制滚动条\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\n    var scrollY = opts.height - opts.area[2] + config.xAxisHeight;\n    var scrollScreenWidth = endX - startX;\n    var scrollTotalWidth = eachSpacing * (xAxisPoints.length - 1);\n    var scrollWidth = scrollScreenWidth * scrollScreenWidth / scrollTotalWidth;\n    var scrollLeft = 0;\n    if (opts._scrollDistance_) {\n      scrollLeft = -opts._scrollDistance_ * scrollScreenWidth / scrollTotalWidth;\n    }\n    context.beginPath();\n    context.setLineCap('round');\n    context.setLineWidth(6 * opts.pixelRatio);\n    context.setStrokeStyle(opts.xAxis.scrollBackgroundColor || \"#EFEBEF\");\n    context.moveTo(startX, scrollY);\n    context.lineTo(endX, scrollY);\n    context.stroke();\n    context.closePath();\n    context.beginPath();\n    context.setLineCap('round');\n    context.setLineWidth(6 * opts.pixelRatio);\n    context.setStrokeStyle(opts.xAxis.scrollColor || \"#A6A6A6\");\n    context.moveTo(startX + scrollLeft, scrollY);\n    context.lineTo(startX + scrollLeft + scrollWidth, scrollY);\n    context.stroke();\n    context.closePath();\n    context.setLineCap('butt');\n  }\n\n  context.save();\n\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\n    context.translate(opts._scrollDistance_, 0);\n  }\n\n  //绘制X轴刻度线\n  if (opts.xAxis.calibration === true) {\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\n    context.setLineCap('butt');\n    context.setLineWidth(1 * opts.pixelRatio);\n    xAxisPoints.forEach(function (item, index) {\n      if (index > 0) {\n        context.beginPath();\n        context.moveTo(item - eachSpacing / 2, startY);\n        context.lineTo(item - eachSpacing / 2, startY + 3 * opts.pixelRatio);\n        context.closePath();\n        context.stroke();\n      }\n    });\n  }\n  //绘制X轴网格\n  if (opts.xAxis.disableGrid !== true) {\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\n    context.setLineCap('butt');\n    context.setLineWidth(1 * opts.pixelRatio);\n    if (opts.xAxis.gridType == 'dash') {\n      context.setLineDash([opts.xAxis.dashLength, opts.xAxis.dashLength]);\n    }\n    opts.xAxis.gridEval = opts.xAxis.gridEval || 1;\n    xAxisPoints.forEach(function (item, index) {\n      if (index % opts.xAxis.gridEval == 0) {\n        context.beginPath();\n        context.moveTo(item, startY);\n        context.lineTo(item, endY);\n        context.stroke();\n      }\n    });\n    context.setLineDash([]);\n  }\n\n\n  //绘制X轴文案\n  if (opts.xAxis.disabled !== true) {\n    // 对X轴列表做抽稀处理\n    //默认全部显示X轴标签\n    var maxXAxisListLength = categories.length;\n    //如果设置了X轴单屏数量\n    if (opts.xAxis.labelCount) {\n      //如果设置X轴密度\n      if (opts.xAxis.itemCount) {\n        maxXAxisListLength = Math.ceil(categories.length / opts.xAxis.itemCount * opts.xAxis.labelCount);\n      } else {\n        maxXAxisListLength = opts.xAxis.labelCount;\n      }\n      maxXAxisListLength -= 1;\n    }\n\n    var ratio = Math.ceil(categories.length / maxXAxisListLength);\n\n    var newCategories = [];\n    var cgLength = categories.length;\n    for (var i = 0; i < cgLength; i++) {\n      if (i % ratio !== 0) {\n        newCategories.push(\"\");\n      } else {\n        newCategories.push(categories[i]);\n      }\n    }\n    newCategories[cgLength - 1] = categories[cgLength - 1];\n\n    var xAxisFontSize = opts.xAxis.fontSize || config.fontSize;\n    if (config._xAxisTextAngle_ === 0) {\n      newCategories.forEach(function (item, index) {\n        var offset = -measureText(String(item), xAxisFontSize) / 2;\n        if (boundaryGap == 'center') {\n          offset += eachSpacing / 2;\n        }\n        var scrollHeight = 0;\n        if (opts.xAxis.scrollShow) {\n          scrollHeight = 6 * opts.pixelRatio;\n        }\n        context.beginPath();\n        context.setFontSize(xAxisFontSize);\n        context.setFillStyle(opts.xAxis.fontColor || '#666666');\n        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + (config.xAxisHeight - scrollHeight - xAxisFontSize) / 2);\n        context.closePath();\n        context.stroke();\n      });\n\n    } else {\n      newCategories.forEach(function (item, index) {\n        context.save();\n        context.beginPath();\n        context.setFontSize(xAxisFontSize);\n        context.setFillStyle(opts.xAxis.fontColor || '#666666');\n        var textWidth = measureText(String(item), xAxisFontSize);\n        var offset = -textWidth;\n        if (boundaryGap == 'center') {\n          offset += eachSpacing / 2;\n        }\n        var _calRotateTranslate = calRotateTranslate(xAxisPoints[index] + eachSpacing / 2, startY + xAxisFontSize / 2 + 5, opts.height),\n        transX = _calRotateTranslate.transX,\n        transY = _calRotateTranslate.transY;\n\n        context.rotate(-1 * config._xAxisTextAngle_);\n        context.translate(transX, transY);\n        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + 5);\n        context.closePath();\n        context.stroke();\n        context.restore();\n      });\n    }\n  }\n  context.restore();\n\n  //绘制X轴轴线\n  if (opts.xAxis.axisLine) {\n    context.beginPath();\n    context.setStrokeStyle(opts.xAxis.axisLineColor);\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.moveTo(startX, opts.height - opts.area[2]);\n    context.lineTo(endX, opts.height - opts.area[2]);\n    context.stroke();\n  }\n}\n\nfunction drawYAxisGrid(categories, opts, config, context) {\n  if (opts.yAxis.disableGrid === true) {\n    return;\n  }\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  var eachSpacing = spacingValid / opts.yAxis.splitNumber;\n  var startX = opts.area[3];\n  var xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\n  xAxiseachSpacing = opts.chartData.xAxisData.eachSpacing;\n  var TotalWidth = xAxiseachSpacing * (xAxisPoints.length - 1);\n  var endX = startX + TotalWidth;\n\n  var points = [];\n  for (var i = 0; i < opts.yAxis.splitNumber + 1; i++) {\n    points.push(opts.height - opts.area[2] - eachSpacing * i);\n  }\n\n  context.save();\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\n    context.translate(opts._scrollDistance_, 0);\n  }\n\n  if (opts.yAxis.gridType == 'dash') {\n    context.setLineDash([opts.yAxis.dashLength, opts.yAxis.dashLength]);\n  }\n  context.setStrokeStyle(opts.yAxis.gridColor);\n  context.setLineWidth(1 * opts.pixelRatio);\n  points.forEach(function (item, index) {\n    context.beginPath();\n    context.moveTo(startX, item);\n    context.lineTo(endX, item);\n    context.stroke();\n  });\n  context.setLineDash([]);\n\n  context.restore();\n}\n\nfunction drawYAxis(series, opts, config, context) {\n  if (opts.yAxis.disabled === true) {\n    return;\n  }\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\n  var eachSpacing = spacingValid / opts.yAxis.splitNumber;\n  var startX = opts.area[3];\n  var endX = opts.width - opts.area[1];\n  var endY = opts.height - opts.area[2];\n  var fillEndY = endY + config.xAxisHeight;\n  if (opts.xAxis.scrollShow) {\n    fillEndY -= 3 * opts.pixelRatio;\n  }\n  if (opts.xAxis.rotateLabel) {\n    fillEndY = opts.height - opts.area[2] + 3;\n  }\n  // set YAxis background\n  context.beginPath();\n  context.setFillStyle(opts.background || '#ffffff');\n  if (opts._scrollDistance_ < 0) {\n    context.fillRect(0, 0, startX, fillEndY);\n  }\n  if (opts.enableScroll == true) {\n    context.fillRect(endX, 0, opts.width, fillEndY);\n  }\n  context.closePath();\n  context.stroke();\n\n  var points = [];\n  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {\n    points.push(opts.area[0] + eachSpacing * i);\n  }\n\n  var tStartLeft = opts.area[3];\n  var tStartRight = opts.width - opts.area[1];var _loop4 = function _loop4(\n\n  _i17) {\n    var yData = opts.yAxis.data[_i17];\n    if (yData.disabled !== true) {\n      var rangesFormat = opts.chartData.yAxisData.rangesFormat[_i17];\n      var yAxisFontSize = yData.fontSize || config.fontSize;\n      var yAxisWidth = opts.chartData.yAxisData.yAxisWidth[_i17];\n      //画Y轴刻度及文案\n      rangesFormat.forEach(function (item, index) {\n        var pos = points[index] ? points[index] : endY;\n        context.beginPath();\n        context.setFontSize(yAxisFontSize);\n        context.setLineWidth(1 * opts.pixelRatio);\n        context.setStrokeStyle(yData.axisLineColor || '#cccccc');\n        context.setFillStyle(yData.fontColor || '#666666');\n        if (yAxisWidth.position == 'left') {\n          context.fillText(String(item), tStartLeft - yAxisWidth.width, pos + yAxisFontSize / 2);\n          //画刻度线\n          if (yData.calibration == true) {\n            context.moveTo(tStartLeft, pos);\n            context.lineTo(tStartLeft - 3 * opts.pixelRatio, pos);\n          }\n        } else {\n          context.fillText(String(item), tStartRight + 4 * opts.pixelRatio, pos + yAxisFontSize / 2);\n          //画刻度线\n          if (yData.calibration == true) {\n            context.moveTo(tStartRight, pos);\n            context.lineTo(tStartRight + 3 * opts.pixelRatio, pos);\n          }\n        }\n        context.closePath();\n        context.stroke();\n      });\n      //画Y轴轴线\n      if (yData.axisLine !== false) {\n        context.beginPath();\n        context.setStrokeStyle(yData.axisLineColor || '#cccccc');\n        context.setLineWidth(1 * opts.pixelRatio);\n        if (yAxisWidth.position == 'left') {\n          context.moveTo(tStartLeft, opts.height - opts.area[2]);\n          context.lineTo(tStartLeft, opts.area[0]);\n        } else {\n          context.moveTo(tStartRight, opts.height - opts.area[2]);\n          context.lineTo(tStartRight, opts.area[0]);\n        }\n        context.stroke();\n      }\n\n      //画Y轴标题\n      if (opts.yAxis.showTitle) {\n\n        var titleFontSize = yData.titleFontSize || config.fontSize;\n        var title = yData.title;\n        context.beginPath();\n        context.setFontSize(titleFontSize);\n        context.setFillStyle(yData.titleFontColor || '#666666');\n        if (yAxisWidth.position == 'left') {\n          context.fillText(title, tStartLeft - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);\n        } else {\n          context.fillText(title, tStartRight - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);\n        }\n        context.closePath();\n        context.stroke();\n      }\n      if (yAxisWidth.position == 'left') {\n        tStartLeft -= yAxisWidth.width + opts.yAxis.padding;\n      } else {\n        tStartRight += yAxisWidth.width + opts.yAxis.padding;\n      }\n    }};for (var _i17 = 0; _i17 < opts.yAxis.data.length; _i17++) {_loop4(_i17);\n  }\n}\n\nfunction drawLegend(series, opts, config, context, chartData) {\n  if (opts.legend.show === false) {\n    return;\n  }\n  var legendData = chartData.legendData;\n  var legendList = legendData.points;\n  var legendArea = legendData.area;\n  var padding = opts.legend.padding;\n  var fontSize = opts.legend.fontSize;\n  var shapeWidth = 15 * opts.pixelRatio;\n  var shapeRight = 5 * opts.pixelRatio;\n  var itemGap = opts.legend.itemGap;\n  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);\n\n  //画背景及边框\n  context.beginPath();\n  context.setLineWidth(opts.legend.borderWidth);\n  context.setStrokeStyle(opts.legend.borderColor);\n  context.setFillStyle(opts.legend.backgroundColor);\n  context.moveTo(legendArea.start.x, legendArea.start.y);\n  context.rect(legendArea.start.x, legendArea.start.y, legendArea.width, legendArea.height);\n  context.closePath();\n  context.fill();\n  context.stroke();\n\n  legendList.forEach(function (itemList, listIndex) {\n    var width = 0;\n    var height = 0;\n    width = legendData.widthArr[listIndex];\n    height = legendData.heightArr[listIndex];\n    var startX = 0;\n    var startY = 0;\n    if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\n      startX = legendArea.start.x + (legendArea.width - width) / 2;\n      startY = legendArea.start.y + padding + listIndex * lineHeight;\n    } else {\n      if (listIndex == 0) {\n        width = 0;\n      } else {\n        width = legendData.widthArr[listIndex - 1];\n      }\n      startX = legendArea.start.x + padding + width;\n      startY = legendArea.start.y + padding + (legendArea.height - height) / 2;\n    }\n\n    context.setFontSize(config.fontSize);\n    for (var i = 0; i < itemList.length; i++) {\n      var item = itemList[i];\n      item.area = [0, 0, 0, 0];\n      item.area[0] = startX;\n      item.area[1] = startY;\n      item.area[3] = startY + lineHeight;\n      context.beginPath();\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.setStrokeStyle(item.show ? item.color : opts.legend.hiddenColor);\n      context.setFillStyle(item.show ? item.color : opts.legend.hiddenColor);\n      switch (item.legendShape) {\n        case 'line':\n          context.moveTo(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio);\n          context.fillRect(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio, 15 * opts.pixelRatio, 4 * opts.pixelRatio);\n          break;\n        case 'triangle':\n          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);\n          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);\n          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          break;\n        case 'diamond':\n          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight);\n          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);\n          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight);\n          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          break;\n        case 'circle':\n          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight);\n          context.arc(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight, 5 * opts.pixelRatio, 0, 2 * Math.PI);\n          break;\n        case 'rect':\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);\n          break;\n        default:\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);}\n\n      context.closePath();\n      context.fill();\n      context.stroke();\n\n      startX += shapeWidth + shapeRight;\n      var fontTrans = 0.5 * lineHeight + 0.5 * fontSize - 2;\n      context.beginPath();\n      context.setFontSize(fontSize);\n      context.setFillStyle(item.show ? opts.legend.fontColor : opts.legend.hiddenColor);\n      context.fillText(item.name, startX, startY + fontTrans);\n      context.closePath();\n      context.stroke();\n      if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\n        startX += measureText(item.name, fontSize) + itemGap;\n        item.area[2] = startX;\n      } else {\n        item.area[2] = startX + measureText(item.name, fontSize) + itemGap;;\n        startX -= shapeWidth + shapeRight;\n        startY += lineHeight;\n      }\n    }\n  });\n}\n\nfunction drawPieDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var pieOption = assign({}, {\n    activeOpacity: 0.5,\n    activeRadius: 10 * opts.pixelRatio,\n    offsetAngle: 0,\n    labelWidth: 15 * opts.pixelRatio,\n    ringWidth: 0,\n    border: false,\n    borderWidth: 2,\n    borderColor: '#FFFFFF' },\n  opts.extra.pie);\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };\n\n  if (config.pieChartLinePadding == 0) {\n    config.pieChartLinePadding = pieOption.activeRadius;\n  }\n\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\n\n  series = getPieDataPoints(series, radius, process);\n\n  var activeRadius = pieOption.activeRadius;\n\n  series = series.map(function (eachSeries) {\n    eachSeries._start_ += pieOption.offsetAngle * Math.PI / 180;\n    return eachSeries;\n  });\n  series.forEach(function (eachSeries, seriesIndex) {\n    if (opts.tooltip) {\n      if (opts.tooltip.index == seriesIndex) {\n        context.beginPath();\n        context.setFillStyle(hexToRgb(eachSeries.color, opts.extra.pie.activeOpacity || 0.5));\n        context.moveTo(centerPosition.x, centerPosition.y);\n        context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_ + activeRadius, eachSeries._start_,\n        eachSeries._start_ + 2 *\n        eachSeries._proportion_ * Math.PI);\n        context.closePath();\n        context.fill();\n      }\n    }\n    context.beginPath();\n    context.setLineWidth(pieOption.borderWidth * opts.pixelRatio);\n    context.lineJoin = \"round\";\n    context.setStrokeStyle(pieOption.borderColor);\n    context.setFillStyle(eachSeries.color);\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);\n    context.closePath();\n    context.fill();\n    if (pieOption.border == true) {\n      context.stroke();\n    }\n  });\n\n  if (opts.type === 'ring') {\n    var innerPieWidth = radius * 0.6;\n    if (typeof opts.extra.pie.ringWidth === 'number' && opts.extra.pie.ringWidth > 0) {\n      innerPieWidth = Math.max(0, radius - opts.extra.pie.ringWidth);\n    }\n    context.beginPath();\n    context.setFillStyle(opts.background || '#ffffff');\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.arc(centerPosition.x, centerPosition.y, innerPieWidth, 0, 2 * Math.PI);\n    context.closePath();\n    context.fill();\n  }\n\n  if (opts.dataLabel !== false && process === 1) {\n    var valid = false;\n    for (var i = 0, len = series.length; i < len; i++) {\n      if (series[i].data > 0) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (valid) {\n      drawPieText(series, opts, config, context, radius, centerPosition);\n    }\n  }\n\n  if (process === 1 && opts.type === 'ring') {\n    drawRingTitle(opts, config, context, centerPosition);\n  }\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawRoseDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var roseOption = assign({}, {\n    type: 'area',\n    activeOpacity: 0.5,\n    activeRadius: 10 * opts.pixelRatio,\n    offsetAngle: 0,\n    labelWidth: 15 * opts.pixelRatio,\n    border: false,\n    borderWidth: 2,\n    borderColor: '#FFFFFF' },\n  opts.extra.rose);\n  if (config.pieChartLinePadding == 0) {\n    config.pieChartLinePadding = roseOption.activeRadius;\n  }\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };\n\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\n  var minRadius = roseOption.minRadius || radius * 0.5;\n\n  series = getRoseDataPoints(series, roseOption.type, minRadius, radius, process);\n\n  var activeRadius = roseOption.activeRadius;\n\n  series = series.map(function (eachSeries) {\n    eachSeries._start_ += (roseOption.offsetAngle || 0) * Math.PI / 180;\n    return eachSeries;\n  });\n\n  series.forEach(function (eachSeries, seriesIndex) {\n    if (opts.tooltip) {\n      if (opts.tooltip.index == seriesIndex) {\n        context.beginPath();\n        context.setFillStyle(hexToRgb(eachSeries.color, roseOption.activeOpacity || 0.5));\n        context.moveTo(centerPosition.x, centerPosition.y);\n        context.arc(centerPosition.x, centerPosition.y, activeRadius + eachSeries._radius_, eachSeries._start_,\n        eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);\n        context.closePath();\n        context.fill();\n      }\n    }\n    context.beginPath();\n    context.setLineWidth(roseOption.borderWidth * opts.pixelRatio);\n    context.lineJoin = \"round\";\n    context.setStrokeStyle(roseOption.borderColor);\n    context.setFillStyle(eachSeries.color);\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 *\n    eachSeries._rose_proportion_ * Math.PI);\n    context.closePath();\n    context.fill();\n    if (roseOption.border == true) {\n      context.stroke();\n    }\n  });\n\n  if (opts.dataLabel !== false && process === 1) {\n    var valid = false;\n    for (var i = 0, len = series.length; i < len; i++) {\n      if (series[i].data > 0) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (valid) {\n      drawPieText(series, opts, config, context, radius, centerPosition);\n    }\n  }\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawArcbarDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var arcbarOption = assign({}, {\n    startAngle: 0.75,\n    endAngle: 0.25,\n    type: 'default',\n    width: 12 * opts.pixelRatio,\n    gap: 2 * opts.pixelRatio },\n  opts.extra.arcbar);\n\n  series = getArcbarDataPoints(series, arcbarOption, process);\n\n  var centerPosition;\n  if (arcbarOption.center) {\n    centerPosition = arcbarOption.center;\n  } else {\n    centerPosition = {\n      x: opts.width / 2,\n      y: opts.height / 2 };\n\n  }\n\n  var radius;\n  if (arcbarOption.radius) {\n    radius = arcbarOption.radius;\n  } else {\n    radius = Math.min(centerPosition.x, centerPosition.y);\n    radius -= 5 * opts.pixelRatio;\n    radius -= arcbarOption.width / 2;\n  }\n\n  for (var i = 0; i < series.length; i++) {\n    var eachSeries = series[i];\n    //背景颜色\n    context.setLineWidth(arcbarOption.width);\n    context.setStrokeStyle(arcbarOption.backgroundColor || '#E9E9E9');\n    context.setLineCap('round');\n    context.beginPath();\n    if (arcbarOption.type == 'default') {\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, arcbarOption.endAngle * Math.PI, false);\n    } else {\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, 0, 2 * Math.PI, false);\n    }\n    context.stroke();\n    //进度条\n    context.setLineWidth(arcbarOption.width);\n    context.setStrokeStyle(eachSeries.color);\n    context.setLineCap('round');\n    context.beginPath();\n    context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, eachSeries._proportion_ * Math.PI, false);\n    context.stroke();\n  }\n\n  drawRingTitle(opts, config, context, centerPosition);\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawGaugeDataPoints(categories, series, opts, config, context) {\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var gaugeOption = assign({}, {\n    type: 'default',\n    startAngle: 0.75,\n    endAngle: 0.25,\n    width: 15,\n    splitLine: {\n      fixRadius: 0,\n      splitNumber: 10,\n      width: 15,\n      color: '#FFFFFF',\n      childNumber: 5,\n      childWidth: 5 },\n\n    pointer: {\n      width: 15,\n      color: 'auto' } },\n\n  opts.extra.gauge);\n\n  if (gaugeOption.oldAngle == undefined) {\n    gaugeOption.oldAngle = gaugeOption.startAngle;\n  }\n  if (gaugeOption.oldData == undefined) {\n    gaugeOption.oldData = 0;\n  }\n  categories = getGaugeAxisPoints(categories, gaugeOption.startAngle, gaugeOption.endAngle);\n\n  var centerPosition = {\n    x: opts.width / 2,\n    y: opts.height / 2 };\n\n  var radius = Math.min(centerPosition.x, centerPosition.y);\n  radius -= 5 * opts.pixelRatio;\n  radius -= gaugeOption.width / 2;\n  var innerRadius = radius - gaugeOption.width;\n  var totalAngle = 0;\n\n  //判断仪表盘的样式：default百度样式，progress新样式\n  if (gaugeOption.type == 'progress') {\n\n    //## 第一步画中心圆形背景和进度条背景\n    //中心圆形背景\n    var pieRadius = radius - gaugeOption.width * 3;\n    context.beginPath();\n    var gradient = context.createLinearGradient(centerPosition.x, centerPosition.y - pieRadius, centerPosition.x, centerPosition.y + pieRadius);\n    //配置渐变填充（起点：中心点向上减半径；结束点中心点向下加半径）\n    gradient.addColorStop('0', hexToRgb(series[0].color, 0.3));\n    gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\n    context.setFillStyle(gradient);\n    context.arc(centerPosition.x, centerPosition.y, pieRadius, 0, 2 * Math.PI, false);\n    context.fill();\n    //画进度条背景\n    context.setLineWidth(gaugeOption.width);\n    context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\n    context.setLineCap('round');\n    context.beginPath();\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, gaugeOption.endAngle * Math.PI, false);\n    context.stroke();\n\n    //## 第二步画刻度线\n    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n    var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\n    var childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\n    var startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\n    var endX = -radius - gaugeOption.width - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\n    context.save();\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\n    var len = gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1;\n    var proc = series[0].data * process;\n    for (var i = 0; i < len; i++) {\n      context.beginPath();\n      //刻度线随进度变色\n      if (proc > i / len) {\n        context.setStrokeStyle(hexToRgb(series[0].color, 1));\n      } else {\n        context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\n      }\n      context.setLineWidth(3 * opts.pixelRatio);\n      context.moveTo(startX, 0);\n      context.lineTo(endX, 0);\n      context.stroke();\n      context.rotate(childAngle * Math.PI);\n    }\n    context.restore();\n\n    //## 第三步画进度条\n    series = getArcbarDataPoints(series, gaugeOption, process);\n    context.setLineWidth(gaugeOption.width);\n    context.setStrokeStyle(series[0].color);\n    context.setLineCap('round');\n    context.beginPath();\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, series[0]._proportion_ * Math.PI, false);\n    context.stroke();\n\n    //## 第四步画指针\n    var pointerRadius = radius - gaugeOption.width * 2.5;\n    context.save();\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((series[0]._proportion_ - 1) * Math.PI);\n    context.beginPath();\n    context.setLineWidth(gaugeOption.width / 3);\n    var gradient3 = context.createLinearGradient(0, -pointerRadius * 0.6, 0, pointerRadius * 0.6);\n    gradient3.addColorStop('0', hexToRgb('#FFFFFF', 0));\n    gradient3.addColorStop('0.5', hexToRgb(series[0].color, 1));\n    gradient3.addColorStop('1.0', hexToRgb('#FFFFFF', 0));\n    context.setStrokeStyle(gradient3);\n    context.arc(0, 0, pointerRadius, 0.85 * Math.PI, 1.15 * Math.PI, false);\n    context.stroke();\n    context.beginPath();\n    context.setLineWidth(1);\n    context.setStrokeStyle(series[0].color);\n    context.setFillStyle(series[0].color);\n    context.moveTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2 - 4, 0);\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, 4);\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\n    context.stroke();\n    context.fill();\n    context.restore();\n\n    //default百度样式\n  } else {\n    //画背景\n    context.setLineWidth(gaugeOption.width);\n    context.setLineCap('butt');\n    for (var _i18 = 0; _i18 < categories.length; _i18++) {\n      var eachCategories = categories[_i18];\n      context.beginPath();\n      context.setStrokeStyle(eachCategories.color);\n      context.arc(centerPosition.x, centerPosition.y, radius, eachCategories._startAngle_ * Math.PI, eachCategories._endAngle_ * Math.PI, false);\n      context.stroke();\n    }\n    context.save();\n\n    //画刻度线\n    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;\n    var _splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\n    var _childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\n    var _startX2 = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\n    var _endX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\n    var childendX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.childWidth;\n\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\n\n    for (var _i19 = 0; _i19 < gaugeOption.splitLine.splitNumber + 1; _i19++) {\n      context.beginPath();\n      context.setStrokeStyle(gaugeOption.splitLine.color);\n      context.setLineWidth(2 * opts.pixelRatio);\n      context.moveTo(_startX2, 0);\n      context.lineTo(_endX, 0);\n      context.stroke();\n      context.rotate(_splitAngle * Math.PI);\n    }\n    context.restore();\n\n    context.save();\n    context.translate(centerPosition.x, centerPosition.y);\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\n\n    for (var _i20 = 0; _i20 < gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1; _i20++) {\n      context.beginPath();\n      context.setStrokeStyle(gaugeOption.splitLine.color);\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.moveTo(_startX2, 0);\n      context.lineTo(childendX, 0);\n      context.stroke();\n      context.rotate(_childAngle * Math.PI);\n    }\n    context.restore();\n\n    //画指针\n    series = getGaugeDataPoints(series, categories, gaugeOption, process);\n\n    for (var _i21 = 0; _i21 < series.length; _i21++) {\n      var eachSeries = series[_i21];\n      context.save();\n      context.translate(centerPosition.x, centerPosition.y);\n      context.rotate((eachSeries._proportion_ - 1) * Math.PI);\n      context.beginPath();\n      context.setFillStyle(eachSeries.color);\n      context.moveTo(gaugeOption.pointer.width, 0);\n      context.lineTo(0, -gaugeOption.pointer.width / 2);\n      context.lineTo(-innerRadius, 0);\n      context.lineTo(0, gaugeOption.pointer.width / 2);\n      context.lineTo(gaugeOption.pointer.width, 0);\n      context.closePath();\n      context.fill();\n      context.beginPath();\n      context.setFillStyle('#FFFFFF');\n      context.arc(0, 0, gaugeOption.pointer.width / 6, 0, 2 * Math.PI, false);\n      context.fill();\n      context.restore();\n    }\n\n    if (opts.dataLabel !== false) {\n      drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context);\n    }\n  }\n\n  //画仪表盘标题，副标题\n  drawRingTitle(opts, config, context, centerPosition);\n\n  if (process === 1 && opts.type === 'gauge') {\n    opts.extra.gauge.oldAngle = series[0]._proportion_;\n    opts.extra.gauge.oldData = series[0].data;\n  }\n  return {\n    center: centerPosition,\n    radius: radius,\n    innerRadius: innerRadius,\n    categories: categories,\n    totalAngle: totalAngle };\n\n}\n\nfunction drawRadarDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var radarOption = assign({}, {\n    gridColor: '#cccccc',\n    labelColor: '#666666',\n    opacity: 0.2,\n    gridCount: 3 },\n  opts.extra.radar);\n\n  var coordinateAngle = getRadarCoordinateSeries(opts.categories.length);\n\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };\n\n\n  var radius = Math.min(centerPosition.x - (getMaxTextListLength(opts.categories) + config.radarLabelTextMargin),\n  centerPosition.y - config.radarLabelTextMargin);\n  //TODO逻辑不对\n  radius -= opts.padding[1];\n\n  // draw grid\n  context.beginPath();\n  context.setLineWidth(1 * opts.pixelRatio);\n  context.setStrokeStyle(radarOption.gridColor);\n  coordinateAngle.forEach(function (angle) {\n    var pos = convertCoordinateOrigin(radius * Math.cos(angle), radius * Math.sin(angle), centerPosition);\n    context.moveTo(centerPosition.x, centerPosition.y);\n    context.lineTo(pos.x, pos.y);\n  });\n  context.stroke();\n  context.closePath();\n  // draw split line grid\n\n  var _loop = function _loop(i) {\n    var startPos = {};\n    context.beginPath();\n    context.setLineWidth(1 * opts.pixelRatio);\n    context.setStrokeStyle(radarOption.gridColor);\n    coordinateAngle.forEach(function (angle, index) {\n      var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(angle), radius / radarOption.gridCount * i * Math.sin(angle), centerPosition);\n      if (index === 0) {\n        startPos = pos;\n        context.moveTo(pos.x, pos.y);\n      } else {\n        context.lineTo(pos.x, pos.y);\n      }\n    });\n    context.lineTo(startPos.x, startPos.y);\n    context.stroke();\n    context.closePath();\n  };\n\n  for (var i = 1; i <= radarOption.gridCount; i++) {\n    _loop(i);\n  }\n\n  var radarDataPoints = getRadarDataPoints(coordinateAngle, centerPosition, radius, series, opts, process);\n\n  radarDataPoints.forEach(function (eachSeries, seriesIndex) {\n    // 绘制区域数据\n    context.beginPath();\n    context.setFillStyle(hexToRgb(eachSeries.color, radarOption.opacity));\n    eachSeries.data.forEach(function (item, index) {\n      if (index === 0) {\n        context.moveTo(item.position.x, item.position.y);\n      } else {\n        context.lineTo(item.position.x, item.position.y);\n      }\n    });\n    context.closePath();\n    context.fill();\n\n    if (opts.dataPointShape !== false) {\n      var points = eachSeries.data.map(function (item) {\n        return item.position;\n      });\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\n    }\n  });\n  // draw label text\n  drawRadarLabel(coordinateAngle, radius, centerPosition, opts, config, context);\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    angleList: coordinateAngle };\n\n}\n\nfunction normalInt(min, max, iter) {\n  iter = iter == 0 ? 1 : iter;\n  var arr = [];\n  for (var i = 0; i < iter; i++) {\n    arr[i] = Math.random();\n  };\n  return Math.floor(arr.reduce(function (i, j) {return i + j;}) / iter * (max - min)) + min;\n};\n\nfunction collisionNew(area, points, width, height) {\n  var isIn = false;\n  for (var i = 0; i < points.length; i++) {\n    if (points[i].area) {\n      if (area[3] < points[i].area[1] || area[0] > points[i].area[2] || area[1] > points[i].area[3] || area[2] < points[i].area[0]) {\n        if (area[0] < 0 || area[1] < 0 || area[2] > width || area[3] > height) {\n          isIn = true;\n          break;\n        } else {\n          isIn = false;\n        }\n      } else {\n        isIn = true;\n        break;\n      }\n    }\n  }\n  return isIn;\n};\n\nfunction getBoundingBox(data) {\n  var bounds = {},coords;\n  bounds.xMin = 180;\n  bounds.xMax = 0;\n  bounds.yMin = 90;\n  bounds.yMax = 0;\n  for (var i = 0; i < data.length; i++) {\n    var coorda = data[i].geometry.coordinates;\n    for (var k = 0; k < coorda.length; k++) {\n      coords = coorda[k];\n      if (coords.length == 1) {\n        coords = coords[0];\n      }\n      for (var j = 0; j < coords.length; j++) {\n        var longitude = coords[j][0];\n        var latitude = coords[j][1];\n        var point = {\n          x: longitude,\n          y: latitude };\n\n        bounds.xMin = bounds.xMin < point.x ? bounds.xMin : point.x;\n        bounds.xMax = bounds.xMax > point.x ? bounds.xMax : point.x;\n        bounds.yMin = bounds.yMin < point.y ? bounds.yMin : point.y;\n        bounds.yMax = bounds.yMax > point.y ? bounds.yMax : point.y;\n      }\n    }\n  }\n  return bounds;\n}\n\nfunction coordinateToPoint(latitude, longitude, bounds, scale, xoffset, yoffset) {\n  return {\n    x: (longitude - bounds.xMin) * scale + xoffset,\n    y: (bounds.yMax - latitude) * scale + yoffset };\n\n}\n\nfunction pointToCoordinate(pointY, pointX, bounds, scale, xoffset, yoffset) {\n  return {\n    x: (pointX - xoffset) / scale + bounds.xMin,\n    y: bounds.yMax - (pointY - yoffset) / scale };\n\n}\n\nfunction isRayIntersectsSegment(poi, s_poi, e_poi) {\n  if (s_poi[1] == e_poi[1]) {return false;}\n  if (s_poi[1] > poi[1] && e_poi[1] > poi[1]) {return false;}\n  if (s_poi[1] < poi[1] && e_poi[1] < poi[1]) {return false;}\n  if (s_poi[1] == poi[1] && e_poi[1] > poi[1]) {return false;}\n  if (e_poi[1] == poi[1] && s_poi[1] > poi[1]) {return false;}\n  if (s_poi[0] < poi[0] && e_poi[1] < poi[1]) {return false;}\n  var xseg = e_poi[0] - (e_poi[0] - s_poi[0]) * (e_poi[1] - poi[1]) / (e_poi[1] - s_poi[1]);\n  if (xseg < poi[0]) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction isPoiWithinPoly(poi, poly) {\n  var sinsc = 0;\n  for (var i = 0; i < poly.length; i++) {\n    var epoly = poly[i][0];\n    if (poly.length == 1) {\n      epoly = poly[i][0];\n    }\n    for (var j = 0; j < epoly.length - 1; j++) {\n      var s_poi = epoly[j];\n      var e_poi = epoly[j + 1];\n      if (isRayIntersectsSegment(poi, s_poi, e_poi)) {\n        sinsc += 1;\n      }\n    }\n  }\n\n  if (sinsc % 2 == 1) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nfunction drawMapDataPoints(series, opts, config, context) {\n  var mapOption = assign({}, {\n    border: true,\n    borderWidth: 1,\n    borderColor: '#666666',\n    fillOpacity: 0.6,\n    activeBorderColor: '#f04864',\n    activeFillColor: '#facc14',\n    activeFillOpacity: 1 },\n  opts.extra.map);\n  var coords, point;\n  var data = series;\n  var bounds = getBoundingBox(data);\n  var xScale = opts.width / Math.abs(bounds.xMax - bounds.xMin);\n  var yScale = opts.height / Math.abs(bounds.yMax - bounds.yMin);\n  var scale = xScale < yScale ? xScale : yScale;\n  var xoffset = opts.width / 2 - Math.abs(bounds.xMax - bounds.xMin) / 2 * scale;\n  var yoffset = opts.height / 2 - Math.abs(bounds.yMax - bounds.yMin) / 2 * scale;\n  context.beginPath();\n  context.clearRect(0, 0, opts.width, opts.height);\n  context.setFillStyle(opts.background || '#FFFFFF');\n  context.rect(0, 0, opts.width, opts.height);\n  context.fill();\n  for (var i = 0; i < data.length; i++) {\n    context.beginPath();\n    context.setLineWidth(mapOption.borderWidth * opts.pixelRatio);\n    context.setStrokeStyle(mapOption.borderColor);\n    context.setFillStyle(hexToRgb(series[i].color, mapOption.fillOpacity));\n    if (opts.tooltip) {\n      if (opts.tooltip.index == i) {\n        context.setStrokeStyle(mapOption.activeBorderColor);\n        context.setFillStyle(hexToRgb(mapOption.activeFillColor, mapOption.activeFillOpacity));\n      }\n    }\n    var coorda = data[i].geometry.coordinates;\n    for (var k = 0; k < coorda.length; k++) {\n      coords = coorda[k];\n      if (coords.length == 1) {\n        coords = coords[0];\n      }\n      for (var j = 0; j < coords.length; j++) {\n        point = coordinateToPoint(coords[j][1], coords[j][0], bounds, scale, xoffset, yoffset);\n        if (j === 0) {\n          context.beginPath();\n          context.moveTo(point.x, point.y);\n        } else {\n          context.lineTo(point.x, point.y);\n        }\n      }\n      context.fill();\n      if (mapOption.border == true) {\n        context.stroke();\n      }\n    }\n    if (opts.dataLabel == true) {\n      var centerPoint = data[i].properties.centroid;\n      if (centerPoint) {\n        point = coordinateToPoint(centerPoint[1], centerPoint[0], bounds, scale, xoffset, yoffset);\n        var fontSize = data[i].textSize || config.fontSize;\n        var text = data[i].properties.name;\n        context.beginPath();\n        context.setFontSize(fontSize);\n        context.setFillStyle(data[i].textColor || '#666666');\n        context.fillText(text, point.x - measureText(text, fontSize) / 2, point.y + fontSize / 2);\n        context.closePath();\n        context.stroke();\n      }\n    }\n  }\n  opts.chartData.mapData = {\n    bounds: bounds,\n    scale: scale,\n    xoffset: xoffset,\n    yoffset: yoffset };\n\n  drawToolTipBridge(opts, config, context, 1);\n  context.draw();\n}\n\nfunction getWordCloudPoint(opts, type) {\n  var points = opts.series.sort(function (a, b) {return parseInt(b.textSize) - parseInt(a.textSize);});\n  switch (type) {\n    case 'normal':\n      for (var i = 0; i < points.length; i++) {\n        var text = points[i].name;\n        var tHeight = points[i].textSize;\n        var tWidth = measureText(text, tHeight);\n        var x = void 0,y = void 0;\n        var area = void 0;\n        var breaknum = 0;\n        while (true) {\n          breaknum++;\n          x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\n          y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\n          area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 + opts.height / 2];\n          var isCollision = collisionNew(area, points, opts.width, opts.height);\n          if (!isCollision) break;\n          if (breaknum == 1000) {\n            area = [-100, -100, -100, -100];\n            break;\n          }\n        };\n        points[i].area = area;\n      }\n      break;\n    case 'vertical':var\n      Spin = function Spin() {\n        //获取均匀随机值，是否旋转，旋转的概率为（1-0.5）\n        if (Math.random() > 0.7) {\n          return true;\n        } else {return false;};\n      };;\n      for (var _i22 = 0; _i22 < points.length; _i22++) {\n        var _text = points[_i22].name;\n        var _tHeight = points[_i22].textSize;\n        var _tWidth = measureText(_text, _tHeight);\n        var isSpin = Spin();\n        var _x = void 0,_y = void 0,_area = void 0,areav = void 0;\n        var _breaknum = 0;\n        while (true) {\n          _breaknum++;\n          var _isCollision = void 0;\n          if (isSpin) {\n            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;\n            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;\n            _area = [_y - 5 - _tWidth + opts.width / 2, -_x - 5 + opts.height / 2, _y + 5 + opts.width / 2, -_x + _tHeight + 5 + opts.height / 2];\n            areav = [opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) - 5, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) - 5, opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) + _tHeight, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) + _tWidth + 5];\n            _isCollision = collisionNew(areav, points, opts.height, opts.width);\n          } else {\n            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;\n            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;\n            _area = [_x - 5 + opts.width / 2, _y - 5 - _tHeight + opts.height / 2, _x + _tWidth + 5 + opts.width / 2, _y + 5 + opts.height / 2];\n            _isCollision = collisionNew(_area, points, opts.width, opts.height);\n          }\n          if (!_isCollision) break;\n          if (_breaknum == 1000) {\n            _area = [-1000, -1000, -1000, -1000];\n            break;\n          }\n        };\n        if (isSpin) {\n          points[_i22].area = areav;\n          points[_i22].areav = _area;\n        } else {\n          points[_i22].area = _area;\n        }\n        points[_i22].rotate = isSpin;\n      };\n      break;}\n\n  return points;\n}\n\n\nfunction drawWordCloudDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var wordOption = assign({}, {\n    type: 'normal',\n    autoColors: true },\n  opts.extra.word);\n\n  context.beginPath();\n  context.setFillStyle(opts.background || '#FFFFFF');\n  context.rect(0, 0, opts.width, opts.height);\n  context.fill();\n  context.save();\n  var points = opts.chartData.wordCloudData;\n  context.translate(opts.width / 2, opts.height / 2);\n\n  for (var i = 0; i < points.length; i++) {\n    context.save();\n    if (points[i].rotate) {\n      context.rotate(90 * Math.PI / 180);\n    }\n    var text = points[i].name;\n    var tHeight = points[i].textSize;\n    var tWidth = measureText(text, tHeight);\n    context.beginPath();\n    context.setStrokeStyle(points[i].color);\n    context.setFillStyle(points[i].color);\n    context.setFontSize(tHeight);\n    if (points[i].rotate) {\n      if (points[i].areav[0] > 0) {\n        if (opts.tooltip) {\n          if (opts.tooltip.index == i) {\n            context.strokeText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\n          } else {\n            context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\n          }\n        } else {\n          context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\n        }\n      }\n    } else {\n      if (points[i].area[0] > 0) {\n        if (opts.tooltip) {\n          if (opts.tooltip.index == i) {\n            context.strokeText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\n          } else {\n            context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\n          }\n        } else {\n          context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\n        }\n\n      }\n    }\n\n    context.stroke();\n    context.restore();\n  }\n  context.restore();\n}\n\nfunction drawFunnelDataPoints(series, opts, config, context) {\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var funnelOption = assign({}, {\n    activeWidth: 10,\n    activeOpacity: 0.3,\n    border: false,\n    borderWidth: 2,\n    borderColor: '#FFFFFF',\n    fillOpacity: 1,\n    labelAlign: 'right' },\n  opts.extra.funnel);\n  var eachSpacing = (opts.height - opts.area[0] - opts.area[2]) / series.length;\n  var centerPosition = {\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\n    y: opts.height - opts.area[2] };\n\n  var activeWidth = funnelOption.activeWidth;\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - activeWidth, (opts.height - opts.area[0] - opts.area[2]) / 2 - activeWidth);\n  series = getFunnelDataPoints(series, radius, process);\n  context.save();\n  context.translate(centerPosition.x, centerPosition.y);\n  for (var i = 0; i < series.length; i++) {\n    if (i == 0) {\n      if (opts.tooltip) {\n        if (opts.tooltip.index == i) {\n          context.beginPath();\n          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));\n          context.moveTo(-activeWidth, 0);\n          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);\n          context.lineTo(series[i].radius + activeWidth, -eachSpacing);\n          context.lineTo(activeWidth, 0);\n          context.lineTo(-activeWidth, 0);\n          context.closePath();\n          context.fill();\n        }\n      }\n      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing, centerPosition.x + series[i].radius, centerPosition.y];\n      context.beginPath();\n      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);\n      context.setStrokeStyle(funnelOption.borderColor);\n      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));\n      context.moveTo(0, 0);\n      context.lineTo(-series[i].radius, -eachSpacing);\n      context.lineTo(series[i].radius, -eachSpacing);\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fill();\n      if (funnelOption.border == true) {\n        context.stroke();\n      }\n    } else {\n      if (opts.tooltip) {\n        if (opts.tooltip.index == i) {\n          context.beginPath();\n          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));\n          context.moveTo(0, 0);\n          context.lineTo(-series[i - 1].radius - activeWidth, 0);\n          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);\n          context.lineTo(series[i].radius + activeWidth, -eachSpacing);\n          context.lineTo(series[i - 1].radius + activeWidth, 0);\n          context.lineTo(0, 0);\n          context.closePath();\n          context.fill();\n        }\n      }\n      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + series[i].radius, centerPosition.y - eachSpacing * i];\n      context.beginPath();\n      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);\n      context.setStrokeStyle(funnelOption.borderColor);\n      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));\n      context.moveTo(0, 0);\n      context.lineTo(-series[i - 1].radius, 0);\n      context.lineTo(-series[i].radius, -eachSpacing);\n      context.lineTo(series[i].radius, -eachSpacing);\n      context.lineTo(series[i - 1].radius, 0);\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fill();\n      if (funnelOption.border == true) {\n        context.stroke();\n      }\n    }\n    context.translate(0, -eachSpacing);\n  }\n  context.restore();\n\n  if (opts.dataLabel !== false && process === 1) {\n    drawFunnelText(series, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);\n  }\n\n  return {\n    center: centerPosition,\n    radius: radius,\n    series: series };\n\n}\n\nfunction drawFunnelText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {\n  for (var i = 0; i < series.length; i++) {\n    var item = series[i];\n    var startX = void 0,endX = void 0,startY = void 0,fontSize = void 0;\n    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';\n    if (labelAlign == 'right') {\n      if (i == 0) {\n        startX = (item.funnelArea[2] + centerPosition.x) / 2;\n      } else {\n        startX = (item.funnelArea[2] + series[i - 1].funnelArea[2]) / 2;\n      }\n      endX = startX + activeWidth * 2;\n      startY = item.funnelArea[1] + eachSpacing / 2;\n      fontSize = item.textSize || opts.fontSize;\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.setStrokeStyle(item.color);\n      context.setFillStyle(item.color);\n      context.beginPath();\n      context.moveTo(startX, startY);\n      context.lineTo(endX, startY);\n      context.stroke();\n      context.closePath();\n      context.beginPath();\n      context.moveTo(endX, startY);\n      context.arc(endX, startY, 2, 0, 2 * Math.PI);\n      context.closePath();\n      context.fill();\n      context.beginPath();\n      context.setFontSize(fontSize);\n      context.setFillStyle(item.textColor || '#666666');\n      context.fillText(text, endX + 5, startY + fontSize / 2 - 2);\n      context.closePath();\n      context.stroke();\n      context.closePath();\n    } else {\n      if (i == 0) {\n        startX = (item.funnelArea[0] + centerPosition.x) / 2;\n      } else {\n        startX = (item.funnelArea[0] + series[i - 1].funnelArea[0]) / 2;\n      }\n      endX = startX - activeWidth * 2;\n      startY = item.funnelArea[1] + eachSpacing / 2;\n      fontSize = item.textSize || opts.fontSize;\n      context.setLineWidth(1 * opts.pixelRatio);\n      context.setStrokeStyle(item.color);\n      context.setFillStyle(item.color);\n      context.beginPath();\n      context.moveTo(startX, startY);\n      context.lineTo(endX, startY);\n      context.stroke();\n      context.closePath();\n      context.beginPath();\n      context.moveTo(endX, startY);\n      context.arc(endX, startY, 2, 0, 2 * Math.PI);\n      context.closePath();\n      context.fill();\n      context.beginPath();\n      context.setFontSize(fontSize);\n      context.setFillStyle(item.textColor || '#666666');\n      context.fillText(text, endX - 5 - measureText(text), startY + fontSize / 2 - 2);\n      context.closePath();\n      context.stroke();\n      context.closePath();\n    }\n\n  }\n}\n\n\nfunction drawCanvas(opts, context) {\n  context.draw();\n}\n\nvar Timing = {\n  easeIn: function easeIn(pos) {\n    return Math.pow(pos, 3);\n  },\n  easeOut: function easeOut(pos) {\n    return Math.pow(pos - 1, 3) + 1;\n  },\n  easeInOut: function easeInOut(pos) {\n    if ((pos /= 0.5) < 1) {\n      return 0.5 * Math.pow(pos, 3);\n    } else {\n      return 0.5 * (Math.pow(pos - 2, 3) + 2);\n    }\n  },\n  linear: function linear(pos) {\n    return pos;\n  } };\n\n\nfunction Animation(opts) {\n  this.isStop = false;\n  opts.duration = typeof opts.duration === 'undefined' ? 1000 : opts.duration;\n  opts.timing = opts.timing || 'linear';\n  var delay = 17;\n\n  function createAnimationFrame() {\n    if (typeof setTimeout !== 'undefined') {\n      return function (step, delay) {\n        setTimeout(function () {\n          var timeStamp = +new Date();\n          step(timeStamp);\n        }, delay);\n      };\n    } else if (typeof requestAnimationFrame !== 'undefined') {\n      return requestAnimationFrame;\n    } else {\n      return function (step) {\n        step(null);\n      };\n    }\n  };\n  var animationFrame = createAnimationFrame();\n  var startTimeStamp = null;\n  var _step = function step(timestamp) {\n    if (timestamp === null || this.isStop === true) {\n      opts.onProcess && opts.onProcess(1);\n      opts.onAnimationFinish && opts.onAnimationFinish();\n      return;\n    }\n    if (startTimeStamp === null) {\n      startTimeStamp = timestamp;\n    }\n    if (timestamp - startTimeStamp < opts.duration) {\n      var process = (timestamp - startTimeStamp) / opts.duration;\n      var timingFunction = Timing[opts.timing];\n      process = timingFunction(process);\n\n      opts.onProcess && opts.onProcess(process);\n      animationFrame(_step, delay);\n    } else {\n      opts.onProcess && opts.onProcess(1);\n      opts.onAnimationFinish && opts.onAnimationFinish();\n    }\n  };\n  _step = _step.bind(this);\n  animationFrame(_step, delay);\n}\n\n// stop animation immediately\n// and tigger onAnimationFinish\nAnimation.prototype.stop = function () {\n  this.isStop = true;\n};\n\nfunction drawCharts(type, opts, config, context) {\n  var _this = this;\n  var series = opts.series;\n  var categories = opts.categories;\n  series = fillSeries(series, opts, config);\n  var duration = opts.animation ? opts.duration : 0;\n  _this.animationInstance && _this.animationInstance.stop();\n  var seriesMA = null;\n  if (type == 'candle') {\n    var average = assign({}, opts.extra.candle.average);\n    if (average.show) {\n      seriesMA = calCandleMA(average.day, average.name, average.color, series[0].data);\n      seriesMA = fillSeries(seriesMA, opts, config);\n      opts.seriesMA = seriesMA;\n    } else if (opts.seriesMA) {\n      seriesMA = opts.seriesMA = fillSeries(opts.seriesMA, opts, config);\n    } else {\n      seriesMA = series;\n    }\n  } else {\n    seriesMA = series;\n  }\n\n  /* 过滤掉show=false的series */\n  opts._series_ = series = filterSeries(series);\n\n  //重新计算图表区域\n\n  opts.area = new Array(4);\n  //复位绘图区域\n  for (var j = 0; j < 4; j++) {\n    opts.area[j] = opts.padding[j];\n  }\n\n  //通过计算三大区域：图例、X轴、Y轴的大小，确定绘图区域\n  var _calLegendData = calLegendData(seriesMA, opts, config, opts.chartData),\n  legendHeight = _calLegendData.area.wholeHeight,\n  legendWidth = _calLegendData.area.wholeWidth;\n\n  switch (opts.legend.position) {\n    case 'top':\n      opts.area[0] += legendHeight;\n      break;\n    case 'bottom':\n      opts.area[2] += legendHeight;\n      break;\n    case 'left':\n      opts.area[3] += legendWidth;\n      break;\n    case 'right':\n      opts.area[1] += legendWidth;\n      break;}\n\n\n  var _calYAxisData = {},yAxisWidth = 0;\n  if (opts.type === 'line' || opts.type === 'column' || opts.type === 'area' || opts.type === 'mix' || opts.type === 'candle') {\n    _calYAxisData = calYAxisData(series, opts, config);\n    yAxisWidth = _calYAxisData.yAxisWidth;\n    //如果显示Y轴标题\n    if (opts.yAxis.showTitle) {\n      var maxTitleHeight = 0;\n      for (var i = 0; i < opts.yAxis.data.length; i++) {\n        maxTitleHeight = Math.max(maxTitleHeight, opts.yAxis.data[i].titleFontSize ? opts.yAxis.data[i].titleFontSize : config.fontSize);\n      }\n      opts.area[0] += (maxTitleHeight + 6) * opts.pixelRatio;\n    }\n    var rightIndex = 0,leftIndex = 0;\n    //计算主绘图区域左右位置\n    for (var _i23 = 0; _i23 < yAxisWidth.length; _i23++) {\n      if (yAxisWidth[_i23].position == 'left') {\n        if (leftIndex > 0) {\n          opts.area[3] += yAxisWidth[_i23].width + opts.yAxis.padding;\n        } else {\n          opts.area[3] += yAxisWidth[_i23].width;\n        }\n        leftIndex += 1;\n      } else {\n        if (rightIndex > 0) {\n          opts.area[1] += yAxisWidth[_i23].width + opts.yAxis.padding;\n        } else {\n          opts.area[1] += yAxisWidth[_i23].width;\n        }\n        rightIndex += 1;\n      }\n    }\n  } else {\n    config.yAxisWidth = yAxisWidth;\n  }\n  opts.chartData.yAxisData = _calYAxisData;\n\n  if (opts.categories && opts.categories.length) {\n    opts.chartData.xAxisData = getXAxisPoints(opts.categories, opts, config);\n    var _calCategoriesData = calCategoriesData(opts.categories, opts, config, opts.chartData.xAxisData.eachSpacing),\n    xAxisHeight = _calCategoriesData.xAxisHeight,\n    angle = _calCategoriesData.angle;\n    config.xAxisHeight = xAxisHeight;\n    config._xAxisTextAngle_ = angle;\n    opts.area[2] += xAxisHeight;\n    opts.chartData.categoriesData = _calCategoriesData;\n  } else {\n    if (opts.type === 'line' || opts.type === 'area' || opts.type === 'points') {\n      opts.chartData.xAxisData = calXAxisData(series, opts, config);\n      categories = opts.chartData.xAxisData.rangesFormat;\n      var _calCategoriesData2 = calCategoriesData(categories, opts, config, opts.chartData.xAxisData.eachSpacing),\n      _xAxisHeight = _calCategoriesData2.xAxisHeight,\n      _angle = _calCategoriesData2.angle;\n      config.xAxisHeight = _xAxisHeight;\n      config._xAxisTextAngle_ = _angle;\n      opts.area[2] += _xAxisHeight;\n      opts.chartData.categoriesData = _calCategoriesData2;\n    } else {\n      opts.chartData.xAxisData = {\n        xAxisPoints: [] };\n\n    }\n  }\n  //计算右对齐偏移距离\n  if (opts.enableScroll && opts.xAxis.scrollAlign == 'right' && opts._scrollDistance_ === undefined) {\n    var offsetLeft = 0,\n    xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\n    startX = opts.chartData.xAxisData.startX,\n    endX = opts.chartData.xAxisData.endX,\n    eachSpacing = opts.chartData.xAxisData.eachSpacing;\n    var totalWidth = eachSpacing * (xAxisPoints.length - 1);\n    var screenWidth = endX - startX;\n    offsetLeft = screenWidth - totalWidth;\n    _this.scrollOption = {\n      currentOffset: offsetLeft,\n      startTouchX: offsetLeft,\n      distance: 0,\n      lastMoveTime: 0 };\n\n    opts._scrollDistance_ = offsetLeft;\n  }\n\n  if (type === 'pie' || type === 'ring' || type === 'rose') {\n    config._pieTextMaxLength_ = opts.dataLabel === false ? 0 : getPieTextMaxLength(seriesMA);\n  }\n\n  switch (type) {\n    case 'word':\n      var wordOption = assign({}, {\n        type: 'normal',\n        autoColors: true },\n      opts.extra.word);\n      if (opts.updateData == true || opts.updateData == undefined) {\n        opts.chartData.wordCloudData = getWordCloudPoint(opts, wordOption.type);\n      }\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawWordCloudDataPoints(series, opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'map':\n      context.clearRect(0, 0, opts.width, opts.height);\n      drawMapDataPoints(series, opts, config, context);\n      break;\n    case 'funnel':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.funnelData = drawFunnelDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'line':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawLineDataPoints = drawLineDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawLineDataPoints.xAxisPoints,\n          calPoints = _drawLineDataPoints.calPoints,\n          eachSpacing = _drawLineDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'mix':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawMixDataPoints = drawMixDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawMixDataPoints.xAxisPoints,\n          calPoints = _drawMixDataPoints.calPoints,\n          eachSpacing = _drawMixDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'column':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawColumnDataPoints = drawColumnDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawColumnDataPoints.xAxisPoints,\n          calPoints = _drawColumnDataPoints.calPoints,\n          eachSpacing = _drawColumnDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'area':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawAreaDataPoints = drawAreaDataPoints(series, opts, config, context, process),\n          xAxisPoints = _drawAreaDataPoints.xAxisPoints,\n          calPoints = _drawAreaDataPoints.calPoints,\n          eachSpacing = _drawAreaDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'ring':\n    case 'pie':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'rose':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.pieData = drawRoseDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'radar':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.radarData = drawRadarDataPoints(series, opts, config, context, process);\n          drawLegend(opts.series, opts, config, context, opts.chartData);\n          drawToolTipBridge(opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'arcbar':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.arcbarData = drawArcbarDataPoints(series, opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'gauge':\n      this.animationInstance = new Animation({\n        timing: 'easeInOut',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          opts.chartData.gaugeData = drawGaugeDataPoints(categories, series, opts, config, context, process);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;\n    case 'candle':\n      this.animationInstance = new Animation({\n        timing: 'easeIn',\n        duration: duration,\n        onProcess: function onProcess(process) {\n          context.clearRect(0, 0, opts.width, opts.height);\n          if (opts.rotate) {\n            contextRotate(context, opts);\n          }\n          drawYAxisGrid(categories, opts, config, context);\n          drawXAxis(categories, opts, config, context);\n          var _drawCandleDataPoints = drawCandleDataPoints(series, seriesMA, opts, config, context, process),\n          xAxisPoints = _drawCandleDataPoints.xAxisPoints,\n          calPoints = _drawCandleDataPoints.calPoints,\n          eachSpacing = _drawCandleDataPoints.eachSpacing;\n          opts.chartData.xAxisPoints = xAxisPoints;\n          opts.chartData.calPoints = calPoints;\n          opts.chartData.eachSpacing = eachSpacing;\n          drawYAxis(series, opts, config, context);\n          if (opts.enableMarkLine !== false && process === 1) {\n            drawMarkLine(opts, config, context);\n          }\n          if (seriesMA) {\n            drawLegend(seriesMA, opts, config, context, opts.chartData);\n          } else {\n            drawLegend(opts.series, opts, config, context, opts.chartData);\n          }\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\n          drawCanvas(opts, context);\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          _this.event.trigger('renderComplete');\n        } });\n\n      break;}\n\n}\n\n// simple event implement\n\nfunction Event() {\n  this.events = {};\n}\n\nEvent.prototype.addEventListener = function (type, listener) {\n  this.events[type] = this.events[type] || [];\n  this.events[type].push(listener);\n};\n\nEvent.prototype.trigger = function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var type = args[0];\n  var params = args.slice(1);\n  if (!!this.events[type]) {\n    this.events[type].forEach(function (listener) {\n      try {\n        listener.apply(null, params);\n      } catch (e) {\n        console.error(__f__(e, \" at components\\\\u-charts\\\\u-charts.js:5091\"));\n      }\n    });\n  }\n};\n\nvar Charts = function Charts(opts) {\n  opts.pixelRatio = opts.pixelRatio ? opts.pixelRatio : 1;\n  opts.fontSize = opts.fontSize ? opts.fontSize * opts.pixelRatio : 13 * opts.pixelRatio;\n  opts.title = assign({}, opts.title);\n  opts.subtitle = assign({}, opts.subtitle);\n  opts.duration = opts.duration ? opts.duration : 1000;\n  opts.yAxis = assign({}, {\n    data: [],\n    showTitle: false,\n    disabled: false,\n    disableGrid: false,\n    splitNumber: 5,\n    gridType: 'solid',\n    dashLength: 4 * opts.pixelRatio,\n    gridColor: '#cccccc',\n    padding: 10,\n    fontColor: '#666666' },\n  opts.yAxis);\n  opts.yAxis.dashLength *= opts.pixelRatio;\n  opts.yAxis.padding *= opts.pixelRatio;\n  opts.xAxis = assign({}, {\n    rotateLabel: false,\n    type: 'calibration',\n    gridType: 'solid',\n    dashLength: 4,\n    scrollAlign: 'left',\n    boundaryGap: 'center',\n    axisLine: true,\n    axisLineColor: '#cccccc' },\n  opts.xAxis);\n  opts.xAxis.dashLength *= opts.pixelRatio;\n  opts.legend = assign({}, {\n    show: true,\n    position: 'bottom',\n    float: 'center',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    padding: 5,\n    margin: 5,\n    itemGap: 10,\n    fontSize: opts.fontSize,\n    lineHeight: opts.fontSize,\n    fontColor: '#333333',\n    format: {},\n    hiddenColor: '#CECECE' },\n  opts.legend);\n  opts.legend.borderWidth = opts.legend.borderWidth * opts.pixelRatio;\n  opts.legend.itemGap = opts.legend.itemGap * opts.pixelRatio;\n  opts.legend.padding = opts.legend.padding * opts.pixelRatio;\n  opts.legend.margin = opts.legend.margin * opts.pixelRatio;\n  opts.extra = assign({}, opts.extra);\n  opts.rotate = opts.rotate ? true : false;\n  opts.animation = opts.animation ? true : false;\n  opts.rotate = opts.rotate ? true : false;\n\n  var config$$1 = JSON.parse(JSON.stringify(config));\n  config$$1.colors = opts.colors ? opts.colors : config$$1.colors;\n  config$$1.yAxisTitleWidth = opts.yAxis.disabled !== true && opts.yAxis.title ? config$$1.yAxisTitleWidth : 0;\n  if (opts.type == 'pie' || opts.type == 'ring') {\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.pie.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;\n  }\n  if (opts.type == 'rose') {\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.rose.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;\n  }\n  config$$1.pieChartTextPadding = opts.dataLabel === false ? 0 : config$$1.pieChartTextPadding * opts.pixelRatio;\n  config$$1.yAxisSplit = opts.yAxis.splitNumber ? opts.yAxis.splitNumber : config.yAxisSplit;\n\n  //屏幕旋转\n  config$$1.rotate = opts.rotate;\n  if (opts.rotate) {\n    var tempWidth = opts.width;\n    var tempHeight = opts.height;\n    opts.width = tempHeight;\n    opts.height = tempWidth;\n  }\n\n  //适配高分屏\n  opts.padding = opts.padding ? opts.padding : config$$1.padding;\n  for (var i = 0; i < 4; i++) {\n    opts.padding[i] *= opts.pixelRatio;\n  }\n  config$$1.yAxisWidth = config.yAxisWidth * opts.pixelRatio;\n  config$$1.xAxisHeight = config.xAxisHeight * opts.pixelRatio;\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\n    config$$1.xAxisHeight += 6 * opts.pixelRatio;\n  }\n  config$$1.xAxisLineHeight = config.xAxisLineHeight * opts.pixelRatio;\n  config$$1.fontSize = opts.fontSize;\n  config$$1.titleFontSize = config.titleFontSize * opts.pixelRatio;\n  config$$1.subtitleFontSize = config.subtitleFontSize * opts.pixelRatio;\n  config$$1.toolTipPadding = config.toolTipPadding * opts.pixelRatio;\n  config$$1.toolTipLineHeight = config.toolTipLineHeight * opts.pixelRatio;\n  config$$1.columePadding = config.columePadding * opts.pixelRatio;\n  opts.$this = opts.$this ? opts.$this : this;\n\n  this.context = uni.createCanvasContext(opts.canvasId, opts.$this);\n  /* 兼容原生H5\r\n                                                                     this.context = document.getElementById(opts.canvasId).getContext(\"2d\");\r\n                                                                     this.context.setStrokeStyle = function(e){ return this.strokeStyle=e; }\r\n                                                                     this.context.setLineWidth = function(e){ return this.lineWidth=e; }\r\n                                                                     this.context.setLineCap = function(e){ return this.lineCap=e; }\r\n                                                                     this.context.setFontSize = function(e){ return this.font=e+\"px sans-serif\"; }\r\n                                                                     this.context.setFillStyle = function(e){ return this.fillStyle=e; }\r\n                                                                     this.context.draw = function(){ }\r\n                                                                     */\n\n  opts.chartData = {};\n  this.event = new Event();\n  this.scrollOption = {\n    currentOffset: 0,\n    startTouchX: 0,\n    distance: 0,\n    lastMoveTime: 0 };\n\n\n  this.opts = opts;\n  this.config = config$$1;\n\n  drawCharts.call(this, opts.type, opts, config$$1, this.context);\n};\n\nCharts.prototype.updateData = function () {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  this.opts = assign({}, this.opts, data);\n  this.opts.updateData = true;\n  var scrollPosition = data.scrollPosition || 'current';\n  switch (scrollPosition) {\n    case 'current':\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\n      break;\n    case 'left':\n      this.opts._scrollDistance_ = 0;\n      this.scrollOption = {\n        currentOffset: 0,\n        startTouchX: 0,\n        distance: 0,\n        lastMoveTime: 0 };\n\n      break;\n    case 'right':\n      var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),\n      yAxisWidth = _calYAxisData.yAxisWidth;\n      this.config.yAxisWidth = yAxisWidth;\n      var offsetLeft = 0;\n      var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\n      xAxisPoints = _getXAxisPoints0.xAxisPoints,\n      startX = _getXAxisPoints0.startX,\n      endX = _getXAxisPoints0.endX,\n      eachSpacing = _getXAxisPoints0.eachSpacing;\n      var totalWidth = eachSpacing * (xAxisPoints.length - 1);\n      var screenWidth = endX - startX;\n      offsetLeft = screenWidth - totalWidth;\n      this.scrollOption = {\n        currentOffset: offsetLeft,\n        startTouchX: offsetLeft,\n        distance: 0,\n        lastMoveTime: 0 };\n\n      this.opts._scrollDistance_ = offsetLeft;\n      break;}\n\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n};\n\nCharts.prototype.zoom = function () {\n  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.opts.xAxis.itemCount;\n  if (this.opts.enableScroll !== true) {\n    console.log(__f__('请启用滚动条后使用！', \" at components\\\\u-charts\\\\u-charts.js:5265\"));\n    return;\n  }\n  //当前屏幕中间点\n  var centerPoint = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(\n  this.opts.xAxis.itemCount / 2);\n  this.opts.animation = false;\n  this.opts.xAxis.itemCount = val.itemCount;\n  //重新计算x轴偏移距离\n  var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),\n  yAxisWidth = _calYAxisData.yAxisWidth;\n  this.config.yAxisWidth = yAxisWidth;\n  var offsetLeft = 0;\n  var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\n  xAxisPoints = _getXAxisPoints0.xAxisPoints,\n  startX = _getXAxisPoints0.startX,\n  endX = _getXAxisPoints0.endX,\n  eachSpacing = _getXAxisPoints0.eachSpacing;\n  var centerLeft = eachSpacing * centerPoint;\n  var screenWidth = endX - startX;\n  var MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);\n  offsetLeft = screenWidth / 2 - centerLeft;\n  if (offsetLeft > 0) {\n    offsetLeft = 0;\n  }\n  if (offsetLeft < MaxLeft) {\n    offsetLeft = MaxLeft;\n  }\n  this.scrollOption = {\n    currentOffset: offsetLeft,\n    startTouchX: offsetLeft,\n    distance: 0,\n    lastMoveTime: 0 };\n\n  this.opts._scrollDistance_ = offsetLeft;\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n};\n\nCharts.prototype.stopAnimation = function () {\n  this.animationInstance && this.animationInstance.stop();\n};\n\nCharts.prototype.addEventListener = function (type, listener) {\n  this.event.addEventListener(type, listener);\n};\n\nCharts.prototype.getCurrentDataIndex = function (e) {\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose') {\n      return findPieChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.pieData);\n    } else if (this.opts.type === 'radar') {\n      return findRadarChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.radarData, this.opts.categories.length);\n    } else if (this.opts.type === 'funnel') {\n      return findFunnelChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.funnelData);\n    } else if (this.opts.type === 'map') {\n      return findMapChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts);\n    } else if (this.opts.type === 'word') {\n      return findWordChartCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.wordCloudData);\n    } else {\n      return findCurrentIndex({\n        x: _touches$.x,\n        y: _touches$.y },\n      this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));\n    }\n  }\n  return -1;\n};\n\nCharts.prototype.getLegendDataIndex = function (e) {\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    return findLegendIndex({\n      x: _touches$.x,\n      y: _touches$.y },\n    this.opts.chartData.legendData);\n  }\n  return -1;\n};\n\nCharts.prototype.touchLegend = function (e) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    var index = this.getLegendDataIndex(e);\n    if (index >= 0) {\n      this.opts.series[index].show = !this.opts.series[index].show;\n      this.opts.animation = option.animation ? true : false;\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\n      drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n    }\n  }\n\n};\n\nCharts.prototype.showToolTip = function (e) {\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (!touches) {\n    console.log(__f__(\"touchError\", \" at components\\\\u-charts\\\\u-charts.js:5402\"));\n  }\n  var _touches$ = getTouches(touches, this.opts, e);\n  var currentOffset = this.scrollOption.currentOffset;\n  var opts = assign({}, this.opts, {\n    _scrollDistance_: currentOffset,\n    animation: false });\n\n  if (this.opts.type === 'line' || this.opts.type === 'area' || this.opts.type === 'column') {\n    var index = this.getCurrentDataIndex(e);\n    if (index > -1) {\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var _getToolTipData = getToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),\n        textList = _getToolTipData.textList,\n        offset = _getToolTipData.offset;\n        offset.y = _touches$.y;\n        opts.tooltip = {\n          textList: textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'mix') {\n    var index = this.getCurrentDataIndex(e);\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var _getMixToolTipData = getMixToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),\n        textList = _getMixToolTipData.textList,\n        offset = _getMixToolTipData.offset;\n        offset.y = _touches$.y;\n        opts.tooltip = {\n          textList: textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'candle') {\n    var index = this.getCurrentDataIndex(e);\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var _getToolTipData = getCandleToolTipData(this.opts.series[0].data, seriesData, this.opts.chartData.calPoints,\n        index, this.opts.categories, this.opts.extra.candle, option),\n        textList = _getToolTipData.textList,\n        offset = _getToolTipData.offset;\n        offset.y = _touches$.y;\n        opts.tooltip = {\n          textList: textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose' || this.opts.type === 'funnel') {\n    var index = this.getCurrentDataIndex(e);\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = this.opts._series_[index];\n      var textList = [{\n        text: option.format ? option.format(seriesData) : seriesData.name + ': ' + seriesData.data,\n        color: seriesData.color }];\n\n      var offset = {\n        x: _touches$.x,\n        y: _touches$.y };\n\n      opts.tooltip = {\n        textList: textList,\n        offset: offset,\n        option: option,\n        index: index };\n\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'map' || this.opts.type === 'word') {\n    var index = this.getCurrentDataIndex(e);\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = this.opts._series_[index];\n      var textList = [{\n        text: option.format ? option.format(seriesData) : seriesData.properties.name,\n        color: seriesData.color }];\n\n      var offset = {\n        x: _touches$.x,\n        y: _touches$.y };\n\n      opts.tooltip = {\n        textList: textList,\n        offset: offset,\n        option: option,\n        index: index };\n\n    }\n    opts.updateData = false;\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n  if (this.opts.type === 'radar') {\n    var index = this.getCurrentDataIndex(e);\n    if (index > -1) {\n      var currentOffset = this.scrollOption.currentOffset;\n      var opts = assign({}, this.opts, {\n        _scrollDistance_: currentOffset,\n        animation: false });\n\n      var seriesData = getSeriesDataItem(this.opts.series, index);\n      if (seriesData.length !== 0) {\n        var textList = seriesData.map(function (item) {\n          return {\n            text: option.format ? option.format(item) : item.name + ': ' + item.data,\n            color: item.color };\n\n        });\n        var offset = {\n          x: _touches$.x,\n          y: _touches$.y };\n\n        opts.tooltip = {\n          textList: textList,\n          offset: offset,\n          option: option,\n          index: index };\n\n      }\n    }\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n  }\n};\n\nCharts.prototype.translate = function (distance) {\n  this.scrollOption = {\n    currentOffset: distance,\n    startTouchX: distance,\n    distance: 0,\n    lastMoveTime: 0 };\n\n  var opts = assign({}, this.opts, {\n    _scrollDistance_: distance,\n    animation: false });\n\n  drawCharts.call(this, this.opts.type, opts, this.config, this.context);\n};\n\nCharts.prototype.scrollStart = function (e) {\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  var _touches$ = getTouches(touches, this.opts, e);\n  if (touches && this.opts.enableScroll === true) {\n    this.scrollOption.startTouchX = _touches$.x;\n  }\n};\n\nCharts.prototype.scroll = function (e) {\n  if (this.scrollOption.lastMoveTime === 0) {\n    this.scrollOption.lastMoveTime = Date.now();\n  }\n  var Limit = this.opts.extra.touchMoveLimit || 20;\n  var currMoveTime = Date.now();\n  var duration = currMoveTime - this.scrollOption.lastMoveTime;\n  if (duration < Math.floor(1000 / Limit)) return;\n  this.scrollOption.lastMoveTime = currMoveTime;\n  var touches = null;\n  if (e.changedTouches) {\n    touches = e.changedTouches[0];\n  } else {\n    touches = e.mp.changedTouches[0];\n  }\n  if (touches && this.opts.enableScroll === true) {\n    var _touches$ = getTouches(touches, this.opts, e);\n    var _distance;\n    _distance = _touches$.x - this.scrollOption.startTouchX;\n    var currentOffset = this.scrollOption.currentOffset;\n    var validDistance = calValidDistance(this, currentOffset + _distance, this.opts.chartData, this.config, this.opts);\n    this.scrollOption.distance = _distance = validDistance - currentOffset;\n    var opts = assign({}, this.opts, {\n      _scrollDistance_: currentOffset + _distance,\n      animation: false });\n\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\n    return currentOffset + _distance;\n  }\n};\n\nCharts.prototype.scrollEnd = function (e) {\n  if (this.opts.enableScroll === true) {\n    var _scrollOption = this.scrollOption,\n    currentOffset = _scrollOption.currentOffset,\n    distance = _scrollOption.distance;\n    this.scrollOption.currentOffset = currentOffset + distance;\n    this.scrollOption.distance = 0;\n  }\n};\nif ( true && typeof module.exports === \"object\") {\n  module.exports = Charts;\n  //export default Charts;//建议使用nodejs的module导出方式，如报错请使用export方式导出\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///39\n");

/***/ }),

/***/ 4:
/*!***************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages.json ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI0LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 5:
/*!*******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {var _package = __webpack_require__(/*! ../package.json */ 6);function _possibleConstructorReturn(self, call) {if (call && (typeof call === \"object\" || typeof call === \"function\")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}\n\nvar STAT_VERSION = _package.version;\nvar STAT_URL = 'https://tongji.dcloud.io/uni/stat';\nvar STAT_H5_URL = 'https://tongji.dcloud.io/uni/stat.gif';\nvar PAGE_PVER_TIME = 1800;\nvar APP_PVER_TIME = 300;\nvar OPERATING_TIME = 10;\n\nvar UUID_KEY = '__DC_STAT_UUID';\nvar UUID_VALUE = '__DC_UUID_VALUE';\n\nfunction getUuid() {\n  var uuid = '';\n  if (getPlatformName() === 'n') {\n    try {\n      uuid = plus.runtime.getDCloudId();\n    } catch (e) {\n      uuid = '';\n    }\n    return uuid;\n  }\n\n  try {\n    uuid = uni.getStorageSync(UUID_KEY);\n  } catch (e) {\n    uuid = UUID_VALUE;\n  }\n\n  if (!uuid) {\n    uuid = Date.now() + '' + Math.floor(Math.random() * 1e7);\n    try {\n      uni.setStorageSync(UUID_KEY, uuid);\n    } catch (e) {\n      uni.setStorageSync(UUID_KEY, UUID_VALUE);\n    }\n  }\n  return uuid;\n}\n\nvar getSgin = function getSgin(statData) {\n  var arr = Object.keys(statData);\n  var sortArr = arr.sort();\n  var sgin = {};\n  var sginStr = '';\n  for (var i in sortArr) {\n    sgin[sortArr[i]] = statData[sortArr[i]];\n    sginStr += sortArr[i] + '=' + statData[sortArr[i]] + '&';\n  }\n  // const options = sginStr.substr(0, sginStr.length - 1)\n  // sginStr = sginStr.substr(0, sginStr.length - 1) + '&key=' + STAT_KEY;\n  // const si = crypto.createHash('md5').update(sginStr).digest('hex');\n  return {\n    sign: '',\n    options: sginStr.substr(0, sginStr.length - 1) };\n\n};\n\nvar getSplicing = function getSplicing(data) {\n  var str = '';\n  for (var i in data) {\n    str += i + '=' + data[i] + '&';\n  }\n  return str.substr(0, str.length - 1);\n};\n\nvar getTime = function getTime() {\n  return parseInt(new Date().getTime() / 1000);\n};\n\nvar getPlatformName = function getPlatformName() {\n  var platformList = {\n    'app-plus': 'n',\n    'h5': 'h5',\n    'mp-weixin': 'wx',\n    'mp-alipay': 'ali',\n    'mp-baidu': 'bd',\n    'mp-toutiao': 'tt',\n    'mp-qq': 'qq' };\n\n  return platformList[\"app-plus\"];\n};\n\nvar getPackName = function getPackName() {\n  var packName = '';\n  if (getPlatformName() === 'wx' || getPlatformName() === 'qq') {\n    // 兼容微信小程序低版本基础库\n    if (uni.canIUse('getAccountInfoSync')) {\n      packName = uni.getAccountInfoSync().miniProgram.appId || '';\n    }\n  }\n  return packName;\n};\n\nvar getVersion = function getVersion() {\n  return getPlatformName() === 'n' ? plus.runtime.version : '';\n};\n\nvar getChannel = function getChannel() {\n  var platformName = getPlatformName();\n  var channel = '';\n  if (platformName === 'n') {\n    channel = plus.runtime.channel;\n  }\n  return channel;\n};\n\nvar getScene = function getScene(options) {\n  var platformName = getPlatformName();\n  var scene = '';\n  if (options) {\n    return options;\n  }\n  if (platformName === 'wx') {\n    scene = uni.getLaunchOptionsSync().scene;\n  }\n  return scene;\n};\nvar First__Visit__Time__KEY = 'First__Visit__Time';\nvar Last__Visit__Time__KEY = 'Last__Visit__Time';\n\nvar getFirstVisitTime = function getFirstVisitTime() {\n  var timeStorge = uni.getStorageSync(First__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = getTime();\n    uni.setStorageSync(First__Visit__Time__KEY, time);\n    uni.removeStorageSync(Last__Visit__Time__KEY);\n  }\n  return time;\n};\n\nvar getLastVisitTime = function getLastVisitTime() {\n  var timeStorge = uni.getStorageSync(Last__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = '';\n  }\n  uni.setStorageSync(Last__Visit__Time__KEY, getTime());\n  return time;\n};\n\n\nvar PAGE_RESIDENCE_TIME = '__page__residence__time';\nvar First_Page_residence_time = 0;\nvar Last_Page_residence_time = 0;\n\n\nvar setPageResidenceTime = function setPageResidenceTime() {\n  First_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    uni.setStorageSync(PAGE_RESIDENCE_TIME, getTime());\n  }\n  return First_Page_residence_time;\n};\n\nvar getPageResidenceTime = function getPageResidenceTime() {\n  Last_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    First_Page_residence_time = uni.getStorageSync(PAGE_RESIDENCE_TIME);\n  }\n  return Last_Page_residence_time - First_Page_residence_time;\n};\nvar TOTAL__VISIT__COUNT = 'Total__Visit__Count';\nvar getTotalVisitCount = function getTotalVisitCount() {\n  var timeStorge = uni.getStorageSync(TOTAL__VISIT__COUNT);\n  var count = 1;\n  if (timeStorge) {\n    count = timeStorge;\n    count++;\n  }\n  uni.setStorageSync(TOTAL__VISIT__COUNT, count);\n  return count;\n};\n\nvar GetEncodeURIComponentOptions = function GetEncodeURIComponentOptions(statData) {\n  var data = {};\n  for (var prop in statData) {\n    data[prop] = encodeURIComponent(statData[prop]);\n  }\n  return data;\n};\n\nvar Set__First__Time = 0;\nvar Set__Last__Time = 0;\n\nvar getFirstTime = function getFirstTime() {\n  var time = new Date().getTime();\n  Set__First__Time = time;\n  Set__Last__Time = 0;\n  return time;\n};\n\n\nvar getLastTime = function getLastTime() {\n  var time = new Date().getTime();\n  Set__Last__Time = time;\n  return time;\n};\n\n\nvar getResidenceTime = function getResidenceTime(type) {\n  var residenceTime = 0;\n  if (Set__First__Time !== 0) {\n    residenceTime = Set__Last__Time - Set__First__Time;\n  }\n\n  residenceTime = parseInt(residenceTime / 1000);\n  residenceTime = residenceTime < 1 ? 1 : residenceTime;\n  if (type === 'app') {\n    var overtime = residenceTime > APP_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: overtime };\n\n  }\n  if (type === 'page') {\n    var _overtime = residenceTime > PAGE_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: _overtime };\n\n  }\n\n  return {\n    residenceTime: residenceTime };\n\n\n};\n\nvar getRoute = function getRoute() {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is;\n  } else {\n    return _self.$scope && _self.$scope.route || _self.$mp && _self.$mp.page.route;\n  }\n};\n\nvar getPageRoute = function getPageRoute(self) {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n  var query = self._query;\n  var str = query && JSON.stringify(query) !== '{}' ? '?' + JSON.stringify(query) : '';\n  // clear\n  self._query = '';\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is + str;\n  } else {\n    return _self.$scope && _self.$scope.route + str || _self.$mp && _self.$mp.page.route + str;\n  }\n};\n\nvar getPageTypes = function getPageTypes(self) {\n  if (self.mpType === 'page' || self.$mp && self.$mp.mpType === 'page' || self.$options.mpType === 'page') {\n    return true;\n  }\n  return false;\n};\n\nvar calibration = function calibration(eventName, options) {\n  //  login 、 share 、pay_success 、pay_fail 、register 、title\n  if (!eventName) {\n    console.error(\"uni.report \\u7F3A\\u5C11 [eventName] \\u53C2\\u6570\");\n    return true;\n  }\n  if (typeof eventName !== 'string') {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u7C7B\\u578B\");\n    return true;\n  }\n  if (eventName.length > 255) {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (typeof options !== 'string' && typeof options !== 'object') {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u6216 Object \\u7C7B\\u578B\");\n    return true;\n  }\n\n  if (typeof options === 'string' && options.length > 255) {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (eventName === 'title' && typeof options !== 'string') {\n    console.error('uni.report [eventName] 参数为 title 时，[options] 参数只能为 String 类型');\n    return true;\n  }\n};\n\nvar PagesJson = __webpack_require__(/*! uni-pages?{\"type\":\"style\"} */ 7).default;\nvar statConfig = __webpack_require__(/*! uni-stat-config */ 8).default || __webpack_require__(/*! uni-stat-config */ 8);\n\nvar resultOptions = uni.getSystemInfoSync();var\n\nUtil = /*#__PURE__*/function () {\n  function Util() {_classCallCheck(this, Util);\n    this.self = '';\n    this._retry = 0;\n    this._platform = '';\n    this._query = {};\n    this._navigationBarTitle = {\n      config: '',\n      page: '',\n      report: '',\n      lt: '' };\n\n    this._operatingTime = 0;\n    this._reportingRequestData = {\n      '1': [],\n      '11': [] };\n\n    this.__prevent_triggering = false;\n\n    this.__licationHide = false;\n    this.__licationShow = false;\n    this._lastPageRoute = '';\n    this.statData = {\n      uuid: getUuid(),\n      ut: getPlatformName(),\n      mpn: getPackName(),\n      ak: statConfig.appid,\n      usv: STAT_VERSION,\n      v: getVersion(),\n      ch: getChannel(),\n      cn: '',\n      pn: '',\n      ct: '',\n      t: getTime(),\n      tt: '',\n      p: resultOptions.platform === 'android' ? 'a' : 'i',\n      brand: resultOptions.brand || '',\n      md: resultOptions.model,\n      sv: resultOptions.system.replace(/(Android|iOS)\\s/, ''),\n      mpsdk: resultOptions.SDKVersion || '',\n      mpv: resultOptions.version || '',\n      lang: resultOptions.language,\n      pr: resultOptions.pixelRatio,\n      ww: resultOptions.windowWidth,\n      wh: resultOptions.windowHeight,\n      sw: resultOptions.screenWidth,\n      sh: resultOptions.screenHeight };\n\n\n  }_createClass(Util, [{ key: \"_applicationShow\", value: function _applicationShow()\n\n    {\n      if (this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('app');\n        if (time.overtime) {\n          var options = {\n            path: this._lastPageRoute,\n            scene: this.statData.sc };\n\n          this._sendReportRequest(options);\n        }\n        this.__licationHide = false;\n      }\n    } }, { key: \"_applicationHide\", value: function _applicationHide(\n\n    self, type) {\n\n      this.__licationHide = true;\n      getLastTime();\n      var time = getResidenceTime();\n      getFirstTime();\n      var route = getPageRoute(this);\n      this._sendHideRequest({\n        urlref: route,\n        urlref_ts: time.residenceTime },\n      type);\n    } }, { key: \"_pageShow\", value: function _pageShow()\n\n    {\n      var route = getPageRoute(this);\n      var routepath = getRoute();\n      this._navigationBarTitle.config = PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].titleNView &&\n      PagesJson.pages[routepath].titleNView.titleText ||\n      PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].navigationBarTitleText || '';\n\n      if (this.__licationShow) {\n        getFirstTime();\n        this.__licationShow = false;\n        // console.log('这是 onLauch 之后执行的第一次 pageShow ，为下次记录时间做准备');\n        this._lastPageRoute = route;\n        return;\n      }\n\n      getLastTime();\n      this._lastPageRoute = route;\n      var time = getResidenceTime('page');\n      if (time.overtime) {\n        var options = {\n          path: this._lastPageRoute,\n          scene: this.statData.sc };\n\n        this._sendReportRequest(options);\n      }\n      getFirstTime();\n    } }, { key: \"_pageHide\", value: function _pageHide()\n\n    {\n      if (!this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('page');\n        this._sendPageRequest({\n          url: this._lastPageRoute,\n          urlref: this._lastPageRoute,\n          urlref_ts: time.residenceTime });\n\n        this._navigationBarTitle = {\n          config: '',\n          page: '',\n          report: '',\n          lt: '' };\n\n        return;\n      }\n    } }, { key: \"_login\", value: function _login()\n\n    {\n      this._sendEventRequest({\n        key: 'login' },\n      0);\n    } }, { key: \"_share\", value: function _share()\n\n    {\n      this._sendEventRequest({\n        key: 'share' },\n      0);\n    } }, { key: \"_payment\", value: function _payment(\n    key) {\n      this._sendEventRequest({\n        key: key },\n      0);\n    } }, { key: \"_sendReportRequest\", value: function _sendReportRequest(\n    options) {\n\n      this._navigationBarTitle.lt = '1';\n      var query = options.query && JSON.stringify(options.query) !== '{}' ? '?' + JSON.stringify(options.query) : '';\n      this.statData.lt = '1';\n      this.statData.url = options.path + query || '';\n      this.statData.t = getTime();\n      this.statData.sc = getScene(options.scene);\n      this.statData.fvts = getFirstVisitTime();\n      this.statData.lvts = getLastVisitTime();\n      this.statData.tvc = getTotalVisitCount();\n      if (getPlatformName() === 'n') {\n        this.getProperty();\n      } else {\n        this.getNetworkInfo();\n      }\n    } }, { key: \"_sendPageRequest\", value: function _sendPageRequest(\n\n    opt) {var\n\n      url =\n\n\n      opt.url,urlref = opt.urlref,urlref_ts = opt.urlref_ts;\n      this._navigationBarTitle.lt = '11';\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '11',\n        ut: this.statData.ut,\n        url: url,\n        tt: this.statData.tt,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"_sendHideRequest\", value: function _sendHideRequest(\n\n    opt, type) {var\n\n      urlref =\n\n      opt.urlref,urlref_ts = opt.urlref_ts;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '3',\n        ut: this.statData.ut,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options, type);\n    } }, { key: \"_sendEventRequest\", value: function _sendEventRequest()\n\n\n\n    {var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$key = _ref.key,key = _ref$key === void 0 ? '' : _ref$key,_ref$value = _ref.value,value = _ref$value === void 0 ? \"\" : _ref$value;\n      var route = this._lastPageRoute;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '21',\n        ut: this.statData.ut,\n        url: route,\n        ch: this.statData.ch,\n        e_n: key,\n        e_v: typeof value === 'object' ? JSON.stringify(value) : value.toString(),\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"getNetworkInfo\", value: function getNetworkInfo()\n\n    {var _this = this;\n      uni.getNetworkType({\n        success: function success(result) {\n          _this.statData.net = result.networkType;\n          _this.getLocation();\n        } });\n\n    } }, { key: \"getProperty\", value: function getProperty()\n\n    {var _this2 = this;\n      plus.runtime.getProperty(plus.runtime.appid, function (wgtinfo) {\n        _this2.statData.v = wgtinfo.version || '';\n        _this2.getNetworkInfo();\n      });\n    } }, { key: \"getLocation\", value: function getLocation()\n\n    {var _this3 = this;\n      if (statConfig.getLocation) {\n        uni.getLocation({\n          type: 'wgs84',\n          geocode: true,\n          success: function success(result) {\n            if (result.address) {\n              _this3.statData.cn = result.address.country;\n              _this3.statData.pn = result.address.province;\n              _this3.statData.ct = result.address.city;\n            }\n\n            _this3.statData.lat = result.latitude;\n            _this3.statData.lng = result.longitude;\n            _this3.request(_this3.statData);\n          } });\n\n      } else {\n        this.statData.lat = 0;\n        this.statData.lng = 0;\n        this.request(this.statData);\n      }\n    } }, { key: \"request\", value: function request(\n\n    data, type) {var _this4 = this;\n      var time = getTime();\n      var title = this._navigationBarTitle;\n      data.ttn = title.page;\n      data.ttpj = title.config;\n      data.ttc = title.report;\n\n      var requestData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        requestData = uni.getStorageSync('__UNI__STAT__DATA') || {};\n      }\n      if (!requestData[data.lt]) {\n        requestData[data.lt] = [];\n      }\n      requestData[data.lt].push(data);\n\n      if (getPlatformName() === 'n') {\n        uni.setStorageSync('__UNI__STAT__DATA', requestData);\n      }\n      if (getPageResidenceTime() < OPERATING_TIME && !type) {\n        return;\n      }\n      var uniStatData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        uniStatData = uni.getStorageSync('__UNI__STAT__DATA');\n      }\n      // 时间超过，重新获取时间戳\n      setPageResidenceTime();\n      var firstArr = [];\n      var contentArr = [];\n      var lastArr = [];var _loop = function _loop(\n\n      i) {\n        var rd = uniStatData[i];\n        rd.forEach(function (elm) {\n          var newData = getSplicing(elm);\n          if (i === 0) {\n            firstArr.push(newData);\n          } else if (i === 3) {\n            lastArr.push(newData);\n          } else {\n            contentArr.push(newData);\n          }\n        });};for (var i in uniStatData) {_loop(i);\n      }\n\n      firstArr.push.apply(firstArr, contentArr.concat(lastArr));\n      var optionsData = {\n        usv: STAT_VERSION, //统计 SDK 版本号\n        t: time, //发送请求时的时间戮\n        requests: JSON.stringify(firstArr) };\n\n\n      this._reportingRequestData = {};\n      if (getPlatformName() === 'n') {\n        uni.removeStorageSync('__UNI__STAT__DATA');\n      }\n\n      if (data.ut === 'h5') {\n        this.imageRequest(optionsData);\n        return;\n      }\n\n      if (getPlatformName() === 'n' && this.statData.p === 'a') {\n        setTimeout(function () {\n          _this4._sendRequest(optionsData);\n        }, 200);\n        return;\n      }\n      this._sendRequest(optionsData);\n    } }, { key: \"_sendRequest\", value: function _sendRequest(\n    optionsData) {var _this5 = this;\n      uni.request({\n        url: STAT_URL,\n        method: 'POST',\n        // header: {\n        //   'content-type': 'application/json' // 默认值\n        // },\n        data: optionsData,\n        success: function success() {\n          // if (process.env.NODE_ENV === 'development') {\n          //   console.log('stat request success');\n          // }\n        },\n        fail: function fail(e) {\n          if (++_this5._retry < 3) {\n            setTimeout(function () {\n              _this5._sendRequest(optionsData);\n            }, 1000);\n          }\n        } });\n\n    }\n    /**\r\n       * h5 请求\r\n       */ }, { key: \"imageRequest\", value: function imageRequest(\n    data) {\n      var image = new Image();\n      var options = getSgin(GetEncodeURIComponentOptions(data)).options;\n      image.src = STAT_H5_URL + '?' + options;\n    } }, { key: \"sendEvent\", value: function sendEvent(\n\n    key, value) {\n      // 校验 type 参数\n      if (calibration(key, value)) return;\n\n      if (key === 'title') {\n        this._navigationBarTitle.report = value;\n        return;\n      }\n      this._sendEventRequest({\n        key: key,\n        value: typeof value === 'object' ? JSON.stringify(value) : value },\n      1);\n    } }]);return Util;}();var\n\n\n\nStat = /*#__PURE__*/function (_Util) {_inherits(Stat, _Util);_createClass(Stat, null, [{ key: \"getInstance\", value: function getInstance()\n    {\n      if (!this.instance) {\n        this.instance = new Stat();\n      }\n      return this.instance;\n    } }]);\n  function Stat() {var _this6;_classCallCheck(this, Stat);\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Stat).call(this));\n    _this6.instance = null;\n    // 注册拦截器\n    if (typeof uni.addInterceptor === 'function' && \"development\" !== 'development') {\n      _this6.addInterceptorInit();\n      _this6.interceptLogin();\n      _this6.interceptShare(true);\n      _this6.interceptRequestPayment();\n    }return _this6;\n  }_createClass(Stat, [{ key: \"addInterceptorInit\", value: function addInterceptorInit()\n\n    {\n      var self = this;\n      uni.addInterceptor('setNavigationBarTitle', {\n        invoke: function invoke(args) {\n          self._navigationBarTitle.page = args.title;\n        } });\n\n    } }, { key: \"interceptLogin\", value: function interceptLogin()\n\n    {\n      var self = this;\n      uni.addInterceptor('login', {\n        complete: function complete() {\n          self._login();\n        } });\n\n    } }, { key: \"interceptShare\", value: function interceptShare(\n\n    type) {\n      var self = this;\n      if (!type) {\n        self._share();\n        return;\n      }\n      uni.addInterceptor('share', {\n        success: function success() {\n          self._share();\n        },\n        fail: function fail() {\n          self._share();\n        } });\n\n    } }, { key: \"interceptRequestPayment\", value: function interceptRequestPayment()\n\n    {\n      var self = this;\n      uni.addInterceptor('requestPayment', {\n        success: function success() {\n          self._payment('pay_success');\n        },\n        fail: function fail() {\n          self._payment('pay_fail');\n        } });\n\n    } }, { key: \"report\", value: function report(\n\n    options, self) {\n      this.self = self;\n      // if (process.env.NODE_ENV === 'development') {\n      //   console.log('report init');\n      // }\n      setPageResidenceTime();\n      this.__licationShow = true;\n      this._sendReportRequest(options, true);\n    } }, { key: \"load\", value: function load(\n\n    options, self) {\n      if (!self.$scope && !self.$mp) {\n        var page = getCurrentPages();\n        self.$scope = page[page.length - 1];\n      }\n      this.self = self;\n      this._query = options;\n    } }, { key: \"show\", value: function show(\n\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageShow(self);\n      } else {\n        this._applicationShow(self);\n      }\n    } }, { key: \"ready\", value: function ready(\n\n    self) {\n      // this.self = self;\n      // if (getPageTypes(self)) {\n      //   this._pageShow(self);\n      // }\n    } }, { key: \"hide\", value: function hide(\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageHide(self);\n      } else {\n        this._applicationHide(self, true);\n      }\n    } }, { key: \"error\", value: function error(\n    em) {\n      if (this._platform === 'devtools') {\n        if (true) {\n          console.info('当前运行环境为开发者工具，不上报数据。');\n        }\n        // return;\n      }\n      var emVal = '';\n      if (!em.message) {\n        emVal = JSON.stringify(em);\n      } else {\n        emVal = em.stack;\n      }\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '31',\n        ut: this.statData.ut,\n        ch: this.statData.ch,\n        mpsdk: this.statData.mpsdk,\n        mpv: this.statData.mpv,\n        v: this.statData.v,\n        em: emVal,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }]);return Stat;}(Util);\n\n\nvar stat = Stat.getInstance();\nvar isHide = false;\nvar lifecycle = {\n  onLaunch: function onLaunch(options) {\n    stat.report(options, this);\n  },\n  onReady: function onReady() {\n    stat.ready(this);\n  },\n  onLoad: function onLoad(options) {\n    stat.load(options, this);\n    // 重写分享，获取分享上报事件\n    if (this.$scope && this.$scope.onShareAppMessage) {\n      var oldShareAppMessage = this.$scope.onShareAppMessage;\n      this.$scope.onShareAppMessage = function (options) {\n        stat.interceptShare(false);\n        return oldShareAppMessage.call(this, options);\n      };\n    }\n  },\n  onShow: function onShow() {\n    isHide = false;\n    stat.show(this);\n  },\n  onHide: function onHide() {\n    isHide = true;\n    stat.hide(this);\n  },\n  onUnload: function onUnload() {\n    if (isHide) {\n      isHide = false;\n      return;\n    }\n    stat.hide(this);\n  },\n  onError: function onError(e) {\n    stat.error(e);\n  } };\n\n\nfunction main() {\n  if (true) {\n    uni.report = function (type, options) {};\n  } else { var Vue; }\n}\n\nmain();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),

/***/ 6:
/*!******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/package.json ***!
  \******************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, deprecated, description, devDependencies, files, gitHead, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = {\"_from\":\"@dcloudio/uni-stat@^2.0.0-alpha-24420191128001\",\"_id\":\"@dcloudio/uni-stat@2.0.0-v3-24020191018001\",\"_inBundle\":false,\"_integrity\":\"sha512-nYBm5pRrYzrj2dKMqucWSF2PwInUMnn3MLHM/ik3gnLUEKSW61rzcY1RPlUwaH7c+Snm6N+bAJzmj3GvlrlVXA==\",\"_location\":\"/@dcloudio/uni-stat\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"range\",\"registry\":true,\"raw\":\"@dcloudio/uni-stat@^2.0.0-alpha-24420191128001\",\"name\":\"@dcloudio/uni-stat\",\"escapedName\":\"@dcloudio%2funi-stat\",\"scope\":\"@dcloudio\",\"rawSpec\":\"^2.0.0-alpha-24420191128001\",\"saveSpec\":null,\"fetchSpec\":\"^2.0.0-alpha-24420191128001\"},\"_requiredBy\":[\"/\",\"/@dcloudio/vue-cli-plugin-uni\"],\"_resolved\":\"https://registry.npmjs.org/@dcloudio/uni-stat/-/uni-stat-2.0.0-v3-24020191018001.tgz\",\"_shasum\":\"6ef04326cc0b945726413eebe442ab8f47c7536c\",\"_spec\":\"@dcloudio/uni-stat@^2.0.0-alpha-24420191128001\",\"_where\":\"/Users/guoshengqiang/Documents/dcloud-plugins/alpha/uniapp-cli\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/dcloudio/uni-app/issues\"},\"bundleDependencies\":false,\"deprecated\":false,\"description\":\"\",\"devDependencies\":{\"@babel/core\":\"^7.5.5\",\"@babel/preset-env\":\"^7.5.5\",\"eslint\":\"^6.1.0\",\"rollup\":\"^1.19.3\",\"rollup-plugin-babel\":\"^4.3.3\",\"rollup-plugin-clear\":\"^2.0.7\",\"rollup-plugin-commonjs\":\"^10.0.2\",\"rollup-plugin-copy\":\"^3.1.0\",\"rollup-plugin-eslint\":\"^7.0.0\",\"rollup-plugin-json\":\"^4.0.0\",\"rollup-plugin-node-resolve\":\"^5.2.0\",\"rollup-plugin-replace\":\"^2.2.0\",\"rollup-plugin-uglify\":\"^6.0.2\"},\"files\":[\"dist\",\"package.json\",\"LICENSE\"],\"gitHead\":\"197e8df53cc9d4c3f6eb722b918ccf51672b5cfe\",\"homepage\":\"https://github.com/dcloudio/uni-app#readme\",\"license\":\"Apache-2.0\",\"main\":\"dist/index.js\",\"name\":\"@dcloudio/uni-stat\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dcloudio/uni-app.git\",\"directory\":\"packages/uni-stat\"},\"scripts\":{\"build\":\"NODE_ENV=production rollup -c rollup.config.js\",\"dev\":\"NODE_ENV=development rollup -w -c rollup.config.js\"},\"version\":\"2.0.0-v3-24020191018001\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI2LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),

/***/ 7:
/*!********************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages.json?{"type":"style"} ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"pages\": { \"pages/booth/booth\": { \"navigationBarTitleText\": \"奶位监控\", \"titleNView\": { \"buttons\": [{ \"text\": \"\", \"fontSrc\": \"/static/iconfont.ttf\", \"fontSize\": \"22px\" }] } }, \"pages/environment/environment\": { \"navigationBarTitleText\": \"环境监控\", \"titleNView\": { \"buttons\": [{ \"text\": \"\", \"fontSrc\": \"/static/iconfont.ttf\", \"fontSize\": \"22px\" }] } }, \"pages/member/member\": { \"navigationBarTitleText\": \"会员管理\", \"titleNView\": { \"buttons\": [{ \"text\": \"\", \"fontSrc\": \"/static/iconfont.ttf\", \"fontSize\": \"22px\" }] } }, \"pages/count/count\": { \"navigationBarTitleText\": \"账单管理\", \"titleNView\": { \"buttons\": [{ \"text\": \"\", \"fontSrc\": \"/static/iconfont.ttf\", \"fontSize\": \"22px\" }] } }, \"pages/other/detail\": {}, \"pages/other/memberdetail\": {} }, \"globalStyle\": { \"navigationBarTextStyle\": \"black\", \"navigationBarTitleText\": \"毕业设计-智能鲜奶贩卖机\", \"navigationBarBackgroundColor\": \"#F8F8F8\", \"backgroundColor\": \"#F8F8F8\" } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsRUFBQyxxQkFBb0IsRUFBQywwQkFBeUIsTUFBMUIsRUFBaUMsY0FBYSxFQUFDLFdBQVUsQ0FBQyxFQUFDLFFBQU8sR0FBUixFQUFZLFdBQVUsc0JBQXRCLEVBQTZDLFlBQVcsTUFBeEQsRUFBRCxDQUFYLEVBQTlDLEVBQXJCLEVBQWtKLGlDQUFnQyxFQUFDLDBCQUF5QixNQUExQixFQUFpQyxjQUFhLEVBQUMsV0FBVSxDQUFDLEVBQUMsUUFBTyxHQUFSLEVBQVksV0FBVSxzQkFBdEIsRUFBNkMsWUFBVyxNQUF4RCxFQUFELENBQVgsRUFBOUMsRUFBbEwsRUFBK1MsdUJBQXNCLEVBQUMsMEJBQXlCLE1BQTFCLEVBQWlDLGNBQWEsRUFBQyxXQUFVLENBQUMsRUFBQyxRQUFPLEdBQVIsRUFBWSxXQUFVLHNCQUF0QixFQUE2QyxZQUFXLE1BQXhELEVBQUQsQ0FBWCxFQUE5QyxFQUFyVSxFQUFrYyxxQkFBb0IsRUFBQywwQkFBeUIsTUFBMUIsRUFBaUMsY0FBYSxFQUFDLFdBQVUsQ0FBQyxFQUFDLFFBQU8sR0FBUixFQUFZLFdBQVUsc0JBQXRCLEVBQTZDLFlBQVcsTUFBeEQsRUFBRCxDQUFYLEVBQTlDLEVBQXRkLEVBQW1sQixzQkFBcUIsRUFBeG1CLEVBQTJtQiw0QkFBMkIsRUFBdG9CLEVBQVQsRUFBbXBCLGVBQWMsRUFBQywwQkFBeUIsT0FBMUIsRUFBa0MsMEJBQXlCLGNBQTNELEVBQTBFLGdDQUErQixTQUF6RyxFQUFtSCxtQkFBa0IsU0FBckksRUFBanFCLEUiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInBhZ2VzXCI6e1wicGFnZXMvYm9vdGgvYm9vdGhcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLlpbbkvY3nm5HmjqdcIixcInRpdGxlTlZpZXdcIjp7XCJidXR0b25zXCI6W3tcInRleHRcIjpcIu6YiVwiLFwiZm9udFNyY1wiOlwiL3N0YXRpYy9pY29uZm9udC50dGZcIixcImZvbnRTaXplXCI6XCIyMnB4XCJ9XX19LFwicGFnZXMvZW52aXJvbm1lbnQvZW52aXJvbm1lbnRcIjp7XCJuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0XCI6XCLnjq/looPnm5HmjqdcIixcInRpdGxlTlZpZXdcIjp7XCJidXR0b25zXCI6W3tcInRleHRcIjpcIu6YiVwiLFwiZm9udFNyY1wiOlwiL3N0YXRpYy9pY29uZm9udC50dGZcIixcImZvbnRTaXplXCI6XCIyMnB4XCJ9XX19LFwicGFnZXMvbWVtYmVyL21lbWJlclwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuS8muWRmOeuoeeQhlwiLFwidGl0bGVOVmlld1wiOntcImJ1dHRvbnNcIjpbe1widGV4dFwiOlwi7piJXCIsXCJmb250U3JjXCI6XCIvc3RhdGljL2ljb25mb250LnR0ZlwiLFwiZm9udFNpemVcIjpcIjIycHhcIn1dfX0sXCJwYWdlcy9jb3VudC9jb3VudFwiOntcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIui0puWNleeuoeeQhlwiLFwidGl0bGVOVmlld1wiOntcImJ1dHRvbnNcIjpbe1widGV4dFwiOlwi7piJXCIsXCJmb250U3JjXCI6XCIvc3RhdGljL2ljb25mb250LnR0ZlwiLFwiZm9udFNpemVcIjpcIjIycHhcIn1dfX0sXCJwYWdlcy9vdGhlci9kZXRhaWxcIjp7fSxcInBhZ2VzL290aGVyL21lbWJlcmRldGFpbFwiOnt9fSxcImdsb2JhbFN0eWxlXCI6e1wibmF2aWdhdGlvbkJhclRleHRTdHlsZVwiOlwiYmxhY2tcIixcIm5hdmlnYXRpb25CYXJUaXRsZVRleHRcIjpcIuavleS4muiuvuiuoS3mmbrog73pspzlpbbotKnljZbmnLpcIixcIm5hdmlnYXRpb25CYXJCYWNrZ3JvdW5kQ29sb3JcIjpcIiNGOEY4RjhcIixcImJhY2tncm91bmRDb2xvclwiOlwiI0Y4RjhGOFwifX0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n");

/***/ }),

/***/ 8:
/*!*******************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages.json?{"type":"stat"} ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"appid\": \"__UNI__F311A02\" };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsZ0JBQVQsRSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wiYXBwaWRcIjpcIl9fVU5JX19GMzExQTAyXCJ9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ })

}]);
});

define('app.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){

require('./common/runtime.js')
require('./common/vendor.js')
require('./common/main.js')
});
require('app.js');

__wxRoute = 'components/uni-grid-item/uni-grid-item';__wxRouteBegin = true;__wxAppCurrentFile__ = 'components/uni-grid-item/uni-grid-item.js';

define('components/uni-grid-item/uni-grid-item.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["components/uni-grid-item/uni-grid-item"], {

  /***/80:
  /*!***********************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue ***!
             \***********************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _uni_grid_item_vue_vue_type_template_id_4f7e3dce_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uni-grid-item.vue?vue&type=template&id=4f7e3dce&scoped=true& */ 81);\n/* harmony import */ var _uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uni-grid-item.vue?vue&type=script&lang=js& */ 83);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uni-grid-item.vue?vue&type=style&index=0&id=4f7e3dce&lang=scss&scoped=true& */ 85);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _uni_grid_item_vue_vue_type_template_id_4f7e3dce_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _uni_grid_item_vue_vue_type_template_id_4f7e3dce_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"4f7e3dce\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF3RztBQUN2QztBQUNMO0FBQ3NDOzs7QUFHbEc7QUFDNEg7QUFDNUgsZ0JBQWdCLDBJQUFVO0FBQzFCLEVBQUUsbUZBQU07QUFDUixFQUFFLG9HQUFNO0FBQ1IsRUFBRSw2R0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiI4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vdW5pLWdyaWQtaXRlbS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NGY3ZTNkY2Umc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vdW5pLWdyaWQtaXRlbS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL3VuaS1ncmlkLWl0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3VuaS1ncmlkLWl0ZW0udnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NGY3ZTNkY2UmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjRmN2UzZGNlXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNGY3ZTNkY2UnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNGY3ZTNkY2UnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3VuaS1ncmlkLWl0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRmN2UzZGNlJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzRmN2UzZGNlJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJYOi/mr5XkuJrorr7orqEvTWlsa0J1c2luZXNzL2NvbXBvbmVudHMvdW5pLWdyaWQtaXRlbS91bmktZ3JpZC1pdGVtLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80\n");

    /***/},

  /***/81:
  /*!******************************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue?vue&type=template&id=4f7e3dce&scoped=true& ***!
             \******************************************************************************************************************/
  /*! exports provided: render, staticRenderFns */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_template_id_4f7e3dce_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-grid-item.vue?vue&type=template&id=4f7e3dce&scoped=true& */ 82);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_template_id_4f7e3dce_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_template_id_4f7e3dce_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1ncmlkLWl0ZW0udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRmN2UzZGNlJnNjb3BlZD10cnVlJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81\n");

    /***/},

  /***/82:

             !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue?vue&type=template&id=4f7e3dce&scoped=true& ***!

  /*! exports provided: render, staticRenderFns */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjgyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///82\n");

    /***/},

  /***/83:
  /*!************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue?vue&type=script&lang=js& ***!
             \************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-grid-item.vue?vue&type=script&lang=js& */ 84);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXlzQixDQUFnQiwwdEJBQUcsRUFBQyIsImZpbGUiOiI4My5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktZ3JpZC1pdGVtLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0xMi0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHNjcmlwdC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1ncmlkLWl0ZW0udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///83\n");

    /***/},

  /***/84:
  /*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
             !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue?vue&type=script&lang=js& ***!
             \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, exports, __webpack_require__) {

    "use strict";
    eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  name: 'UniGridItem',\n  inject: ['grid'],\n  props: {\n    index: {\n      type: Number,\n      default: 0 } },\n\n\n  data: function data() {\n    return {\n      column: 0,\n      showBorder: true,\n      square: true,\n      highlight: true,\n      left: 0,\n      top: 0,\n      openNum: 2,\n      width: 0,\n      borderColor: '#e5e5e5' };\n\n  },\n  created: function created() {\n    this.column = this.grid.column;\n    this.showBorder = this.grid.showBorder;\n    this.square = this.grid.square;\n    this.highlight = this.grid.highlight;\n    this.top = this.hor === 0 ? this.grid.hor : this.hor;\n    this.left = this.ver === 0 ? this.grid.ver : this.ver;\n    this.borderColor = this.grid.borderColor;\n    this.grid.children.push(this);\n    // this.grid.init()\n    this.width = this.grid.width;\n  },\n  beforeDestroy: function beforeDestroy() {var _this = this;\n    this.grid.children.forEach(function (item, index) {\n      if (item === _this) {\n        _this.grid.children.splice(index, 1);\n      }\n    });\n  },\n  methods: {\n    _onClick: function _onClick() {\n      this.grid.change({\n        detail: {\n          index: this.index } });\n\n\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy91bmktZ3JpZC1pdGVtL3VuaS1ncmlkLWl0ZW0udnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBV0E7QUFDQSxxQkFEQTtBQUVBLGtCQUZBO0FBR0E7QUFDQTtBQUNBLGtCQURBO0FBRUEsZ0JBRkEsRUFEQSxFQUhBOzs7QUFTQSxNQVRBLGtCQVNBO0FBQ0E7QUFDQSxlQURBO0FBRUEsc0JBRkE7QUFHQSxrQkFIQTtBQUlBLHFCQUpBO0FBS0EsYUFMQTtBQU1BLFlBTkE7QUFPQSxnQkFQQTtBQVFBLGNBUkE7QUFTQSw0QkFUQTs7QUFXQSxHQXJCQTtBQXNCQSxTQXRCQSxxQkFzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBakNBO0FBa0NBLGVBbENBLDJCQWtDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FKQTtBQUtBLEdBeENBO0FBeUNBO0FBQ0EsWUFEQSxzQkFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFEQSxFQURBOzs7QUFLQSxLQVBBLEVBekNBLEUiLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XHJcblx0PHZpZXcgdi1pZj1cIndpZHRoXCIgOnN0eWxlPVwiJ3dpZHRoOicrd2lkdGgrJzsnKyhzcXVhcmU/J2hlaWdodDonK3dpZHRoOicnKVwiIGNsYXNzPVwidW5pLWdyaWQtaXRlbVwiPlxyXG5cdFx0PHZpZXcgOmNsYXNzPVwieyAndW5pLWdyaWQtaXRlbS0tYm9yZGVyJzogc2hvd0JvcmRlciwgICd1bmktZ3JpZC1pdGVtLS1ib3JkZXItdG9wJzogc2hvd0JvcmRlciAmJiBpbmRleCA8IGNvbHVtbiwgJ3VuaS1oaWdobGlnaHQnOiBoaWdobGlnaHQgfVwiXHJcblx0XHQgOnN0eWxlPVwieyAgJ2JvcmRlci1yaWdodC1jb2xvcic6IGJvcmRlckNvbG9yICwnYm9yZGVyLWJvdHRvbS1jb2xvcic6IGJvcmRlckNvbG9yICwnYm9yZGVyLXRvcC1jb2xvcic6IGJvcmRlckNvbG9yIH1cIlxyXG5cdFx0IGNsYXNzPVwidW5pLWdyaWQtaXRlbV9fYm94XCIgQGNsaWNrPVwiX29uQ2xpY2tcIj5cclxuXHRcdFx0PHNsb3QgLz5cclxuXHRcdDwvdmlldz5cclxuXHQ8L3ZpZXc+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdG5hbWU6ICdVbmlHcmlkSXRlbScsXHJcblx0XHRpbmplY3Q6IFsnZ3JpZCddLFxyXG5cdFx0cHJvcHM6IHtcclxuXHRcdFx0aW5kZXg6e1xuXHRcdFx0XHR0eXBlOiBOdW1iZXIsXG5cdFx0XHRcdGRlZmF1bHQ6IDBcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRkYXRhKCkge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdGNvbHVtbjogMCxcclxuXHRcdFx0XHRzaG93Qm9yZGVyOiB0cnVlLFxyXG5cdFx0XHRcdHNxdWFyZTogdHJ1ZSxcclxuXHRcdFx0XHRoaWdobGlnaHQ6IHRydWUsXHJcblx0XHRcdFx0bGVmdDogMCxcclxuXHRcdFx0XHR0b3A6IDAsXHJcblx0XHRcdFx0b3Blbk51bTogMixcclxuXHRcdFx0XHR3aWR0aDogMCxcclxuXHRcdFx0XHRib3JkZXJDb2xvcjogJyNlNWU1ZTUnXHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRjcmVhdGVkKCkge1xyXG5cdFx0XHR0aGlzLmNvbHVtbiA9IHRoaXMuZ3JpZC5jb2x1bW5cclxuXHRcdFx0dGhpcy5zaG93Qm9yZGVyID0gdGhpcy5ncmlkLnNob3dCb3JkZXJcclxuXHRcdFx0dGhpcy5zcXVhcmUgPSB0aGlzLmdyaWQuc3F1YXJlXHJcblx0XHRcdHRoaXMuaGlnaGxpZ2h0ID0gdGhpcy5ncmlkLmhpZ2hsaWdodFxyXG5cdFx0XHR0aGlzLnRvcCA9IHRoaXMuaG9yID09PSAwID8gdGhpcy5ncmlkLmhvciA6IHRoaXMuaG9yXHJcblx0XHRcdHRoaXMubGVmdCA9IHRoaXMudmVyID09PSAwID8gdGhpcy5ncmlkLnZlciA6IHRoaXMudmVyXHJcblx0XHRcdHRoaXMuYm9yZGVyQ29sb3IgPSB0aGlzLmdyaWQuYm9yZGVyQ29sb3JcclxuXHRcdFx0dGhpcy5ncmlkLmNoaWxkcmVuLnB1c2godGhpcylcclxuXHRcdFx0Ly8gdGhpcy5ncmlkLmluaXQoKVxyXG5cdFx0XHR0aGlzLndpZHRoID0gdGhpcy5ncmlkLndpZHRoXHJcblx0XHR9LFxyXG5cdFx0YmVmb3JlRGVzdHJveSgpIHtcclxuXHRcdFx0dGhpcy5ncmlkLmNoaWxkcmVuLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XHJcblx0XHRcdFx0aWYgKGl0ZW0gPT09IHRoaXMpIHtcclxuXHRcdFx0XHRcdHRoaXMuZ3JpZC5jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fSxcclxuXHRcdG1ldGhvZHM6IHtcclxuXHRcdFx0X29uQ2xpY2soKSB7XHJcblx0XHRcdFx0dGhpcy5ncmlkLmNoYW5nZSh7XHJcblx0XHRcdFx0XHRkZXRhaWw6IHtcclxuXHRcdFx0XHRcdFx0aW5kZXg6IHRoaXMuaW5kZXhcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBsYW5nPVwic2Nzc1wiIHNjb3BlZD5cclxuXHQudW5pLWdyaWQtaXRlbSB7XHJcblx0XHQvKiAjaWZuZGVmIEFQUC1OVlVFICovXHJcblx0XHRoZWlnaHQ6IDEwMCU7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0LyogI2VuZGlmICovXHJcblx0fVxyXG5cclxuXHQudW5pLWdyaWQtaXRlbV9fYm94IHtcclxuXHRcdC8qICNpZm5kZWYgQVBQLU5WVUUgKi9cclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdC8qICNlbmRpZiAqL1xyXG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0ZmxleDogMTtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHQvLyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0fVxyXG5cclxuXHQudW5pLWdyaWQtaXRlbS0tYm9yZGVyIHtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdGJvcmRlci1ib3R0b20tY29sb3I6ICR1bmktYm9yZGVyLWNvbG9yO1xyXG5cdFx0Ym9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XHJcblx0XHRib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7XHJcblx0XHRib3JkZXItcmlnaHQtY29sb3I6ICR1bmktYm9yZGVyLWNvbG9yO1xyXG5cdFx0Ym9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDtcclxuXHRcdGJvcmRlci1yaWdodC13aWR0aDogMXB4O1xyXG5cdH1cclxuXHJcblx0LnVuaS1ncmlkLWl0ZW0tLWJvcmRlci10b3Age1xyXG5cdFx0Ym9yZGVyLXRvcC1jb2xvcjogJHVuaS1ib3JkZXItY29sb3I7XHJcblx0XHRib3JkZXItdG9wLXN0eWxlOiBzb2xpZDtcclxuXHRcdGJvcmRlci10b3Atd2lkdGg6IDFweDtcclxuXHRcdC8qICNpZm5kZWYgQVBQLU5WVUUgKi9cclxuXHRcdGhlaWdodDogMTAwJTtcclxuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHQvKiAjZW5kaWYgKi9cclxuXHR9XHJcblxyXG5cdC51bmktaGlnaGxpZ2h0OmFjdGl2ZSB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkdW5pLWJnLWNvbG9yLWhvdmVyO1xyXG5cdH1cclxuPC9zdHlsZT5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///84\n");

    /***/},

  /***/85:
  /*!*********************************************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue?vue&type=style&index=0&id=4f7e3dce&lang=scss&scoped=true& ***!
             \*********************************************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-1!./node_modules/css-loader??ref--8-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-3!./node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-5!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-grid-item.vue?vue&type=style&index=0&id=4f7e3dce&lang=scss&scoped=true& */ 86);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_item_vue_vue_type_style_index_0_id_4f7e3dce_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXdyQyxDQUFnQiw4cENBQUcsRUFBQyIsImZpbGUiOiI4NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHNhc3MtbG9hZGVyXFxcXGxpYlxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS01IUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vdW5pLWdyaWQtaXRlbS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZjdlM2RjZSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHNhc3MtbG9hZGVyXFxcXGxpYlxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS01IUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vdW5pLWdyaWQtaXRlbS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD00ZjdlM2RjZSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///85\n");

    /***/},

  /***/86:

             !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-1!./node_modules/css-loader??ref--8-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-3!./node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-5!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-grid-item/uni-grid-item.vue?vue&type=style&index=0&id=4f7e3dce&lang=scss&scoped=true& ***!

  /*! no static exports found */
  /***/function _(module, exports, __webpack_require__) {

    eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijg2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///86\n");

    /***/} }]);


;(global["webpackJsonp"] = global["webpackJsonp"] || []).push([
'components/uni-grid-item/uni-grid-item-create-component',
{
  'components/uni-grid-item/uni-grid-item-create-component': function componentsUniGridItemUniGridItemCreateComponent(module, exports, __webpack_require__) {
    __webpack_require__('1')['createComponent'](__webpack_require__(80));
  } },

[['components/uni-grid-item/uni-grid-item-create-component']]]);
});
require('components/uni-grid-item/uni-grid-item.js');
__wxRoute = 'components/uni-grid/uni-grid';__wxRouteBegin = true;__wxAppCurrentFile__ = 'components/uni-grid/uni-grid.js';

define('components/uni-grid/uni-grid.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["components/uni-grid/uni-grid"], {

  /***/73:
  /*!*************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue ***!
             \*************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _uni_grid_vue_vue_type_template_id_218fb91c_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uni-grid.vue?vue&type=template&id=218fb91c&scoped=true& */ 74);\n/* harmony import */ var _uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uni-grid.vue?vue&type=script&lang=js& */ 76);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uni-grid.vue?vue&type=style&index=0&id=218fb91c&lang=scss&scoped=true& */ 78);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _uni_grid_vue_vue_type_template_id_218fb91c_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _uni_grid_vue_vue_type_template_id_218fb91c_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"218fb91c\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFtRztBQUN2QztBQUNMO0FBQ3NDOzs7QUFHN0Y7QUFDNEg7QUFDNUgsZ0JBQWdCLDBJQUFVO0FBQzFCLEVBQUUsOEVBQU07QUFDUixFQUFFLCtGQUFNO0FBQ1IsRUFBRSx3R0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiI3My5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vdW5pLWdyaWQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTIxOGZiOTFjJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3VuaS1ncmlkLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vdW5pLWdyaWQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3VuaS1ncmlkLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTIxOGZiOTFjJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxccnVudGltZVxcXFxjb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIyMThmYjkxY1wiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzIxOGZiOTFjJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzIxOGZiOTFjJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi91bmktZ3JpZC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MjE4ZmI5MWMmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignMjE4ZmI5MWMnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcIlg6L+avleS4muiuvuiuoS9NaWxrQnVzaW5lc3MvY29tcG9uZW50cy91bmktZ3JpZC91bmktZ3JpZC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///73\n");

    /***/},

  /***/74:
  /*!********************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue?vue&type=template&id=218fb91c&scoped=true& ***!
             \********************************************************************************************************/
  /*! exports provided: render, staticRenderFns */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_template_id_218fb91c_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-grid.vue?vue&type=template&id=218fb91c&scoped=true& */ 75);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_template_id_218fb91c_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_template_id_218fb91c_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1ncmlkLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0yMThmYjkxYyZzY29wZWQ9dHJ1ZSZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///74\n");

    /***/},

  /***/75:
  /*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
             !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue?vue&type=template&id=218fb91c&scoped=true& ***!

  /*! exports provided: render, staticRenderFns */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ijc1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///75\n");

    /***/},

  /***/76:
  /*!**************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue?vue&type=script&lang=js& ***!
             \**************************************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-grid.vue?vue&type=script&lang=js& */ 77);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW9zQixDQUFnQixxdEJBQUcsRUFBQyIsImZpbGUiOiI3Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktZ3JpZC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktZ3JpZC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///76\n");

    /***/},

  /***/77:
  /*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
             !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue?vue&type=script&lang=js& ***!
             \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, exports, __webpack_require__) {

    "use strict";
    eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n\n\n\n{\n  name: 'UniGrid',\n  props: {\n    // 每列显示个数\n    column: {\n      type: Number,\n      default: 3 },\n\n    // 是否显示边框\n    showBorder: {\n      type: Boolean,\n      default: true },\n\n    // 边框颜色\n    borderColor: {\n      type: String,\n      default: '#e5e5e5' },\n\n    // 是否正方形显示,默认为 true\n    square: {\n      type: Boolean,\n      default: true },\n\n    highlight: {\n      type: Boolean,\n      default: true } },\n\n\n  provide: function provide() {\n    return {\n      grid: this };\n\n  },\n  data: function data() {\n    var elId = \"Uni_\".concat(Math.ceil(Math.random() * 10e5).toString(36));\n    return {\n      elId: elId,\n      width: 0 };\n\n  },\n  created: function created() {\n    this.children = [];\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {var _this = this;\n      setTimeout(function () {\n        _this._getSize(function (width) {\n          _this.children.forEach(function (item, index) {\n            item.width = width;\n          });\n        });\n      }, 50);\n    },\n    change: function change(e) {\n      this.$emit('change', e);\n    },\n    _getSize: function _getSize(fn) {var _this2 = this;\n\n      uni.createSelectorQuery().\n      in(this).\n      select(\"#\".concat(this.elId)).\n      boundingClientRect().\n      exec(function (ret) {\n        _this2.width = parseInt((ret[0].width - 1) / _this2.column) + 'px';\n        fn(_this2.width);\n      });\n\n\n\n\n\n\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy91bmktZ3JpZC91bmktZ3JpZC52dWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBWUE7QUFDQSxpQkFEQTtBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQURBO0FBRUEsZ0JBRkEsRUFGQTs7QUFNQTtBQUNBO0FBQ0EsbUJBREE7QUFFQSxtQkFGQSxFQVBBOztBQVdBO0FBQ0E7QUFDQSxrQkFEQTtBQUVBLHdCQUZBLEVBWkE7O0FBZ0JBO0FBQ0E7QUFDQSxtQkFEQTtBQUVBLG1CQUZBLEVBakJBOztBQXFCQTtBQUNBLG1CQURBO0FBRUEsbUJBRkEsRUFyQkEsRUFGQTs7O0FBNEJBLFNBNUJBLHFCQTRCQTtBQUNBO0FBQ0EsZ0JBREE7O0FBR0EsR0FoQ0E7QUFpQ0EsTUFqQ0Esa0JBaUNBO0FBQ0E7QUFDQTtBQUNBLGdCQURBO0FBRUEsY0FGQTs7QUFJQSxHQXZDQTtBQXdDQSxTQXhDQSxxQkF3Q0E7QUFDQTtBQUNBLEdBMUNBO0FBMkNBLFNBM0NBLHFCQTJDQTtBQUNBO0FBQ0EsR0E3Q0E7QUE4Q0E7QUFDQSxRQURBLGtCQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUZBO0FBR0EsU0FKQTtBQUtBLE9BTkEsRUFNQSxFQU5BO0FBT0EsS0FUQTtBQVVBLFVBVkEsa0JBVUEsQ0FWQSxFQVVBO0FBQ0E7QUFDQSxLQVpBO0FBYUEsWUFiQSxvQkFhQSxFQWJBLEVBYUE7O0FBRUE7QUFDQSxRQURBLENBQ0EsSUFEQTtBQUVBLFlBRkEsWUFFQSxTQUZBO0FBR0Esd0JBSEE7QUFJQSxVQUpBLENBSUE7QUFDQTtBQUNBO0FBQ0EsT0FQQTs7Ozs7Ozs7QUFlQSxLQTlCQSxFQTlDQSxFIiwiZmlsZSI6Ijc3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxyXG5cdDx2aWV3IGNsYXNzPVwidW5pLWdyaWQtd3JhcFwiPlxyXG5cdFx0PHZpZXcgOmlkPVwiZWxJZFwiIHJlZj1cInVuaS1ncmlkXCIgY2xhc3M9XCJ1bmktZ3JpZFwiIDpjbGFzcz1cInsgJ3VuaS1ncmlkLS1ib3JkZXInOiBzaG93Qm9yZGVyIH1cIiA6c3R5bGU9XCJ7ICdib3JkZXItbGVmdC1zdHlsZSc6J3NvbGlkJywnYm9yZGVyLWxlZnQtY29sb3InOmJvcmRlckNvbG9yLCAnYm9yZGVyLWxlZnQtd2lkdGgnOnNob3dCb3JkZXI/JzFweCc6MCB9XCI+XHJcblx0XHRcdDxzbG90IC8+XHJcblx0XHQ8L3ZpZXc+XHJcblx0PC92aWV3PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuXHQvLyAjaWZkZWYgQVBQLU5WVUVcclxuXHRjb25zdCBkb20gPSB1bmkucmVxdWlyZU5hdGl2ZVBsdWdpbignZG9tJyk7XG5cdC8vICNlbmRpZlxyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdG5hbWU6ICdVbmlHcmlkJyxcclxuXHRcdHByb3BzOiB7XHJcblx0XHRcdC8vIOavj+WIl+aYvuekuuS4quaVsFxyXG5cdFx0XHRjb2x1bW46IHtcclxuXHRcdFx0XHR0eXBlOiBOdW1iZXIsXHJcblx0XHRcdFx0ZGVmYXVsdDogM1xyXG5cdFx0XHR9LFxyXG5cdFx0XHQvLyDmmK/lkKbmmL7npLrovrnmoYZcclxuXHRcdFx0c2hvd0JvcmRlcjoge1xyXG5cdFx0XHRcdHR5cGU6IEJvb2xlYW4sXHJcblx0XHRcdFx0ZGVmYXVsdDogdHJ1ZVxyXG5cdFx0XHR9LFxyXG5cdFx0XHQvLyDovrnmoYbpopzoibJcclxuXHRcdFx0Ym9yZGVyQ29sb3I6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJyNlNWU1ZTUnXHJcblx0XHRcdH0sXHJcblx0XHRcdC8vIOaYr+WQpuato+aWueW9ouaYvuekuizpu5jorqTkuLogdHJ1ZVxyXG5cdFx0XHRzcXVhcmU6IHtcclxuXHRcdFx0XHR0eXBlOiBCb29sZWFuLFxyXG5cdFx0XHRcdGRlZmF1bHQ6IHRydWVcclxuXHRcdFx0fSxcclxuXHRcdFx0aGlnaGxpZ2h0OiB7XHJcblx0XHRcdFx0dHlwZTogQm9vbGVhbixcclxuXHRcdFx0XHRkZWZhdWx0OiB0cnVlXHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRwcm92aWRlKCkge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdGdyaWQ6IHRoaXNcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGRhdGEoKSB7XHJcblx0XHRcdGNvbnN0IGVsSWQgPSBgVW5pXyR7TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMGU1KS50b1N0cmluZygzNil9YFxyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdGVsSWQsXHJcblx0XHRcdFx0d2lkdGg6IDBcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGNyZWF0ZWQoKSB7XHJcblx0XHRcdHRoaXMuY2hpbGRyZW4gPSBbXVxyXG5cdFx0fSxcclxuXHRcdG1vdW50ZWQoKSB7XHJcblx0XHRcdHRoaXMuaW5pdCgpXHJcblx0XHR9LFxyXG5cdFx0bWV0aG9kczoge1xyXG5cdFx0XHRpbml0KCkge1xyXG5cdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0dGhpcy5fZ2V0U2l6ZSgod2lkdGgpID0+IHtcclxuXHRcdFx0XHRcdFx0dGhpcy5jaGlsZHJlbi5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdGl0ZW0ud2lkdGggPSB3aWR0aFxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9LCA1MClcclxuXHRcdFx0fSxcclxuXHRcdFx0Y2hhbmdlKGUpIHtcclxuXHRcdFx0XHR0aGlzLiRlbWl0KCdjaGFuZ2UnLCBlKVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRfZ2V0U2l6ZShmbikge1xyXG5cdFx0XHRcdC8vICNpZm5kZWYgQVBQLU5WVUVcclxuXHRcdFx0XHR1bmkuY3JlYXRlU2VsZWN0b3JRdWVyeSgpXHJcblx0XHRcdFx0XHQuaW4odGhpcylcclxuXHRcdFx0XHRcdC5zZWxlY3QoYCMke3RoaXMuZWxJZH1gKVxyXG5cdFx0XHRcdFx0LmJvdW5kaW5nQ2xpZW50UmVjdCgpXHJcblx0XHRcdFx0XHQuZXhlYyhyZXQgPT4ge1xyXG5cdFx0XHRcdFx0XHR0aGlzLndpZHRoID0gcGFyc2VJbnQoKHJldFswXS53aWR0aC0xKSAvIHRoaXMuY29sdW1uKSArICdweCdcclxuXHRcdFx0XHRcdFx0Zm4odGhpcy53aWR0aClcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0Ly8gI2VuZGlmXHJcblx0XHRcdFx0Ly8gI2lmZGVmIEFQUC1OVlVFXHJcblx0XHRcdFx0ZG9tLmdldENvbXBvbmVudFJlY3QodGhpcy4kcmVmc1sndW5pLWdyaWQnXSwgKHJldCkgPT4ge1xyXG5cdFx0XHRcdFx0dGhpcy53aWR0aCA9IHBhcnNlSW50KChyZXQuc2l6ZS53aWR0aC0xKSAvIHRoaXMuY29sdW1uKSAgKyAncHgnXHJcblx0XHRcdFx0XHRmbih0aGlzLndpZHRoKVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdFx0Ly8gI2VuZGlmXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxyXG5cdC51bmktZ3JpZC13cmFwIHtcclxuXHRcdC8qICNpZm5kZWYgQVBQLU5WVUUgKi9cclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHQvKiAjZW5kaWYgKi9cclxuXHRcdGZsZXg6IDE7XHJcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdFx0LyogI2lmZGVmIEg1ICovXHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdC8qICNlbmRpZiAqL1xyXG5cdH1cclxuXHJcblx0LnVuaS1ncmlkIHtcclxuXHRcdC8qICNpZm5kZWYgQVBQLU5WVUUgKi9cclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHQvKiAjZW5kaWYgKi9cclxuXHRcdC8vIGZsZXg6IDE7XHJcblx0XHRmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cdFx0ZmxleC13cmFwOiB3cmFwO1xyXG5cdH1cclxuXHJcblx0LnVuaS1ncmlkLS1ib3JkZXIge1xyXG5cdFx0Ym9yZGVyLWxlZnQtY29sb3I6ICR1bmktYm9yZGVyLWNvbG9yO1xyXG5cdFx0Ym9yZGVyLWxlZnQtc3R5bGU6IHNvbGlkO1xyXG5cdFx0Ym9yZGVyLWxlZnQtd2lkdGg6IDFweDtcclxuXHR9XHJcbjwvc3R5bGU+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///77\n");

    /***/},

  /***/78:
  /*!***********************************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue?vue&type=style&index=0&id=218fb91c&lang=scss&scoped=true& ***!
             \***********************************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-1!./node_modules/css-loader??ref--8-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-3!./node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-5!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-grid.vue?vue&type=style&index=0&id=218fb91c&lang=scss&scoped=true& */ 79);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_grid_vue_vue_type_style_index_0_id_218fb91c_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW1yQyxDQUFnQix5cENBQUcsRUFBQyIsImZpbGUiOiI3OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHNhc3MtbG9hZGVyXFxcXGxpYlxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS01IUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vdW5pLWdyaWQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MjE4ZmI5MWMmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS0wIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxjc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxzYXNzLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtNSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1ncmlkLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTIxOGZiOTFjJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///78\n");

    /***/},

  /***/79:

             !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-1!./node_modules/css-loader??ref--8-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-3!./node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-5!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-grid/uni-grid.vue?vue&type=style&index=0&id=218fb91c&lang=scss&scoped=true& ***!

  /*! no static exports found */
  /***/function _(module, exports, __webpack_require__) {

    eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijc5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///79\n");

    /***/} }]);


;(global["webpackJsonp"] = global["webpackJsonp"] || []).push([
'components/uni-grid/uni-grid-create-component',
{
  'components/uni-grid/uni-grid-create-component': function componentsUniGridUniGridCreateComponent(module, exports, __webpack_require__) {
    __webpack_require__('1')['createComponent'](__webpack_require__(73));
  } },

[['components/uni-grid/uni-grid-create-component']]]);
});
require('components/uni-grid/uni-grid.js');
__wxRoute = 'components/uni-section/uni-section';__wxRouteBegin = true;__wxAppCurrentFile__ = 'components/uni-section/uni-section.js';

define('components/uni-section/uni-section.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
"use strict";(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["components/uni-section/uni-section"], {

  /***/66:
  /*!*******************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue ***!
             \*******************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _uni_section_vue_vue_type_template_id_09f3a024_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uni-section.vue?vue&type=template&id=09f3a024&scoped=true& */ 67);\n/* harmony import */ var _uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uni-section.vue?vue&type=script&lang=js& */ 69);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uni-section.vue?vue&type=style&index=0&id=09f3a024&lang=scss&scoped=true& */ 71);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _uni_section_vue_vue_type_template_id_09f3a024_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _uni_section_vue_vue_type_template_id_09f3a024_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"09f3a024\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzRztBQUN2QztBQUNMO0FBQ3NDOzs7QUFHaEc7QUFDNEg7QUFDNUgsZ0JBQWdCLDBJQUFVO0FBQzFCLEVBQUUsaUZBQU07QUFDUixFQUFFLGtHQUFNO0FBQ1IsRUFBRSwyR0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiI2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vdW5pLXNlY3Rpb24udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA5ZjNhMDI0JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3VuaS1zZWN0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vdW5pLXNlY3Rpb24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3VuaS1zZWN0aW9uLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTA5ZjNhMDI0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxccnVudGltZVxcXFxjb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIwOWYzYTAyNFwiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzA5ZjNhMDI0JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzA5ZjNhMDI0JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi91bmktc2VjdGlvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MDlmM2EwMjQmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignMDlmM2EwMjQnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcIlg6L+avleS4muiuvuiuoS9NaWxrQnVzaW5lc3MvY29tcG9uZW50cy91bmktc2VjdGlvbi91bmktc2VjdGlvbi52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///66\n");

    /***/},

  /***/67:
  /*!**************************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue?vue&type=template&id=09f3a024&scoped=true& ***!
             \**************************************************************************************************************/
  /*! exports provided: render, staticRenderFns */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_template_id_09f3a024_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-section.vue?vue&type=template&id=09f3a024&scoped=true& */ 68);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_template_id_09f3a024_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_template_id_09f3a024_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1zZWN0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wOWYzYTAyNCZzY29wZWQ9dHJ1ZSZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n");

    /***/},

  /***/68:

             !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue?vue&type=template&id=09f3a024&scoped=true& ***!

  /*! exports provided: render, staticRenderFns */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjY4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///68\n");

    /***/},

  /***/69:
  /*!********************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue?vue&type=script&lang=js& ***!
             \********************************************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-section.vue?vue&type=script&lang=js& */ 70);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVzQixDQUFnQix3dEJBQUcsRUFBQyIsImZpbGUiOiI2OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktc2VjdGlvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktc2VjdGlvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///69\n");

    /***/},

  /***/70:
  /*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
             !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue?vue&type=script&lang=js& ***!
             \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, exports, __webpack_require__) {

    "use strict";
    eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  name: 'UniTitle',\n  props: {\n    type: {\n      type: String,\n      default: '' },\n\n    title: {\n      type: String,\n      default: '' },\n\n    subTitle: {\n      type: String,\n      default: '' } },\n\n\n  data: function data() {\n    return {};\n  },\n  watch: {\n    title: function title(newVal) {\n      if (uni.report && newVal !== '') {\n        uni.report('title', newVal);\n      }\n    } },\n\n  methods: {\n    onClick: function onClick() {\n      this.$emit('click');\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy91bmktc2VjdGlvbi91bmktc2VjdGlvbi52dWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFjQTtBQUNBLGtCQURBO0FBRUE7QUFDQTtBQUNBLGtCQURBO0FBRUEsaUJBRkEsRUFEQTs7QUFLQTtBQUNBLGtCQURBO0FBRUEsaUJBRkEsRUFMQTs7QUFTQTtBQUNBLGtCQURBO0FBRUEsaUJBRkEsRUFUQSxFQUZBOzs7QUFnQkEsTUFoQkEsa0JBZ0JBO0FBQ0E7QUFDQSxHQWxCQTtBQW1CQTtBQUNBLFNBREEsaUJBQ0EsTUFEQSxFQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FMQSxFQW5CQTs7QUEwQkE7QUFDQSxXQURBLHFCQUNBO0FBQ0E7QUFDQSxLQUhBLEVBMUJBLEUiLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XHJcblx0PHZpZXcgY2xhc3M9XCJ1bmktc2VjdGlvblwiPlxyXG5cdFx0PHZpZXcgdi1pZj1cInR5cGVcIiBjbGFzcz1cInVuaS1zZWN0aW9uX19oZWFkXCI+XHJcblx0XHRcdDx2aWV3IDpjbGFzcz1cInR5cGVcIiBjbGFzcz1cInVuaS1zZWN0aW9uX19oZWFkLXRhZ1wiIC8+XHJcblx0XHQ8L3ZpZXc+XHJcblx0XHQ8dmlldyBjbGFzcz1cInVuaS1zZWN0aW9uX19jb250ZW50XCI+XHJcblx0XHRcdDx0ZXh0IDpjbGFzcz1cInsnZGlzdHJhY3Rpb24nOiFzdWJUaXRsZX1cIiBjbGFzcz1cInVuaS1zZWN0aW9uX19jb250ZW50LXRpdGxlXCI+e3sgdGl0bGUgfX08L3RleHQ+XHJcblx0XHRcdDx0ZXh0IHYtaWY9XCJzdWJUaXRsZVwiIGNsYXNzPVwidW5pLXNlY3Rpb25fX2NvbnRlbnQtc3ViXCI+e3sgc3ViVGl0bGUgfX08L3RleHQ+XHJcblx0XHQ8L3ZpZXc+XHJcblx0XHQ8c2xvdCAvPlxyXG5cdDwvdmlldz5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcblx0ZXhwb3J0IGRlZmF1bHQge1xyXG5cdFx0bmFtZTogJ1VuaVRpdGxlJyxcclxuXHRcdHByb3BzOiB7XHJcblx0XHRcdHR5cGU6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJydcclxuXHRcdFx0fSxcclxuXHRcdFx0dGl0bGU6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJydcclxuXHRcdFx0fSxcclxuXHRcdFx0c3ViVGl0bGU6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJydcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGRhdGEoKSB7XHJcblx0XHRcdHJldHVybiB7fVxyXG5cdFx0fSxcclxuXHRcdHdhdGNoOiB7XHJcblx0XHRcdHRpdGxlKG5ld1ZhbCkge1xyXG5cdFx0XHRcdGlmICh1bmkucmVwb3J0ICYmIG5ld1ZhbCAhPT0gJycpIHtcclxuXHRcdFx0XHRcdHVuaS5yZXBvcnQoJ3RpdGxlJywgbmV3VmFsKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdG1ldGhvZHM6IHtcclxuXHRcdFx0b25DbGljaygpIHtcclxuXHRcdFx0XHR0aGlzLiRlbWl0KCdjbGljaycpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XHJcblx0LnVuaS1zZWN0aW9uIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHQvKiAjaWZuZGVmIEFQUC1OVlVFICovXHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0LyogI2VuZGlmICovXHJcblx0XHRtYXJnaW4tdG9wOiAxMHB4O1xyXG5cdFx0ZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRwYWRkaW5nOiAwIDEwcHg7XHJcblx0XHRoZWlnaHQ6IDUwcHg7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkdW5pLWJnLWNvbG9yLWdyZXk7XG5cdFx0LyogI2lmZGVmIEFQUC1OVlVFICovXG5cdFx0Ym9yZGVyLWJvdHRvbS1jb2xvcjogJHVuaS1ib3JkZXItY29sb3I7XG5cdFx0Ym9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG5cdFx0Ym9yZGVyLWJvdHRvbS13aWR0aDogMC41cHg7XG5cdFx0LyogI2VuZGlmICovXHJcblx0XHRmb250LXdlaWdodDogbm9ybWFsO1xyXG5cdH1cblx0LyogI2lmbmRlZiBBUFAtTlZVRSAqL1xuXHQudW5pLXNlY3Rpb246YWZ0ZXIge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDA7XG5cdFx0cmlnaHQ6IDA7XG5cdFx0bGVmdDogMDtcblx0XHRoZWlnaHQ6IDFweDtcblx0XHRjb250ZW50OiAnJztcblx0XHQtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVZKC41KTtcblx0XHR0cmFuc2Zvcm06IHNjYWxlWSguNSk7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJHVuaS1ib3JkZXItY29sb3I7XG5cdH1cdFx0XG5cdC8qICNlbmRpZiAqL1xyXG5cclxuXHQudW5pLXNlY3Rpb25fX2hlYWQge1xyXG5cdFx0ZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdG1hcmdpbi1yaWdodDogMTBweDtcclxuXHR9XHJcblxyXG5cdC5saW5lIHtcclxuXHRcdGhlaWdodDogMTVweDtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICR1bmktdGV4dC1jb2xvci1kaXNhYmxlO1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogNXB4O1xyXG5cdFx0d2lkdGg6IDNweDtcclxuXHR9XHJcblxyXG5cdC5jaXJjbGUge1xyXG5cdFx0d2lkdGg6IDhweDtcclxuXHRcdGhlaWdodDogOHB4O1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDUwcHg7XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1MHB4O1xyXG5cdFx0Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNTBweDtcclxuXHRcdGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA1MHB4O1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJHVuaS10ZXh0LWNvbG9yLWRpc2FibGU7XHJcblx0fVxyXG5cclxuXHQudW5pLXNlY3Rpb25fX2NvbnRlbnQge1xyXG5cdFx0ZmxleDogMTtcclxuXHRcdGNvbG9yOiAkdW5pLXRleHQtY29sb3I7XHJcblx0fVxyXG5cclxuXHQudW5pLXNlY3Rpb25fX2NvbnRlbnQtdGl0bGUge1xyXG5cdFx0Zm9udC1zaXplOiAkdW5pLWZvbnQtc2l6ZS1iYXNlO1xyXG5cdFx0Y29sb3I6ICR1bmktdGV4dC1jb2xvcjtcclxuXHR9XHJcblxyXG5cdC5kaXN0cmFjdGlvbiB7XHJcblx0XHRmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHR9XHJcblxyXG5cdC51bmktc2VjdGlvbl9fY29udGVudC1zdWIge1xyXG5cdFx0Zm9udC1zaXplOiAkdW5pLWZvbnQtc2l6ZS1zbTtcclxuXHRcdGNvbG9yOiAkdW5pLXRleHQtY29sb3ItZ3JleTtcclxuXHR9XHJcbjwvc3R5bGU+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///70\n");

    /***/},

  /***/71:
  /*!*****************************************************************************************************************************!*\
             !*** X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue?vue&type=style&index=0&id=09f3a024&lang=scss&scoped=true& ***!
             \*****************************************************************************************************************************/
  /*! no static exports found */
  /***/function _(module, __webpack_exports__, __webpack_require__) {

    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-1!./node_modules/css-loader??ref--8-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-3!./node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-5!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-section.vue?vue&type=style&index=0&id=09f3a024&lang=scss&scoped=true& */ 72);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_8_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_8_oneOf_1_5_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_section_vue_vue_type_style_index_0_id_09f3a024_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNyQyxDQUFnQiw0cENBQUcsRUFBQyIsImZpbGUiOiI3MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHNhc3MtbG9hZGVyXFxcXGxpYlxcXFxsb2FkZXIuanM/P3JlZi0tOC1vbmVPZi0xLTQhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS01IUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vdW5pLXNlY3Rpb24udnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MDlmM2EwMjQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS0wIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxjc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtMyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxzYXNzLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyLmpzPz9yZWYtLTgtb25lT2YtMS00IUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS04LW9uZU9mLTEtNSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1zZWN0aW9uLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTA5ZjNhMDI0Jmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///71\n");

    /***/},

  /***/72:

             !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-1!./node_modules/css-loader??ref--8-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-3!./node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--8-oneOf-1-5!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/components/uni-section/uni-section.vue?vue&type=style&index=0&id=09f3a024&lang=scss&scoped=true& ***!

  /*! no static exports found */
  /***/function _(module, exports, __webpack_require__) {

    eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjcyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n");

    /***/} }]);


;(global["webpackJsonp"] = global["webpackJsonp"] || []).push([
'components/uni-section/uni-section-create-component',
{
  'components/uni-section/uni-section-create-component': function componentsUniSectionUniSectionCreateComponent(module, exports, __webpack_require__) {
    __webpack_require__('1')['createComponent'](__webpack_require__(66));
  } },

[['components/uni-section/uni-section-create-component']]]);
});
require('components/uni-section/uni-section.js');

__wxRoute = 'pages/booth/booth';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/booth/booth.js';

define('pages/booth/booth.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/booth/booth"],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */
/*!*********************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js?{"page":"pages%2Fbooth%2Fbooth"} ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _booth = _interopRequireDefault(__webpack_require__(/*! ./pages/booth/booth.vue */ 17));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_booth.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUEsd0NBQW1COztBQUVuQjtBQUNBLDRGO0FBQ0FBLFVBQVUsQ0FBQ0MsY0FBRCxDQUFWLEMiLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7aW1wb3J0ICdAZGNsb3VkaW8vdW5pLXN0YXQnO1xuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZScgICAgICAgICAgICBcbmltcG9ydCBQYWdlIGZyb20gJy4vcGFnZXMvYm9vdGgvYm9vdGgudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/*!**************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/booth/booth.vue ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _booth_vue_vue_type_template_id_341bdc66___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./booth.vue?vue&type=template&id=341bdc66& */ 18);\n/* harmony import */ var _booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./booth.vue?vue&type=script&lang=js& */ 20);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./booth.vue?vue&type=style&index=0&lang=css& */ 22);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _booth_vue_vue_type_template_id_341bdc66___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _booth_vue_vue_type_template_id_341bdc66___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/pages/booth/booth.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvRjtBQUMzQjtBQUNMO0FBQ2E7OztBQUdqRTtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSwyRUFBTTtBQUNSLEVBQUUsZ0ZBQU07QUFDUixFQUFFLHlGQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9ib290aC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MzQxYmRjNjYmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vYm9vdGgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9ib290aC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vYm9vdGgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnMzQxYmRjNjYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnMzQxYmRjNjYnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2Jvb3RoLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zNDFiZGM2NiZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCczNDFiZGM2NicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiWDov5q+V5Lia6K6+6K6hL01pbGtCdXNpbmVzcy9wYWdlcy9ib290aC9ib290aC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/*!*********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/booth/booth.vue?vue&type=template&id=341bdc66& ***!
  \*********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_template_id_341bdc66___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./booth.vue?vue&type=template&id=341bdc66& */ 19);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_template_id_341bdc66___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_template_id_341bdc66___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL2Jvb3RoLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zNDFiZGM2NiZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */

  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/booth/booth.vue?vue&type=template&id=341bdc66& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/*!***************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/booth/booth.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./booth.vue?vue&type=script&lang=js& */ 21);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWlzQixDQUFnQixrdEJBQUcsRUFBQyIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9ib290aC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9ib290aC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/booth/booth.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var uniSection = function uniSection() {return __webpack_require__.e(/*! import() | components/uni-section/uni-section */ \"components/uni-section/uni-section\").then(__webpack_require__.bind(null, /*! @/components/uni-section/uni-section.vue */ 66));};var uniGrid = function uniGrid() {return __webpack_require__.e(/*! import() | components/uni-grid/uni-grid */ \"components/uni-grid/uni-grid\").then(__webpack_require__.bind(null, /*! @/components/uni-grid/uni-grid.vue */ 73));};var uniGridItem = function uniGridItem() {return __webpack_require__.e(/*! import() | components/uni-grid-item/uni-grid-item */ \"components/uni-grid-item/uni-grid-item\").then(__webpack_require__.bind(null, /*! @/components/uni-grid-item/uni-grid-item.vue */ 80));};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _self;var _default =\n{\n  components: {\n    uniSection: uniSection,\n    uniGrid: uniGrid,\n    uniGridItem: uniGridItem },\n\n  data: function data() {\n    return {\n      list: [],\n      column: 4 };\n\n  },\n  onLoad: function onLoad(e) {\n    _self = this;\n  },\n  onReady: function onReady() {\n    this.getServerData();\n  },\n  onNavigationBarButtonTap: function onNavigationBarButtonTap(e) {\n    //刷新\n    this.getServerData();\n  },\n  methods: {\n    getServerData: function getServerData() {\n      uni.showLoading({\n        title: \"正在加载数据...\" });\n\n      var headers = {};\n      headers['content-type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      uni.request({\n        url: this.$url + '/php/booth.php', //此处使用了全局变量拼接url（main.js文件中），关于全局变量官方问答里有\n        method: 'POST', //get或post\n        header: headers,\n        data: {\n          id: '1' },\n\n        success: function success(res) {\n          var data = res.data;\n          if (data.ec === 0) {\n            _self.list = data.user;\n            //alert(Math.sqrt(_self.list.length));\n            for (var i = 0; i < _self.list.length; i++) {\n              if (_self.list[i].booth_status == '1') {_self.list[i].booth_color = '#5fc248';_self.list[i].booth_status = \"出售中\";} else\n              if (_self.list[i].booth_status == '2') {_self.list[i].booth_color = '#766186';_self.list[i].booth_status = '空箱';} else\n              if (_self.list[i].booth_status == '3') {_self.list[i].booth_color = '#57b7df';_self.list[i].booth_status = '空瓶';} else\n              if (_self.list[i].booth_status == '4') {_self.list[i].booth_color = '#ff4b4b';_self.list[i].booth_status = '过期';} else\n              {_self.list[i].booth_color = '#f8e4e5';_self.list.booth_status = '数据错误';}\n              //1正常#f8e4e5\n              //2售出#f3c5ab\n              //3空瓶#ace0eb\n              //4过期#f3f5c3\n            }\n            _self.column = String(Math.sqrt(_self.list.length));\n          } else {\n            uni.showLoading({\n              title: data.msg,\n              mask: false });\n\n          }\n        },\n        fail: function fail() {\n          uni.showToast({\n            title: '网络错误' });\n\n        },\n        complete: function complete() {\n          uni.hideLoading();\n        } });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvYm9vdGgvYm9vdGgudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQSxVO0FBQ0E7QUFDQTtBQUNBLDBCQURBO0FBRUEsb0JBRkE7QUFHQSw0QkFIQSxFQURBOztBQU1BLE1BTkEsa0JBTUE7QUFDQTtBQUNBLGNBREE7QUFFQSxlQUZBOztBQUlBLEdBWEE7QUFZQSxRQVpBLGtCQVlBLENBWkEsRUFZQTtBQUNBO0FBQ0EsR0FkQTtBQWVBLFNBZkEscUJBZUE7QUFDQTtBQUNBLEdBakJBO0FBa0JBLDBCQWxCQSxvQ0FrQkEsQ0FsQkEsRUFrQkE7QUFDQTtBQUNBO0FBQ0EsR0FyQkE7QUFzQkE7QUFDQSxpQkFEQSwyQkFDQTtBQUNBO0FBQ0EsMEJBREE7O0FBR0E7QUFDQTtBQUNBO0FBQ0EseUNBREEsRUFDQTtBQUNBLHNCQUZBLEVBRUE7QUFDQSx1QkFIQTtBQUlBO0FBQ0EsaUJBREEsRUFKQTs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FmQSxNQWVBO0FBQ0E7QUFDQSw2QkFEQTtBQUVBLHlCQUZBOztBQUlBO0FBQ0EsU0E5QkE7QUErQkE7QUFDQTtBQUNBLHlCQURBOztBQUdBLFNBbkNBO0FBb0NBLGdCQXBDQSxzQkFvQ0E7QUFDQTtBQUNBLFNBdENBOztBQXdDQSxLQS9DQSxFQXRCQSxFIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiPCEtLSBcclxuMeato+W4uCNmOGU0ZTVcclxuMuWUruWHuiNmM2M1YWJcclxuM+epuueTtiNhY2UwZWJcclxuNOi/h+acnyNmM2Y1YzNcclxuIC0tPlxyXG48dGVtcGxhdGU+XHJcblx0PHZpZXcgY2xhc3M9XCJ3YXJwXCI+XHRcclxuXHRcdDx2aWV3IGNsYXNzPVwiZXhhbXBsZS1ib2R5XCI+XHJcblx0XHRcdDx1bmktZ3JpZCA6Y29sdW1uPVwiY29sdW1uXCIgOnNob3ctYm9yZGVyPVwiZmFsc2VcIiA6aGlnaGxpZ2h0PVwidHJ1ZVwiPlxyXG5cdFx0XHRcdDx1bmktZ3JpZC1pdGVtIHYtZm9yPVwiKGl0ZW0sIGluZGV4KSBpbiBsaXN0XCIgOmluZGV4PVwiaW5kZXhcIiA6a2V5PVwiaW5kZXhcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwiZ3JpZC1pdGVtLWJveFwiPlxyXG5cdFx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cImdyaWRfdW5pdFwiIDpzdHlsZT1cInsnYmFja2dyb3VuZC1jb2xvcic6aXRlbS5ib290aF9jb2xvcn1cIj5cclxuXHRcdFx0XHRcdFx0XHQ8dmlldyBjbGFzcz0nZ3JpZF91bml0X2lkJz5JRO+8mnt7aXRlbS5ib290aF9pZH19PC92aWV3PlxyXG5cdFx0XHRcdFx0XHRcdDx2aWV3IGNsYXNzPSdncmlkX3VuaXRfc3RhdHVzJz57e2l0ZW0uYm9vdGhfc3RhdHVzfX08L3ZpZXc+XHJcblx0XHRcdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHQ8L3VuaS1ncmlkLWl0ZW0+XHJcblx0XHRcdDwvdW5pLWdyaWQ+XHJcblx0XHQ8L3ZpZXc+XHJcblx0PC92aWV3PlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuXHRpbXBvcnQgdW5pU2VjdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvdW5pLXNlY3Rpb24vdW5pLXNlY3Rpb24udnVlJ1xyXG5cdGltcG9ydCB1bmlHcmlkIGZyb20gJ0AvY29tcG9uZW50cy91bmktZ3JpZC91bmktZ3JpZC52dWUnXHJcblx0aW1wb3J0IHVuaUdyaWRJdGVtIGZyb20gJ0AvY29tcG9uZW50cy91bmktZ3JpZC1pdGVtL3VuaS1ncmlkLWl0ZW0udnVlJ1xyXG5cdHZhciBfc2VsZjtcclxuXHRleHBvcnQgZGVmYXVsdCB7XHJcblx0XHRjb21wb25lbnRzOiB7XHJcblx0XHRcdHVuaVNlY3Rpb24sXHJcblx0XHRcdHVuaUdyaWQsXHJcblx0XHRcdHVuaUdyaWRJdGVtXHJcblx0XHR9LFxyXG5cdFx0ZGF0YSgpIHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRsaXN0OiBbXSxcclxuXHRcdFx0XHRjb2x1bW46NFxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0b25Mb2FkKGUpIHtcclxuXHRcdFx0X3NlbGYgPSB0aGlzO1xyXG5cdFx0fSxcclxuXHRcdG9uUmVhZHkoKSB7XHJcblx0XHRcdHRoaXMuZ2V0U2VydmVyRGF0YSgpO1xyXG5cdFx0fSxcclxuXHRcdG9uTmF2aWdhdGlvbkJhckJ1dHRvblRhcChlKSB7XHJcblx0XHRcdC8v5Yi35pawXHJcblx0XHRcdHRoaXMuZ2V0U2VydmVyRGF0YSgpO1xyXG5cdFx0fSxcclxuXHRcdG1ldGhvZHM6IHtcclxuXHRcdFx0Z2V0U2VydmVyRGF0YSgpIHtcclxuXHRcdFx0XHR1bmkuc2hvd0xvYWRpbmcoe1xyXG5cdFx0XHRcdFx0dGl0bGU6IFwi5q2j5Zyo5Yqg6L295pWw5o2uLi4uXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRsZXQgaGVhZGVycyA9IHt9O1xyXG5cdFx0XHRcdGhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCc7XHJcblx0XHRcdFx0dW5pLnJlcXVlc3Qoe1xyXG5cdFx0XHRcdFx0dXJsOiB0aGlzLiR1cmwgKyAnL3BocC9ib290aC5waHAnLC8v5q2k5aSE5L2/55So5LqG5YWo5bGA5Y+Y6YeP5ou85o6ldXJs77yIbWFpbi5qc+aWh+S7tuS4re+8ie+8jOWFs+S6juWFqOWxgOWPmOmHj+WumOaWuemXruetlOmHjOaciVxyXG5cdFx0XHRcdFx0bWV0aG9kOiAnUE9TVCcsLy9nZXTmiJZwb3N0XHJcblx0XHRcdFx0XHRoZWFkZXI6IGhlYWRlcnMsXHJcblx0XHRcdFx0XHRkYXRhOiB7XHJcblx0XHRcdFx0XHRcdGlkOicxJ1xyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xyXG5cdFx0XHRcdFx0XHRsZXQgZGF0YSA9IHJlcy5kYXRhO1xyXG5cdFx0XHRcdFx0XHRpZiAoZGF0YS5lYyA9PT0gMCkge1xyXG5cdFx0XHRcdFx0XHRcdF9zZWxmLmxpc3Q9ZGF0YS51c2VyO1xyXG5cdFx0XHRcdFx0XHRcdC8vYWxlcnQoTWF0aC5zcXJ0KF9zZWxmLmxpc3QubGVuZ3RoKSk7XHJcblx0XHRcdFx0XHRcdFx0Zm9yKGxldCBpPTA7aTxfc2VsZi5saXN0Lmxlbmd0aDtpKyspe1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYoX3NlbGYubGlzdFtpXS5ib290aF9zdGF0dXM9PScxJyl7X3NlbGYubGlzdFtpXS5ib290aF9jb2xvcj0nIzVmYzI0OCc7X3NlbGYubGlzdFtpXS5ib290aF9zdGF0dXM9XCLlh7rllK7kuK1cIn1cclxuXHRcdFx0XHRcdFx0XHRcdGVsc2UgaWYoX3NlbGYubGlzdFtpXS5ib290aF9zdGF0dXM9PScyJyl7X3NlbGYubGlzdFtpXS5ib290aF9jb2xvcj0nIzc2NjE4Nic7X3NlbGYubGlzdFtpXS5ib290aF9zdGF0dXM9J+epuueusSc7fVxyXG5cdFx0XHRcdFx0XHRcdFx0ZWxzZSBpZihfc2VsZi5saXN0W2ldLmJvb3RoX3N0YXR1cz09JzMnKXtfc2VsZi5saXN0W2ldLmJvb3RoX2NvbG9yPScjNTdiN2RmJztfc2VsZi5saXN0W2ldLmJvb3RoX3N0YXR1cz0n56m655O2Jzt9XHJcblx0XHRcdFx0XHRcdFx0XHRlbHNlIGlmKF9zZWxmLmxpc3RbaV0uYm9vdGhfc3RhdHVzPT0nNCcpe19zZWxmLmxpc3RbaV0uYm9vdGhfY29sb3I9JyNmZjRiNGInO19zZWxmLmxpc3RbaV0uYm9vdGhfc3RhdHVzPSfov4fmnJ8nO31cclxuXHRcdFx0XHRcdFx0XHRcdGVsc2V7X3NlbGYubGlzdFtpXS5ib290aF9jb2xvcj0nI2Y4ZTRlNSc7IF9zZWxmLmxpc3QuYm9vdGhfc3RhdHVzPSfmlbDmja7plJnor68nO31cclxuXHRcdFx0XHRcdFx0XHRcdC8vMeato+W4uCNmOGU0ZTVcclxuXHRcdFx0XHRcdFx0XHRcdC8vMuWUruWHuiNmM2M1YWJcclxuXHRcdFx0XHRcdFx0XHRcdC8vM+epuueTtiNhY2UwZWJcclxuXHRcdFx0XHRcdFx0XHRcdC8vNOi/h+acnyNmM2Y1YzNcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0X3NlbGYuY29sdW1uPVN0cmluZyhNYXRoLnNxcnQoX3NlbGYubGlzdC5sZW5ndGgpKTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHR1bmkuc2hvd0xvYWRpbmcoe1xyXG5cdFx0XHRcdFx0XHRcdFx0dGl0bGU6IGRhdGEubXNnLFxyXG5cdFx0XHRcdFx0XHRcdFx0bWFzazogZmFsc2VcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdGZhaWw6ICgpID0+IHtcclxuXHRcdFx0XHRcdFx0dW5pLnNob3dUb2FzdCh7XHJcblx0XHRcdFx0XHRcdFx0dGl0bGU6ICfnvZHnu5zplJnor68nXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdGNvbXBsZXRlKCkge1xyXG5cdFx0XHRcdFx0XHR1bmkuaGlkZUxvYWRpbmcoKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSxcclxuXHRcdFx0Ly8gZ29kZXRhaWwocmZpZCl7XHJcblx0XHRcdC8vIFx0dW5pLm5hdmlnYXRlVG8oe1xyXG5cdFx0XHQvLyBcdFx0dXJsOiAnLi4vb3RoZXIvZGV0YWlsP3JmaWQ9JytyZmlkXHJcblx0XHRcdC8vIFx0fSk7XHJcblx0XHRcdC8vIFx0Y29uc29sZS5sb2cocmZpZCk7XHJcblx0XHRcdC8vIFx0Ly9sZXQgdXJsPScuLi9RUmNvZGUvZGV0YWlsP3JmaWQ9JytyZmlkO1xyXG5cdFx0XHQvLyBcdC8vIHVuaS5uYXZpZ2F0ZVRvKHtcclxuXHRcdFx0Ly8gXHQvLyAgXHR1cmw6IHVybFxyXG5cdFx0XHQvLyBcdC8vIH0pXHJcblx0XHRcdC8vIH1cclxuXHRcdH0sXHJcblx0XHRcclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlPlxyXG5cdHBhZ2Uge1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2VmZWZmNDtcclxuXHRcdG1pbi1oZWlnaHQ6IDEwMCU7XHJcblx0XHRoZWlnaHQ6IGF1dG87XHJcblx0fVxyXG5cdHZpZXcge1xyXG5cdFx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdFx0bGluZS1oZWlnaHQ6IGluaGVyaXQ7XHJcblx0fVxyXG5cdC5leGFtcGxlLWJvZHkge1xyXG5cdFx0ZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHRcdGZsZXgtd3JhcDogd3JhcDtcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRwYWRkaW5nOiAxNXB4O1xyXG5cdH1cclxuXHQuZ3JpZC1pdGVtLWJveHtcclxuXHRcdHdpZHRoOiA5MCU7XHJcblx0XHRoZWlnaHQ6IDkwJTtcclxuXHRcdHBhZGRpbmc6IDUlO1xyXG5cdH1cclxuXHQuZ3JpZF91bml0IHtcclxuXHRcdHdpZHRoOjEwMCU7XHJcblx0XHRoZWlnaHQ6MTAwJTtcclxuXHRcdGNvbG9yOiAjRkZGRkZGO1xyXG5cdH1cclxuXHQuZ3JpZF91bml0X2lke1xyXG5cdFx0Zm9udC1zaXplOiAzMHVweDtcclxuXHRcdHBvc2l0aW9uOmFic29sdXRlO1xyXG5cdFx0bGVmdDoyMHVweDtcclxuXHRcdHRvcDoyMHVweDtcclxuXHR9XHJcblx0LmdyaWRfdW5pdF9zdGF0dXN7XHJcblx0XHRwb3NpdGlvbjphYnNvbHV0ZTtcclxuXHRcdHJpZ2h0OjIwdXB4O1xyXG5cdFx0Ym90dG9tOjIwdXB4O1xyXG5cdFx0Zm9udC1zaXplOiA0MHVweDtcclxuXHR9XHJcbjwvc3R5bGU+Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/*!***********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/booth/booth.vue?vue&type=style&index=0&lang=css& ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./booth.vue?vue&type=style&index=0&lang=css& */ 23);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_booth_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXM2QixDQUFnQixtNkJBQUcsRUFBQyIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vYm9vdGgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vYm9vdGgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/booth/booth.vue?vue&type=style&index=0&lang=css& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ })
],[[16,"common/runtime","common/vendor"]]]);
});
require('pages/booth/booth.js');
__wxRoute = 'pages/environment/environment';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/environment/environment.js';

define('pages/environment/environment.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/environment/environment"],{

/***/ 24:
/*!*********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js?{"page":"pages%2Fenvironment%2Fenvironment"} ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _environment = _interopRequireDefault(__webpack_require__(/*! ./pages/environment/environment.vue */ 25));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_environment.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUEsd0NBQW1COztBQUVuQjtBQUNBLDhHO0FBQ0FBLFVBQVUsQ0FBQ0Msb0JBQUQsQ0FBVixDIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICd1bmktcGFnZXMnO2ltcG9ydCAnQGRjbG91ZGlvL3VuaS1zdGF0JztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL2Vudmlyb25tZW50L2Vudmlyb25tZW50LnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n");

/***/ }),

/***/ 25:
/*!**************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/environment/environment.vue ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _environment_vue_vue_type_template_id_1b344440___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./environment.vue?vue&type=template&id=1b344440& */ 26);\n/* harmony import */ var _environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment.vue?vue&type=script&lang=js& */ 28);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./environment.vue?vue&type=style&index=0&lang=css& */ 31);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _environment_vue_vue_type_template_id_1b344440___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _environment_vue_vue_type_template_id_1b344440___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/pages/environment/environment.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUEwRjtBQUMzQjtBQUNMO0FBQ2E7OztBQUd2RTtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSxpRkFBTTtBQUNSLEVBQUUsc0ZBQU07QUFDUixFQUFFLCtGQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9lbnZpcm9ubWVudC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MWIzNDQ0NDAmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZW52aXJvbm1lbnQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9lbnZpcm9ubWVudC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZW52aXJvbm1lbnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnMWIzNDQ0NDAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnMWIzNDQ0NDAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2Vudmlyb25tZW50LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xYjM0NDQ0MCZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCcxYjM0NDQ0MCcsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiWDov5q+V5Lia6K6+6K6hL01pbGtCdXNpbmVzcy9wYWdlcy9lbnZpcm9ubWVudC9lbnZpcm9ubWVudC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n");

/***/ }),

/***/ 26:
/*!*********************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/environment/environment.vue?vue&type=template&id=1b344440& ***!
  \*********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_template_id_1b344440___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./environment.vue?vue&type=template&id=1b344440& */ 27);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_template_id_1b344440___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_template_id_1b344440___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL2Vudmlyb25tZW50LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xYjM0NDQ0MCZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///26\n");

/***/ }),

/***/ 27:

  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/environment/environment.vue?vue&type=template&id=1b344440& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n");

/***/ }),

/***/ 28:
/*!***************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/environment/environment.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./environment.vue?vue&type=script&lang=js& */ 29);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVzQixDQUFnQix3dEJBQUcsRUFBQyIsImZpbGUiOiIyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9lbnZpcm9ubWVudC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9lbnZpcm9ubWVudC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///28\n");

/***/ }),

/***/ 29:
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/environment/environment.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _mqtt = _interopRequireDefault(__webpack_require__(/*! ../../components/mqtt/mqtt.js */ 30));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = { data: function data() {return { tempervalue: 'loading', humidvalue: 'loading', client: null, //记录重连的次数\n      reconnectCounts: 0, //MQTT连接的配置\n      options: { protocolVersion: 4, //MQTT连接协议版本\n        clientId: 'milkbusiness', clean: true, password: 'public', username: 'admin', reconnectPeriod: 1000, //1000毫秒，两次重新连接之间的间隔\n        connectTimeout: 30 * 1000, //1000毫秒，两次重新连接之间的间隔\n        resubscribe: true //如果连接断开并重新连接，则会再次自动订阅已订阅的主题（默认true）\n      } };}, onReady: function onReady() {this.connect();}, onNavigationBarButtonTap: function onNavigationBarButtonTap(e) {//刷新\n    this.connect();},\n  methods: {\n    connect: function connect() {\n      var self = this;\n\n\n\n\n      var host = 'wx://106.54.76.24:8083/mqtt';\n\n      self.client = _mqtt.default.connect(host, self.options);\n      console.log(__f__('connect', \" at pages\\\\environment\\\\environment.vue:62\"));\n      self.client.on('connect', function () {\n        console.log(__f__('on connect', \" at pages\\\\environment\\\\environment.vue:64\"));\n        //self.logs.push('on connect')\n        self.client.subscribe('temper', function (err) {\n          if (!err) {\n            //console.log('temper on err');\n            self.client.publish('temper', 'loading');\n          }\n        });\n        self.client.subscribe('humid', function (err) {\n          if (!err) {\n            //console.log('humid on err');\n            self.client.publish('humid', 'loading');\n          }\n        });\n      }).on('reconnect', function () {\n        console.log(__f__('on reconnect', \" at pages\\\\environment\\\\environment.vue:79\"));\n        //self.logs.push('on reconnect')\n      }).on('error', function () {\n        console.log(__f__('on error', \" at pages\\\\environment\\\\environment.vue:82\"));\n        //self.logs.push('on error')\n      }).on('end', function () {\n        console.log(__f__('on end', \" at pages\\\\environment\\\\environment.vue:85\"));\n        //self.logs.push('on end')\n      }).on('message', function (topic, message) {\n        console.log(__f__(topic, \" at pages\\\\environment\\\\environment.vue:88\"));\n        //self.logs.push(topic)\n        if (topic.toString() == 'temper') {\n          self.tempervalue = message.toString();\n          console.log(__f__(topic, \" at pages\\\\environment\\\\environment.vue:92\"));\n          console.log(__f__(message.toString(), \" at pages\\\\environment\\\\environment.vue:93\"));\n        } else\n        if (topic.toString() == 'humid') {\n          self.humidvalue = message.toString();\n          console.log(__f__(topic, \" at pages\\\\environment\\\\environment.vue:97\"));\n          console.log(__f__(message.toString(), \" at pages\\\\environment\\\\environment.vue:98\"));\n        }\n        //self.logs.push(message.toString())\n      });\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvZW52aXJvbm1lbnQvZW52aXJvbm1lbnQudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsaUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQUNBLEVBQ0EsSUFEQSxrQkFDQSxDQUNBLFNBQ0Esc0JBREEsRUFFQSxxQkFGQSxFQUdBLFlBSEEsRUFJQTtBQUNBLHdCQUxBLEVBTUE7QUFDQSxpQkFDQSxrQkFEQSxFQUNBO0FBQ0EsZ0NBRkEsRUFHQSxXQUhBLEVBSUEsa0JBSkEsRUFLQSxpQkFMQSxFQU1BLHFCQU5BLEVBTUE7QUFDQSxpQ0FQQSxFQU9BO0FBQ0EseUJBUkEsQ0FRQTtBQVJBLE9BUEEsR0FrQkEsQ0FwQkEsRUFxQkEsT0FyQkEscUJBcUJBLENBQ0EsZUFDQSxDQXZCQSxFQXdCQSx3QkF4QkEsb0NBd0JBLENBeEJBLEVBd0JBLENBQ0E7QUFDQSxtQkFDQSxDQTNCQTtBQTRCQTtBQUNBLFdBREEscUJBQ0E7QUFDQTs7Ozs7QUFLQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBTEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FMQTtBQU1BLE9BZkEsRUFlQSxFQWZBLENBZUEsV0FmQSxFQWVBO0FBQ0E7QUFDQTtBQUNBLE9BbEJBLEVBa0JBLEVBbEJBLENBa0JBLE9BbEJBLEVBa0JBO0FBQ0E7QUFDQTtBQUNBLE9BckJBLEVBcUJBLEVBckJBLENBcUJBLEtBckJBLEVBcUJBO0FBQ0E7QUFDQTtBQUNBLE9BeEJBLEVBd0JBLEVBeEJBLENBd0JBLFNBeEJBLEVBd0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FKQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BdENBO0FBdUNBLEtBbERBLEVBNUJBLEUiLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XHJcblx0PHZpZXc+XHJcblx0XHQ8dmlldyBjbGFzcz1cImVudmlyLWJveFwiPlxyXG5cdFx0XHQ8aW1hZ2Ugc3JjPVwiLi4vLi4vc3RhdGljL2xvZ28ucG5nXCIgbW9kZT0nYXNwZWN0Rml0JyBjbGFzcz1cImVudmlyLWxvZ29cIj48L2ltYWdlPlxyXG5cdFx0XHQ8dmlldyBjbGFzcz1cImVudmlyLXRpdGxlXCI+5pm66IO96bKc5aW25py6PC92aWV3Plx0XHRcclxuXHRcdDwvdmlldz5cclxuXHRcdDx2aWV3IGNsYXNzPVwiaW5mby1ib3hcIj5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJsaW5lXCI+XHJcblx0XHRcdFx0PHZpZXcgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwidGV4dFwiPua4qeW6pu+8mjwvdmlldz5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwiY29udGVudFwiPjx2aWV3IGNsYXNzPVwic2VydmljZWl0ZW1cIj57e3RlbXBlcnZhbHVlfX3CsEM8L3ZpZXc+PC92aWV3PlxyXG5cdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHQ8dmlldyBjbGFzcz1cInJvd1wiPlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJ0ZXh0XCI+5rm/5bqm77yaPC92aWV3PlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJjb250ZW50XCI+PHZpZXcgY2xhc3M9XCJzZXJ2aWNlaXRlbVwiPnt7aHVtaWR2YWx1ZX19JVJIPC92aWV3Pjwvdmlldz5cclxuXHRcdFx0XHQ8L3ZpZXc+XHJcblx0XHRcdDwvdmlldz5cclxuXHRcdDwvdmlldz5cclxuXHQ8L3ZpZXc+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5cdGltcG9ydCBtcXR0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbXF0dC9tcXR0LmpzJztcclxuXHRleHBvcnQgZGVmYXVsdCB7XHJcblx0XHRkYXRhKCkge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdHRlbXBlcnZhbHVlOidsb2FkaW5nJyxcclxuXHRcdFx0XHRodW1pZHZhbHVlOidsb2FkaW5nJyxcclxuXHRcdFx0XHRjbGllbnQ6IG51bGwsXHJcblx0XHRcdFx0Ly/orrDlvZXph43ov57nmoTmrKHmlbBcclxuXHRcdFx0XHRyZWNvbm5lY3RDb3VudHM6IDAsXHJcblx0XHRcdFx0Ly9NUVRU6L+e5o6l55qE6YWN572uXHJcblx0XHRcdFx0b3B0aW9uczoge1xyXG5cdFx0XHRcdCAgcHJvdG9jb2xWZXJzaW9uOiA0LCAvL01RVFTov57mjqXljY/orq7niYjmnKxcclxuXHRcdFx0XHQgIGNsaWVudElkOiAnbWlsa2J1c2luZXNzJyxcclxuXHRcdFx0XHQgIGNsZWFuOiB0cnVlLFxyXG5cdFx0XHRcdCAgcGFzc3dvcmQ6ICdwdWJsaWMnLFxyXG5cdFx0XHRcdCAgdXNlcm5hbWU6ICdhZG1pbicsXHJcblx0XHRcdFx0ICByZWNvbm5lY3RQZXJpb2Q6IDEwMDAsIC8vMTAwMOavq+enku+8jOS4pOasoemHjeaWsOi/nuaOpeS5i+mXtOeahOmXtOmalFxyXG5cdFx0XHRcdCAgY29ubmVjdFRpbWVvdXQ6IDMwICogMTAwMCwgLy8xMDAw5q+r56eS77yM5Lik5qyh6YeN5paw6L+e5o6l5LmL6Ze055qE6Ze06ZqUXHJcblx0XHRcdFx0ICByZXN1YnNjcmliZTogdHJ1ZSAvL+WmguaenOi/nuaOpeaWreW8gOW5tumHjeaWsOi/nuaOpe+8jOWImeS8muWGjeasoeiHquWKqOiuoumYheW3suiuoumYheeahOS4u+mimO+8iOm7mOiupHRydWXvvIlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRvblJlYWR5KCkge1xyXG5cdFx0XHR0aGlzLmNvbm5lY3QoKTtcclxuXHRcdH0sXHJcblx0XHRvbk5hdmlnYXRpb25CYXJCdXR0b25UYXAoZSkge1xyXG5cdFx0XHQvL+WIt+aWsFxyXG5cdFx0XHR0aGlzLmNvbm5lY3QoKTtcclxuXHRcdH0sXHJcblx0XHRtZXRob2RzOiB7XHJcblx0XHRcdGNvbm5lY3QoKSB7XG5cdFx0XHRcdHZhciBzZWxmID0gdGhpc1xyXG5cdFx0XHRcdC8vICNpZmRlZiBINVxyXG5cdFx0XHRcdHZhciBob3N0ID0gJ3dzOi8vMTA2LjU0Ljc2LjI0OjgwODMvbXF0dCdcclxuXHRcdFx0XHQvLyAjZW5kaWZcclxuXHRcdFx0XHQvLyAjaWZkZWYgTVAtV0VJWElOfHxBUFAtUExVU1xyXG5cdFx0XHRcdHZhciBob3N0ID0gJ3d4Oi8vMTA2LjU0Ljc2LjI0OjgwODMvbXF0dCdcclxuXHRcdFx0XHQvLyAjZW5kaWZcclxuXHRcdFx0XHRzZWxmLmNsaWVudCA9IG1xdHQuY29ubmVjdChob3N0LCBzZWxmLm9wdGlvbnMpO1xuXHRcdFx0XHRjb25zb2xlLmxvZygnY29ubmVjdCcpO1xyXG5cdFx0XHRcdHNlbGYuY2xpZW50Lm9uKCdjb25uZWN0JywgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZygnb24gY29ubmVjdCcpO1xyXG5cdFx0XHRcdFx0Ly9zZWxmLmxvZ3MucHVzaCgnb24gY29ubmVjdCcpXHJcblx0XHRcdFx0XHRzZWxmLmNsaWVudC5zdWJzY3JpYmUoJ3RlbXBlcicsIGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0XHRpZiAoIWVycikge1xyXG5cdFx0XHRcdFx0XHRcdC8vY29uc29sZS5sb2coJ3RlbXBlciBvbiBlcnInKTtcclxuXHRcdFx0XHRcdFx0XHRzZWxmLmNsaWVudC5wdWJsaXNoKCd0ZW1wZXInLCAnbG9hZGluZycpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRzZWxmLmNsaWVudC5zdWJzY3JpYmUoJ2h1bWlkJywgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRcdGlmICghZXJyKSB7XHJcblx0XHRcdFx0XHRcdFx0Ly9jb25zb2xlLmxvZygnaHVtaWQgb24gZXJyJyk7XHJcblx0XHRcdFx0XHRcdFx0c2VsZi5jbGllbnQucHVibGlzaCgnaHVtaWQnLCAnbG9hZGluZycpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fSkub24oJ3JlY29ubmVjdCcsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coJ29uIHJlY29ubmVjdCcpO1xyXG5cdFx0XHRcdFx0Ly9zZWxmLmxvZ3MucHVzaCgnb24gcmVjb25uZWN0JylcclxuXHRcdFx0XHR9KS5vbignZXJyb3InLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdvbiBlcnJvcicpO1xyXG5cdFx0XHRcdFx0Ly9zZWxmLmxvZ3MucHVzaCgnb24gZXJyb3InKVxyXG5cdFx0XHRcdH0pLm9uKCdlbmQnLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdvbiBlbmQnKTtcclxuXHRcdFx0XHRcdC8vc2VsZi5sb2dzLnB1c2goJ29uIGVuZCcpXHJcblx0XHRcdFx0fSkub24oJ21lc3NhZ2UnLCBmdW5jdGlvbih0b3BpYywgbWVzc2FnZSkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2codG9waWMpO1xyXG5cdFx0XHRcdFx0Ly9zZWxmLmxvZ3MucHVzaCh0b3BpYylcclxuXHRcdFx0XHRcdGlmKHRvcGljLnRvU3RyaW5nKCk9PSd0ZW1wZXInKXtcclxuXHRcdFx0XHRcdFx0c2VsZi50ZW1wZXJ2YWx1ZT1tZXNzYWdlLnRvU3RyaW5nKCk7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKHRvcGljKTtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2cobWVzc2FnZS50b1N0cmluZygpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGVsc2UgaWYodG9waWMudG9TdHJpbmcoKT09J2h1bWlkJyl7XHJcblx0XHRcdFx0XHRcdHNlbGYuaHVtaWR2YWx1ZT1tZXNzYWdlLnRvU3RyaW5nKCk7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKHRvcGljKTtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2cobWVzc2FnZS50b1N0cmluZygpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdC8vc2VsZi5sb2dzLnB1c2gobWVzc2FnZS50b1N0cmluZygpKVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlPlxyXG5cdC5lbnZpci1ib3h7XHJcblx0XHRwYWRkaW5nOiAwIDEwMHVweDtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHR9XHJcblx0LmVudmlyLWxvZ297XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0aGVpZ2h0OiAzMTB1cHg7XHJcblx0XHRtYXJnaW4tdG9wOiA1MHVweDtcclxuXHR9XHJcblx0LmVudmlyLXRpdGxle1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0dG9wOiAwO1xyXG5cdFx0bGluZS1oZWlnaHQ6IDM2MHVweDtcclxuXHRcdGZvbnQtc2l6ZTogNjh1cHg7XHJcblx0XHRjb2xvcjogI2ZmZjtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0bWFyZ2luLWxlZnQ6IC0xMDB1cHg7XHJcblx0XHRtYXJnaW4tdG9wOiA1MHVweDtcclxuXHR9XHJcblx0LmluZm8tYm94IHtcclxuXHRcdG1hcmdpbi1sZWZ0OiA1MHVweDtcclxuXHRcdG1hcmdpbi1yaWdodDogNTB1cHg7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMjB1cHg7XHJcblx0fVxyXG5cdC5wcmljZSB7XHJcblx0XHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRcdGZvbnQtc2l6ZTogNDZ1cHg7XHJcblx0XHRmb250LXdlaWdodDogNjAwO1xyXG5cdFx0Y29sb3I6ICNmNDc5MjU7XHJcblx0XHRmbG9hdDogcmlnaHQ7XHJcblx0XHRtYXJnaW4tdG9wOiA1MHVweDtcclxuXHRcdG1hcmdpbi1ib3R0b206IDUwdXB4O1xyXG5cdH1cclxuXHQudGl0bGUge1xyXG5cdFx0Zm9udC1zaXplOiA1MHVweDtcclxuXHRcdG1hcmdpbi10b3A6IDUwdXB4O1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogNTB1cHg7XHJcblx0XHRmbG9hdDogbGVmdDtcclxuXHR9XHJcblx0LmxpbmV7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdGJvcmRlci10b3A6ICNDQ0MgMXVweCBzb2xpZDtcclxuXHRcdHBhZGRpbmctdG9wOiAyMHVweDtcclxuXHR9XHJcblx0LnJvdyB7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMjB1cHg7XHJcblx0fVxyXG5cdC50ZXh0IHtcclxuXHRcdGZvbnQtc2l6ZTogMzV1cHg7XHJcblx0XHRjb2xvcjogIzY2NjtcclxuXHRcdG1hcmdpbi1yaWdodDogMjB1cHg7XHJcblx0fVxyXG5cdC5jb250ZW50IHtcclxuXHRcdGZvbnQtc2l6ZTogMzV1cHg7XHJcblx0XHRjb2xvcjogIzY2NjtcclxuXHR9XHJcblx0LnNlcnZpY2VpdGVte1xyXG5cdFx0bWFyZ2luLXJpZ2h0OiAxMHVweDtcclxuXHR9XHJcbjwvc3R5bGU+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n");

/***/ }),

/***/ 31:
/*!***********************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/environment/environment.vue?vue&type=style&index=0&lang=css& ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./environment.vue?vue&type=style&index=0&lang=css& */ 32);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_environment_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTQ2QixDQUFnQix5NkJBQUcsRUFBQyIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vZW52aXJvbm1lbnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vZW52aXJvbm1lbnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n");

/***/ }),

/***/ 32:

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/environment/environment.vue?vue&type=style&index=0&lang=css& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///32\n");

/***/ })

},[[24,"common/runtime","common/vendor"]]]);
});
require('pages/environment/environment.js');
__wxRoute = 'pages/member/member';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/member/member.js';

define('pages/member/member.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/member/member"],{

/***/ 33:
/*!***********************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js?{"page":"pages%2Fmember%2Fmember"} ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _member = _interopRequireDefault(__webpack_require__(/*! ./pages/member/member.vue */ 34));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_member.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUEsd0NBQW1COztBQUVuQjtBQUNBLCtGO0FBQ0FBLFVBQVUsQ0FBQ0MsZUFBRCxDQUFWLEMiLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7aW1wb3J0ICdAZGNsb3VkaW8vdW5pLXN0YXQnO1xuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZScgICAgICAgICAgICBcbmltcG9ydCBQYWdlIGZyb20gJy4vcGFnZXMvbWVtYmVyL21lbWJlci52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///33\n");

/***/ }),

/***/ 34:
/*!****************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/member/member.vue ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _member_vue_vue_type_template_id_5a07a290___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./member.vue?vue&type=template&id=5a07a290& */ 35);\n/* harmony import */ var _member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./member.vue?vue&type=script&lang=js& */ 37);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./member.vue?vue&type=style&index=0&lang=css& */ 40);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _member_vue_vue_type_template_id_5a07a290___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _member_vue_vue_type_template_id_5a07a290___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/pages/member/member.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFxRjtBQUMzQjtBQUNMO0FBQ2E7OztBQUdsRTtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSw0RUFBTTtBQUNSLEVBQUUsaUZBQU07QUFDUixFQUFFLDBGQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjM0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9tZW1iZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVhMDdhMjkwJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL21lbWJlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL21lbWJlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vbWVtYmVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzVhMDdhMjkwJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzVhMDdhMjkwJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9tZW1iZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVhMDdhMjkwJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzVhMDdhMjkwJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJYOi/mr5XkuJrorr7orqEvTWlsa0J1c2luZXNzL3BhZ2VzL21lbWJlci9tZW1iZXIudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n");

/***/ }),

/***/ 35:
/*!***********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/member/member.vue?vue&type=template&id=5a07a290& ***!
  \***********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_template_id_5a07a290___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./member.vue?vue&type=template&id=5a07a290& */ 36);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_template_id_5a07a290___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_template_id_5a07a290___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL21lbWJlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWEwN2EyOTAmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n");

/***/ }),

/***/ 36:

  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/member/member.vue?vue&type=template&id=5a07a290& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n");

/***/ }),

/***/ 37:
/*!*****************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/member/member.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./member.vue?vue&type=script&lang=js& */ 38);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWtzQixDQUFnQixtdEJBQUcsRUFBQyIsImZpbGUiOiIzNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9tZW1iZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTEyLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc2NyaXB0LmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vbWVtYmVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///37\n");

/***/ }),

/***/ 38:
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/member/member.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _uCharts = _interopRequireDefault(__webpack_require__(/*! ../../components/u-charts/u-charts.js */ 39));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\nvar _self;\nvar canvasObj = {};var _default =\n{\n  data: function data() {\n    return {\n      cWidth: '',\n      cHeight: '',\n      pixelRatio: 1,\n      serverData: '',\n      itemCount: 30, //x轴单屏数据密度\n      sliderMax: 50,\n      //memberList:[{name:'标题标题', buytime:'2019-7-30', deadtime:'2019-7-30', price:'20' }],\n      memberList: [],\n      newuser: '' };\n\n  },\n  onLoad: function onLoad(e) {\n    _self = this;\n\n\n\n\n\n\n\n\n\n\n\n    this.cWidth = uni.upx2px(750);\n    this.cHeight = uni.upx2px(500);\n  },\n  onReady: function onReady() {\n    this.getServerData();\n  },\n  onNavigationBarButtonTap: function onNavigationBarButtonTap(e) {\n    //刷新\n    this.getServerData();\n  },\n  methods: {\n    getServerData: function getServerData() {\n      uni.showLoading({\n        title: \"正在加载数据...\" });\n\n      var headers = {};\n      headers['content-type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      uni.request({\n        url: this.$url + '/php/member.php', //此处使用了全局变量拼接url（main.js文件中），关于全局变量官方问答里有\n        method: 'POST', //get或post\n        header: headers,\n        data: {},\n\n        success: function success(res) {\n          var data = res.data;\n          if (data.ec === 0) {\n            _self.memberList = data.user;\n            _self.fillData(data);\n          } else {\n            _self.newuser = '暂无数据';\n          }\n        },\n        fail: function fail() {\n          uni.showToast({\n            title: '网络错误' });\n\n        },\n        complete: function complete() {\n          uni.hideLoading();\n        } });\n\n    },\n    fillData: function fillData(data) {\n      this.serverData = data;\n      var LineA = {\n        categories: [],\n        series: [] };\n\n      LineA.categories = data.LineA.categories;\n      LineA.series = data.LineA.series;\n      this.showLineA(\"canvasLineA\", LineA);\n    },\n    showLineA: function showLineA(canvasId, chartData) {var _ref;\n      canvasObj[canvasId] = new _uCharts.default((_ref = {\n        $this: _self,\n        canvasId: canvasId,\n        type: 'line',\n        fontSize: 11,\n        padding: [15, 15, 0, 15],\n        legend: {\n          show: true,\n          padding: 5,\n          lineHeight: 11,\n          margin: 5 },\n\n        dataLabel: false,\n        dataPointShape: false,\n        background: '#FFFFFF',\n        pixelRatio: _self.pixelRatio,\n        categories: chartData.categories,\n        series: chartData.series,\n        animation: false,\n        enableScroll: true, //开启图表拖拽功能\n        xAxis: {\n          disableGrid: false,\n          type: 'grid',\n          gridType: 'dash',\n          itemCount: 5,\n          scrollShow: false,\n          scrollAlign: 'left',\n          scrollBackgroundColor: '#F7F7FF', //可不填写，配合enableScroll图表拖拽功能使用，X轴滚动条背景颜色,默认为 #EFEBEF\n          scrollColor: '#4191ea' //可不填写，配合enableScroll图表拖拽功能使用，X轴滚动条颜色,默认为 #A6A6A6\n        },\n        yAxis: {\n          //disabled:true\n          gridType: 'dash',\n          splitNumber: 5,\n          min: 0,\n          max: 50,\n          format: function format(val) {\n            return val.toFixed(0) + '人';\n          } //如不写此方法，Y轴刻度默认保留两位小数\n        },\n        width: _self.cWidth * _self.pixelRatio,\n        height: _self.cHeight * _self.pixelRatio }, _defineProperty(_ref, \"dataLabel\",\n      true), _defineProperty(_ref, \"dataPointShape\",\n      true), _defineProperty(_ref, \"extra\",\n      {\n        lineStyle: 'straight' }), _ref));\n\n\n    },\n    touchLineA: function touchLineA(e) {\n      canvasObj['canvasLineA'].scrollStart(e);\n    },\n    moveLineA: function moveLineA(e) {\n      canvasObj['canvasLineA'].scroll(e);\n    },\n    touchEndLineA: function touchEndLineA(e) {\n      canvasObj['canvasLineA'].scrollEnd(e);\n      //下面是toolTip事件，如果滚动后不需要显示，可不填写\n      canvasObj['canvasLineA'].showToolTip(e, {\n        format: function format(item, category) {\n          return category + ' ' + item.name + ':' + item.data;\n        } });\n\n    },\n    godetail: function godetail(id) {\n      uni.navigateTo({\n        url: '../other/memberdetail?id=' + id });\n\n      console.log(__f__(id, \" at pages\\\\member\\\\member.vue:184\"));\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///38\n");

/***/ }),

/***/ 40:
/*!*************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/member/member.vue?vue&type=style&index=0&lang=css& ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./member.vue?vue&type=style&index=0&lang=css& */ 41);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_member_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXU2QixDQUFnQixvNkJBQUcsRUFBQyIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vbWVtYmVyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxjc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0yIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL21lbWJlci52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPWNzcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///40\n");

/***/ }),

/***/ 41:

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/member/member.vue?vue&type=style&index=0&lang=css& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///41\n");

/***/ })

},[[33,"common/runtime","common/vendor"]]]);
});
require('pages/member/member.js');
__wxRoute = 'pages/count/count';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/count/count.js';

define('pages/count/count.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/count/count"],{

/***/ 42:
/*!*********************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js?{"page":"pages%2Fcount%2Fcount"} ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _count = _interopRequireDefault(__webpack_require__(/*! ./pages/count/count.vue */ 43));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_count.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUEsd0NBQW1COztBQUVuQjtBQUNBLDRGO0FBQ0FBLFVBQVUsQ0FBQ0MsY0FBRCxDQUFWLEMiLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7aW1wb3J0ICdAZGNsb3VkaW8vdW5pLXN0YXQnO1xuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZScgICAgICAgICAgICBcbmltcG9ydCBQYWdlIGZyb20gJy4vcGFnZXMvY291bnQvY291bnQudnVlJ1xuY3JlYXRlUGFnZShQYWdlKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///42\n");

/***/ }),

/***/ 43:
/*!**************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/count/count.vue ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _count_vue_vue_type_template_id_8ca47150___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./count.vue?vue&type=template&id=8ca47150& */ 44);\n/* harmony import */ var _count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./count.vue?vue&type=script&lang=js& */ 46);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./count.vue?vue&type=style&index=0&lang=css& */ 48);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _count_vue_vue_type_template_id_8ca47150___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _count_vue_vue_type_template_id_8ca47150___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/pages/count/count.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvRjtBQUMzQjtBQUNMO0FBQ2E7OztBQUdqRTtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSwyRUFBTTtBQUNSLEVBQUUsZ0ZBQU07QUFDUixFQUFFLHlGQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9jb3VudC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9OGNhNDcxNTAmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY291bnQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9jb3VudC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vY291bnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnOGNhNDcxNTAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnOGNhNDcxNTAnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2NvdW50LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04Y2E0NzE1MCZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc4Y2E0NzE1MCcsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiWDov5q+V5Lia6K6+6K6hL01pbGtCdXNpbmVzcy9wYWdlcy9jb3VudC9jb3VudC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///43\n");

/***/ }),

/***/ 44:
/*!*********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/count/count.vue?vue&type=template&id=8ca47150& ***!
  \*********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_template_id_8ca47150___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./count.vue?vue&type=template&id=8ca47150& */ 45);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_template_id_8ca47150___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_template_id_8ca47150___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL2NvdW50LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04Y2E0NzE1MCZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///44\n");

/***/ }),

/***/ 45:

  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/count/count.vue?vue&type=template&id=8ca47150& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n");

/***/ }),

/***/ 46:
/*!***************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/count/count.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./count.vue?vue&type=script&lang=js& */ 47);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWlzQixDQUFnQixrdEJBQUcsRUFBQyIsImZpbGUiOiI0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9jb3VudC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9jb3VudC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///46\n");

/***/ }),

/***/ 47:
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/count/count.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni, __f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _uCharts = _interopRequireDefault(__webpack_require__(/*! ../../components/u-charts/u-charts.js */ 39));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\nvar _self;\nvar canvasObj = {};var _default =\n{\n  data: function data() {\n    return {\n      cWidth: '',\n      cHeight: '',\n      pixelRatio: 1,\n      serverData: '',\n      itemCount: 30, //x轴单屏数据密度\n      sliderMax: 50,\n      //countList:[{name:'标题标题', buytime:'2019-7-30', deadtime:'2019-7-30', price:'20' }],\n      countList: [],\n      newuser: '' };\n\n  },\n  onLoad: function onLoad(e) {\n    _self = this;\n\n\n\n\n\n\n\n\n\n\n\n    this.cWidth = uni.upx2px(750);\n    this.cHeight = uni.upx2px(500);\n  },\n  onReady: function onReady() {\n    this.getServerData();\n  },\n  onNavigationBarButtonTap: function onNavigationBarButtonTap(e) {\n    //刷新\n    this.getServerData();\n  },\n  methods: {\n    getServerData: function getServerData() {\n      uni.showLoading({\n        title: \"正在加载数据...\" });\n\n      var headers = {};\n      headers['content-type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      uni.request({\n        url: this.$url + '/php/count.php', //此处使用了全局变量拼接url（main.js文件中），关于全局变量官方问答里有\n        method: 'POST', //get或post\n        header: headers,\n        data: {},\n\n        success: function success(res) {\n          var data = res.data;\n          if (data.ec === 0) {\n            _self.countList = data.user;\n            _self.fillData(data);\n          } else {\n            _self.newuser = '暂无数据';\n          }\n        },\n        fail: function fail() {\n          uni.showToast({\n            title: '网络错误' });\n\n        },\n        complete: function complete() {\n          uni.hideLoading();\n        } });\n\n    },\n    fillData: function fillData(data) {\n      this.serverData = data;\n      var LineA = {\n        categories: [],\n        series: [] };\n\n      LineA.categories = data.LineA.categories;\n      LineA.series = data.LineA.series;\n      this.showLineA(\"canvasLineA\", LineA);\n    },\n    showLineA: function showLineA(canvasId, chartData) {var _ref;\n      canvasObj[canvasId] = new _uCharts.default((_ref = {\n        $this: _self,\n        canvasId: canvasId,\n        type: 'line',\n        fontSize: 11,\n        padding: [15, 15, 0, 15],\n        legend: {\n          show: true,\n          padding: 5,\n          lineHeight: 11,\n          margin: 5 },\n\n        dataLabel: false,\n        dataPointShape: false,\n        background: '#FFFFFF',\n        pixelRatio: _self.pixelRatio,\n        categories: chartData.categories,\n        series: chartData.series,\n        animation: false,\n        enableScroll: true, //开启图表拖拽功能\n        xAxis: {\n          disableGrid: false,\n          type: 'grid',\n          gridType: 'dash',\n          itemCount: 5,\n          scrollShow: false,\n          scrollAlign: 'left',\n          scrollBackgroundColor: '#F7F7FF', //可不填写，配合enableScroll图表拖拽功能使用，X轴滚动条背景颜色,默认为 #EFEBEF\n          scrollColor: '#4191ea' //可不填写，配合enableScroll图表拖拽功能使用，X轴滚动条颜色,默认为 #A6A6A6\n        },\n        yAxis: {\n          //disabled:true\n          gridType: 'dash',\n          splitNumber: 5,\n          min: 0,\n          max: 50,\n          format: function format(val) {\n            return val.toFixed(0) + '瓶';\n          } //如不写此方法，Y轴刻度默认保留两位小数\n        },\n        width: _self.cWidth * _self.pixelRatio,\n        height: _self.cHeight * _self.pixelRatio }, _defineProperty(_ref, \"dataLabel\",\n      true), _defineProperty(_ref, \"dataPointShape\",\n      true), _defineProperty(_ref, \"extra\",\n      {\n        lineStyle: 'straight' }), _ref));\n\n\n    },\n    touchLineA: function touchLineA(e) {\n      canvasObj['canvasLineA'].scrollStart(e);\n    },\n    moveLineA: function moveLineA(e) {\n      canvasObj['canvasLineA'].scroll(e);\n    },\n    touchEndLineA: function touchEndLineA(e) {\n      canvasObj['canvasLineA'].scrollEnd(e);\n      //下面是toolTip事件，如果滚动后不需要显示，可不填写\n      canvasObj['canvasLineA'].showToolTip(e, {\n        format: function format(item, category) {\n          return category + ' ' + item.name + ':' + item.data;\n        } });\n\n    },\n    godetail: function godetail(rfid) {\n      uni.navigateTo({\n        url: '../other/detail?rfid=' + rfid });\n\n      console.log(__f__(rfid, \" at pages\\\\count\\\\count.vue:184\"));\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///47\n");

/***/ }),

/***/ 48:
/*!***********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/count/count.vue?vue&type=style&index=0&lang=css& ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./count.vue?vue&type=style&index=0&lang=css& */ 49);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_count_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXM2QixDQUFnQixtNkJBQUcsRUFBQyIsImZpbGUiOiI0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vY291bnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vY291bnQudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1jc3MmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n");

/***/ }),

/***/ 49:

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/count/count.vue?vue&type=style&index=0&lang=css& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n");

/***/ })

},[[42,"common/runtime","common/vendor"]]]);
});
require('pages/count/count.js');
__wxRoute = 'pages/other/detail';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/other/detail.js';

define('pages/other/detail.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/other/detail"],{

/***/ 50:
/*!**********************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js?{"page":"pages%2Fother%2Fdetail"} ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _detail = _interopRequireDefault(__webpack_require__(/*! ./pages/other/detail.vue */ 51));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_detail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUEsd0NBQW1COztBQUVuQjtBQUNBLDhGO0FBQ0FBLFVBQVUsQ0FBQ0MsZUFBRCxDQUFWLEMiLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3VuaS1wYWdlcyc7aW1wb3J0ICdAZGNsb3VkaW8vdW5pLXN0YXQnO1xuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZScgICAgICAgICAgICBcbmltcG9ydCBQYWdlIGZyb20gJy4vcGFnZXMvb3RoZXIvZGV0YWlsLnZ1ZSdcbmNyZWF0ZVBhZ2UoUGFnZSkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///50\n");

/***/ }),

/***/ 51:
/*!***************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/detail.vue ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _detail_vue_vue_type_template_id_2f111692___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./detail.vue?vue&type=template&id=2f111692& */ 52);\n/* harmony import */ var _detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./detail.vue?vue&type=script&lang=js& */ 54);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detail.vue?vue&type=style&index=0&lang=css& */ 56);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _detail_vue_vue_type_template_id_2f111692___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _detail_vue_vue_type_template_id_2f111692___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/pages/other/detail.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFxRjtBQUMzQjtBQUNMO0FBQ2E7OztBQUdsRTtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSw0RUFBTTtBQUNSLEVBQUUsaUZBQU07QUFDUixFQUFFLDBGQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjUxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJmMTExNjkyJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2RldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2RldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzJmMTExNjkyJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzJmMTExNjkyJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJmMTExNjkyJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzJmMTExNjkyJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJYOi/mr5XkuJrorr7orqEvTWlsa0J1c2luZXNzL3BhZ2VzL290aGVyL2RldGFpbC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51\n");

/***/ }),

/***/ 52:
/*!**********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/detail.vue?vue&type=template&id=2f111692& ***!
  \**********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_template_id_2f111692___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./detail.vue?vue&type=template&id=2f111692& */ 53);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_template_id_2f111692___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_template_id_2f111692___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL2RldGFpbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MmYxMTE2OTImXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///52\n");

/***/ }),

/***/ 53:

  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/other/detail.vue?vue&type=template&id=2f111692& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53\n");

/***/ }),

/***/ 54:
/*!****************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/detail.vue?vue&type=script&lang=js& ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./detail.vue?vue&type=script&lang=js& */ 55);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQWtzQixDQUFnQixtdEJBQUcsRUFBQyIsImZpbGUiOiI1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9kZXRhaWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTEyLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc2NyaXB0LmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///54\n");

/***/ }),

/***/ 55:
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/other/detail.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__, uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar _self;var _default =\n{\n  data: function data() {\n    return {\n      rfidList: '' };\n\n  },\n  onLoad: function onLoad(e) {\n    _self = this;\n    this.getServerData(e);\n  },\n  onReady: function onReady() {\n\n  },\n  methods: {\n    getServerData: function getServerData(e) {\n      var rfid = e.rfid;\n      console.log(__f__(rfid, \" at pages\\\\other\\\\detail.vue:64\"));\n      uni.showLoading({\n        title: \"正在加载数据...\" });\n\n      var headers = {};\n      headers['content-type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      uni.request({\n        url: this.$url + '/php/detail.php', //此处使用了全局变量拼接url（main.js文件中），关于全局变量官方问答里有\n        method: 'POST', //get或post\n        header: headers,\n        data: {\n          rfid: rfid },\n\n        success: function success(res) {\n          var data = res.data;\n          if (data.ec === 0) {\n            _self.rfidList = data.user;\n          } else {\n            uni.showToast({\n              title: data.msg });\n\n          }\n        },\n        fail: function fail() {\n          uni.showToast({\n            title: '网络错误' });\n\n        },\n        complete: function complete() {\n          uni.hideLoading();\n        } });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvb3RoZXIvZGV0YWlsLnZ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOENBLFU7QUFDQTtBQUNBLE1BREEsa0JBQ0E7QUFDQTtBQUNBLGtCQURBOztBQUdBLEdBTEE7QUFNQSxRQU5BLGtCQU1BLENBTkEsRUFNQTtBQUNBO0FBQ0E7QUFDQSxHQVRBO0FBVUEsU0FWQSxxQkFVQTs7QUFFQSxHQVpBO0FBYUE7QUFDQSxpQkFEQSx5QkFDQSxDQURBLEVBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFEQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQSwwQ0FEQSxFQUNBO0FBQ0Esc0JBRkEsRUFFQTtBQUNBLHVCQUhBO0FBSUE7QUFDQSxvQkFEQSxFQUpBOztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FGQSxNQUVBO0FBQ0E7QUFDQSw2QkFEQTs7QUFHQTtBQUNBLFNBaEJBO0FBaUJBO0FBQ0E7QUFDQSx5QkFEQTs7QUFHQSxTQXJCQTtBQXNCQSxnQkF0QkEsc0JBc0JBO0FBQ0E7QUFDQSxTQXhCQTs7QUEwQkEsS0FuQ0EsRUFiQSxFIiwiZmlsZSI6IjU1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxyXG5cdDx2aWV3PlxuXHRcdDx2aWV3IGNsYXNzPVwicmZpZC1ib3hcIj5cclxuXHRcdFx0PGltYWdlIHNyYz1cIi4uLy4uL3N0YXRpYy9sb2dvLnBuZ1wiIG1vZGU9J2FzcGVjdEZpdCcgY2xhc3M9XCJyZmlkLWxvZ29cIj48L2ltYWdlPlxyXG5cdFx0XHQ8dmlldyBjbGFzcz1cInJmaWQtdGl0bGVcIj7kuqflk4Hor6bmg4U8L3ZpZXc+XHRcdFxuXHRcdDwvdmlldz5cclxuXHRcdDx2aWV3IGNsYXNzPVwiaW5mby1ib3hcIj5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJ0aXRsZVwiPnt7cmZpZExpc3QuZ29vZHNfbmFtZX19PC92aWV3PlxyXG5cdFx0XHQ8dmlldyBjbGFzcz1cInByaWNlXCI+77+le3tyZmlkTGlzdC5nb29kc19wcmljZX195YWDPC92aWV3Plx0XHRcclxuXHRcdDwvdmlldz5cclxuXHRcdDx2aWV3IGNsYXNzPVwiaW5mby1ib3hcIj5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJsaW5lXCI+XHJcblx0XHRcdFx0PHZpZXcgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwidGV4dFwiPui0reS5sOS8muWRmO+8mjwvdmlldz5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwiY29udGVudFwiPjx2aWV3IGNsYXNzPVwic2VydmljZWl0ZW1cIj57e3JmaWRMaXN0Lmdvb2RzX21lbWJlcn19PC92aWV3Pjwvdmlldz5cclxuXHRcdFx0XHQ8L3ZpZXc+XHJcblx0XHRcdFx0PHZpZXcgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwidGV4dFwiPuacuuWZqOe8luWPt++8mjwvdmlldz5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwiY29udGVudFwiPjx2aWV3IGNsYXNzPVwic2VydmljZWl0ZW1cIj57e3JmaWRMaXN0Lmdvb2RzX21hY2hudW19fTwvdmlldz48L3ZpZXc+XHJcblx0XHRcdFx0PC92aWV3PlxyXG5cdFx0XHRcdDx2aWV3IGNsYXNzPVwicm93XCI+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cInRleHRcIj7llK/kuIDmoIfor4blj7fvvJo8L3ZpZXc+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cImNvbnRlbnRcIj48dmlldyBjbGFzcz1cInNlcnZpY2VpdGVtXCI+e3tyZmlkTGlzdC5nb29kc19yZmlkfX08L3ZpZXc+PC92aWV3PlxyXG5cdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHQ8dmlldyBjbGFzcz1cInJvd1wiPlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJ0ZXh0XCI+6LSt5Lmw5pe26Ze077yaPC92aWV3PlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJjb250ZW50XCI+PHZpZXcgY2xhc3M9XCJzZXJ2aWNlaXRlbVwiPnt7cmZpZExpc3QuZ29vZHNfYnV5dGltZX19PC92aWV3Pjwvdmlldz5cclxuXHRcdFx0XHQ8L3ZpZXc+XHJcblx0XHRcdFx0PHZpZXcgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwidGV4dFwiPuS/nei0qOacn++8mjwvdmlldz5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwiY29udGVudFwiPjx2aWV3IGNsYXNzPVwic2VydmljZWl0ZW1cIj57e3JmaWRMaXN0Lmdvb2RzX2RlYWR0aW1lfX08L3ZpZXc+PC92aWV3PlxyXG5cdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHQ8dmlldyBjbGFzcz1cInJvd1wiPlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJ0ZXh0XCI+5Lqn5Zyw77yaPC92aWV3PlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJjb250ZW50XCI+PHZpZXcgY2xhc3M9XCJzZXJ2aWNlaXRlbVwiPnt7cmZpZExpc3QuZ29vZHNfb3JpZ259fTwvdmlldz48L3ZpZXc+XHJcblx0XHRcdFx0PC92aWV3PlxyXG5cdFx0XHRcdDx2aWV3IGNsYXNzPVwicm93XCI+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cInRleHRcIj7ku4vnu43vvJo8L3ZpZXc+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cImNvbnRlbnRcIj48dmlldyBjbGFzcz1cInNlcnZpY2VpdGVtXCI+e3tyZmlkTGlzdC5nb29kc19pbnRyb2R1Y2V9fTwvdmlldz48L3ZpZXc+XHJcblx0XHRcdFx0PC92aWV3PlxyXG5cdFx0XHQ8L3ZpZXc+XHJcblx0XHQ8L3ZpZXc+XHJcblx0PC92aWV3PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cclxuXHR2YXIgX3NlbGY7XHJcblx0ZXhwb3J0IGRlZmF1bHQge1xyXG5cdFx0ZGF0YSgpIHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRyZmlkTGlzdDonJ1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0b25Mb2FkKGUpIHtcclxuXHRcdFx0X3NlbGYgPSB0aGlzO1xyXG5cdFx0XHR0aGlzLmdldFNlcnZlckRhdGEoZSk7XHJcblx0XHR9LFxyXG5cdFx0b25SZWFkeSgpIHtcclxuXHRcdFx0XHJcblx0XHR9LFxyXG5cdFx0bWV0aG9kczoge1xyXG5cdFx0XHRnZXRTZXJ2ZXJEYXRhKGUpIHtcclxuXHRcdFx0XHRsZXQgcmZpZD1lLnJmaWQ7XHJcblx0XHRcdFx0Y29uc29sZS5sb2cocmZpZCk7XHJcblx0XHRcdFx0dW5pLnNob3dMb2FkaW5nKHtcclxuXHRcdFx0XHRcdHRpdGxlOiBcIuato+WcqOWKoOi9veaVsOaNri4uLlwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0bGV0IGhlYWRlcnMgPSB7fTtcclxuXHRcdFx0XHRoZWFkZXJzWydjb250ZW50LXR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnO1xyXG5cdFx0XHRcdHVuaS5yZXF1ZXN0KHtcclxuXHRcdFx0XHRcdHVybDogdGhpcy4kdXJsICsgJy9waHAvZGV0YWlsLnBocCcsLy/mraTlpITkvb/nlKjkuoblhajlsYDlj5jph4/mi7zmjqV1cmzvvIhtYWluLmpz5paH5Lu25Lit77yJ77yM5YWz5LqO5YWo5bGA5Y+Y6YeP5a6Y5pa56Zeu562U6YeM5pyJXHJcblx0XHRcdFx0XHRtZXRob2Q6ICdQT1NUJywvL2dldOaIlnBvc3RcclxuXHRcdFx0XHRcdGhlYWRlcjogaGVhZGVycyxcclxuXHRcdFx0XHRcdGRhdGE6IHtcclxuXHRcdFx0XHRcdFx0cmZpZDpyZmlkXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XHJcblx0XHRcdFx0XHRcdGxldCBkYXRhID0gcmVzLmRhdGE7XHJcblx0XHRcdFx0XHRcdGlmIChkYXRhLmVjID09PSAwKSB7XHJcblx0XHRcdFx0XHRcdFx0X3NlbGYucmZpZExpc3Q9ZGF0YS51c2VyO1xyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdHVuaS5zaG93VG9hc3Qoe1xyXG5cdFx0XHRcdFx0XHRcdFx0dGl0bGU6IGRhdGEubXNnXHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRmYWlsOiAoKSA9PiB7XHJcblx0XHRcdFx0XHRcdHVuaS5zaG93VG9hc3Qoe1xyXG5cdFx0XHRcdFx0XHRcdHRpdGxlOiAn572R57uc6ZSZ6K+vJ1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRjb21wbGV0ZSgpIHtcclxuXHRcdFx0XHRcdFx0dW5pLmhpZGVMb2FkaW5nKCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0sXHJcblx0XHR9XHJcblx0fVxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbi5yZmlkLWJveHtcblx0cGFkZGluZzogMCAxMDB1cHg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5yZmlkLWxvZ297XG5cdHdpZHRoOiAxMDAlO1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAzMTB1cHg7XHJcblx0bWFyZ2luLXRvcDogNTB1cHg7XG59XG4ucmZpZC10aXRsZXtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdGxpbmUtaGVpZ2h0OiAzNjB1cHg7XG5cdGZvbnQtc2l6ZTogNjh1cHg7XG5cdGNvbG9yOiAjZmZmO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXHRtYXJnaW4tbGVmdDogLTEwMHVweDtcclxuXHRtYXJnaW4tdG9wOiA1MHVweDtcbn1cbi5pbmZvLWJveCB7XHJcblx0bWFyZ2luLWxlZnQ6IDUwdXB4O1xyXG5cdG1hcmdpbi1yaWdodDogNTB1cHg7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHRtYXJnaW4tYm90dG9tOiAyMHVweDtcclxufVxyXG4ucHJpY2Uge1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGZvbnQtc2l6ZTogNDZ1cHg7XHJcblx0Zm9udC13ZWlnaHQ6IDYwMDtcclxuXHRjb2xvcjogI2Y0NzkyNTtcclxuXHRmbG9hdDogcmlnaHQ7XHJcblx0bWFyZ2luLXRvcDogNTB1cHg7XHJcblx0bWFyZ2luLWJvdHRvbTogNTB1cHg7XHJcbn1cclxuLnRpdGxlIHtcclxuXHRmb250LXNpemU6IDUwdXB4O1xyXG5cdG1hcmdpbi10b3A6IDUwdXB4O1xyXG5cdG1hcmdpbi1ib3R0b206IDUwdXB4O1xyXG5cdGZsb2F0OiBsZWZ0O1xyXG59XHJcbi5saW5le1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGJvcmRlci10b3A6ICNDQ0MgMXVweCBzb2xpZDtcclxuXHRwYWRkaW5nLXRvcDogMjB1cHg7XHJcbn1cclxuLnJvdyB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdG1hcmdpbi1ib3R0b206IDIwdXB4O1xyXG59XHJcbi50ZXh0IHtcclxuXHRmb250LXNpemU6IDM1dXB4O1xyXG5cdGNvbG9yOiAjNjY2O1xyXG5cdG1hcmdpbi1yaWdodDogMjB1cHg7XHJcbn1cclxuLmNvbnRlbnQge1xyXG5cdGZvbnQtc2l6ZTogMzV1cHg7XHJcblx0Y29sb3I6ICM2NjY7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuLnNlcnZpY2VpdGVte1xyXG5cdG1hcmdpbi1yaWdodDogMTB1cHg7XHJcbn1cbjwvc3R5bGU+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///55\n");

/***/ }),

/***/ 56:
/*!************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/detail.vue?vue&type=style&index=0&lang=css& ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./detail.vue?vue&type=style&index=0&lang=css& */ 57);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_detail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXU2QixDQUFnQixvNkJBQUcsRUFBQyIsImZpbGUiOiI1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vZGV0YWlsLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxjc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0yIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL2RldGFpbC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPWNzcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n");

/***/ }),

/***/ 57:

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/other/detail.vue?vue&type=style&index=0&lang=css& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjU3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///57\n");

/***/ })

},[[50,"common/runtime","common/vendor"]]]);
});
require('pages/other/detail.js');
__wxRoute = 'pages/other/memberdetail';__wxRouteBegin = true;__wxAppCurrentFile__ = 'pages/other/memberdetail.js';

define('pages/other/memberdetail.js',function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, fetch, XMLHttpRequest, WebSocket, webkit, WeixinJSCore, Reporter, print, WeixinJSBridge){
(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["pages/other/memberdetail"],{

/***/ 58:
/*!****************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/main.js?{"page":"pages%2Fother%2Fmemberdetail"} ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(createPage) {__webpack_require__(/*! uni-pages */ 4);__webpack_require__(/*! @dcloudio/uni-stat */ 5);\n\nvar _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));\nvar _memberdetail = _interopRequireDefault(__webpack_require__(/*! ./pages/other/memberdetail.vue */ 59));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\ncreatePage(_memberdetail.default);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"createPage\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbImNyZWF0ZVBhZ2UiLCJQYWdlIl0sIm1hcHBpbmdzIjoia0RBQUEsd0NBQW1COztBQUVuQjtBQUNBLDBHO0FBQ0FBLFVBQVUsQ0FBQ0MscUJBQUQsQ0FBVixDIiwiZmlsZSI6IjU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICd1bmktcGFnZXMnO2ltcG9ydCAnQGRjbG91ZGlvL3VuaS1zdGF0JztcblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnICAgICAgICAgICAgXG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2VzL290aGVyL21lbWJlcmRldGFpbC52dWUnXG5jcmVhdGVQYWdlKFBhZ2UpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n");

/***/ }),

/***/ 59:
/*!*********************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _memberdetail_vue_vue_type_template_id_5d08d75e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memberdetail.vue?vue&type=template&id=5d08d75e& */ 60);\n/* harmony import */ var _memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memberdetail.vue?vue&type=script&lang=js& */ 62);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./memberdetail.vue?vue&type=style&index=0&lang=css& */ 64);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _memberdetail_vue_vue_type_template_id_5d08d75e___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _memberdetail_vue_vue_type_template_id_5d08d75e___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUEyRjtBQUMzQjtBQUNMO0FBQ2E7OztBQUd4RTtBQUM0SDtBQUM1SCxnQkFBZ0IsMElBQVU7QUFDMUIsRUFBRSxrRkFBTTtBQUNSLEVBQUUsdUZBQU07QUFDUixFQUFFLGdHQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsSUFBSSxLQUFVLEVBQUUsWUFpQmY7QUFDRDtBQUNlLGdGIiwiZmlsZSI6IjU5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9tZW1iZXJkZXRhaWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVkMDhkNzVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL21lbWJlcmRldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL21lbWJlcmRldGFpbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vbWVtYmVyZGV0YWlsLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzVkMDhkNzVlJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzVkMDhkNzVlJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9tZW1iZXJkZXRhaWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTVkMDhkNzVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzVkMDhkNzVlJywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJYOi/mr5XkuJrorr7orqEvTWlsa0J1c2luZXNzL3BhZ2VzL290aGVyL21lbWJlcmRldGFpbC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n");

/***/ }),

/***/ 60:
/*!****************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue?vue&type=template&id=5d08d75e& ***!
  \****************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_template_id_5d08d75e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./memberdetail.vue?vue&type=template&id=5d08d75e& */ 61);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_template_id_5d08d75e___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_16_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_template_id_5d08d75e___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTYtMCFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFx0ZW1wbGF0ZS5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL21lbWJlcmRldGFpbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWQwOGQ3NWUmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///60\n");

/***/ }),

/***/ 61:

  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--16-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue?vue&type=template&id=5d08d75e& ***!

/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61\n");

/***/ }),

/***/ 62:
/*!**********************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./memberdetail.vue?vue&type=script&lang=js& */ 63);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXdzQixDQUFnQix5dEJBQUcsRUFBQyIsImZpbGUiOiI2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMTItMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi9tZW1iZXJkZXRhaWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTEyLTEhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc2NyaXB0LmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vbWVtYmVyZGV0YWlsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///62\n");

/***/ }),

/***/ 63:
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__, uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar _self;var _default =\n{\n  data: function data() {\n    return {\n      memberList: '' };\n\n  },\n  onLoad: function onLoad(e) {\n    _self = this;\n    this.getServerData(e);\n  },\n  onReady: function onReady() {\n\n  },\n  methods: {\n    getServerData: function getServerData(e) {\n      var id = e.id;\n      console.log(__f__(id, \" at pages\\\\other\\\\memberdetail.vue:59\"));\n      uni.showLoading({\n        title: \"正在加载数据...\" });\n\n      var headers = {};\n      headers['content-type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n      uni.request({\n        url: this.$url + '/php/memberdetail.php', //此处使用了全局变量拼接url（main.js文件中），关于全局变量官方问答里有\n        method: 'POST', //get或post\n        header: headers,\n        data: {\n          id: id },\n\n        success: function success(res) {\n          var data = res.data;\n          if (data.ec === 0) {\n            _self.memberList = data.user;\n          } else {\n            uni.showToast({\n              title: data.msg });\n\n          }\n        },\n        fail: function fail() {\n          uni.showToast({\n            title: '网络错误' });\n\n        },\n        complete: function complete() {\n          uni.hideLoading();\n        } });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 12)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvb3RoZXIvbWVtYmVyZGV0YWlsLnZ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlDQSxVO0FBQ0E7QUFDQSxNQURBLGtCQUNBO0FBQ0E7QUFDQSxvQkFEQTs7QUFHQSxHQUxBO0FBTUEsUUFOQSxrQkFNQSxDQU5BLEVBTUE7QUFDQTtBQUNBO0FBQ0EsR0FUQTtBQVVBLFNBVkEscUJBVUE7O0FBRUEsR0FaQTtBQWFBO0FBQ0EsaUJBREEseUJBQ0EsQ0FEQSxFQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBREE7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsZ0RBREEsRUFDQTtBQUNBLHNCQUZBLEVBRUE7QUFDQSx1QkFIQTtBQUlBO0FBQ0EsZ0JBREEsRUFKQTs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBRkEsTUFFQTtBQUNBO0FBQ0EsNkJBREE7O0FBR0E7QUFDQSxTQWhCQTtBQWlCQTtBQUNBO0FBQ0EseUJBREE7O0FBR0EsU0FyQkE7QUFzQkEsZ0JBdEJBLHNCQXNCQTtBQUNBO0FBQ0EsU0F4QkE7O0FBMEJBLEtBbkNBLEVBYkEsRSIsImZpbGUiOiI2My5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cclxuXHQ8dmlldz5cblx0XHQ8dmlldyBjbGFzcz1cIm1lbWJlci1ib3hcIj5cclxuXHRcdFx0PGltYWdlIHNyYz1cIi4uLy4uL3N0YXRpYy9sb2dvLnBuZ1wiIG1vZGU9J2FzcGVjdEZpdCcgY2xhc3M9XCJtZW1iZXItbG9nb1wiPjwvaW1hZ2U+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwibWVtYmVyLXRpdGxlXCI+5Lya5ZGY6K+m5oOFPC92aWV3Plx0XHRcblx0XHQ8L3ZpZXc+XHJcblx0XHQ8dmlldyBjbGFzcz1cImluZm8tYm94XCI+XHJcblx0XHRcdDx2aWV3IGNsYXNzPVwidGl0bGVcIj57e21lbWJlckxpc3QubWVtYmVyX25hbWV9fTwvdmlldz5cclxuXHRcdDwvdmlldz5cclxuXHRcdDx2aWV3IGNsYXNzPVwiaW5mby1ib3hcIj5cclxuXHRcdFx0PHZpZXcgY2xhc3M9XCJsaW5lXCI+XHJcblx0XHRcdFx0PHZpZXcgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwidGV4dFwiPuS8muWRmElE77yaPC92aWV3PlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJjb250ZW50XCI+PHZpZXcgY2xhc3M9XCJzZXJ2aWNlaXRlbVwiPnt7bWVtYmVyTGlzdC5tZW1iZXJfaWR9fTwvdmlldz48L3ZpZXc+XHJcblx0XHRcdFx0PC92aWV3PlxyXG5cdFx0XHRcdDx2aWV3IGNsYXNzPVwicm93XCI+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cInRleHRcIj7kvJrlkZjljaHlj7fvvJo8L3ZpZXc+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cImNvbnRlbnRcIj48dmlldyBjbGFzcz1cInNlcnZpY2VpdGVtXCI+e3ttZW1iZXJMaXN0Lm1lbWJlcl9yZmlkfX08L3ZpZXc+PC92aWV3PlxyXG5cdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHQ8dmlldyBjbGFzcz1cInJvd1wiPlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJ0ZXh0XCI+6LSm5oi35L2Z6aKd77yaPC92aWV3PlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJjb250ZW50XCI+PHZpZXcgY2xhc3M9XCJzZXJ2aWNlaXRlbVwiPnt7bWVtYmVyTGlzdC5tZW1iZXJfd2VhbHRofX08L3ZpZXc+PC92aWV3PlxyXG5cdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0XHQ8dmlldyBjbGFzcz1cInJvd1wiPlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJ0ZXh0XCI+6LSt5Lmw5qyh5pWw77yaPC92aWV3PlxyXG5cdFx0XHRcdFx0PHZpZXcgY2xhc3M9XCJjb250ZW50XCI+PHZpZXcgY2xhc3M9XCJzZXJ2aWNlaXRlbVwiPnt7bWVtYmVyTGlzdC5tZW1iZXJfYnV5Y291bnR9fTwvdmlldz48L3ZpZXc+XHJcblx0XHRcdFx0PC92aWV3PlxyXG5cdFx0XHRcdDx2aWV3IGNsYXNzPVwicm93XCI+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cInRleHRcIj7ms6jlhozml7bpl7TvvJo8L3ZpZXc+XHJcblx0XHRcdFx0XHQ8dmlldyBjbGFzcz1cImNvbnRlbnRcIj48dmlldyBjbGFzcz1cInNlcnZpY2VpdGVtXCI+e3ttZW1iZXJMaXN0Lm1lbWJlcl9yZWdpdGltZX19PC92aWV3Pjwvdmlldz5cclxuXHRcdFx0XHQ8L3ZpZXc+XHJcblx0XHRcdFx0PHZpZXcgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwidGV4dFwiPuacgOWQjui0reS5sO+8mjwvdmlldz5cclxuXHRcdFx0XHRcdDx2aWV3IGNsYXNzPVwiY29udGVudFwiPjx2aWV3IGNsYXNzPVwic2VydmljZWl0ZW1cIj57e21lbWJlckxpc3QubWVtYmVyX2xhc3RidXl0aW1lfX08L3ZpZXc+PC92aWV3PlxyXG5cdFx0XHRcdDwvdmlldz5cclxuXHRcdFx0PC92aWV3PlxyXG5cdFx0PC92aWV3PlxyXG5cdDwvdmlldz5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XHJcblx0dmFyIF9zZWxmO1xyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdGRhdGEoKSB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0bWVtYmVyTGlzdDonJ1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0b25Mb2FkKGUpIHtcclxuXHRcdFx0X3NlbGYgPSB0aGlzO1xyXG5cdFx0XHR0aGlzLmdldFNlcnZlckRhdGEoZSk7XHJcblx0XHR9LFxyXG5cdFx0b25SZWFkeSgpIHtcclxuXHRcdFx0XHJcblx0XHR9LFxyXG5cdFx0bWV0aG9kczoge1xyXG5cdFx0XHRnZXRTZXJ2ZXJEYXRhKGUpIHtcclxuXHRcdFx0XHRsZXQgaWQ9ZS5pZDtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhpZCk7XHJcblx0XHRcdFx0dW5pLnNob3dMb2FkaW5nKHtcclxuXHRcdFx0XHRcdHRpdGxlOiBcIuato+WcqOWKoOi9veaVsOaNri4uLlwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0bGV0IGhlYWRlcnMgPSB7fTtcclxuXHRcdFx0XHRoZWFkZXJzWydjb250ZW50LXR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnO1xyXG5cdFx0XHRcdHVuaS5yZXF1ZXN0KHtcclxuXHRcdFx0XHRcdHVybDogdGhpcy4kdXJsICsgJy9waHAvbWVtYmVyZGV0YWlsLnBocCcsLy/mraTlpITkvb/nlKjkuoblhajlsYDlj5jph4/mi7zmjqV1cmzvvIhtYWluLmpz5paH5Lu25Lit77yJ77yM5YWz5LqO5YWo5bGA5Y+Y6YeP5a6Y5pa56Zeu562U6YeM5pyJXHJcblx0XHRcdFx0XHRtZXRob2Q6ICdQT1NUJywvL2dldOaIlnBvc3RcclxuXHRcdFx0XHRcdGhlYWRlcjogaGVhZGVycyxcclxuXHRcdFx0XHRcdGRhdGE6IHtcclxuXHRcdFx0XHRcdFx0aWQ6aWRcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihyZXMpIHtcclxuXHRcdFx0XHRcdFx0bGV0IGRhdGEgPSByZXMuZGF0YTtcclxuXHRcdFx0XHRcdFx0aWYgKGRhdGEuZWMgPT09IDApIHtcclxuXHRcdFx0XHRcdFx0XHRfc2VsZi5tZW1iZXJMaXN0PWRhdGEudXNlcjtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHR1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0XHRcdFx0XHRcdHRpdGxlOiBkYXRhLm1zZ1xyXG5cdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0ZmFpbDogKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHR1bmkuc2hvd1RvYXN0KHtcclxuXHRcdFx0XHRcdFx0XHR0aXRsZTogJ+e9kee7nOmUmeivrydcclxuXHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0Y29tcGxldGUoKSB7XHJcblx0XHRcdFx0XHRcdHVuaS5oaWRlTG9hZGluZygpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9LFxyXG5cdFx0fVxyXG5cdH1cbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4ubWVtYmVyLWJveHtcblx0cGFkZGluZzogMCAxMDB1cHg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5tZW1iZXItbG9nb3tcblx0d2lkdGg6IDEwMCU7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDMxMHVweDtcclxuXHRtYXJnaW4tdG9wOiA1MHVweDtcbn1cbi5tZW1iZXItdGl0bGV7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0dG9wOiAwO1xuXHRsaW5lLWhlaWdodDogMzYwdXB4O1xuXHRmb250LXNpemU6IDY4dXB4O1xuXHRjb2xvcjogI2ZmZjtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblx0bWFyZ2luLWxlZnQ6IC0xMDB1cHg7XHJcblx0bWFyZ2luLXRvcDogNTB1cHg7XG59XG4uaW5mby1ib3gge1xyXG5cdG1hcmdpbi1sZWZ0OiA1MHVweDtcclxuXHRtYXJnaW4tcmlnaHQ6IDUwdXB4O1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblx0bWFyZ2luLWJvdHRvbTogMjB1cHg7XHJcbn1cclxuLnByaWNlIHtcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRmb250LXNpemU6IDQ2dXB4O1xyXG5cdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0Y29sb3I6ICNmNDc5MjU7XHJcblx0ZmxvYXQ6IHJpZ2h0O1xyXG5cdG1hcmdpbi10b3A6IDUwdXB4O1xyXG5cdG1hcmdpbi1ib3R0b206IDUwdXB4O1xyXG59XHJcbi50aXRsZSB7XHJcblx0Zm9udC1zaXplOiA1MHVweDtcclxuXHRtYXJnaW4tdG9wOiA1MHVweDtcclxuXHRtYXJnaW4tYm90dG9tOiA1MHVweDtcclxuXHRmbG9hdDogbGVmdDtcclxufVxyXG4ubGluZXtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRib3JkZXItdG9wOiAjQ0NDIDF1cHggc29saWQ7XHJcblx0cGFkZGluZy10b3A6IDIwdXB4O1xyXG59XHJcbi5yb3cge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRtYXJnaW4tYm90dG9tOiAyMHVweDtcclxufVxyXG4udGV4dCB7XHJcblx0Zm9udC1zaXplOiAzNXVweDtcclxuXHRjb2xvcjogIzY2NjtcclxuXHRtYXJnaW4tcmlnaHQ6IDIwdXB4O1xyXG59XHJcbi5jb250ZW50IHtcclxuXHRmb250LXNpemU6IDM1dXB4O1xyXG5cdGNvbG9yOiAjNjY2O1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC13cmFwOiB3cmFwO1xyXG59XHJcbi5zZXJ2aWNlaXRlbXtcclxuXHRtYXJnaW4tcmlnaHQ6IDEwdXB4O1xyXG59XG48L3N0eWxlPlxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///63\n");

/***/ }),

/***/ 64:
/*!******************************************************************************************!*\
  !*** X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue?vue&type=style&index=0&lang=css& ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./memberdetail.vue?vue&type=style&index=0&lang=css& */ 65);\n/* harmony import */ var _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_D_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_D_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_D_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_D_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_D_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_memberdetail_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTY2QixDQUFnQiwwNkJBQUcsRUFBQyIsImZpbGUiOiI2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXFxcZGlzdFxcXFxsb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcbG9hZGVyc1xcXFxzdHlsZVBvc3RMb2FkZXIuanMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhRDpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vbWVtYmVyZGV0YWlsLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxjc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0yIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMyFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUQ6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFEOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL21lbWJlcmRldGFpbC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPWNzcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///64\n");

/***/ }),

/***/ 65:

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!X:/毕业设计/MilkBusiness/pages/other/memberdetail.vue?vue&type=style&index=0&lang=css& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjY1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///65\n");

/***/ })

},[[58,"common/runtime","common/vendor"]]]);
});
require('pages/other/memberdetail.js');
;(function(global) {
    __uni_launch_ready(function() {
        var entryPagePath = __wxConfig.entryPagePath.replace('.html', '')
        if (entryPagePath.indexOf('/') !== 0) {
            entryPagePath = '/' + entryPagePath
        }
        wx.navigateTo({
            url: entryPagePath,
            query: {},
            openType: 'appLaunch',
            webviewId: 1
        })
        __wxConfig.__ready__ = true
    })
})(this);

